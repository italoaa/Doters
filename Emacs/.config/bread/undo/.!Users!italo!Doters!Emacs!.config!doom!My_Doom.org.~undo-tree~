(undo-tree-save-format-version . 1)
"dc2650d16bd5e5bac4c82fb67b8817466eabd1b1"
[nil nil nil nil (25884 1511 319212 0) 0 nil]
([nil current ((#("      +org-capture-todo-file (concat org-directory \"/Agenda/todo.org\")
" 0 51 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("              " 0 8 (face org-indent) 8 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 51 69 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("              " 0 8 (face org-indent) 8 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 69 71 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("              " 0 8 (face org-indent) 8 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 28244) (undo-tree-id253 . -60) (undo-tree-id254 . -70) (undo-tree-id255 . -70) (undo-tree-id256 . -70) (undo-tree-id257 . -70) (undo-tree-id258 . -70) (undo-tree-id259 . -70) (undo-tree-id260 . -70) (undo-tree-id261 . -70) (undo-tree-id262 . -70) (undo-tree-id263 . -70) (undo-tree-id264 . -70) (undo-tree-id265 . -70) (undo-tree-id266 . -70) (undo-tree-id267 . -70) (undo-tree-id268 . -70) (undo-tree-id269 . -70) (undo-tree-id270 . -70) (undo-tree-id271 . -70) (undo-tree-id272 . -70) (undo-tree-id273 . -70) (undo-tree-id274 . -70) (undo-tree-id275 . -70) (undo-tree-id276 . -70) (undo-tree-id277 . -70) (undo-tree-id278 . -70) (undo-tree-id279 . -70) (undo-tree-id280 . -70) (undo-tree-id281 . -70) (undo-tree-id282 . -70) (undo-tree-id283 . -70) (undo-tree-id284 . -70) (undo-tree-id285 . -70) (undo-tree-id286 . -70) (undo-tree-id287 . -70) (undo-tree-id288 . -70) (undo-tree-id289 . -70) (undo-tree-id290 . -70) (undo-tree-id291 . -70) (undo-tree-id292 . -70) (undo-tree-id293 . -70) (undo-tree-id294 . -70) (undo-tree-id295 . -70) (undo-tree-id296 . -70) (undo-tree-id297 . -70) (undo-tree-id298 . -70) (undo-tree-id299 . -70) (undo-tree-id300 . -70) (undo-tree-id301 . -70) (undo-tree-id302 . -70) (undo-tree-id303 . -70) (undo-tree-id304 . -70) (undo-tree-id305 . -70) (undo-tree-id306 . -70) (undo-tree-id307 . -70) (undo-tree-id308 . -69) (undo-tree-id309 . -69) (undo-tree-id310 . -69) (undo-tree-id311 . -69) (undo-tree-id312 . -69) (undo-tree-id313 . -69) (undo-tree-id314 . -69) (undo-tree-id315 . -69) (undo-tree-id316 . -69) (undo-tree-id317 . -69) (undo-tree-id318 . -69) (undo-tree-id319 . -69) (undo-tree-id320 . -69) (undo-tree-id321 . -69) (undo-tree-id322 . -69) (undo-tree-id323 . -69) (undo-tree-id324 . -69) (undo-tree-id325 . -69) (undo-tree-id326 . -69) (undo-tree-id327 . -69) (undo-tree-id328 . -69) (undo-tree-id329 . -69) (undo-tree-id330 . -69) (undo-tree-id331 . -69) (undo-tree-id332 . -69) (undo-tree-id333 . -69) (undo-tree-id334 . -69) (undo-tree-id335 . -69) (undo-tree-id336 . -69) (undo-tree-id337 . -69) (undo-tree-id338 . -69) (undo-tree-id339 . -69) (undo-tree-id340 . -69) (undo-tree-id341 . -69) (undo-tree-id342 . -69) (undo-tree-id343 . -69) (undo-tree-id344 . -69) (undo-tree-id345 . -68) (undo-tree-id346 . -68) (undo-tree-id347 . -68) (undo-tree-id348 . -68) (undo-tree-id349 . -68) (undo-tree-id350 . -68) (undo-tree-id351 . -68) (undo-tree-id352 . -68) (undo-tree-id353 . -68) (undo-tree-id354 . -68) (undo-tree-id355 . -68) (undo-tree-id356 . -68) (undo-tree-id357 . -68) (undo-tree-id358 . -68) (undo-tree-id359 . -68) (undo-tree-id360 . -68) (undo-tree-id361 . -68) (undo-tree-id362 . -68) (undo-tree-id363 . -68) (undo-tree-id364 . -68) (undo-tree-id365 . -68) (undo-tree-id366 . -65) (undo-tree-id367 . -65) (undo-tree-id368 . -65) (undo-tree-id369 . -65) (undo-tree-id370 . -65) (undo-tree-id371 . -65) (undo-tree-id372 . -65) (undo-tree-id373 . -65) (undo-tree-id374 . -65) (undo-tree-id375 . -65) (undo-tree-id376 . -65) (undo-tree-id377 . -65) (undo-tree-id378 . -65) (undo-tree-id379 . -65) (undo-tree-id380 . -65) (undo-tree-id381 . -65) (undo-tree-id382 . -65) (undo-tree-id383 . -65) (undo-tree-id384 . -65) (undo-tree-id385 . -65) (undo-tree-id386 . -65) (undo-tree-id387 . -64) (undo-tree-id388 . -64) (undo-tree-id389 . -64) (undo-tree-id390 . -64) (undo-tree-id391 . -64) (undo-tree-id392 . -64) (undo-tree-id393 . -64) (undo-tree-id394 . -60) (undo-tree-id395 . -60) (undo-tree-id396 . -60) (undo-tree-id397 . -60) (undo-tree-id398 . -60) (undo-tree-id399 . -60) (undo-tree-id400 . -60) (undo-tree-id401 . -60) (undo-tree-id402 . -60) (undo-tree-id403 . -60) (undo-tree-id404 . -60) (undo-tree-id405 . -60) (undo-tree-id406 . -60) (undo-tree-id407 . -60) (undo-tree-id408 . -60) (undo-tree-id409 . -60) (undo-tree-id410 . -60) (undo-tree-id411 . -60) (undo-tree-id412 . -60) (undo-tree-id413 . -60) (undo-tree-id414 . -60) (undo-tree-id415 . -60) (undo-tree-id416 . -60) (undo-tree-id417 . -60) (undo-tree-id418 . -60) (undo-tree-id419 . -60) (undo-tree-id420 . -60) (undo-tree-id421 . -60) (undo-tree-id422 . -60) (undo-tree-id423 . -60) (undo-tree-id424 . -60) (undo-tree-id425 . -60) (undo-tree-id426 . -60) (undo-tree-id427 . -60) (undo-tree-id428 . -60) (undo-tree-id429 . -60) (undo-tree-id430 . -60) (undo-tree-id431 . -60) (undo-tree-id432 . -71) (undo-tree-id433 . -70) 28304 (t 25853 48777 585661 103000)) nil (25899 47632 20090 0) 0 nil])
([nil nil ((#("      org-agenda-files (directory-files-recursively (concat org-directory \"/Agenda/\") \"org$\")
" 0 74 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("              " 0 8 (face org-indent) 8 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 74 75 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("              " 0 8 (face org-indent) 8 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 75 76 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("              " 0 8 (face org-indent) 8 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 76 82 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("              " 0 8 (face org-indent) 8 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 82 83 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("              " 0 8 (face org-indent) 8 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block)) 83 84 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("              " 0 8 (face org-indent) 8 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 84 86 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("              " 0 8 (face org-indent) 8 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 86 92 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("              " 0 8 (face org-indent) 8 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 92 94 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("              " 0 8 (face org-indent) 8 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28150) (t 25899 47629 672416 109000)) ((28150 . 28244)) (25899 47631 45725 0) 0 nil])
nil
