(undo-tree-save-format-version . 1)
"92066bdaeb646dbb3161b3ad1cd740084126b700"
[nil nil nil nil (25838 3518 41996 0) 0 nil]
([nil nil ((233 . 234) (228 . 233) (214 . 228) (193 . 214) (nil fontified t 192 . 193) (nil line-prefix #("*" 0 1 (face org-indent)) 192 . 193) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 192 . 193) (nil keymap (keymap) 192 . 193) (nil face org-level-2 192 . 193) (nil fontified t 191 . 192) (nil line-prefix #("*" 0 1 (face org-indent)) 191 . 192) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 191 . 192) (nil composition (1 1 [9675]) 191 . 192) (nil keymap (keymap) 191 . 192) (nil face org-level-2 191 . 192) (nil fontified t 190 . 191) (nil line-prefix #("*" 0 1 (face org-indent)) 190 . 191) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 190 . 191) (nil face org-hide 190 . 191) (nil keymap (keymap) 190 . 191) (#("** " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 189) (192 . 196) (189 . 192) (t 25836 63476 291608 290000)) nil (25838 3518 41995 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 681 . 682) (nil fontified nil 662 . 682) (nil fontified nil 641 . 662) (nil fontified nil 576 . 641) (nil fontified nil 426 . 576) (nil fontified nil 405 . 426) (nil fontified nil 361 . 405) (nil fontified nil 329 . 361) (nil fontified nil 321 . 329) (nil fontified nil 241 . 321) (nil fontified nil 234 . 241) (234 . 682)) nil (25838 3518 41993 0) 0 nil])
([nil nil ((#("Part I
" 0 7 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 234) (undo-tree-id94 . -6) (undo-tree-id95 . -7) (undo-tree-id96 . -7) (undo-tree-id97 . -7) (undo-tree-id98 . -7) (undo-tree-id99 . -7) (undo-tree-id100 . -7) (undo-tree-id101 . -7) (undo-tree-id102 . -7) (undo-tree-id103 . -7) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -7) (undo-tree-id108 . -7) (undo-tree-id109 . -7)) nil (25838 3518 41991 0) 0 nil])
([nil nil ((#("Chapter 1 Chapter 2 Chapter 3 Chapter 4 Chapter 5 Chapter 6 Chapter 7 Chapter 8
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 1 80 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 234) (undo-tree-id78 . -79) (undo-tree-id79 . -80) (undo-tree-id80 . -80) (undo-tree-id81 . -80) (undo-tree-id82 . -80) (undo-tree-id83 . -80) (undo-tree-id84 . -80) (undo-tree-id85 . -80) (undo-tree-id86 . -80) (undo-tree-id87 . -80) (undo-tree-id88 . -80) (undo-tree-id89 . -80) (undo-tree-id90 . -80) (undo-tree-id91 . -80) (undo-tree-id92 . -80) (undo-tree-id93 . -80)) nil (25838 3518 41975 0) 0 nil])
([nil nil ((#("Part II
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 1 8 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 234) (undo-tree-id69 . -7) (undo-tree-id70 . -8) (undo-tree-id71 . -8) (undo-tree-id72 . -8) (undo-tree-id73 . -8) (undo-tree-id74 . -8) (undo-tree-id75 . -8) (undo-tree-id76 . -8) (undo-tree-id77 . -8)) nil (25838 3518 41961 0) 0 nil])
([nil nil ((#("Chapter 9 Chapter 10 Chapter 11
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 1 32 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 234) (undo-tree-id60 . -31) (undo-tree-id61 . -32) (undo-tree-id62 . -32) (undo-tree-id63 . -32) (undo-tree-id64 . -32) (undo-tree-id65 . -32) (undo-tree-id66 . -32) (undo-tree-id67 . -32) (undo-tree-id68 . -32)) nil (25838 3518 41954 0) 0 nil])
([nil nil ((#("Chapter 12 Chapter 13 Chapter 14 Chapter 15
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 1 44 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 234) (undo-tree-id51 . -43) (undo-tree-id52 . -44) (undo-tree-id53 . -44) (undo-tree-id54 . -44) (undo-tree-id55 . -44) (undo-tree-id56 . -44) (undo-tree-id57 . -44) (undo-tree-id58 . -44) (undo-tree-id59 . -44)) nil (25838 3518 41943 0) 0 nil])
([nil nil ((#("CONTENTS AT A GLANCE
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 1 21 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 234) (undo-tree-id42 . -20) (undo-tree-id43 . -21) (undo-tree-id44 . -21) (undo-tree-id45 . -21) (undo-tree-id46 . -21) (undo-tree-id47 . -21) (undo-tree-id48 . -21) (undo-tree-id49 . -21) (undo-tree-id50 . -21)) nil (25838 3518 41936 0) 0 nil])
([nil nil ((#("Threats, Attacks, and Vulnerabilities Social Engineering Techniques Type of Attack Indicators Application Attack Indicators Network Attack Indicators
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 1 150 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 234) (undo-tree-id33 . -149) (undo-tree-id34 . -150) (undo-tree-id35 . -150) (undo-tree-id36 . -150) (undo-tree-id37 . -150) (undo-tree-id38 . -150) (undo-tree-id39 . -150) (undo-tree-id40 . -150) (undo-tree-id41 . -150)) nil (25838 3518 41929 0) 0 nil])
([nil nil ((#("Threat Actors, Vectors, and Intelligence Sources Vulnerabilities
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 1 65 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 234) (undo-tree-id24 . -64) (undo-tree-id25 . -65) (undo-tree-id26 . -65) (undo-tree-id27 . -65) (undo-tree-id28 . -65) (undo-tree-id29 . -65) (undo-tree-id30 . -65) (undo-tree-id31 . -65) (undo-tree-id32 . -65)) nil (25838 3518 41919 0) 0 nil])
([nil nil ((#("Security Assessments
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 1 21 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 234) (undo-tree-id8 . -20) (undo-tree-id9 . -21) (undo-tree-id10 . -21) (undo-tree-id11 . -21) (undo-tree-id12 . -21) (undo-tree-id13 . -21) (undo-tree-id14 . -21) (undo-tree-id15 . -21) (undo-tree-id16 . -21) (undo-tree-id17 . -21) (undo-tree-id18 . -21) (undo-tree-id19 . -21) (undo-tree-id20 . -21) (undo-tree-id21 . -21) (undo-tree-id22 . -21) (undo-tree-id23 . -21)) nil (25838 3518 41912 0) 0 nil])
([nil nil ((#("Penetration Testing
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 1 19 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t) 19 20 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t)) . 234) (undo-tree-id7 . -19)) nil (25838 3518 41900 0) 0 nil])
([nil nil ((327 . 348) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -327) (undo-tree-id0 . -1) (#("a" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -328) (undo-tree-id1 . -1) 329 (318 . 329) (#("i" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -318) (undo-tree-id2 . -1) (#("v" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -319) (undo-tree-id3 . -1) 320 (317 . 320) (312 . 317) (301 . 312) (280 . 301) (275 . 280) (269 . 275) (267 . 269) (#("e" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -267) (undo-tree-id4 . -1) (#("n" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -268) (undo-tree-id5 . -1) (#("e" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -269) (undo-tree-id6 . -1) 270 (261 . 270) (256 . 261) (254 . 256) (233 . 254)) nil (25838 3518 41893 0) 0 nil])
([nil nil ((228 . 229) (t 25838 3518 67355 883000) 223) nil (25838 3569 719954 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 445 . 446) (nil fontified nil 427 . 446) (nil fontified nil 406 . 427) (nil fontified nil 341 . 406) (nil fontified nil 229 . 341) (229 . 446)) nil (25838 3569 719950 0) 0 nil])
([nil nil ((259 . 260) (t 25838 3569 742274 600000)) nil (25838 3598 298587 0) 0 nil])
([nil nil ((286 . 287)) nil (25838 3598 298586 0) 0 nil])
([nil nil ((317 . 318)) nil (25838 3598 298586 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 317) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1)) nil (25838 3598 298584 0) 0 nil])
([nil nil ((317 . 318)) nil (25838 3598 298533 0) 0 nil])
([nil nil ((393 . 394)) nil (25838 3598 298530 0) 0 nil])
([nil nil ((229 . 231) (t 25838 3598 321153 805000)) nil (25838 3620 539674 0) 0 nil])
([nil nil ((263 . 265)) nil (25838 3620 539674 0) 0 nil])
([nil nil ((293 . 295)) nil (25838 3620 539673 0) 0 nil])
([nil nil ((#("- " 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 293) (undo-tree-id164 . -2)) nil (25838 3620 539673 0) 0 nil])
([nil nil ((#("- " 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t)) . 263) (undo-tree-id163 . -2)) nil (25838 3620 539671 0) 0 nil])
([nil nil (263) nil (25838 3620 539663 0) 0 nil])
([nil nil ((262 . 264)) nil (25838 3620 539663 0) 0 nil])
([nil nil ((291 . 293) 292) nil (25838 3620 539662 0) 0 nil])
([nil nil ((324 . 326) 325) nil (25838 3620 539662 0) 0 nil])
([nil nil ((352 . 354) 353) nil (25838 3620 539661 0) 0 nil])
([nil nil ((404 . 406) 405) nil (25838 3620 539661 0) 0 nil])
([nil nil ((422 . 424) 423) nil (25838 3620 539660 0) 0 nil])
([nil nil ((445 . 447) 446) nil (25838 3620 539657 0) 0 nil])
([nil nil ((469 . 476) (466 . 469) (t 25838 3620 562525 965000) 446) nil (25838 4466 217951 0) 0 nil])
([nil nil ((479 . 487) (476 . 479) (t 25838 4466 221340 590000) 475) nil (25838 4529 35912 0) 0 nil])
([nil nil ((#("
  " 0 1 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 3 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 476) (undo-tree-id70 . -3) (#("asjdlkfj" 0 8 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 479) (undo-tree-id71 . -7)) nil (25838 4529 35911 0) 0 nil])
([nil nil ((#("  alsdkfj
" 0 9 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 9 10 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 467) (undo-tree-id0 . 1) (undo-tree-id1 . -8) (undo-tree-id2 . -8) (undo-tree-id3 . -8) (undo-tree-id4 . -8) (undo-tree-id5 . -8) (undo-tree-id6 . -8) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (undo-tree-id9 . -8) (undo-tree-id10 . -8) (undo-tree-id11 . -8) (undo-tree-id12 . -8) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -8) (undo-tree-id17 . -8) (undo-tree-id18 . -8) (undo-tree-id19 . -8) (undo-tree-id20 . -8) (undo-tree-id21 . -8) (undo-tree-id22 . -8) (undo-tree-id23 . -8) (undo-tree-id24 . -8) (undo-tree-id25 . -8) (undo-tree-id26 . -8) (undo-tree-id27 . -8) (undo-tree-id28 . -8) (undo-tree-id29 . -8) (undo-tree-id30 . -8) (undo-tree-id31 . -8) (undo-tree-id32 . -8) (undo-tree-id33 . -8) (undo-tree-id34 . -8) (undo-tree-id35 . -8) (undo-tree-id36 . -8) (undo-tree-id37 . -8) (undo-tree-id38 . -8) (undo-tree-id39 . -8) (undo-tree-id40 . -8) (undo-tree-id41 . -8) (undo-tree-id42 . -8) (undo-tree-id43 . -8) (undo-tree-id44 . -8) (undo-tree-id45 . -8) (undo-tree-id46 . -8) (undo-tree-id47 . -8) (undo-tree-id48 . -8) (undo-tree-id49 . -8) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -8) (undo-tree-id57 . -8) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (undo-tree-id61 . -8) (undo-tree-id62 . -8) (undo-tree-id63 . -8) (undo-tree-id64 . -8) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -10) (undo-tree-id69 . -9) 475 (t 25838 4466 221340 590000)) nil (25838 4529 35905 0) 0 nil])
([nil nil ((134 . 135) (#("~" 0 1 (fontified t font-lock-fontified t line-prefix "" wrap-prefix "" face org-meta-line)) . -134) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 135 (134 . 135) (#("|" 0 1 (fontified t font-lock-fontified t line-prefix "" wrap-prefix "" face org-meta-line)) . -134) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 135 (134 . 135) (#(">" 0 1 (fontified t font-lock-fontified t line-prefix "" wrap-prefix "" face org-meta-line)) . -134) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . 1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 135 (130 . 135) (t 25838 4529 44744 881000)) nil (25838 5328 997301 0) 0 nil])
([nil nil ((134 . 135) (#("|" 0 1 (fontified t font-lock-fontified t line-prefix "" wrap-prefix "" face org-meta-line)) . 134) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1)) nil (25838 5328 997247 0) 0 nil])
([nil nil ((nil fontified t 134 . 135) (t 25838 5329 1013 865000) (nil line-prefix "" 134 . 135) (t 25838 5329 1013 865000) (nil wrap-prefix "" 134 . 135) (t 25838 5329 1013 865000) (nil font-lock-fontified t 134 . 135) (t 25838 5329 1013 865000) (nil face org-meta-line 134 . 135) (t 25838 5329 1013 865000) (#(" :CompSci:CyberSecurity:sec+:" 0 28 (fontified t font-lock-fontified t line-prefix "" wrap-prefix "" face org-meta-line) 28 29 (fontified t line-prefix "" wrap-prefix "" font-lock-fontified t face org-meta-line)) . -106) (t 25838 5329 1013 865000) (135 . 164) (t 25838 5329 1013 865000)) nil (25838 5468 617114 0) 0 nil])
([nil nil (234) nil (25838 5586 674580 0) 0 nil] [nil nil ((265 . 317) (t 25838 5342 579246 290000)) ((#("[[id:6be8b692-23fb-4edd-8fd1-407c80627dd4][Testing]]" 0 42 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: id:6be8b692-23fb-4edd-8fd1-407c80627dd4" htmlize-link (:uri "id:6be8b692-23fb-4edd-8fd1-407c80627dd4") font-lock-multiline t face org-link) 42 43 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: id:6be8b692-23fb-4edd-8fd1-407c80627dd4" htmlize-link (:uri "id:6be8b692-23fb-4edd-8fd1-407c80627dd4") font-lock-multiline t face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 43 49 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: id:6be8b692-23fb-4edd-8fd1-407c80627dd4" htmlize-link (:uri "id:6be8b692-23fb-4edd-8fd1-407c80627dd4") font-lock-multiline t) 49 50 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: id:6be8b692-23fb-4edd-8fd1-407c80627dd4" htmlize-link (:uri "id:6be8b692-23fb-4edd-8fd1-407c80627dd4") font-lock-multiline t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link)) 50 51 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: id:6be8b692-23fb-4edd-8fd1-407c80627dd4" htmlize-link (:uri "id:6be8b692-23fb-4edd-8fd1-407c80627dd4") font-lock-multiline t) 51 52 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) help-echo "LINK: id:6be8b692-23fb-4edd-8fd1-407c80627dd4" htmlize-link (:uri "id:6be8b692-23fb-4edd-8fd1-407c80627dd4") font-lock-multiline t)) . 265) (undo-tree-id90 . -52) (undo-tree-id91 . -52)) (25838 5468 616613 0) 0 nil])
([nil nil (236) nil (25838 5591 857763 0) 0 nil] [nil nil ((#("-" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) face (org-list-dt))) . 234) (undo-tree-id112 . 1) (undo-tree-id114 . -1) (t 25838 5342 579246 290000)) ((234 . 235)) (25838 5585 798600 0) 0 nil])
nil
([nil nil ((#("-" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) face (org-list-dt))) . 234) (undo-tree-id425 . 1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (t 25838 5587 196126 834000)) nil (25838 5591 857762 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 234) (undo-tree-id109 . 1) (undo-tree-id111 . -1)) ((234 . 235)) (25838 5584 868591 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 234) (undo-tree-id371 . 1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1)) nil (25838 5591 857972 0) 0 nil])
([nil nil ((235 . 238) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . -235) (undo-tree-id108 . -1) 236 (234 . 236)) ((#("* " 0 1 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 234) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (235 . 236) (#("** " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 235) (undo-tree-id321 . -2) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (undo-tree-id324 . -2) (undo-tree-id325 . -2) (undo-tree-id326 . -2) (undo-tree-id327 . -2) (undo-tree-id328 . -2) (undo-tree-id329 . -2) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (undo-tree-id335 . -2) (undo-tree-id336 . -2) (undo-tree-id337 . -2) (undo-tree-id338 . -2) (undo-tree-id339 . -2) (undo-tree-id340 . -2) (undo-tree-id341 . -2) (undo-tree-id342 . -2) (undo-tree-id343 . -2) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2) (undo-tree-id348 . -2) (undo-tree-id349 . -2) (undo-tree-id350 . -2) (undo-tree-id351 . -2) (undo-tree-id352 . -2) (undo-tree-id353 . -2) (undo-tree-id354 . -2) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) (undo-tree-id359 . -2) (undo-tree-id360 . -2) (undo-tree-id361 . -2) (undo-tree-id362 . -2) (undo-tree-id363 . -2) (undo-tree-id364 . -2) (undo-tree-id365 . -2) (undo-tree-id366 . -2) (undo-tree-id367 . -2)) (25838 5584 659925 0) 0 nil])
([nil nil ((234 . 239)) nil (25838 5597 765462 0) 0 nil] [nil nil ((#("S" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 234) (undo-tree-id368 . 1) (undo-tree-id369 . -1) (undo-tree-id370 . -1)) ((234 . 235)) (25838 5591 857704 0) 0 nil])
([nil nil ((270 . 273) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . -270) (undo-tree-id95 . -1) (undo-tree-id97 . -1) (undo-tree-id99 . -1) (undo-tree-id101 . -1) 271 (269 . 271) (#(" " 0 1 (fontified nil face (org-indent) line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 269) (undo-tree-id102 . 1) (undo-tree-id104 . -1) (#("-" 0 1 (fontified t face (org-list-dt) line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 269) (undo-tree-id105 . 1) (undo-tree-id107 . -1) 271) ((269 . 270) (269 . 270) (#("* " 0 1 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 269) (270 . 271) (#("** " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 270)) (25838 5584 511613 0) 0 nil])
([nil nil (274) nil (25838 5597 765461 0) 0 nil])
nil
([nil nil ((301 . 304) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . -301) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 302 (300 . 302) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) face (org-indent))) . 300) (undo-tree-id150 . 1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#("-" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) face (org-list-dt))) . 300) (undo-tree-id153 . 1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) 302) ((300 . 301) (300 . 301) (#("* " 0 1 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 300) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (301 . 302) (#("** " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 301)) (25838 5584 350289 0) 0 nil] [nil nil ((304 . 307) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -304) (undo-tree-id93 . -1) 305 (303 . 305)) ((#("* " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 1 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 303) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (304 . 305) (#("** " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 304) (undo-tree-id129 . 1) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2)) (25838 5570 618922 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)) face (org-list-dt))) . 270) (undo-tree-id448 . 1) (undo-tree-id449 . -1) (undo-tree-id450 . -1)) nil (25838 5597 765461 0) 0 nil])
([nil nil ((336 . 339) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . -336) (undo-tree-id248 . -1) (undo-tree-id250 . -1) (undo-tree-id252 . -1) (undo-tree-id254 . -1) 337 (335 . 337) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) face (org-indent))) . 335) (undo-tree-id255 . 1) (undo-tree-id257 . -1) (#("-" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) face (org-list-dt))) . 335) (undo-tree-id258 . 1) (undo-tree-id260 . -1) 337) ((335 . 336) (335 . 336) (#("* " 0 1 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 335) (336 . 337) (#("** " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 336)) (25838 5584 216458 0) 0 nil] [nil nil ((339 . 342) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -339) (undo-tree-id141 . -1) 340 (338 . 340)) ((#("* " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 1 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 338) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (339 . 340) (#("** " 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 339) (undo-tree-id173 . 1) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2)) (25838 5573 910926 0) 0 nil])
([nil nil ((307 . 310) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -307) (undo-tree-id92 . -1) 308 (306 . 308)) ((#("* " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 1 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 306) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (307 . 308) (#("** " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 307) (undo-tree-id117 . -2) (undo-tree-id118 . -2)) (25838 5570 618439 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("         " 0 8 (face org-indent) 8 9 (face org-indent)) face (org-indent))) . 270) (undo-tree-id445 . 1) (undo-tree-id446 . -1) (undo-tree-id447 . -1)) nil (25838 5597 765658 0) 0 nil])
([nil nil ((366 . 369) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . -366) (undo-tree-id234 . -1) (undo-tree-id236 . -1) (undo-tree-id238 . -1) (undo-tree-id240 . -1) 367 (365 . 367) (#(" " 0 1 (fontified nil face (org-indent) line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 365) (undo-tree-id241 . 1) (undo-tree-id243 . -1) (#("-" 0 1 (fontified t face (org-list-dt) line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 365) (undo-tree-id244 . 1) (undo-tree-id246 . -1) 367) ((365 . 366) (365 . 366) (#("* " 0 1 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 365) (366 . 367) (#("** " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 366)) (25838 5584 23330 0) 0 nil])
([nil nil ((342 . 345) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -342) (undo-tree-id140 . -1) 343 (341 . 343)) ((#("* " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent))) 1 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 341) (342 . 343) (#("** " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 342)) (25838 5573 910481 0) 0 nil])
nil
([nil nil ((270 . 275)) nil (25838 5598 456994 0) 0 nil] [nil nil ((#("T" 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . 270) (undo-tree-id442 . 1) (undo-tree-id443 . -1) (undo-tree-id444 . -1)) ((270 . 271)) (25838 5597 765452 0) 0 nil])
([nil nil ((420 . 423) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . -420) (undo-tree-id220 . -1) (undo-tree-id222 . -1) (undo-tree-id224 . -1) (undo-tree-id226 . -1) 421 (419 . 421) (#(" " 0 1 (fontified nil face (org-indent) line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 419) (undo-tree-id227 . 1) (undo-tree-id229 . -1) (#("-" 0 1 (fontified t face (org-list-dt) line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 419) (undo-tree-id230 . 1) (undo-tree-id232 . -1) 421) ((419 . 420) (419 . 420) (#("* " 0 1 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 419) (420 . 421) (#("** " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 420)) (25838 5583 829699 0) 0 nil])
nil
([nil nil (306) nil (25838 5598 456993 0) 0 nil])
nil
([nil nil ((440 . 443) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . -440) (undo-tree-id206 . -1) (undo-tree-id208 . -1) (undo-tree-id210 . -1) (undo-tree-id212 . -1) 441 (439 . 441) (#(" " 0 1 (fontified nil face (org-indent) line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 439) (undo-tree-id213 . 1) (undo-tree-id215 . -1) (#("-" 0 1 (fontified t face (org-list-dt) line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 439) (undo-tree-id216 . 1) (undo-tree-id218 . -1) 441) ((439 . 440) (439 . 440) (#("* " 0 1 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 439) (440 . 441) (#("** " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 440)) (25838 5583 252976 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)) face (org-list-dt))) . 302) (undo-tree-id457 . 1) (undo-tree-id458 . -1) (undo-tree-id459 . -1)) nil (25838 5598 456993 0) 0 nil])
([nil nil ((465 . 468) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . -465) (undo-tree-id192 . -1) (undo-tree-id194 . -1) (undo-tree-id196 . -1) (undo-tree-id198 . -1) 466 (464 . 466) (#(" " 0 1 (fontified nil face (org-indent) line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . 464) (undo-tree-id199 . 1) (undo-tree-id201 . -1) (#("-" 0 1 (fontified t face (org-list-dt) line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 464) (undo-tree-id202 . 1) (undo-tree-id204 . -1) 466) ((464 . 465) (464 . 465) (#("* " 0 1 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified nil line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 464) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (465 . 466) (#("** " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 465) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (t 25838 5577 402418 169000)) (25838 5582 239788 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("         " 0 8 (face org-indent) 8 9 (face org-indent)) face (org-indent))) . 302) (undo-tree-id454 . 1) (undo-tree-id455 . -1) (undo-tree-id456 . -1)) nil (25838 5598 457197 0) 0 nil])
([nil nil ((492 . 496) (463 . 467) (439 . 443) (381 . 385) (347 . 351) (308 . 312) (273 . 277) (234 . 238) 237 (t 25838 5577 402418 169000)) ((#("    " 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 234) (undo-tree-id261 . -3) (undo-tree-id262 . -3) (#("    " 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 273) (#("    " 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 308) (#("    " 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 347) (#("    " 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 381) (#("    " 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 439) (#("    " 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 463) (#("    " 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)))) . 492)) (25838 5582 238831 0) 0 nil])
([nil nil ((302 . 307)) nil (25838 5598 844236 0) 0 nil] [nil nil ((#("A" 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . 302) (undo-tree-id451 . 1) (undo-tree-id452 . -1) (undo-tree-id453 . -1)) ((302 . 303)) (25838 5598 456984 0) 0 nil])
nil
([nil nil (342) nil (25838 5598 844235 0) 0 nil])
nil
([nil nil ((#("-" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)) face (org-list-dt))) . 338) (undo-tree-id466 . 1) (undo-tree-id467 . -1) (undo-tree-id468 . -1)) nil (25838 5598 844235 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("         " 0 8 (face org-indent) 8 9 (face org-indent)) face (org-indent))) . 338) (undo-tree-id463 . 1) (undo-tree-id464 . -1) (undo-tree-id465 . -1)) nil (25838 5598 844445 0) 0 nil])
([nil nil ((338 . 343)) nil (25838 5599 241994 0) 0 nil] [nil nil ((#("N" 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . 338) (undo-tree-id460 . 1) (undo-tree-id461 . -1) (undo-tree-id462 . -1)) ((338 . 339)) (25838 5598 844227 0) 0 nil])
([nil nil (373) nil (25838 5599 241993 0) 0 nil])
nil
([nil nil ((#("-" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)) face (org-list-dt))) . 369) (undo-tree-id475 . 1) (undo-tree-id476 . -1) (undo-tree-id477 . -1)) nil (25838 5599 241992 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("         " 0 8 (face org-indent) 8 9 (face org-indent)) face (org-indent))) . 369) (undo-tree-id472 . 1) (undo-tree-id473 . -1) (undo-tree-id474 . -1)) nil (25838 5599 242197 0) 0 nil])
([nil nil ((369 . 374)) nil (25838 5599 807225 0) 0 nil] [nil nil ((#("T" 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . 369) (undo-tree-id469 . 1) (undo-tree-id470 . -1) (undo-tree-id471 . -1)) ((369 . 370)) (25838 5599 241984 0) 0 nil])
([nil nil (428) nil (25838 5599 807224 0) 0 nil])
nil
([nil nil ((#("-" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)) face (org-list-dt))) . 424) (undo-tree-id484 . 1) (undo-tree-id485 . -1) (undo-tree-id486 . -1)) nil (25838 5599 807224 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("         " 0 8 (face org-indent) 8 9 (face org-indent)) face (org-indent))) . 424) (undo-tree-id481 . 1) (undo-tree-id482 . -1) (undo-tree-id483 . -1)) nil (25838 5599 807512 0) 0 nil])
([nil nil ((424 . 429)) nil (25838 5600 396922 0) 0 nil] [nil nil ((#("V" 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . 424) (undo-tree-id478 . 1) (undo-tree-id479 . -1) (undo-tree-id480 . -1)) ((424 . 425)) (25838 5599 807215 0) 0 nil])
([nil nil (449) nil (25838 5600 396922 0) 0 nil])
nil
([nil nil ((#("-" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)) face (org-list-dt))) . 445) (undo-tree-id493 . 1) (undo-tree-id494 . -1) (undo-tree-id495 . -1)) nil (25838 5600 396921 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("         " 0 8 (face org-indent) 8 9 (face org-indent)) face (org-indent))) . 445) (undo-tree-id490 . 1) (undo-tree-id491 . -1) (undo-tree-id492 . -1)) nil (25838 5600 397133 0) 0 nil])
([nil nil ((445 . 450)) nil (25838 5600 968407 0) 0 nil] [nil nil ((#("S" 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . 445) (undo-tree-id487 . 1) (undo-tree-id488 . -1) (undo-tree-id489 . -1)) ((445 . 446)) (25838 5600 396913 0) 0 nil])
([nil nil (475) nil (25838 5600 968407 0) 0 nil])
nil
([nil nil ((#("-" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)) face (org-list-dt))) . 471) (undo-tree-id502 . 1) (undo-tree-id503 . -1) (undo-tree-id504 . -1)) nil (25838 5600 968406 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("         " 0 8 (face org-indent) 8 9 (face org-indent)) face (org-indent))) . 471) (undo-tree-id499 . 1) (undo-tree-id500 . -1) (undo-tree-id501 . -1)) nil (25838 5600 968604 0) 0 nil])
([nil nil ((471 . 476)) nil (25838 5601 922729 0) 0 nil] [nil nil ((#("P" 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . 471) (undo-tree-id496 . 1) (undo-tree-id497 . -1) (undo-tree-id498 . -1)) ((471 . 472)) (25838 5600 968398 0) 0 nil])
([nil nil ((325 . 344) (#("t" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -325) (undo-tree-id613 . -1) 326 (314 . 326) (293 . 314) (#("r" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -293) (undo-tree-id614 . -1) 294 (291 . 294) (270 . 291) (269 . 270) (t 25838 5601 927103 935000) 238) nil (25838 5701 154295 0) 0 nil])
nil
([nil nil ((#("-" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("          " 0 8 (face org-indent) 8 10 (face org-indent)))) . -401) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) 402 (401 . 402) (#(" " 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("         " 0 8 (face org-indent) 8 9 (face org-indent)))) . -401) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) 402 (#("-" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)))) . -402) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) 403 (401 . 403) (400 . 401) (391 . 400) (#("i" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -391) (undo-tree-id608 . -1) (#("r" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -392) (undo-tree-id609 . -1) 393 (387 . 393) (366 . 387) (365 . 366) (344 . 365) (#("t" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -344) (undo-tree-id610 . -1) 345 (344 . 345) (#(" " 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -344) (undo-tree-id611 . -1) 345 (344 . 345) (#(":" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -344) (undo-tree-id612 . -1) 345 (344 . 345)) nil (25838 5701 154287 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -401) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) 402 (401 . 402) (#(" " 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -401) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) 402 (401 . 402) (#("≈" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -401) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (#("ç" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -402) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (#("å" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -403) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (#("ß" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -404) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (#("∂" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -405) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (#("ƒ" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -406) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) 407 (401 . 407) (#("≈" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("        " 0 8 (face org-indent)))) . -401) (undo-tree-id1162 . -1) 402 (401 . 402) (t 25838 5701 159901 411000)) nil (25838 5720 96835 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)))) . -404) (undo-tree-id1163 . -1) (#("n" 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)))) . -405) (undo-tree-id1164 . -1) 406 (401 . 406) (#(" " 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("         " 0 8 (face org-indent) 8 9 (face org-indent)))) . -401) (undo-tree-id1165 . -1) 402 (401 . 402) (t 25838 5720 127080 341000)) nil (25838 5759 13820 0) 0 nil])
([nil nil ((404 . 405)) nil (25838 5759 13809 0) 0 nil])
([nil nil ((404 . 457)) nil (25838 5759 13806 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)))) . -457) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) 458 (t 25838 5759 19378 761000)) nil (25838 5761 809645 0) 0 nil])
([nil nil ((401 . 461) (#(" - 
 - [[id:34ea06aa-0cea-4a3e-a6ec-4c4e01853257][Phishing]]" 0 1 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent))) 1 3 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent))) 3 4 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent))) 4 5 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) face (org-indent)) 5 6 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) face (org-list-dt)) 6 7 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) face (org-indent)) 7 49 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) help-echo "LINK: id:34ea06aa-0cea-4a3e-a6ec-4c4e01853257" htmlize-link (:uri "id:34ea06aa-0cea-4a3e-a6ec-4c4e01853257") invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 49 50 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) help-echo "LINK: id:34ea06aa-0cea-4a3e-a6ec-4c4e01853257" htmlize-link (:uri "id:34ea06aa-0cea-4a3e-a6ec-4c4e01853257") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 50 57 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) help-echo "LINK: id:34ea06aa-0cea-4a3e-a6ec-4c4e01853257" htmlize-link (:uri "id:34ea06aa-0cea-4a3e-a6ec-4c4e01853257") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 57 58 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) help-echo "LINK: id:34ea06aa-0cea-4a3e-a6ec-4c4e01853257" htmlize-link (:uri "id:34ea06aa-0cea-4a3e-a6ec-4c4e01853257") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 58 59 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) help-echo "LINK: id:34ea06aa-0cea-4a3e-a6ec-4c4e01853257" htmlize-link (:uri "id:34ea06aa-0cea-4a3e-a6ec-4c4e01853257") face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 59 60 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: id:34ea06aa-0cea-4a3e-a6ec-4c4e01853257" htmlize-link (:uri "id:34ea06aa-0cea-4a3e-a6ec-4c4e01853257") face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t)) . 401) (undo-tree-id1177 . -50) (undo-tree-id1178 . -50) (undo-tree-id1179 . -50) (undo-tree-id1180 . -50) (undo-tree-id1181 . -50) (undo-tree-id1182 . -50) (undo-tree-id1183 . -50) (undo-tree-id1184 . -50) (undo-tree-id1185 . -50) (undo-tree-id1186 . -60) (undo-tree-id1187 . 1) (undo-tree-id1188 . -60) (undo-tree-id1189 . 53) (undo-tree-id1190 . -8) (401 . 405) 457 (t 25838 5761 814884 51000)) nil (25838 5893 987816 0) 0 nil])
([nil nil ((460 . 513)) nil (25838 5893 987796 0) 0 nil])
([nil nil ((460 . 461)) nil (25838 5893 987793 0) 0 nil])
([nil nil ((518 . 519) (458 . 518) (#(" - 
 - [[id:0701279D-4F27-47BC-8DE7-AD5CC34EE235][Smishing]]" 0 1 (wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) fontified nil) 1 3 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent))) 3 4 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent))) 4 5 (wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) fontified nil face (org-indent)) 5 6 (wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) fontified nil face (org-list-dt)) 6 7 (wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) fontified nil face (org-indent)) 7 49 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) help-echo "LINK: id:0701279D-4F27-47BC-8DE7-AD5CC34EE235" htmlize-link (:uri "id:0701279D-4F27-47BC-8DE7-AD5CC34EE235") invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 49 50 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) help-echo "LINK: id:0701279D-4F27-47BC-8DE7-AD5CC34EE235" htmlize-link (:uri "id:0701279D-4F27-47BC-8DE7-AD5CC34EE235") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t face org-link) 50 57 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) help-echo "LINK: id:0701279D-4F27-47BC-8DE7-AD5CC34EE235" htmlize-link (:uri "id:0701279D-4F27-47BC-8DE7-AD5CC34EE235") face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 57 58 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) help-echo "LINK: id:0701279D-4F27-47BC-8DE7-AD5CC34EE235" htmlize-link (:uri "id:0701279D-4F27-47BC-8DE7-AD5CC34EE235") rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) face org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 58 59 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) help-echo "LINK: id:0701279D-4F27-47BC-8DE7-AD5CC34EE235" htmlize-link (:uri "id:0701279D-4F27-47BC-8DE7-AD5CC34EE235") face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 59 60 (fontified nil line-prefix #("        " 0 8 (face org-indent)) wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) help-echo "LINK: id:0701279D-4F27-47BC-8DE7-AD5CC34EE235" htmlize-link (:uri "id:0701279D-4F27-47BC-8DE7-AD5CC34EE235") face org-link invisible org-link mouse-face highlight keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t)) . 458) (undo-tree-id1191 . 53) (undo-tree-id1192 . -6) (undo-tree-id1193 . -60) (458 . 462) (#(" " 0 1 (wrap-prefix #("           " 0 8 (face org-indent) 8 11 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) fontified t)) . 514) (undo-tree-id1194 . -1) 515 (t 25838 5893 995283 666000)) nil (25838 5985 140530 0) 0 nil])
([nil current ((518 . 570)) nil (25838 5985 140515 0) 0 nil])
nil
