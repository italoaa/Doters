(undo-tree-save-format-version . 1)
"2a74c3cc9fb78976c53dd2f86c5b32be9b0074b1"
[nil nil nil nil (25891 7738 170976 0) 0 nil]
([nil nil ((#("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 28344) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (t 25891 7668 310936 905000)) nil (25891 7760 62067 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28344) (undo-tree-id20 . -1) (undo-tree-id21 . -1)) nil (25891 7760 62065 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28344) (undo-tree-id18 . -1) (undo-tree-id19 . -1)) nil (25891 7760 62063 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28344) (undo-tree-id16 . -1) (undo-tree-id17 . -1)) nil (25891 7760 62061 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28344) (undo-tree-id14 . -1) (undo-tree-id15 . -1)) nil (25891 7760 62060 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28344) (undo-tree-id12 . -1) (undo-tree-id13 . -1)) nil (25891 7760 62058 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28344) (undo-tree-id10 . -1) (undo-tree-id11 . -1)) nil (25891 7760 62057 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28344) (undo-tree-id8 . -1) (undo-tree-id9 . -1)) nil (25891 7760 62055 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28344) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) nil (25891 7760 62053 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28344) (undo-tree-id4 . -1) (undo-tree-id5 . -1)) nil (25891 7760 62052 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28344) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (25891 7760 62050 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28344) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) nil (25891 7760 62046 0) 0 nil])
([nil nil ((19123 . 19143) (19122 . 19124) (#("(" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) fontified nil)) . -19122) (19122 . 19123) (#("*" 0 1 (font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) fontified t)) . -19122) (undo-tree-id0 . -1) 19123 (19122 . 19123) (t 25891 7760 65438 780000)) nil (25891 8008 491953 0) 0 nil])
([nil nil ((19143 . 19144) (t 25891 8008 495928 433000)) nil (25891 8103 261930 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("        " 0 8 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) fontified t)) . 19143) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 19122) nil (25891 8103 261927 0) 0 nil])
([nil nil ((19143 . 19249) 19122 (t 25891 8103 265000 225000)) nil (25891 8262 113826 0) 0 nil])
([nil nil ((#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                 " 0 8 (face org-indent) 8 17 (face org-indent)) line-prefix #("        " 0 8 (face org-indent)) fontified t)) . 19248) 19122 (t 25891 8262 117134 167000)) nil (25891 8263 354428 0) 0 nil])
([nil nil ((19248 . 19249) (t 25891 8263 358298 558000)) nil (25891 8736 613998 0) 0 nil])
([nil nil ((19249 . 19282) 19122) nil (25891 8736 613994 0) 0 nil])
([nil nil ((19282 . 19320) 19122 (t 25891 8736 617294 637000)) nil (25891 8756 369726 0) 0 nil])
([nil nil ((#("TODO " 0 4 (face (org-todo org-todo org-level-4) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) line-prefix #("***" 0 3 (face org-indent)) fontified t) 4 5 (face org-level-4 wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) line-prefix #("***" 0 3 (face org-indent)) fontified t)) . 19085) (undo-tree-id8 . -5) (undo-tree-id9 . -5) (undo-tree-id10 . -5) (undo-tree-id11 . -5) (undo-tree-id12 . -5) (undo-tree-id13 . -5) (undo-tree-id14 . -5) (undo-tree-id15 . -5) (undo-tree-id16 . -5) (undo-tree-id17 . -5) (undo-tree-id18 . -5) (undo-tree-id19 . -5) (undo-tree-id20 . -5) (undo-tree-id21 . -5) (undo-tree-id22 . -5) (undo-tree-id23 . -4) (t 25891 8756 373665 458000)) nil (25891 9045 165037 0) 0 nil])
([nil nil ((25645 . 25656) (#("O" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -25645) (undo-tree-id0 . -1) (#("r" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -25646) (undo-tree-id1 . -1) (#("g" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -25647) (undo-tree-id2 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -25648) (undo-tree-id3 . -1) 25649 (25645 . 25649) (25641 . 25645) (t 25891 9045 169228 561000)) nil (25891 46276 793017 0) 0 nil])
([nil nil ((25675 . 25679) (25669 . 25675) (25657 . 25680) (#("<s" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -25657) (undo-tree-id4 . -2) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) 25659 (25657 . 25659) (#("S" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -25657) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 25658 (25657 . 25658) (25656 . 25657) (t 25891 46276 798083 322000) 25655) nil (25891 46283 77452 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 26248 . 26249) (nil fontified nil 26209 . 26249) (nil fontified nil 26170 . 26209) (nil fontified nil 26139 . 26170) (nil fontified nil 26104 . 26139) (nil fontified nil 26092 . 26104) (nil fontified nil 26050 . 26092) (nil fontified nil 25997 . 26050) (nil fontified nil 25919 . 25997) (nil fontified nil 25822 . 25919) (nil fontified nil 25802 . 25822) (nil fontified nil 25717 . 25802) (nil fontified nil 25705 . 25717) (nil fontified nil 25680 . 25705) (25680 . 26249) (t 25891 46283 81306 285000)) nil (25891 46318 588563 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 26249) (undo-tree-id62 . 1) (undo-tree-id63 . -1) (t 25891 46318 592401 729000)) nil (25891 46319 631289 0) 0 nil])
([nil nil ((#(";;         normally we'd recommend hooking orui after org-roam, but since org-roam does not have
" 0 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 97 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 25822) (undo-tree-id162 . -14) (undo-tree-id163 . -96) (undo-tree-id164 . -14) (undo-tree-id165 . -14) (undo-tree-id166 . -14) (undo-tree-id167 . -14) (undo-tree-id168 . -14) (undo-tree-id169 . -14) (undo-tree-id170 . -14) (undo-tree-id171 . -14) (undo-tree-id172 . -14) (undo-tree-id173 . -14) (undo-tree-id174 . -14) (undo-tree-id175 . -14) (undo-tree-id176 . -14) (undo-tree-id177 . -14) (undo-tree-id178 . -14) (undo-tree-id179 . -14) (undo-tree-id180 . -14) (undo-tree-id181 . -14) (undo-tree-id182 . -14) (undo-tree-id183 . -14) (undo-tree-id184 . -14) (undo-tree-id185 . -14) (undo-tree-id186 . -14) (undo-tree-id187 . -14) (undo-tree-id188 . -14) (undo-tree-id189 . -14) (undo-tree-id190 . -14) (undo-tree-id191 . -14) (undo-tree-id192 . -14) (undo-tree-id193 . -14) (undo-tree-id194 . -14) (undo-tree-id195 . -14) (undo-tree-id196 . -14) (undo-tree-id197 . -14) (undo-tree-id198 . -14) (undo-tree-id199 . -14) (undo-tree-id200 . -14) (undo-tree-id201 . -14) (undo-tree-id202 . -14) (undo-tree-id203 . -14) (undo-tree-id204 . -14) (undo-tree-id205 . -14) (undo-tree-id206 . -14) (undo-tree-id207 . -14) (undo-tree-id208 . -14) (undo-tree-id209 . -14) (undo-tree-id210 . -14) (undo-tree-id211 . -14) (undo-tree-id212 . -14) (undo-tree-id213 . -14) (undo-tree-id214 . -14) (undo-tree-id215 . -14) (undo-tree-id216 . -14) (undo-tree-id217 . -14) (undo-tree-id218 . -14) (undo-tree-id219 . -14) (undo-tree-id220 . -14) (undo-tree-id221 . -14) (undo-tree-id222 . -14) (undo-tree-id223 . -14) (undo-tree-id224 . -14) (undo-tree-id225 . -14) (undo-tree-id226 . -14) (undo-tree-id227 . -14) (undo-tree-id228 . -14) (undo-tree-id229 . -14) (undo-tree-id230 . -14) (undo-tree-id231 . -14) (undo-tree-id232 . -14) (undo-tree-id233 . -14) (undo-tree-id234 . -14) (undo-tree-id235 . -14) (undo-tree-id236 . -14) (undo-tree-id237 . -14) (undo-tree-id238 . -14) (undo-tree-id239 . -14) (undo-tree-id240 . -14) (undo-tree-id241 . -14) (undo-tree-id242 . -14) (undo-tree-id243 . -14) (undo-tree-id244 . -14) (undo-tree-id245 . -14) (undo-tree-id246 . -14) (undo-tree-id247 . -14) (undo-tree-id248 . -14) (undo-tree-id249 . -14) (undo-tree-id250 . -14) (undo-tree-id251 . -14) (undo-tree-id252 . -14) (undo-tree-id253 . -14) (undo-tree-id254 . -14) (undo-tree-id255 . -14) (undo-tree-id256 . -14) (undo-tree-id257 . -14) (undo-tree-id258 . -14) (undo-tree-id259 . -14) (undo-tree-id260 . -14) (undo-tree-id261 . -14) (undo-tree-id262 . -14) (undo-tree-id263 . -14) (undo-tree-id264 . -14) (undo-tree-id265 . -14) (undo-tree-id266 . -14) (undo-tree-id267 . -14) (undo-tree-id268 . -14) (undo-tree-id269 . -14) (undo-tree-id270 . -14) (undo-tree-id271 . -14) (undo-tree-id272 . -14) (undo-tree-id273 . -14) (undo-tree-id274 . -14) (undo-tree-id275 . -14) (undo-tree-id276 . -14) (undo-tree-id277 . -14) (undo-tree-id278 . -14) (undo-tree-id279 . -14) (undo-tree-id280 . -14) (undo-tree-id281 . -14) (undo-tree-id282 . -14) (undo-tree-id283 . -14) (undo-tree-id284 . -14) (undo-tree-id285 . -14) (undo-tree-id286 . -14) (undo-tree-id287 . -14) (undo-tree-id288 . -14) (undo-tree-id289 . -14) (undo-tree-id290 . -14) (undo-tree-id291 . -14) (undo-tree-id292 . -14) (undo-tree-id293 . -14) (undo-tree-id294 . -14) (undo-tree-id295 . -14) (undo-tree-id296 . -14) (undo-tree-id297 . -14) (undo-tree-id298 . -14) (undo-tree-id299 . -14) (undo-tree-id300 . -14) (undo-tree-id301 . -14) (undo-tree-id302 . -14) (undo-tree-id303 . -14) (undo-tree-id304 . -14) (undo-tree-id305 . -14) (undo-tree-id306 . -14) (undo-tree-id307 . -14) (undo-tree-id308 . -14) (undo-tree-id309 . -14) (undo-tree-id310 . -14) (undo-tree-id311 . -14) (undo-tree-id312 . -14) (undo-tree-id313 . -14) (undo-tree-id314 . -14) (undo-tree-id315 . -14) (undo-tree-id316 . -14) (undo-tree-id317 . -14) (undo-tree-id318 . -14) (undo-tree-id319 . -14) (undo-tree-id320 . -14) (undo-tree-id321 . -14) (undo-tree-id322 . -14) (undo-tree-id323 . -14) (undo-tree-id324 . -14) (undo-tree-id325 . -14) (undo-tree-id326 . -14) (undo-tree-id327 . -14) (undo-tree-id328 . -97) 25836 (t 25891 46319 635352 278000)) nil (25891 46334 525649 0) 0 nil])
([nil nil ((#(";;         a hookable mode anymore, you're advised to pick something yourself
" 0 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 77 78 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 25822) (undo-tree-id106 . -14) (undo-tree-id107 . -77) (undo-tree-id108 . -14) (undo-tree-id109 . -14) (undo-tree-id110 . -14) (undo-tree-id111 . -14) (undo-tree-id112 . -14) (undo-tree-id113 . -14) (undo-tree-id114 . -14) (undo-tree-id115 . -14) (undo-tree-id116 . -14) (undo-tree-id117 . -14) (undo-tree-id118 . -14) (undo-tree-id119 . -14) (undo-tree-id120 . -14) (undo-tree-id121 . -14) (undo-tree-id122 . -14) (undo-tree-id123 . -14) (undo-tree-id124 . -14) (undo-tree-id125 . -14) (undo-tree-id126 . -14) (undo-tree-id127 . -14) (undo-tree-id128 . -14) (undo-tree-id129 . -14) (undo-tree-id130 . -14) (undo-tree-id131 . -14) (undo-tree-id132 . -14) (undo-tree-id133 . -14) (undo-tree-id134 . -14) (undo-tree-id135 . -14) (undo-tree-id136 . -14) (undo-tree-id137 . -14) (undo-tree-id138 . -14) (undo-tree-id139 . -14) (undo-tree-id140 . -14) (undo-tree-id141 . -14) (undo-tree-id142 . -14) (undo-tree-id143 . -77) (undo-tree-id144 . -14) (undo-tree-id145 . -14) (undo-tree-id146 . -14) (undo-tree-id147 . -14) (undo-tree-id148 . -14) (undo-tree-id149 . -14) (undo-tree-id150 . -14) (undo-tree-id151 . -14) (undo-tree-id152 . -14) (undo-tree-id153 . -14) (undo-tree-id154 . -14) (undo-tree-id155 . -14) (undo-tree-id156 . -14) (undo-tree-id157 . -14) (undo-tree-id158 . -14) (undo-tree-id159 . -14) (undo-tree-id160 . -14) (undo-tree-id161 . -78) 25836) nil (25891 46334 525512 0) 0 nil])
([nil nil ((#(";;         if you don't care about startup time, use
" 0 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 52 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 25822) (undo-tree-id101 . -14) (undo-tree-id102 . -52) (undo-tree-id103 . -52) (undo-tree-id104 . -14) (undo-tree-id105 . -53) 25836) nil (25891 46334 525467 0) 0 nil])
([nil nil ((#(";;  :hook (after-init . org-roam-ui-mode)
" 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 41 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 25822) (undo-tree-id64 . -14) (undo-tree-id65 . -41) (undo-tree-id66 . -41) (undo-tree-id67 . -14) (undo-tree-id68 . -14) (undo-tree-id69 . -14) (undo-tree-id70 . -14) (undo-tree-id71 . -14) (undo-tree-id72 . -14) (undo-tree-id73 . -14) (undo-tree-id74 . -14) (undo-tree-id75 . -14) (undo-tree-id76 . -14) (undo-tree-id77 . -14) (undo-tree-id78 . -14) (undo-tree-id79 . -14) (undo-tree-id80 . -14) (undo-tree-id81 . -14) (undo-tree-id82 . -14) (undo-tree-id83 . -14) (undo-tree-id84 . -14) (undo-tree-id85 . -14) (undo-tree-id86 . -14) (undo-tree-id87 . -14) (undo-tree-id88 . -14) (undo-tree-id89 . -14) (undo-tree-id90 . -14) (undo-tree-id91 . -14) (undo-tree-id92 . -14) (undo-tree-id93 . -14) (undo-tree-id94 . -14) (undo-tree-id95 . -14) (undo-tree-id96 . -14) (undo-tree-id97 . -14) (undo-tree-id98 . -14) (undo-tree-id99 . -14) (undo-tree-id100 . -42) 25836) nil (25891 46367 412885 0) 0 nil])
([nil nil ((#("    (:host github :repo \"org-roam/org-roam-ui\" :branch \"main\" :files (\"*.el\" \"out\"))
" 0 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5 10 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 10 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 18 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 23 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 46 47 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 47 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 54 55 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 55 61 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 61 62 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 62 68 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 68 70 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 70 76 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 76 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 77 82 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 82 85 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25717) (undo-tree-id677 . -38) (undo-tree-id678 . -84) (undo-tree-id679 . -38) (undo-tree-id680 . -38) (undo-tree-id681 . -38) (undo-tree-id682 . -38) (undo-tree-id683 . -38) (undo-tree-id684 . -38) (undo-tree-id685 . -38) (undo-tree-id686 . -38) (undo-tree-id687 . -38) (undo-tree-id688 . -38) (undo-tree-id689 . -38) (undo-tree-id690 . -38) (undo-tree-id691 . -38) (undo-tree-id692 . -38) (undo-tree-id693 . -38) (undo-tree-id694 . -38) (undo-tree-id695 . -38) (undo-tree-id696 . -38) (undo-tree-id697 . -38) (undo-tree-id698 . -38) (undo-tree-id699 . -38) (undo-tree-id700 . -38) (undo-tree-id701 . -38) (undo-tree-id702 . -38) (undo-tree-id703 . -38) (undo-tree-id704 . -38) (undo-tree-id705 . -38) (undo-tree-id706 . -38) (undo-tree-id707 . -38) (undo-tree-id708 . -38) (undo-tree-id709 . -38) (undo-tree-id710 . -85) 25755 (t 25891 46334 531340 495000)) nil (25891 46369 682817 0) 0 nil] [nil nil ((#("k" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) fontified t font-lock-fontified t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-multiline t face (font-lock-warning-face org-block))) . -25983) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (#("k" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) fontified t font-lock-fontified t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-multiline t face (font-lock-warning-face org-block))) . -25984) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) 25985 (25978 . 25985) (t 25891 46334 531340 495000)) ((#("kkkkkkk" 0 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) fontified nil font-lock-fontified t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-multiline t face (font-lock-warning-face org-block)) 5 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) fontified nil font-lock-fontified t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-multiline t face (font-lock-warning-face org-block)) 6 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) fontified nil font-lock-fontified t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-multiline t face (font-lock-warning-face org-block))) . 25978) (undo-tree-id393 . -4) (undo-tree-id394 . -6) (undo-tree-id395 . -6) (undo-tree-id396 . -6) (undo-tree-id397 . -6) (undo-tree-id398 . -6) (undo-tree-id399 . -6) (undo-tree-id400 . -6) (undo-tree-id401 . -6) (undo-tree-id402 . -6) (undo-tree-id403 . -6) (undo-tree-id404 . -6) (undo-tree-id405 . -6) (undo-tree-id406 . -6) (undo-tree-id407 . -6) (undo-tree-id408 . -6) (undo-tree-id409 . -7) (undo-tree-id410 . -7) (undo-tree-id411 . -7) (undo-tree-id412 . -7) (undo-tree-id413 . -7) (undo-tree-id414 . -7) (undo-tree-id415 . -7) (undo-tree-id416 . -7) (undo-tree-id417 . -7) (undo-tree-id418 . -7) (undo-tree-id419 . -7) (undo-tree-id420 . -7) (undo-tree-id421 . -7) (undo-tree-id422 . -7) (undo-tree-id423 . -7) (undo-tree-id424 . -6) (undo-tree-id425 . -6) (undo-tree-id426 . -6) (undo-tree-id427 . -6) (undo-tree-id428 . -6) (undo-tree-id429 . -6) (undo-tree-id430 . -6) (undo-tree-id431 . -6) (undo-tree-id432 . -6) (undo-tree-id433 . -6) (undo-tree-id434 . -6) (undo-tree-id435 . -6) (undo-tree-id436 . -6) (undo-tree-id437 . -6) (undo-tree-id438 . -6) (undo-tree-id439 . -4) (25983 . 25985)) (25891 46367 411926 0) 0 nil])
([nil nil ((#("  :straight
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 11 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25705) (undo-tree-id711 . -10) (undo-tree-id712 . -11) (undo-tree-id713 . -12) (undo-tree-id714 . -12) (undo-tree-id715 . -12) (undo-tree-id716 . -12) (undo-tree-id717 . -12) (undo-tree-id718 . -12) (undo-tree-id719 . -12) (undo-tree-id720 . -12) (undo-tree-id721 . -12) (undo-tree-id722 . -12) (undo-tree-id723 . -12) (undo-tree-id724 . -12) (undo-tree-id725 . -12) (undo-tree-id726 . -12) (undo-tree-id727 . -12) (undo-tree-id728 . -12) (undo-tree-id729 . -12) (undo-tree-id730 . -12) (undo-tree-id731 . -12) (undo-tree-id732 . -12) (undo-tree-id733 . -12) (undo-tree-id734 . -12) (undo-tree-id735 . -12) (undo-tree-id736 . -12) (undo-tree-id737 . -12) (undo-tree-id738 . -12) (undo-tree-id739 . -12) (undo-tree-id740 . -12) (undo-tree-id741 . -12) (undo-tree-id742 . -12) (undo-tree-id743 . -10) (undo-tree-id744 . -10) (undo-tree-id745 . -10) (undo-tree-id746 . -10) (undo-tree-id747 . -10) (undo-tree-id748 . -10) (undo-tree-id749 . -10) (undo-tree-id750 . -10) (undo-tree-id751 . -10) (undo-tree-id752 . -10) (undo-tree-id753 . -10) (undo-tree-id754 . -10) (undo-tree-id755 . -10) (undo-tree-id756 . -10) (undo-tree-id757 . -10) (undo-tree-id758 . -10) (undo-tree-id759 . -10) (undo-tree-id760 . -10) (undo-tree-id761 . -10) (undo-tree-id762 . -10) (undo-tree-id763 . -10) (undo-tree-id764 . -10) (undo-tree-id765 . -10) (undo-tree-id766 . -10) (undo-tree-id767 . -10) (undo-tree-id768 . -10) (undo-tree-id769 . -10) (undo-tree-id770 . -10) (undo-tree-id771 . -10) (undo-tree-id772 . -10) (undo-tree-id773 . -10) (undo-tree-id774 . -10) (undo-tree-id775 . -10) (undo-tree-id776 . -10) (undo-tree-id777 . -10) (undo-tree-id778 . -10) (undo-tree-id779 . -10) (undo-tree-id780 . -10) (undo-tree-id781 . -12) 25715) nil (25891 46370 991343 0) 0 nil] [nil nil ((#("    :after org-roam
" 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4 10 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 10 19 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 19 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25717) (undo-tree-id440 . -18) (undo-tree-id441 . -19) (undo-tree-id442 . -20) (undo-tree-id443 . -20) (undo-tree-id444 . -20) (undo-tree-id445 . -20) (undo-tree-id446 . -20) (undo-tree-id447 . -20) (undo-tree-id448 . -20) (undo-tree-id449 . -20) (undo-tree-id450 . -20) (undo-tree-id451 . -20) (undo-tree-id452 . -20) (undo-tree-id453 . -20) (undo-tree-id454 . -20) (undo-tree-id455 . -20) (undo-tree-id456 . -20) (undo-tree-id457 . -20) (undo-tree-id458 . -20) (undo-tree-id459 . -20) (undo-tree-id460 . -20) (undo-tree-id461 . -20) (undo-tree-id462 . -20) (undo-tree-id463 . -20) (undo-tree-id464 . -20) (undo-tree-id465 . -20) (undo-tree-id466 . -20) (undo-tree-id467 . -20) (undo-tree-id468 . -20) (undo-tree-id469 . -20) (undo-tree-id470 . -20) (undo-tree-id471 . -20) (undo-tree-id472 . -20) (undo-tree-id473 . -20) (undo-tree-id474 . -20) (undo-tree-id475 . -20) (undo-tree-id476 . -20) (undo-tree-id477 . -20) (undo-tree-id478 . -20) (undo-tree-id479 . -20) (undo-tree-id480 . -20) (undo-tree-id481 . -20) (undo-tree-id482 . -20) (undo-tree-id483 . -20) (undo-tree-id484 . -20) (undo-tree-id485 . -20) (undo-tree-id486 . -20) (undo-tree-id487 . -20) (undo-tree-id488 . -20) (undo-tree-id489 . -20) (undo-tree-id490 . -20) (undo-tree-id491 . -20) (undo-tree-id492 . -20) (undo-tree-id493 . -20) (undo-tree-id494 . -20) (undo-tree-id495 . -20) (undo-tree-id496 . -20) (undo-tree-id497 . -20) (undo-tree-id498 . -20) (undo-tree-id499 . -20) (undo-tree-id500 . -20) (undo-tree-id501 . -20) (undo-tree-id502 . -20) (undo-tree-id503 . -20) (undo-tree-id504 . -20) (undo-tree-id505 . -20) (undo-tree-id506 . -20) (undo-tree-id507 . -20) (undo-tree-id508 . -20) (undo-tree-id509 . -20) (undo-tree-id510 . -20) (undo-tree-id511 . -20) (undo-tree-id512 . -20) (undo-tree-id513 . -20) (undo-tree-id514 . -20) (undo-tree-id515 . -20) (undo-tree-id516 . -20) (undo-tree-id517 . -20) (undo-tree-id518 . -20) (undo-tree-id519 . -20) (undo-tree-id520 . -20) (undo-tree-id521 . -20) (undo-tree-id522 . -20) (undo-tree-id523 . -20) (undo-tree-id524 . -20) (undo-tree-id525 . -20) (undo-tree-id526 . -20) (undo-tree-id527 . -20) (undo-tree-id528 . -20) (undo-tree-id529 . -20) (undo-tree-id530 . -20) (undo-tree-id531 . -20) (undo-tree-id532 . -20) (undo-tree-id533 . -20) (undo-tree-id534 . -20) (undo-tree-id535 . -20) (undo-tree-id536 . -20) (undo-tree-id537 . -20) (undo-tree-id538 . -20) (undo-tree-id539 . -20) (undo-tree-id540 . -20) (undo-tree-id541 . -20) (undo-tree-id542 . -20) (undo-tree-id543 . -20) (undo-tree-id544 . -20) (undo-tree-id545 . -20) (undo-tree-id546 . -20) (undo-tree-id547 . -20) (undo-tree-id548 . -20) (undo-tree-id549 . -20) (undo-tree-id550 . -20) (undo-tree-id551 . -20) (undo-tree-id552 . -20) (undo-tree-id553 . -20) (undo-tree-id554 . -20) (undo-tree-id555 . -20) (undo-tree-id556 . -20) (undo-tree-id557 . -20) (undo-tree-id558 . -20) (undo-tree-id559 . -20) (undo-tree-id560 . -20) (undo-tree-id561 . -20) (undo-tree-id562 . -20) (undo-tree-id563 . -20) (undo-tree-id564 . -20) (undo-tree-id565 . -20) (undo-tree-id566 . -20) (undo-tree-id567 . -20) (undo-tree-id568 . -20) (undo-tree-id569 . -20) (undo-tree-id570 . -20) (undo-tree-id571 . -20) (undo-tree-id572 . -20) (undo-tree-id573 . -20) (undo-tree-id574 . -20) (undo-tree-id575 . -20) (undo-tree-id576 . -20) (undo-tree-id577 . -20) (undo-tree-id578 . -20) (undo-tree-id579 . -20) (undo-tree-id580 . -20) (undo-tree-id581 . -20) (undo-tree-id582 . -20) (undo-tree-id583 . -20) (undo-tree-id584 . -20) (undo-tree-id585 . -20) (undo-tree-id586 . -20) (undo-tree-id587 . -20) (undo-tree-id588 . -20) (undo-tree-id589 . -20) (undo-tree-id590 . -20) (undo-tree-id591 . -20) (undo-tree-id592 . -20) (undo-tree-id593 . -20) (undo-tree-id594 . -20) (undo-tree-id595 . -20) (undo-tree-id596 . -20) (undo-tree-id597 . -20) (undo-tree-id598 . -20) (undo-tree-id599 . -20) (undo-tree-id600 . -20) (undo-tree-id601 . -20) (undo-tree-id602 . -20) (undo-tree-id603 . -20) (undo-tree-id604 . -20) (undo-tree-id605 . -20) (undo-tree-id606 . -20) (undo-tree-id607 . -20) (undo-tree-id608 . -20) (undo-tree-id609 . -20) (undo-tree-id610 . -20) (undo-tree-id611 . -20) (undo-tree-id612 . -20) (undo-tree-id613 . -20) (undo-tree-id614 . -20) (undo-tree-id615 . -20) (undo-tree-id616 . -20) (undo-tree-id617 . -20) (undo-tree-id618 . -20) (undo-tree-id619 . -20) (undo-tree-id620 . -20) (undo-tree-id621 . -20) (undo-tree-id622 . -20) (undo-tree-id623 . -20) (undo-tree-id624 . -20) (undo-tree-id625 . -20) (undo-tree-id626 . -20) (undo-tree-id627 . -20) (undo-tree-id628 . -20) (undo-tree-id629 . -20) (undo-tree-id630 . -20) (undo-tree-id631 . -20) (undo-tree-id632 . -20) (undo-tree-id633 . -20) (undo-tree-id634 . -20) (undo-tree-id635 . -20) (undo-tree-id636 . -20) (undo-tree-id637 . -20) (undo-tree-id638 . -20) (undo-tree-id639 . -20) (undo-tree-id640 . -20) (undo-tree-id641 . -20) (undo-tree-id642 . -20) (undo-tree-id643 . -20) (undo-tree-id644 . -20) (undo-tree-id645 . -20) (undo-tree-id646 . -20) (undo-tree-id647 . -20) (undo-tree-id648 . -20) (undo-tree-id649 . -20) (undo-tree-id650 . -20) (undo-tree-id651 . -20) (undo-tree-id652 . -20) (undo-tree-id653 . -20) (undo-tree-id654 . -20) (undo-tree-id655 . -20) (undo-tree-id656 . -20) (undo-tree-id657 . -20) (undo-tree-id658 . -18) (undo-tree-id659 . -18) (undo-tree-id660 . -18) (undo-tree-id661 . -18) (undo-tree-id662 . -18) (undo-tree-id663 . -18) (undo-tree-id664 . -18) (undo-tree-id665 . -19) (undo-tree-id666 . -18) (undo-tree-id667 . -18) (undo-tree-id668 . -18) (undo-tree-id669 . -18) (undo-tree-id670 . -18) (undo-tree-id671 . -18) (undo-tree-id672 . -18) (undo-tree-id673 . -18) (undo-tree-id674 . -18) (undo-tree-id675 . -18) (undo-tree-id676 . -20) 25735) ((25717 . 25737) (t 25891 46369 268628 381000)) (25891 46369 263271 0) 0 nil])
nil
([nil nil ((#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25707) (#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25725) (#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25728) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25737) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 25780) (undo-tree-id782 . -2) (undo-tree-id783 . -2) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -2) (undo-tree-id789 . -2) (undo-tree-id790 . -2) (undo-tree-id791 . -2) (undo-tree-id792 . -2) (undo-tree-id793 . -2) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (undo-tree-id796 . -2) (undo-tree-id797 . -2) (undo-tree-id798 . -2) (undo-tree-id799 . -2) (undo-tree-id800 . -2) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 25803) (#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 25812) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 25842) 25680 (t 25891 46370 996605 400000)) nil (25891 46374 124778 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 15416 . 15417) (#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -15473) (15412 . 15474) 15362 (t 25891 46374 129707 249000)) nil (25891 46410 268917 0) 0 nil])
([nil nil ((15420 . 15421) (#("i" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block))) . 15420)) nil (25891 46432 557376 0) 0 nil] [nil nil ((15418 . 15419) (#("n" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block) help-echo nil)) . 15418) (undo-tree-id824 . -1)) ((15418 . 15419) (#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . 15418)) (25891 46410 267877 0) 0 nil])
([nil nil ((#("org-roam-node-insert" 0 3 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3 20 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 15425) (undo-tree-id825 . -19)) nil (25891 46432 557375 0) 0 nil])
nil
([nil nil ((15425 . 15429)) nil (25891 46432 557368 0) 0 nil])
([nil current ((15429 . 15441) 9438) nil (25891 46432 557364 0) 0 nil])
nil
