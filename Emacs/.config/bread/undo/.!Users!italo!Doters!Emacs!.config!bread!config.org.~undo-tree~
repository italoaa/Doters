(undo-tree-save-format-version . 1)
"c8d08d7efcbae9b1a1780d5c14892d95ca2b9cf3"
[nil nil nil nil (25899 48768 985725 0) 0 nil]
([nil nil ((#("(require 'ox-extra)
" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1 8 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 8 10 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 10 18 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 18 20 (fontified t font-lock-fontified t font-lock-multiline t face (org-block) src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 597) (undo-tree-id1 . -20) (undo-tree-id3 . -20) (undo-tree-id5 . -20) (undo-tree-id7 . -20) (undo-tree-id9 . -20) (undo-tree-id11 . -20) (undo-tree-id13 . -20) (undo-tree-id15 . -20) (undo-tree-id17 . -20) (undo-tree-id19 . -20) (undo-tree-id21 . -20) (undo-tree-id23 . -1) (undo-tree-id25 . -19) (undo-tree-id27 . -19) (t 25899 48521 422825 307000)) nil (25899 48768 985724 0) 0 nil])
([nil nil ((#("(ox-extras-activate '(latex-header-blocks ignore-headlines))
" 0 17 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 17 61 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 23606) (undo-tree-id28 . -60) (undo-tree-id29 . -17) (undo-tree-id30 . -17) (undo-tree-id31 . -17) (undo-tree-id32 . -17) (undo-tree-id33 . -17) (undo-tree-id34 . -17) (undo-tree-id35 . -17) (undo-tree-id36 . -17) (undo-tree-id37 . -17) (undo-tree-id38 . -17) (undo-tree-id39 . -17) (undo-tree-id40 . -17) (undo-tree-id41 . -17) (undo-tree-id42 . -17) (undo-tree-id43 . -17) (undo-tree-id44 . -17) (undo-tree-id45 . -17) (undo-tree-id46 . -17) (undo-tree-id47 . -17) (undo-tree-id48 . -17) (undo-tree-id49 . -17) (undo-tree-id50 . -17) (undo-tree-id51 . -17) (undo-tree-id52 . -17) (undo-tree-id53 . -17) (undo-tree-id54 . -17) (undo-tree-id55 . -17) (undo-tree-id56 . -17) (undo-tree-id57 . -17) (undo-tree-id58 . -61) 23623 (t 25899 48547 251883 172000)) nil (25899 48768 985722 0) 0 nil])
([nil nil ((23606 . 23667) (t 25899 48552 783075 314000)) nil (25899 48768 985719 0) 0 nil])
([nil nil (23623) nil (25899 48768 985718 0) 0 nil])
([nil nil ((23606 . 23609)) nil (25899 48768 985718 0) 0 nil])
([nil nil ((#(";; " 0 3 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 23606) (t 25899 48555 80161 178000)) nil (25899 48768 985717 0) 0 nil])
([nil nil ((597 . 617)) nil (25899 48768 985716 0) 0 nil])
([nil nil ((#("(require 'ox-extra)
" 0 1 (face (org-block) font-lock-multiline t fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1 8 (face (font-lock-keyword-face org-block) font-lock-multiline t fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 8 10 (face (org-block) font-lock-multiline t fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 10 18 (face (font-lock-constant-face org-block) font-lock-multiline t fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 18 20 (face (org-block) font-lock-multiline t fontified t font-lock-fontified t src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 597) (undo-tree-id0 . 20) (undo-tree-id1 . -1) (undo-tree-id2 . 2) (undo-tree-id3 . -19) (undo-tree-id4 . -20) (undo-tree-id5 . -19)) nil (25899 48768 985715 0) 0 nil])
([nil nil ((597 . 617)) nil (25899 48768 985712 0) 0 nil])
([nil nil ((#("(require 'ox-extra)
" 0 1 (face (org-block) font-lock-multiline t fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1 8 (face (font-lock-keyword-face org-block) font-lock-multiline t fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 8 10 (face (org-block) font-lock-multiline t fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 10 18 (face (font-lock-constant-face org-block) font-lock-multiline t fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 18 20 (face (org-block) font-lock-multiline t fontified t font-lock-fontified t src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 597) (undo-tree-id6 . -19) (undo-tree-id7 . -20) (undo-tree-id8 . -20) (undo-tree-id9 . -20) (undo-tree-id10 . -20) (undo-tree-id11 . -20) (undo-tree-id12 . -20) (undo-tree-id13 . -20) (undo-tree-id14 . -20) (undo-tree-id15 . -20) (undo-tree-id16 . -20) (undo-tree-id17 . -20) (undo-tree-id18 . -20) (undo-tree-id19 . -20) (undo-tree-id20 . -20) (undo-tree-id21 . -20) (undo-tree-id22 . -20) (undo-tree-id23 . -20) (undo-tree-id24 . -20) (undo-tree-id25 . -20) (undo-tree-id26 . -20) (undo-tree-id27 . -20) (undo-tree-id28 . -20) (undo-tree-id29 . -20) (undo-tree-id30 . -20) (undo-tree-id31 . -20) (undo-tree-id32 . -20) (undo-tree-id33 . -20) (undo-tree-id34 . -20) (undo-tree-id35 . -20) (undo-tree-id36 . -20) (undo-tree-id37 . -20) (undo-tree-id38 . -20) (undo-tree-id39 . -20) (undo-tree-id40 . -20) (undo-tree-id41 . -20) (undo-tree-id42 . 20) (undo-tree-id43 . -1) (undo-tree-id44 . 2) (undo-tree-id45 . -19) (undo-tree-id46 . -20)) nil (25899 48783 277792 0) 0 nil])
([nil nil ((#("(require 'floatbuf)
" 0 1 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 1 8 (face (font-lock-keyword-face org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 8 10 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 10 18 (face (font-lock-constant-face org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 18 20 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) src-block t font-lock-fontified t fontified t)) . 577) (undo-tree-id47 . -19) (undo-tree-id48 . -20) (undo-tree-id49 . -20) (undo-tree-id50 . -20) (undo-tree-id51 . -20) (undo-tree-id52 . -20) (undo-tree-id53 . -20) (undo-tree-id54 . -20) (undo-tree-id55 . -20) (undo-tree-id56 . -20) (undo-tree-id57 . -20) (undo-tree-id58 . -20) (undo-tree-id59 . -20) (undo-tree-id60 . -20) (undo-tree-id61 . -20) (undo-tree-id62 . -20) (undo-tree-id63 . -20) (undo-tree-id64 . -20) (undo-tree-id65 . -20) (undo-tree-id66 . -20) (undo-tree-id67 . -20) (undo-tree-id68 . -20) (undo-tree-id69 . -20) (undo-tree-id70 . -20) (undo-tree-id71 . -20) (undo-tree-id72 . -20) (undo-tree-id73 . -20) (undo-tree-id74 . -20) (undo-tree-id75 . -20) (undo-tree-id76 . -20) (undo-tree-id77 . -20) (undo-tree-id78 . -20) (undo-tree-id79 . -20) (undo-tree-id80 . -20) (undo-tree-id81 . -20) (undo-tree-id82 . -20) (undo-tree-id83 . -20) (undo-tree-id84 . -20) (undo-tree-id85 . -20) (undo-tree-id86 . -20) (undo-tree-id87 . -20) (undo-tree-id88 . -20) (undo-tree-id89 . -20) (undo-tree-id90 . -20) (undo-tree-id91 . -20) (undo-tree-id92 . -20) (undo-tree-id93 . -20) (undo-tree-id94 . -20) (undo-tree-id95 . -20) (undo-tree-id96 . -20) (undo-tree-id97 . -20) (undo-tree-id98 . -20) (undo-tree-id99 . 20) (undo-tree-id100 . -1) (undo-tree-id101 . 2) (undo-tree-id102 . -19) (undo-tree-id103 . -20) (t 25899 48783 281936 166000)) nil (25899 48784 723271 0) 0 nil])
([nil nil ((#("(ox-extras-activate '(latex-header-blocks ignore-headlines))
" 0 61 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23586) (undo-tree-id105 . -60) (undo-tree-id106 . -27) (undo-tree-id107 . -27) (undo-tree-id108 . -27) (undo-tree-id109 . -27) (undo-tree-id110 . -27) (undo-tree-id111 . -27) (undo-tree-id112 . -27) (undo-tree-id113 . -12) (undo-tree-id114 . -12) (undo-tree-id115 . -12) (undo-tree-id116 . -12) (undo-tree-id117 . -12) (undo-tree-id118 . -12) (undo-tree-id119 . -12) (undo-tree-id120 . -12) (undo-tree-id121 . -12) (undo-tree-id122 . -12) (undo-tree-id123 . -12) (undo-tree-id124 . -12) (undo-tree-id125 . -12) (undo-tree-id126 . -12) (undo-tree-id127 . -12) (undo-tree-id128 . -12) (undo-tree-id129 . -12) (undo-tree-id130 . -12) (undo-tree-id131 . -61) 23598 (t 25899 48784 727639 509000)) nil (25899 48791 490966 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23586) (undo-tree-id104 . -1)) nil (25899 48791 490942 0) 0 nil])
([nil nil ((23666 . 23669) (23694 . 23696) (23698 . 23699) (23760 . 23762) (23768 . 23769) (23828 . 23831) (23898 . 23901) (23934 . 23937) (24139 . 24142) (24230 . 24233) (24262 . 24265) (24336 . 24339) (24378 . 24381) (24457 . 24460) (24491 . 24494) (24539 . 24542) (24577 . 24580) (24618 . 24621) (24659 . 24662) (24704 . 24707) (24745 . 24748) (24788 . 24791) (24814 . 24817) (24847 . 24850) (24884 . 24887) (24923 . 24926) (24959 . 24962) (24991 . 24994) (25025 . 25028) (25056 . 25059) (25092 . 25095) (25149 . 25152) (25202 . 25205) (25265 . 25268) (25322 . 25325) (25375 . 25378) (25407 . 25410) (25461 . 25464) (25506 . 25509) (25511 . 25514) (25554 . 25557) (25593 . 25596) (25600 . 25603) (25625 . 25628) (25653 . 25656) (25681 . 25684) (25698 . 25701) (25713 . 25716) (25752 . 25755) (25797 . 25800) (25848 . 25851) (25891 . 25894) (25943 . 25946) 23586 (t 25899 48791 495218 850000)) nil (25899 49000 314156 0) 0 nil])
([nil nil ((#(";; " 0 3 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23666) (#(";; " 0 2 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23697) (#(";;" 0 2 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23766) (#(" " 0 1 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23776) (#(";; " 0 3 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23837) (#(";; " 0 3 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23910) (undo-tree-id132 . 3) 23586 (t 25899 49000 333706 762000)) nil (25899 49029 49423 0) 0 nil])
([nil nil ((#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23934) 23586 (t 25899 49029 60199 934000)) nil (25899 49031 394870 0) 0 nil])
([nil nil ((#("(setq org-latex-logfiles-extensions
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 5 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 5 36 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23898) (undo-tree-id653 . -35) (undo-tree-id654 . 36) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) (undo-tree-id689 . -4) (undo-tree-id690 . -4) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -36) 23902 (t 25899 49031 406229 918000)) nil (25899 49050 352723 0) 0 nil])
([nil nil ((#("    (quote (\"lof\" \"lot\" \"tex~\" \"aux\" \"idx\" \"log\" \"out\" \"toc\" \"nav\" \"snm\" \"vrb\" \"dvi\" \"fdb_latexmk\" \"blg\" \"brf\" \"fls\" \"entoc\" \"ps\" \"spl\" \"bbl\" \"xmpi\" \"run.xml\" \"bcf\" \"acn\" \"acr\" \"alg\" \"glg\" \"gls\" \"ist\"))))
" 0 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 5 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 5 10 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 10 12 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 12 17 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 17 18 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 18 23 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 23 24 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 24 30 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 30 31 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 31 36 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 36 37 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 37 42 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 42 43 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 43 48 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 48 49 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 49 54 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 54 55 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 55 60 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 60 61 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 61 66 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 66 67 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 67 72 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 72 73 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 73 78 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 78 79 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 79 84 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 84 85 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 85 98 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 98 99 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 99 104 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 104 105 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 105 110 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 110 111 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 111 116 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 116 117 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 117 124 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 124 125 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 125 129 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 129 130 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 130 135 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 135 136 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 136 141 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 141 142 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 142 148 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 148 149 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 149 158 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 158 159 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 159 164 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 164 165 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 165 170 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 170 171 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 171 176 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 176 177 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 177 182 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 182 183 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 183 188 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 188 189 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 189 194 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 194 195 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 195 200 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 200 204 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 204 205 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23898) (undo-tree-id194 . -204) (undo-tree-id195 . -205) (undo-tree-id196 . 205) (undo-tree-id197 . -205) (undo-tree-id198 . -205) (undo-tree-id199 . -4) (undo-tree-id200 . -205) (undo-tree-id201 . -205) (undo-tree-id202 . -205) (undo-tree-id203 . -205) (undo-tree-id204 . -205) (undo-tree-id205 . -205) (undo-tree-id206 . -205) (undo-tree-id207 . -205) (undo-tree-id208 . -205) (undo-tree-id209 . -205) (undo-tree-id210 . -205) (undo-tree-id211 . -205) (undo-tree-id212 . -205) (undo-tree-id213 . -205) (undo-tree-id214 . -205) (undo-tree-id215 . -205) (undo-tree-id216 . -205) (undo-tree-id217 . -205) (undo-tree-id218 . -205) (undo-tree-id219 . -205) (undo-tree-id220 . -205) (undo-tree-id221 . -165) (undo-tree-id222 . -165) (undo-tree-id223 . -165) (undo-tree-id224 . -165) (undo-tree-id225 . -165) (undo-tree-id226 . -165) (undo-tree-id227 . -165) (undo-tree-id228 . -165) (undo-tree-id229 . -165) (undo-tree-id230 . -165) (undo-tree-id231 . -165) (undo-tree-id232 . -165) (undo-tree-id233 . -165) (undo-tree-id234 . -165) (undo-tree-id235 . -165) (undo-tree-id236 . -165) (undo-tree-id237 . -165) (undo-tree-id238 . -165) (undo-tree-id239 . -165) (undo-tree-id240 . -165) (undo-tree-id241 . -165) (undo-tree-id242 . -165) (undo-tree-id243 . -165) (undo-tree-id244 . -165) (undo-tree-id245 . -165) (undo-tree-id246 . -165) (undo-tree-id247 . -165) (undo-tree-id248 . -165) (undo-tree-id249 . -165) (undo-tree-id250 . -165) (undo-tree-id251 . -165) (undo-tree-id252 . -165) (undo-tree-id253 . -165) (undo-tree-id254 . -165) (undo-tree-id255 . -165) (undo-tree-id256 . -165) (undo-tree-id257 . -165) (undo-tree-id258 . -165) (undo-tree-id259 . -165) (undo-tree-id260 . -165) (undo-tree-id261 . -165) (undo-tree-id262 . -165) (undo-tree-id263 . -165) (undo-tree-id264 . -165) (undo-tree-id265 . -165) (undo-tree-id266 . -165) (undo-tree-id267 . -165) (undo-tree-id268 . -165) (undo-tree-id269 . -165) (undo-tree-id270 . -165) (undo-tree-id271 . -165) (undo-tree-id272 . -165) (undo-tree-id273 . -165) (undo-tree-id274 . -165) (undo-tree-id275 . -165) (undo-tree-id276 . -165) (undo-tree-id277 . -165) (undo-tree-id278 . -165) (undo-tree-id279 . -165) (undo-tree-id280 . -165) (undo-tree-id281 . -165) (undo-tree-id282 . -165) (undo-tree-id283 . -165) (undo-tree-id284 . -165) (undo-tree-id285 . -165) (undo-tree-id286 . -165) (undo-tree-id287 . -165) (undo-tree-id288 . -165) (undo-tree-id289 . -165) (undo-tree-id290 . -165) (undo-tree-id291 . -165) (undo-tree-id292 . -165) (undo-tree-id293 . -165) (undo-tree-id294 . -165) (undo-tree-id295 . -165) (undo-tree-id296 . -165) (undo-tree-id297 . -165) (undo-tree-id298 . -165) (undo-tree-id299 . -165) (undo-tree-id300 . -165) (undo-tree-id301 . -165) (undo-tree-id302 . -165) (undo-tree-id303 . -165) (undo-tree-id304 . -165) (undo-tree-id305 . -165) (undo-tree-id306 . -165) (undo-tree-id307 . -165) (undo-tree-id308 . -165) (undo-tree-id309 . -165) (undo-tree-id310 . -165) (undo-tree-id311 . -165) (undo-tree-id312 . -165) (undo-tree-id313 . -165) (undo-tree-id314 . -165) (undo-tree-id315 . -165) (undo-tree-id316 . -165) (undo-tree-id317 . -165) (undo-tree-id318 . -165) (undo-tree-id319 . -165) (undo-tree-id320 . -165) (undo-tree-id321 . -165) (undo-tree-id322 . -165) (undo-tree-id323 . -165) (undo-tree-id324 . -165) (undo-tree-id325 . -165) (undo-tree-id326 . -165) (undo-tree-id327 . -165) (undo-tree-id328 . -165) (undo-tree-id329 . -165) (undo-tree-id330 . -165) (undo-tree-id331 . -165) (undo-tree-id332 . -165) (undo-tree-id333 . -165) (undo-tree-id334 . -165) (undo-tree-id335 . -165) (undo-tree-id336 . -165) (undo-tree-id337 . -165) (undo-tree-id338 . -165) (undo-tree-id339 . -165) (undo-tree-id340 . -165) (undo-tree-id341 . -165) (undo-tree-id342 . -165) (undo-tree-id343 . -165) (undo-tree-id344 . -165) (undo-tree-id345 . -165) (undo-tree-id346 . -165) (undo-tree-id347 . -165) (undo-tree-id348 . -165) (undo-tree-id349 . -165) (undo-tree-id350 . -165) (undo-tree-id351 . -165) (undo-tree-id352 . -165) (undo-tree-id353 . -165) (undo-tree-id354 . -165) (undo-tree-id355 . -165) (undo-tree-id356 . -165) (undo-tree-id357 . -165) (undo-tree-id358 . -165) (undo-tree-id359 . -165) (undo-tree-id360 . -165) (undo-tree-id361 . -165) (undo-tree-id362 . -165) (undo-tree-id363 . -165) (undo-tree-id364 . -165) (undo-tree-id365 . -165) (undo-tree-id366 . -165) (undo-tree-id367 . -165) (undo-tree-id368 . -165) (undo-tree-id369 . -165) (undo-tree-id370 . -165) (undo-tree-id371 . -165) (undo-tree-id372 . -165) (undo-tree-id373 . -165) (undo-tree-id374 . -165) (undo-tree-id375 . -165) (undo-tree-id376 . -165) (undo-tree-id377 . -165) (undo-tree-id378 . -165) (undo-tree-id379 . -165) (undo-tree-id380 . -165) (undo-tree-id381 . -165) (undo-tree-id382 . -165) (undo-tree-id383 . -165) (undo-tree-id384 . -165) (undo-tree-id385 . -165) (undo-tree-id386 . -165) (undo-tree-id387 . -165) (undo-tree-id388 . -165) (undo-tree-id389 . -165) (undo-tree-id390 . -165) (undo-tree-id391 . -165) (undo-tree-id392 . -165) (undo-tree-id393 . -165) (undo-tree-id394 . -165) (undo-tree-id395 . -165) (undo-tree-id396 . -165) (undo-tree-id397 . -165) (undo-tree-id398 . -165) (undo-tree-id399 . -165) (undo-tree-id400 . -165) (undo-tree-id401 . -165) (undo-tree-id402 . -165) (undo-tree-id403 . -165) (undo-tree-id404 . -165) (undo-tree-id405 . -165) (undo-tree-id406 . -165) (undo-tree-id407 . -165) (undo-tree-id408 . -165) (undo-tree-id409 . -165) (undo-tree-id410 . -165) (undo-tree-id411 . -165) (undo-tree-id412 . -165) (undo-tree-id413 . -165) (undo-tree-id414 . -165) (undo-tree-id415 . -165) (undo-tree-id416 . -165) (undo-tree-id417 . -165) (undo-tree-id418 . -165) (undo-tree-id419 . -165) (undo-tree-id420 . -165) (undo-tree-id421 . -165) (undo-tree-id422 . -165) (undo-tree-id423 . -165) (undo-tree-id424 . -165) (undo-tree-id425 . -165) (undo-tree-id426 . -165) (undo-tree-id427 . -165) (undo-tree-id428 . -165) (undo-tree-id429 . -165) (undo-tree-id430 . -165) (undo-tree-id431 . -165) (undo-tree-id432 . -165) (undo-tree-id433 . -165) (undo-tree-id434 . -165) (undo-tree-id435 . -165) (undo-tree-id436 . -165) (undo-tree-id437 . -165) (undo-tree-id438 . -165) (undo-tree-id439 . -165) (undo-tree-id440 . -165) (undo-tree-id441 . -165) (undo-tree-id442 . -165) (undo-tree-id443 . -165) (undo-tree-id444 . -165) (undo-tree-id445 . -165) (undo-tree-id446 . -165) (undo-tree-id447 . -165) (undo-tree-id448 . -165) (undo-tree-id449 . -165) (undo-tree-id450 . -165) (undo-tree-id451 . -165) (undo-tree-id452 . -165) (undo-tree-id453 . -165) (undo-tree-id454 . -165) (undo-tree-id455 . -165) (undo-tree-id456 . -165) (undo-tree-id457 . -165) (undo-tree-id458 . -165) (undo-tree-id459 . -165) (undo-tree-id460 . -165) (undo-tree-id461 . -165) (undo-tree-id462 . -165) (undo-tree-id463 . -165) (undo-tree-id464 . -165) (undo-tree-id465 . -165) (undo-tree-id466 . -165) (undo-tree-id467 . -165) (undo-tree-id468 . -165) (undo-tree-id469 . -165) (undo-tree-id470 . -165) (undo-tree-id471 . -165) (undo-tree-id472 . -165) (undo-tree-id473 . -165) (undo-tree-id474 . -165) (undo-tree-id475 . -165) (undo-tree-id476 . -165) (undo-tree-id477 . -165) (undo-tree-id478 . -165) (undo-tree-id479 . -165) (undo-tree-id480 . -165) (undo-tree-id481 . -165) (undo-tree-id482 . -165) (undo-tree-id483 . -165) (undo-tree-id484 . -165) (undo-tree-id485 . -165) (undo-tree-id486 . -165) (undo-tree-id487 . -165) (undo-tree-id488 . -165) (undo-tree-id489 . -165) (undo-tree-id490 . -165) (undo-tree-id491 . -165) (undo-tree-id492 . -165) (undo-tree-id493 . -165) (undo-tree-id494 . -165) (undo-tree-id495 . -165) (undo-tree-id496 . -165) (undo-tree-id497 . -165) (undo-tree-id498 . -165) (undo-tree-id499 . -165) (undo-tree-id500 . -165) (undo-tree-id501 . -165) (undo-tree-id502 . -165) (undo-tree-id503 . -165) (undo-tree-id504 . -165) (undo-tree-id505 . -165) (undo-tree-id506 . -165) (undo-tree-id507 . -165) (undo-tree-id508 . -165) (undo-tree-id509 . -165) (undo-tree-id510 . -165) (undo-tree-id511 . -165) (undo-tree-id512 . -165) (undo-tree-id513 . -165) (undo-tree-id514 . -165) (undo-tree-id515 . -165) (undo-tree-id516 . -165) (undo-tree-id517 . -165) (undo-tree-id518 . -165) (undo-tree-id519 . -165) (undo-tree-id520 . -165) (undo-tree-id521 . -165) (undo-tree-id522 . -165) (undo-tree-id523 . -165) (undo-tree-id524 . -165) (undo-tree-id525 . -165) (undo-tree-id526 . -165) (undo-tree-id527 . -165) (undo-tree-id528 . -165) (undo-tree-id529 . -165) (undo-tree-id530 . -165) (undo-tree-id531 . -165) (undo-tree-id532 . -165) (undo-tree-id533 . -165) (undo-tree-id534 . -165) (undo-tree-id535 . -165) (undo-tree-id536 . -165) (undo-tree-id537 . -165) (undo-tree-id538 . -165) (undo-tree-id539 . -165) (undo-tree-id540 . -165) (undo-tree-id541 . -165) (undo-tree-id542 . -165) (undo-tree-id543 . -165) (undo-tree-id544 . -165) (undo-tree-id545 . -165) (undo-tree-id546 . -165) (undo-tree-id547 . -165) (undo-tree-id548 . -165) (undo-tree-id549 . -165) (undo-tree-id550 . -165) (undo-tree-id551 . -165) (undo-tree-id552 . -165) (undo-tree-id553 . -165) (undo-tree-id554 . -165) (undo-tree-id555 . -165) (undo-tree-id556 . -165) (undo-tree-id557 . -165) (undo-tree-id558 . -165) (undo-tree-id559 . -165) (undo-tree-id560 . -165) (undo-tree-id561 . -165) (undo-tree-id562 . -165) (undo-tree-id563 . -165) (undo-tree-id564 . -165) (undo-tree-id565 . -165) (undo-tree-id566 . -165) (undo-tree-id567 . -165) (undo-tree-id568 . -165) (undo-tree-id569 . -165) (undo-tree-id570 . -165) (undo-tree-id571 . -165) (undo-tree-id572 . -165) (undo-tree-id573 . -165) (undo-tree-id574 . -85) (undo-tree-id575 . -85) (undo-tree-id576 . -85) (undo-tree-id577 . -85) (undo-tree-id578 . -85) (undo-tree-id579 . -85) (undo-tree-id580 . -85) (undo-tree-id581 . -85) (undo-tree-id582 . -85) (undo-tree-id583 . -85) (undo-tree-id584 . -85) (undo-tree-id585 . -85) (undo-tree-id586 . -85) (undo-tree-id587 . -85) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) (undo-tree-id630 . -204) (undo-tree-id631 . -4) (undo-tree-id632 . -4) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . 201) (undo-tree-id641 . -5) (undo-tree-id642 . 4) (undo-tree-id643 . -202) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -205) 23902) nil (25899 49050 353132 0) 0 nil])
([nil nil ((#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23898) (undo-tree-id695 . 3) 23586 (t 25899 49050 928544 120000)) nil (25899 49074 379089 0) 0 nil] [nil nil ((#(";; (setq org-latex-with-hyperref nil) ;; stop org adding hypersetup{author..} to latex export
" 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 4 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 8 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 8 38 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 38 41 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 41 93 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 93 94 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23898) (undo-tree-id133 . -93) (undo-tree-id134 . 94) (undo-tree-id135 . -4) (undo-tree-id136 . -87) (undo-tree-id137 . -87) (undo-tree-id138 . -87) (undo-tree-id139 . -87) (undo-tree-id140 . -87) (undo-tree-id141 . -87) (undo-tree-id142 . -87) (undo-tree-id143 . -87) (undo-tree-id144 . -87) (undo-tree-id145 . -87) (undo-tree-id146 . -87) (undo-tree-id147 . -87) (undo-tree-id148 . -87) (undo-tree-id149 . -87) (undo-tree-id150 . -87) (undo-tree-id151 . -87) (undo-tree-id152 . -87) (undo-tree-id153 . -87) (undo-tree-id154 . -87) (undo-tree-id155 . -87) (undo-tree-id156 . -87) (undo-tree-id157 . -87) (undo-tree-id158 . -87) (undo-tree-id159 . -87) (undo-tree-id160 . -87) (undo-tree-id161 . -87) (undo-tree-id162 . -87) (undo-tree-id163 . -87) (undo-tree-id164 . -87) (undo-tree-id165 . -87) (undo-tree-id166 . -87) (undo-tree-id167 . -87) (undo-tree-id168 . -87) (undo-tree-id169 . -87) (undo-tree-id170 . -87) (undo-tree-id171 . -87) (undo-tree-id172 . -87) (undo-tree-id173 . -87) (undo-tree-id174 . -87) (undo-tree-id175 . -93) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -94) 23902) ((23898 . 23992)) (25899 49050 352330 0) 0 nil])
([nil nil ((#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23989) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24024) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24101) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24146) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24228) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24265) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24316) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24357) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24401) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24445) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24493) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24537) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24583) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24612) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24648) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24688) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24730) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24769) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24804) (#(";; " 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24841) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24875) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24914) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 24974) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25030) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25096) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25156) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25212) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25247) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25304) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25352) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25360) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25406) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25448) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25458) (#(";; " 0 2 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25486) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25517) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25548) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25568) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25586) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25628) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25676) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25730) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25776) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25831) 23586) nil (25899 49130 940463 0) 0 nil] [nil nil ((25930 . 25932) (25917 . 25919) (25860 . 25862) (25812 . 25814) (25756 . 25758) (25706 . 25708) (25662 . 25664) (25642 . 25644) (25620 . 25622) (25587 . 25589) (25554 . 25556) (25524 . 25526) (25512 . 25514) (25468 . 25470) (25420 . 25422) (25410 . 25412) (25360 . 25362) (25301 . 25303) (25264 . 25266) (25206 . 25208) (25144 . 25146) (25076 . 25078) (25018 . 25020) (24956 . 24958) (24915 . 24917) (24879 . 24881) (24840 . 24842) (24803 . 24805) (24762 . 24764) (24718 . 24720) (24676 . 24678) (24638 . 24640) (24607 . 24609) (24559 . 24561) (24513 . 24515) (24463 . 24465) (24417 . 24419) (24371 . 24373) (24328 . 24330) (24275 . 24277) (24236 . 24238) (24152 . 24154) (24105 . 24107) (24026 . 24028) (23989 . 23991) 25842 (t 25899 49053 315709 341000)) ((#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 23989) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24026) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24105) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24152) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24236) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24275) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24328) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24371) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24417) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24463) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24513) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24559) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24607) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24638) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24676) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24718) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24762) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24803) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24840) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24879) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24915) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 24956) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25018) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25076) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25144) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25206) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25264) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25301) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25360) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25410) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25420) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25468) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25512) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25524) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25554) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25587) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25620) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25642) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25662) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25706) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25756) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25812) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25860) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 25917) (#("# " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 25930) (undo-tree-id696 . 2) (t 25899 49073 820973 584000)) (25899 49073 815441 0) 0 nil])
nil
([nil nil ((#("(add-to-list 'org-latex-classes
	    '(\"altacv\" \"\\\\documentclass[10pt,a4paper,ragged2e,withhyper]{altacv}
		% Change the page layout if you need to
		\\\\geometry{left=1.25cm,right=1.25cm,top=1.5cm,bottom=1.5cm,columnsep=1.2cm}

		% Use roboto and lato for fonts
		\\\\renewcommand{\\\\familydefault}{\\\\sfdefault}

		% Change the colours if you want to
		\\\\definecolor{SlateGrey}{HTML}{2E2E2E}
		\\\\definecolor{LightGrey}{HTML}{666666}
		\\\\definecolor{DarkPastelRed}{HTML}{450808}
		\\\\definecolor{PastelRed}{HTML}{8F0D0D}
		\\\\definecolor{GoldenEarth}{HTML}{E7D192}
		\\\\colorlet{name}{black}
		\\\\colorlet{tagline}{PastelRed}
		\\\\colorlet{heading}{DarkPastelRed}
		\\\\colorlet{headingrule}{GoldenEarth}
		\\\\colorlet{subheading}{PastelRed}
		\\\\colorlet{accent}{PastelRed}
		\\\\colorlet{emphasis}{SlateGrey}
		\\\\colorlet{body}{LightGrey}

		% Change some fonts, if necessary
		\\\\renewcommand{\\\\namefont}{\\\\Huge\\\\rmfamily\\\\bfseries}
		\\\\renewcommand{\\\\personalinfofont}{\\\\footnotesize}
		\\\\renewcommand{\\\\cvsectionfont}{\\\\LARGE\\\\rmfamily\\\\bfseries}
		\\\\renewcommand{\\\\cvsubsectionfont}{\\\\large\\\\bfseries}

		% Change the bullets for itemize and rating marker
		% for \\cvskill if you want to
		\\\\renewcommand{\\\\itemmarker}{{\\\\small\\\\textbullet}}
		\\\\renewcommand{\\\\ratingmarker}{\\\\faCircle}
		\"

		(\"\\\\cvsection{%s}\" . \"\\\\cvsection*{%s}\")
		(\"\\\\cvevent{%s}\" . \"\\\\cvevent*{%s}\")
	    )
	    '(\"org-plain-latex\"
		\"\\\\documentclass{article}
		    [NO-DEFAULT-PACKAGES]
		    [PACKAGES]
		    [EXTRA]\"
		(\"\\\\section{%s}\" . \"\\\\section*{%s}\")
		(\"\\\\subsection{%s}\" . \"\\\\subsection*{%s}\")
		(\"\\\\subsubsection{%s}\" . \"\\\\subsubsection*{%s}\")
		(\"\\\\paragraph{%s}\" . \"\\\\paragraph*{%s}\")
	    (\"\\\\subparagraph{%s}\" . \"\\\\subparagraph*{%s}\")
	    ))
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 31 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 31 32 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 32 39 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 39 47 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 47 48 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 48 106 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 106 148 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 148 226 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 226 227 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 227 261 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 261 308 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 308 309 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 309 347 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 347 388 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 388 429 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 429 474 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 474 515 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 515 558 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 558 584 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 584 617 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 617 654 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 654 693 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 693 729 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 729 761 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 761 794 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 794 795 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 795 825 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 825 826 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 826 855 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 855 862 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 862 919 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 919 935 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 935 972 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 972 999 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 999 1025 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1025 1035 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1035 1074 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1074 1086 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1086 1091 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1091 1092 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1092 1145 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1145 1153 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1153 1154 (face (font-lock-warning-face font-lock-string-face org-block) font-lock-multiline t src-block t help-echo "This \\ has no effect" font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1154 1177 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1177 1231 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1231 1276 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1276 1279 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1279 1280 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1280 1281 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1281 1284 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1284 1301 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1301 1304 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1304 1312 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1312 1322 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1322 1324 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1324 1327 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1327 1342 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1342 1345 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1345 1361 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1361 1363 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1363 1370 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1370 1377 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1377 1394 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1394 1395 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1395 1397 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1397 1423 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1423 1426 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1426 1451 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1451 1468 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1468 1482 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1482 1483 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1483 1486 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1486 1501 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1501 1504 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1504 1520 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1520 1522 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1522 1525 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1525 1543 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1543 1546 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1546 1565 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1565 1567 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1567 1570 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1570 1591 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1591 1594 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1594 1616 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1616 1618 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1618 1621 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1621 1638 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1638 1641 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1641 1659 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1659 1661 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1661 1667 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1667 1687 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1687 1690 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1690 1711 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1711 1713 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1713 1720 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1720 1721 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23989) (undo-tree-id700 . -1720) (undo-tree-id701 . -1713) (undo-tree-id702 . -1713) (undo-tree-id703 . -1713) (undo-tree-id704 . -1091) (undo-tree-id705 . -1091) (undo-tree-id706 . -1091) (undo-tree-id707 . -1091) (undo-tree-id708 . -1091) (undo-tree-id709 . -1091) (undo-tree-id710 . -1091) (undo-tree-id711 . -1091) (undo-tree-id712 . -1091) (undo-tree-id713 . -1091) (undo-tree-id714 . -1091) (undo-tree-id715 . -1091) (undo-tree-id716 . -1091) (undo-tree-id717 . -1091) (undo-tree-id718 . -1091) (undo-tree-id719 . -1091) (undo-tree-id720 . -1091) (undo-tree-id721 . -1091) (undo-tree-id722 . -1091) (undo-tree-id723 . -1091) (undo-tree-id724 . -1091) (undo-tree-id725 . -1091) (undo-tree-id726 . -1091) (undo-tree-id727 . -1091) (undo-tree-id728 . -1091) (undo-tree-id729 . -1091) (undo-tree-id730 . -1091) (undo-tree-id731 . -1091) (undo-tree-id732 . -1091) (undo-tree-id733 . -1091) (undo-tree-id734 . -1091) (undo-tree-id735 . -148) (undo-tree-id736 . -148) (undo-tree-id737 . -148) (undo-tree-id738 . -148) (undo-tree-id739 . -148) (undo-tree-id740 . -148) (undo-tree-id741 . -148) (undo-tree-id742 . -148) (undo-tree-id743 . -148) (undo-tree-id744 . -148) (undo-tree-id745 . -148) (undo-tree-id746 . -148) (undo-tree-id747 . -148) (undo-tree-id748 . -148) (undo-tree-id749 . -148) (undo-tree-id750 . -106) (undo-tree-id751 . -106) (undo-tree-id752 . -106) (undo-tree-id753 . -106) (undo-tree-id754 . -106) (undo-tree-id755 . -106) (undo-tree-id756 . -106) (undo-tree-id757 . -32) (undo-tree-id758 . -32) (undo-tree-id759 . -32) (undo-tree-id760 . -32) (undo-tree-id761 . -32) (undo-tree-id762 . -32) (undo-tree-id763 . -32) (undo-tree-id764 . -1721) (undo-tree-id765 . -1713) (undo-tree-id766 . -1177) (undo-tree-id767 . -1177) (undo-tree-id768 . -1177) (undo-tree-id769 . -1177) (undo-tree-id770 . -1177) (undo-tree-id771 . -1177) (undo-tree-id772 . -1177) (undo-tree-id773 . -1177) (undo-tree-id774 . -1177) (undo-tree-id775 . -1177) (undo-tree-id776 . -1177) (undo-tree-id777 . -1177) (undo-tree-id778 . -1177) (undo-tree-id779 . -1177) (undo-tree-id780 . -1177) (undo-tree-id781 . -1177) (undo-tree-id782 . -1177) (undo-tree-id783 . -1177) (undo-tree-id784 . -1177) (undo-tree-id785 . -1177) (undo-tree-id786 . -1177) (undo-tree-id787 . -1177) (undo-tree-id788 . -1721) (undo-tree-id789 . -1721) (undo-tree-id790 . -1721) (undo-tree-id791 . -1721) (undo-tree-id792 . -1721) (undo-tree-id793 . -1721) (undo-tree-id794 . -1721) (undo-tree-id795 . -1713) (undo-tree-id796 . -1713) (undo-tree-id797 . -1713) (undo-tree-id798 . -1713) (undo-tree-id799 . -1713) (undo-tree-id800 . -1713) (undo-tree-id801 . -1713) (undo-tree-id802 . -1661) (undo-tree-id803 . -1661) (undo-tree-id804 . -1661) (undo-tree-id805 . -1661) (undo-tree-id806 . -1661) (undo-tree-id807 . -1661) (undo-tree-id808 . -1661) (undo-tree-id809 . -1618) (undo-tree-id810 . -1618) (undo-tree-id811 . -1618) (undo-tree-id812 . -1618) (undo-tree-id813 . -1618) (undo-tree-id814 . -1618) (undo-tree-id815 . -1618) (undo-tree-id816 . -1567) (undo-tree-id817 . -1567) (undo-tree-id818 . -1567) (undo-tree-id819 . -1567) (undo-tree-id820 . -1567) (undo-tree-id821 . -1567) (undo-tree-id822 . -1567) (undo-tree-id823 . -1618) (undo-tree-id824 . -1618) (undo-tree-id825 . -1618) (undo-tree-id826 . -1618) (undo-tree-id827 . -1618) (undo-tree-id828 . -1618) (undo-tree-id829 . -1618) (undo-tree-id830 . -1661) (undo-tree-id831 . -1661) (undo-tree-id832 . -1661) (undo-tree-id833 . -1661) (undo-tree-id834 . -1661) (undo-tree-id835 . -1661) (undo-tree-id836 . -1661) (undo-tree-id837 . -1713) (undo-tree-id838 . -1713) (undo-tree-id839 . -1713) (undo-tree-id840 . -1713) (undo-tree-id841 . -1713) (undo-tree-id842 . -1713) (undo-tree-id843 . -1713) (undo-tree-id844 . -1713) (undo-tree-id845 . -1721) 25702 (t 25899 49079 854525 972000)) nil (25899 49198 843657 0) 0 nil] [nil nil ((23989 . 23990) (#("(" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23989) (undo-tree-id697 . 1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (t 25899 49079 854525 972000)) ((23989 . 23990) (#("e" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 23989)) (25899 49130 939855 0) 0 nil])
nil
([nil nil ((10135 . 10136) (#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -10135) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 10136 (10135 . 10136) (#("RET" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 10135) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -2) (t 25899 49198 861151 433000)) nil (25900 11741 724352 0) 0 nil])
nil
([nil nil ((10201 . 10202) (#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 10201) (undo-tree-id2 . -1)) nil (25900 11741 724308 0) 0 nil])
([nil nil ((10201 . 10204) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . 10201) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) nil (25900 11741 724304 0) 0 nil])
([nil nil ((17106 . 17118) (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 17106) (17105 . 17107) 10386 (t 25900 11741 732632 22000)) nil (25900 11748 769130 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 16046 . 16047) (#("
" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -16823) (16044 . 16824) 16000 (t 25900 11748 778917 477000)) nil (25905 22567 248101 0) 0 nil])
([nil nil ((16045 . 16046) 16047) nil (25905 22567 248888 0) 0 nil])
([nil nil ((#("    \"w c\" '(evil-window-delete :wk \"Close window\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 31 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 31 34 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 34 35 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 35 49 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 49 51 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id39 . -50) (undo-tree-id40 . -51)) nil (25905 22570 617052 0) 0 nil] [nil nil ((#("    \"w\" '(:ignore t :wk \"Windows\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 7 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 7 10 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 10 17 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 17 20 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 20 23 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 23 24 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 24 33 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 33 35 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16067) (undo-tree-id0 . -34) (undo-tree-id1 . -35)) ((16067 . 16102)) (25905 22567 248098 0) 0 nil])
([nil nil ((#("    \"w n\" '(evil-window-new :wk \"New window\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 28 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 28 31 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 31 32 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 32 44 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 44 46 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id37 . -45) (undo-tree-id38 . -46)) nil (25905 22572 546507 0) 0 nil])
nil
([nil nil ((#("    \"w s\" '(evil-window-split :wk \"Horizontal split window\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 30 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 30 33 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 33 34 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 34 59 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 59 61 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id65 . -60) (undo-tree-id66 . -61)) nil (25905 22580 167249 0) 0 nil] [nil nil ((#("    \"w s\" '(evil-window-split :wk \"Horizontal split window\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 30 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 30 33 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 33 34 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 34 59 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 59 61 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id35 . -60) (undo-tree-id36 . -61)) ((16123 . 16184)) (25905 22572 468169 0) 0 nil])
([nil nil ((#("    \"w v\" '(evil-window-vsplit :wk \"Vertical split window\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 31 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 31 34 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 34 35 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 35 58 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 58 60 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id63 . -59) (undo-tree-id64 . -60)) nil (25905 22580 167247 0) 0 nil])
([nil nil ((#("    \"w v\" '(evil-window-vsplit :wk \"Vertical split window\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 31 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 31 34 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 34 35 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 35 58 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 58 60 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id33 . -59) (undo-tree-id34 . -60)) ((16123 . 16183)) (25905 22572 466358 0) 0 nil])
([nil nil ((#("    ;; Window motions
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 7 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 7 22 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id61 . -21) (undo-tree-id62 . -22)) nil (25905 22580 167245 0) 0 nil])
([nil nil ((#("    ;; Window motions
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 7 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 7 22 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id31 . -21) (undo-tree-id32 . -22)) ((16123 . 16145)) (25905 22572 297314 0) 0 nil])
([nil nil ((#("    \"w h\" '(evil-window-left :wk \"Window left\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 29 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 29 32 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 32 33 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 33 46 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 46 48 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id59 . -47) (undo-tree-id60 . -48)) nil (25905 22580 167242 0) 0 nil])
([nil nil ((#("    \"w h\" '(evil-window-left :wk \"Window left\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 29 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 29 32 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 32 33 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 33 46 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 46 48 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id29 . -47) (undo-tree-id30 . -48)) ((16123 . 16171)) (25905 22572 247064 0) 0 nil])
([nil nil ((#("    \"w j\" '(evil-window-down :wk \"Window down\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 29 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 29 32 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 32 33 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 33 46 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 46 48 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id57 . -47) (undo-tree-id58 . -48)) nil (25905 22580 167240 0) 0 nil])
([nil nil ((#("    \"w j\" '(evil-window-down :wk \"Window down\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 29 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 29 32 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 32 33 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 33 46 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 46 48 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id27 . -47) (undo-tree-id28 . -48)) ((16123 . 16171)) (25905 22572 196240 0) 0 nil])
([nil nil ((#("    \"w k\" '(evil-window-up :wk \"Window up\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 27 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 27 30 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 30 31 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 31 42 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 42 44 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id55 . -43) (undo-tree-id56 . -44)) nil (25905 22580 167238 0) 0 nil])
([nil nil ((#("    \"w k\" '(evil-window-up :wk \"Window up\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 27 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 27 30 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 30 31 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 31 42 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 42 44 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id25 . -43) (undo-tree-id26 . -44)) ((16123 . 16167)) (25905 22572 145934 0) 0 nil])
([nil nil ((#("    \"w l\" '(evil-window-right :wk \"Window right\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 30 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 30 33 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 33 34 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 34 48 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 48 50 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id53 . -49) (undo-tree-id54 . -50)) nil (25905 22580 167236 0) 0 nil])
([nil nil ((#("    \"w l\" '(evil-window-right :wk \"Window right\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 30 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 30 33 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 33 34 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 34 48 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 48 50 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id23 . -49) (undo-tree-id24 . -50)) ((16123 . 16173)) (25905 22572 94838 0) 0 nil])
([nil nil ((#("    \"w w\" '(evil-window-next :wk \"Goto next window\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 29 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 29 32 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 32 33 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 33 51 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 51 53 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id51 . -52) (undo-tree-id52 . -53)) nil (25905 22580 167233 0) 0 nil])
([nil nil ((#("    \"w w\" '(evil-window-next :wk \"Goto next window\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 29 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 29 32 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 32 33 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 33 51 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 51 53 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id21 . -52) (undo-tree-id22 . -53)) ((16123 . 16176)) (25905 22572 34050 0) 0 nil])
([nil nil ((#("    ;; Move Windows
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 7 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 7 20 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id49 . -19) (undo-tree-id50 . -20)) nil (25905 22580 167231 0) 0 nil])
([nil nil ((#("    ;; Move Windows
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 7 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 7 20 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id19 . -19) (undo-tree-id20 . -20)) ((16123 . 16143)) (25905 22571 782881 0) 0 nil])
([nil nil ((#("    \"w H\" '(buf-move-left :wk \"Buffer move left\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 26 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 26 29 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 29 30 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 30 48 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 48 50 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id47 . -49) (undo-tree-id48 . -50)) nil (25905 22580 167228 0) 0 nil])
([nil nil ((#("    \"w H\" '(buf-move-left :wk \"Buffer move left\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 26 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 26 29 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 29 30 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 30 48 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 48 50 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id17 . -49) (undo-tree-id18 . -50)) ((16123 . 16173)) (25905 22571 605159 0) 0 nil])
([nil nil ((#("    \"w J\" '(buf-move-down :wk \"Buffer move down\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 26 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 26 29 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 29 30 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 30 48 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 48 50 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id45 . -49) (undo-tree-id46 . -50)) nil (25905 22580 167226 0) 0 nil])
([nil nil ((#("    \"w J\" '(buf-move-down :wk \"Buffer move down\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 26 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 26 29 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 29 30 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 30 48 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 48 50 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id15 . -49) (undo-tree-id16 . -50)) ((16123 . 16173)) (25905 22571 333270 0) 0 nil])
([nil nil ((#("    \"w K\" '(buf-move-up :wk \"Buffer move up\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 24 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 24 27 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 27 28 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 28 44 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 44 46 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id43 . -45) (undo-tree-id44 . -46)) nil (25905 22580 167223 0) 0 nil])
([nil nil ((#("    \"w K\" '(buf-move-up :wk \"Buffer move up\")
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 24 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 24 27 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 27 28 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 28 44 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 44 46 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16123) (undo-tree-id13 . -45) (undo-tree-id14 . -46)) ((16123 . 16169)) (25905 22571 165298 0) 0 nil])
([nil nil ((16072 . 16073) (#("w" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16072) (undo-tree-id42 . -1)) nil (25905 22580 167220 0) 0 nil])
([nil nil ((#("    \"w L\" '(buf-move-right :wk \"Buffer move right\"))
" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 4 9 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 27 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 27 30 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 30 31 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 31 50 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 50 52 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 52 53 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16123) (undo-tree-id11 . -52) (undo-tree-id12 . -53)) ((16123 . 16176)) (25905 22570 975134 0) 0 nil])
([nil nil ((16128 . 16129) (#("w" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16128) (undo-tree-id41 . -1)) nil (25905 22580 167216 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16123) (undo-tree-id9 . -1) (undo-tree-id10 . -1)) ((16123 . 16124)) (25905 22570 817226 0) 0 nil])
([nil nil ((16130 . 16131) (#("e" 0 1 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16130) (undo-tree-id67 . -1) (16130 . 16131) (#("L" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16130) (undo-tree-id68 . -1) (t 25905 22580 177216 96000)) nil (25905 22590 983998 0) 0 nil])
([nil nil ((#("  (flour/leader-keys
" 0 3 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 20 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 20 21 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16123) (undo-tree-id6 . -4) (undo-tree-id7 . -20) (undo-tree-id8 . -21)) ((16123 . 16144)) (25905 22570 676657 0) 0 nil])
([nil nil ((#("buf" 0 3 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16135) (undo-tree-id72 . -2) (t 25905 22590 993771 73000)) nil (25905 22609 260884 0) 0 nil])
([nil nil ((#("    \"w\" '(:ignore t :wk \"Windows\")
" 0 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 7 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 7 10 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 10 17 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 17 20 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 20 23 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 23 24 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 24 33 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 33 35 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16123) (undo-tree-id4 . -34) (undo-tree-id5 . -35)) ((16123 . 16158)) (25905 22570 617748 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16135)) nil (25905 22609 260883 0) 0 nil])
([nil nil ((#("    ;; Window splits
" 0 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 7 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 7 21 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16123) (undo-tree-id2 . -20) (undo-tree-id3 . -21)) ((16123 . 16144)) (25905 22570 617008 0) 0 nil])
([nil nil ((#("move" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16135) (undo-tree-id71 . -3)) nil (25905 22609 260882 0) 0 nil])
nil
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16135) (undo-tree-id70 . -1)) nil (25905 22609 260881 0) 0 nil])
([nil nil ((16135 . 16143) (#("right" 0 5 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16135) (undo-tree-id69 . -4)) nil (25905 22609 260879 0) 0 nil])
([nil nil ((16143 . 16154) (16149 . 16160) (#("Buf" 0 3 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16149) (#(" mov" 0 4 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16155) (16160 . 16164) (#(" right" 0 6 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16160) 9503) nil (25905 22609 260869 0) 0 nil])
([nil nil ((16181 . 16186) 9503 (t 25905 22609 268934 733000)) nil (25905 22611 931919 0) 0 nil])
([nil nil ((16186 . 16245) 9503 (t 25905 22611 941679 321000)) nil (25905 22617 419319 0) 0 nil])
([nil nil ((16245 . 16304) 9503 (t 25905 22617 427627 168000)) nil (25905 22624 139462 0) 0 nil])
([nil nil ((16264 . 16269) (#("fini" 0 4 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16264) 9503 (t 25905 22624 149437 360000)) nil (25905 22630 535934 0) 0 nil])
([nil nil ((16228 . 16229) (#("r" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16228) (16231 . 16232) (#("ere" 0 3 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16231) (16235 . 16241) (#("ces" 0 3 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16235) (16288 . 16289) (#("ref" 0 3 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16288) (16292 . 16295) (16293 . 16297) (#("e" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16293) (#("ces" 0 3 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16295) 9503 (t 25905 22630 543992 582000)) nil (25905 22639 622544 0) 0 nil])
([nil nil ((29264 . 29265) (29264 . 29265) 29267 (t 25905 22639 632213 88000)) nil (25906 31417 626166 0) 0 nil])
([nil nil ((29281 . 29291) (29268 . 29281) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -29268) (undo-tree-id50 . -1) 29269 (29265 . 29269) (#("d" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -29265) (undo-tree-id51 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -29266) (undo-tree-id52 . -1) 29267 (29265 . 29267) (29264 . 29266) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line)) . -29264) (29264 . 29265)) nil (25906 31417 626165 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 29292 . 29293) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -29321) (29292 . 29322) 29291) nil (25906 31417 626160 0) 0 nil])
([nil nil ((29306 . 29307) (#("+" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -29306) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#(" " 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -29307) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("f" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -29308) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (#("s" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -29309) (undo-tree-id49 . -1) 29310 (29305 . 29310)) nil (25906 31417 626153 0) 0 nil])
([nil nil ((#(" " 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -29323) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("f" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -29324) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("s" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -29325) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) 29326 (29323 . 29326) (#(" " 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -29323) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (#("F" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -29324) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (#("S" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -29325) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) 29326 (29323 . 29326) (t 25906 31417 637541 964000)) nil (25906 31423 107621 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 23702 . 23703) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -23744) (23702 . 23745) 23661 (t 25906 31423 119411 77000)) nil (25909 5112 894001 0) 0 nil])
([nil nil ((#("org" 0 3 (help-echo nil face (org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 23709) (undo-tree-id10 . -2) (undo-tree-id11 . -3)) nil (25909 5112 894000 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 23709) (undo-tree-id9 . -1)) nil (25909 5112 893998 0) 0 nil])
([nil nil ((#("edit" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 23709) (undo-tree-id7 . -3) (undo-tree-id8 . -4)) nil (25909 5112 893996 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 23709) (undo-tree-id6 . -1)) nil (25909 5112 893995 0) 0 nil])
([nil nil ((#("src" 0 3 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 23709) (undo-tree-id4 . -2) (undo-tree-id5 . -3)) nil (25909 5112 893993 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 23709) (undo-tree-id3 . -1)) nil (25909 5112 893991 0) 0 nil])
([nil nil ((#("content" 0 7 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 23709) (undo-tree-id1 . -6) (undo-tree-id2 . -7)) nil (25909 5112 893989 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 23709)) nil (25909 5112 893987 0) 0 nil])
([nil nil ((23709 . 23713) (#("indentation" 0 11 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 23709) (undo-tree-id0 . -10)) nil (25909 5112 893986 0) 0 nil])
([nil nil ((23713 . 23724) (23714 . 23754) (#("0" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 23714) 22071) nil (25909 5112 893959 0) 0 nil])
([nil nil ((1366 . 1367) (1356 . 1366) (1344 . 1367) (#("<s" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -1344) (undo-tree-id1 . -2) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) 1346 (1344 . 1346) (1343 . 1344) (1327 . 1343) (1322 . 1327) (t 25909 5112 903176 157000)) nil (25909 10477 860234 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1587 . 1588) (nil fontified nil 1573 . 1588) (nil fontified nil 1565 . 1573) (nil fontified nil 1490 . 1565) (nil fontified nil 1480 . 1490) (nil fontified nil 1400 . 1480) (nil fontified nil 1392 . 1400) (nil fontified nil 1367 . 1392) (1367 . 1588)) nil (25909 10477 860210 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 1589) (undo-tree-id0 . -1)) nil (25909 10477 860204 0) 0 nil])
([nil nil ((#("  (\"C-x C-b\" . persp-list-buffers)         ; or use a nicer switcher, see below
" 0 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 12 43 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 43 45 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 45 80 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 1400) (undo-tree-id107 . -79) (undo-tree-id108 . -10) (undo-tree-id109 . -10) (undo-tree-id110 . -4) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -5) (undo-tree-id151 . -5) (undo-tree-id152 . -5) (undo-tree-id153 . -5) (undo-tree-id154 . -5) (undo-tree-id155 . -5) (undo-tree-id156 . -5) (undo-tree-id157 . -5) (undo-tree-id158 . -5) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -80) 1404 (t 25909 10477 871592 670000)) nil (25909 10519 265708 0) 0 nil])
([nil nil ((#("  :bind
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 7 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 7 8 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1392) (undo-tree-id28 . -7) (undo-tree-id29 . -8) (undo-tree-id30 . -8) (undo-tree-id31 . -4) (undo-tree-id32 . -8) (undo-tree-id33 . -8) (undo-tree-id34 . -8) (undo-tree-id35 . -8) (undo-tree-id36 . -8) (undo-tree-id37 . -8) (undo-tree-id38 . -8) (undo-tree-id39 . -8) (undo-tree-id40 . -8) (undo-tree-id41 . -8) (undo-tree-id42 . -8) (undo-tree-id43 . -8) (undo-tree-id44 . -8) (undo-tree-id45 . -8) (undo-tree-id46 . -8) (undo-tree-id47 . -8) (undo-tree-id48 . -8) (undo-tree-id49 . -8) (undo-tree-id50 . -8) (undo-tree-id51 . -8) (undo-tree-id52 . -8) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -8) (undo-tree-id56 . -8) (undo-tree-id57 . -8) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (undo-tree-id61 . -8) (undo-tree-id62 . -8) (undo-tree-id63 . -8) (undo-tree-id64 . -8) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (undo-tree-id70 . -8) (undo-tree-id71 . -8) (undo-tree-id72 . -8) (undo-tree-id73 . -8) (undo-tree-id74 . -8) (undo-tree-id75 . -8) (undo-tree-id76 . -8) (undo-tree-id77 . -8) (undo-tree-id78 . -8) (undo-tree-id79 . -8) (undo-tree-id80 . -8) (undo-tree-id81 . -8) (undo-tree-id82 . -8) (undo-tree-id83 . -8) (undo-tree-id84 . -8) (undo-tree-id85 . -8) (undo-tree-id86 . -8) (undo-tree-id87 . -8) (undo-tree-id88 . -8) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -8) 1396) nil (25909 10519 265653 0) 0 nil])
([nil nil ((#("C" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 1433) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (t 25909 10519 277150 452000)) nil (25909 10542 642997 0) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 1433) (undo-tree-id180 . -1) (undo-tree-id181 . -1)) nil (25909 10542 642994 0) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 1433) (undo-tree-id178 . -1) (undo-tree-id179 . -1)) nil (25909 10542 642992 0) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 1433) (undo-tree-id176 . -1) (undo-tree-id177 . -1)) nil (25909 10542 642990 0) 0 nil])
([nil nil ((#("M" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 1433) (undo-tree-id174 . -1) (undo-tree-id175 . -1)) nil (25909 10542 642988 0) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 1433) (undo-tree-id172 . -1) (undo-tree-id173 . -1)) nil (25909 10542 642986 0) 0 nil])
([nil nil ((#("p" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 1433) (undo-tree-id170 . -1) (undo-tree-id171 . -1)) nil (25909 10740 728507 0) 0 nil])
([nil nil ((1433 . 1440)) ((#("SPC TAB" 0 7 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t font-lock-multiline t face (font-lock-string-face org-block))) . 1433)) (25909 10741 878596 0) 0 nil])
([nil nil ((#("  (persp-mode-prefix-key (kbd \"SPC TAB\"))  ; pick your own prefix key here
" 0 30 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t font-lock-multiline t face (org-block)) 30 31 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 31 38 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 38 39 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t font-lock-multiline t face (font-lock-string-face org-block)) 39 43 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t font-lock-multiline t face (org-block)) 43 45 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 45 75 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t font-lock-multiline t face (font-lock-comment-face org-block))) . 1402) (undo-tree-id110 . -31) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -31) (undo-tree-id121 . -31) (undo-tree-id122 . -31) (undo-tree-id123 . -31) (undo-tree-id124 . -31) (undo-tree-id125 . -31) (undo-tree-id126 . -31) (undo-tree-id127 . -31) (undo-tree-id128 . -31) (undo-tree-id129 . -31) (undo-tree-id130 . -31) (undo-tree-id131 . -31) (undo-tree-id132 . -31) (undo-tree-id133 . -31) (undo-tree-id134 . -31) (undo-tree-id135 . -31) (undo-tree-id136 . -31) (undo-tree-id137 . -31) (undo-tree-id138 . -31) (undo-tree-id139 . -31) (undo-tree-id140 . -31) (undo-tree-id141 . -31) (undo-tree-id142 . -31) (undo-tree-id143 . -31) (undo-tree-id144 . -31) (undo-tree-id145 . -31) (undo-tree-id146 . -31) (undo-tree-id147 . -31) (undo-tree-id148 . -31) (undo-tree-id149 . -31) (undo-tree-id150 . -31) (undo-tree-id151 . -31) (undo-tree-id152 . -31) (undo-tree-id153 . -31) (undo-tree-id154 . -31)) ((1402 . 1477)) (25909 10744 395030 0) 0 nil])
([nil nil ((#("  :custom
" 0 2 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t font-lock-multiline t face (org-block)) 2 9 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 10 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t font-lock-multiline t face (org-block))) . 1392) (undo-tree-id155 . -10) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -10) (undo-tree-id167 . -10) (undo-tree-id168 . -10) (undo-tree-id169 . -10) (undo-tree-id170 . -10) (undo-tree-id171 . -10) (undo-tree-id172 . -10) (undo-tree-id173 . -10) (undo-tree-id174 . -10) (undo-tree-id175 . -10) (undo-tree-id176 . -10) (undo-tree-id177 . -10) (undo-tree-id178 . -10) (undo-tree-id179 . -10) (undo-tree-id180 . -10) (undo-tree-id181 . -10) (undo-tree-id182 . -10) (undo-tree-id183 . -10) (undo-tree-id184 . -10) (undo-tree-id185 . -10) (undo-tree-id186 . -10) (undo-tree-id187 . -10) (undo-tree-id188 . -10) (undo-tree-id189 . -10) (undo-tree-id190 . -10) (undo-tree-id191 . -10) (undo-tree-id192 . -10) (undo-tree-id193 . -10) (undo-tree-id194 . -10) (undo-tree-id195 . -10) (undo-tree-id196 . -10) (undo-tree-id197 . -10) (undo-tree-id198 . -10) (undo-tree-id199 . -10) (undo-tree-id200 . -10) (undo-tree-id201 . -10) (undo-tree-id202 . -10) (undo-tree-id203 . -10) (undo-tree-id204 . -10) (undo-tree-id205 . -10) (undo-tree-id206 . -10) (undo-tree-id207 . -10) (undo-tree-id208 . -10) (undo-tree-id209 . -10) (undo-tree-id210 . -10) (undo-tree-id211 . -10) (undo-tree-id212 . -10) (undo-tree-id213 . -10) (undo-tree-id214 . -10) (undo-tree-id215 . -10) (undo-tree-id216 . -10) (undo-tree-id217 . -10)) ((1392 . 1402)) (25909 10744 611670 0) 0 nil])
([nil nil ((#("TAB " 0 4 (src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-multiline t face (font-lock-string-face org-block))) . 11083)) ((11083 . 11087)) (25909 10744 813153 0) 0 nil])
([nil nil ((#("TAB" 0 3 (src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-multiline t face (font-lock-string-face org-block))) . 11083)) ((11083 . 11086)) (25909 10745 14404 0) 0 nil])
([nil nil ((11083 . 11085) (#("/" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11083) (11083 . 11084) (#(" " 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11083) (11083 . 11084) (#("/" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11083) (11083 . 11084)) ((#("/" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11083) (11083 . 11084) (#(" " 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11083) (11083 . 11084) (#("/" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11083) (11083 . 11084) (#("//" 0 1 (src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-multiline t face (font-lock-string-face org-block)) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 11083)) (25909 10745 223727 0) 0 nil])
([nil nil ((#("/" 0 1 (src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-multiline t face (font-lock-string-face org-block))) . 11083)) ((11083 . 11084)) (25909 10745 436457 0) 0 nil])
([nil nil ((11124 . 11125)) ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 11124)) (25909 10745 639360 0) 0 nil] [nil nil ((11082 . 11085) 9606 (t 25909 10624 819669 974000)) ((#(";; " 0 3 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11082)) (25909 10628 414783 0) 0 nil])
([nil nil ((11124 . 11155)) ((#("  (flour/leader-keys
    \"TAB\")" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3 20 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 20 21 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 21 25 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 25 30 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 30 31 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 11124)) (25909 10745 869671 0) 0 nil])
nil
([nil nil ((11126 . 11129) (11146 . 11149)) ((#(" ;;" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 11146) (#(";; " 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 11126) (t 25909 10664 971176 321000)) (25909 10746 207969 0) 0 nil])
([nil nil ((1404 . 1406) (#("(" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block))) . 1404) (1392 . 1405) (#(":" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block))) . 1392) (undo-tree-id218 . -1) (1392 . 1393) (1392 . 1393) (t 25909 10664 971176 321000)) ((#("
" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 1392) (undo-tree-id49 . 1) (#(":" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (org-block))) . 1392) (undo-tree-id51 . -1) (undo-tree-id53 . -1) (undo-tree-id55 . -1) (undo-tree-id57 . -1) (undo-tree-id59 . -1) (undo-tree-id61 . -1) (undo-tree-id63 . -1) (undo-tree-id65 . -1) (undo-tree-id67 . -1) (undo-tree-id69 . -1) (undo-tree-id71 . -1) (undo-tree-id73 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id79 . -1) (undo-tree-id81 . -1) (undo-tree-id83 . -1) (undo-tree-id85 . -1) (undo-tree-id87 . -1) (undo-tree-id89 . -1) (undo-tree-id91 . -1) (undo-tree-id93 . -1) (undo-tree-id95 . -1) (1392 . 1393) (#("  :custom" 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 2 9 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (font-lock-builtin-face org-block))) . 1392) (undo-tree-id96 . -9) (undo-tree-id98 . -9) (#("
" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block))) . 1401) (undo-tree-id100 . -1) (undo-tree-id102 . -1) (#("  (" 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 2 3 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block))) . 1402) (undo-tree-id104 . -2) (undo-tree-id106 . -3) (1404 . 1405) (#("()" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 1404) (undo-tree-id108 . 1)) (25909 10746 454102 0) 0 nil])
([nil nil ((1405 . 1409)) nil (25909 10784 848948 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1405) (undo-tree-id219 . -1) (#("e" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1406) (undo-tree-id220 . -1) (#("r" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1407) (undo-tree-id221 . -1) (#("s" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -1408) (undo-tree-id222 . -1) 1409) nil (25909 10784 848947 0) 0 nil])
([nil nil ((1405 . 1443) 1367) nil (25909 10784 848937 0) 0 nil])
([nil nil ((1450 . 1451) (#("i" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (font-lock-builtin-face org-block))) . -1450) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("j" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (font-lock-builtin-face org-block))) . -1451) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (#("k" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (font-lock-builtin-face org-block))) . -1452) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) 1453 (1451 . 1453) (t 25909 10784 858478 109000)) nil (25909 10792 593515 0) 0 nil])
([nil nil ((#(";; " 0 3 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11179) (#(" ;;" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 3 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11202) 9659 (t 25909 10792 605050 381000)) nil (25909 10948 354179 0) 0 nil])
([nil nil ((11239 . 11240) (11225 . 11237) (11224 . 11226) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -11224) (11223 . 11225) (11218 . 11223) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11218) (undo-tree-id0 . -1) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11219) (undo-tree-id1 . -1) 11220 (11212 . 11220) (#("s" 0 1 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11212) (undo-tree-id2 . -1) 11213 (11210 . 11213) (11209 . 11211) (#("(" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -11209) (11207 . 11210) (#(" " 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11206) (undo-tree-id3 . -1) 11207 (11206 . 11207)) nil (25909 10948 354177 0) 0 nil])
([nil nil ((11240 . 11255) 9659) nil (25909 10948 354151 0) 0 nil])
([nil nil ((11249 . 11250) (#("s" 0 1 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11249) 9659 (t 25909 10948 366997 963000)) nil (25909 10954 13281 0) 0 nil])
([nil nil ((11254 . 11297) 9659 (t 25909 10954 22898 781000)) nil (25909 10975 191173 0) 0 nil])
([nil nil ((11249 . 11250) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11249) 9659 (t 25909 10975 200913 716000)) nil (25909 10981 824243 0) 0 nil])
([nil nil ((11298 . 11356) 9659 (t 25909 10981 835849 137000)) nil (25909 11024 786037 0) 0 nil])
([nil nil ((18903 . 18950) (18904 . 18911) (18976 . 18996) 18287 (t 25909 11024 797566 368000)) nil (25909 11369 927030 0) 0 nil])
([nil nil ((#("
  :config
  (setq )" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 3 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 3 10 (src-block t help-echo nil face (font-lock-builtin-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 10 11 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 11 14 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 14 18 (src-block t help-echo nil face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 18 19 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 19 20 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 19031) 18287 (t 25909 11369 938851 851000)) nil (25909 11411 502126 0) 0 nil])
([nil nil ((#("(use-package ivy-rich
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 21 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 21 22 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 18890) (undo-tree-id146 . -21) (undo-tree-id147 . -20) (undo-tree-id148 . -21) (undo-tree-id149 . -20) (undo-tree-id150 . -20) (undo-tree-id151 . -20) (undo-tree-id152 . -20) (undo-tree-id153 . -20) (undo-tree-id154 . -20) (undo-tree-id155 . -20) (undo-tree-id156 . -20) (undo-tree-id157 . -20) (undo-tree-id158 . -20) (undo-tree-id159 . -20) (undo-tree-id160 . -20) (undo-tree-id161 . -20) (undo-tree-id162 . -20) (undo-tree-id163 . -20) (undo-tree-id164 . -20) (undo-tree-id165 . -20) (undo-tree-id166 . -22) 18910) nil (25909 11413 829371 0) 0 nil] [nil nil ((#("(use-package all-the-icons-ivy-rich
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 13 35 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil src-block t) 35 36 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 18944) (undo-tree-id29 . -20) (undo-tree-id30 . -20) (undo-tree-id31 . -20) (undo-tree-id32 . -20) (undo-tree-id33 . -20) (undo-tree-id34 . -20) (undo-tree-id35 . -20) (undo-tree-id36 . -20) (undo-tree-id37 . -20) (undo-tree-id38 . -20) (undo-tree-id39 . -20) (undo-tree-id40 . -20) (undo-tree-id41 . -20) (undo-tree-id42 . -20) (undo-tree-id43 . -20) (undo-tree-id44 . -20) (undo-tree-id45 . -20) (undo-tree-id46 . -20) (undo-tree-id47 . -36) (undo-tree-id48 . -35) 18964 (t 25909 11375 940921 767000)) ((18944 . 18980)) (25909 11411 4207 0) 0 nil])
([nil nil ((#("  :config
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 10 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 18890) (undo-tree-id118 . -8) (undo-tree-id119 . -9) (undo-tree-id120 . -8) (undo-tree-id121 . -8) (undo-tree-id122 . -8) (undo-tree-id123 . -8) (undo-tree-id124 . -8) (undo-tree-id125 . -8) (undo-tree-id126 . -8) (undo-tree-id127 . -8) (undo-tree-id128 . -8) (undo-tree-id129 . -8) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . -9) (undo-tree-id135 . -8) (undo-tree-id136 . -8) (undo-tree-id137 . -8) (undo-tree-id138 . -8) (undo-tree-id139 . -8) (undo-tree-id140 . -8) (undo-tree-id141 . -8) (undo-tree-id142 . -8) (undo-tree-id143 . -8) (undo-tree-id144 . -8) (undo-tree-id145 . -10) 18898) nil (25909 11413 829353 0) 0 nil])
([nil nil ((#("  :demand t
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 11 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 18944) (undo-tree-id15 . -10) (undo-tree-id16 . -11) (undo-tree-id17 . -11) (undo-tree-id18 . -10) (undo-tree-id19 . -10) (undo-tree-id20 . -10) (undo-tree-id21 . -10) (undo-tree-id22 . -10) (undo-tree-id23 . -10) (undo-tree-id24 . -10) (undo-tree-id25 . -10) (undo-tree-id26 . -10) (undo-tree-id27 . -10) (undo-tree-id28 . -12) 18954) ((18944 . 18956)) (25909 11410 818332 0) 0 nil])
([nil nil ((#("  (ivy-rich-mode 1))
" 0 20 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 20 21 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 18890) (undo-tree-id83 . -8) (undo-tree-id84 . -20) (undo-tree-id85 . -21) (undo-tree-id86 . -21) (undo-tree-id87 . -21) (undo-tree-id88 . -21) (undo-tree-id89 . -21) (undo-tree-id90 . -21) (undo-tree-id91 . -21) (undo-tree-id92 . -19) (undo-tree-id93 . -19) (undo-tree-id94 . -19) (undo-tree-id95 . -19) (undo-tree-id96 . -19) (undo-tree-id97 . -19) (undo-tree-id98 . -19) (undo-tree-id99 . -19) (undo-tree-id100 . -19) (undo-tree-id101 . -19) (undo-tree-id102 . -19) (undo-tree-id103 . -19) (undo-tree-id104 . -19) (undo-tree-id105 . -19) (undo-tree-id106 . -20) (undo-tree-id107 . -8) (undo-tree-id108 . -8) (undo-tree-id109 . -8) (undo-tree-id110 . -8) (undo-tree-id111 . -8) (undo-tree-id112 . -8) (undo-tree-id113 . -8) (undo-tree-id114 . -8) (undo-tree-id115 . -8) (undo-tree-id116 . -8) (undo-tree-id117 . -21) 18898) nil (25909 11413 829327 0) 0 nil])
([nil nil ((#("  :init (all-the-icons-ivy-rich-mode 1))
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 7 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 7 40 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 40 41 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 18944) (undo-tree-id1 . -10) (undo-tree-id2 . -40) (undo-tree-id3 . -40) (undo-tree-id4 . -10) (undo-tree-id5 . -10) (undo-tree-id6 . -10) (undo-tree-id7 . -10) (undo-tree-id8 . -10) (undo-tree-id9 . -10) (undo-tree-id10 . -10) (undo-tree-id11 . -10) (undo-tree-id12 . -10) (undo-tree-id13 . -10) (undo-tree-id14 . -41) 18954) ((18944 . 18985)) (25909 11410 630996 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 18890) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1)) nil (25909 11413 829293 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 18944) (undo-tree-id0 . -1)) ((18944 . 18945) (t 25909 11409 991623 193000)) (25909 11409 978806 0) 0 nil])
([nil nil ((19212 . 19213) (t 25909 11413 841812 18000)) nil (25909 11426 348666 0) 0 nil])
nil
([nil nil ((19216 . 19219) (19226 . 19229) (19274 . 19275) (19275 . 19277) 18287) nil (25909 11426 348662 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11355 . 11356) (#("
" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -11404) (11351 . 11405) 11304 (t 25909 11426 361209 598000)) nil (25909 11528 915242 0) 0 nil])
([nil nil ((11361 . 11362) (#("l" 0 1 (help-echo nil face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11361)) nil (25909 11528 915241 0) 0 nil])
([nil nil ((#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . -11388) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 11389 (11384 . 11389) (#("Switch" 0 6 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11384) (undo-tree-id16 . -5) (undo-tree-id17 . -6) (undo-tree-id18 . -6)) nil (25909 11528 915235 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 16381 . 16382) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -16434) (16377 . 16435) 16326 (t 25909 11528 928353 174000)) nil (25909 33554 200273 0) 0 nil])
([nil nil ((16385 . 16386) (#("A" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block) help-echo nil)) . 16385) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1)) nil (25909 33554 200269 0) 0 nil])
([nil nil ((16394 . 16397) (16396 . 16397) (#("am" 0 2 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 16396) (16399 . 16401) (#("alias" 0 5 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 16399) (16405 . 16409) (#("mov" 0 3 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 16407) 9659 (t 25909 33554 214121 220000)) nil (25909 33564 329007 0) 0 nil])
([nil nil ((16442 . 16452) 9659 (t 25909 33564 343098 740000)) nil (25909 33567 795479 0) 0 nil])
([nil nil ((16444 . 16491) 9659 (t 25909 33567 809419 418000)) nil (25909 33576 199665 0) 0 nil])
([nil nil ((#("org-narro" 0 9 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16447) (16457 . 16459) (#("-to-subtre" 0 10 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 16457) (16468 . 16469) 9659 (t 25909 33576 212467 915000)) nil (25909 33583 975787 0) 0 nil])
([nil nil ((16417 . 16421) (#("Rem" 0 3 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block))) . 16417) (16421 . 16422) (#("ve" 0 2 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block))) . 16421) (16424 . 16429) (#("an" 0 2 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block))) . 16424) (16427 . 16430) (#("alia" 0 4 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block))) . 16427) (16432 . 16438) 9659 (t 25909 33583 990016 140000)) nil (25909 33592 140460 0) 0 nil])
([nil nil ((16466 . 16469) (#("Remov" 0 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 16466) (#(" a" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 16472) (16476 . 16480) (#("alia" 0 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 16476) 9659 (t 25909 33592 153214 852000)) nil (25909 33596 693384 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 16669 . 16670) (#("
" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -16724) (16665 . 16725) 16612 (t 25909 33596 705977 374000)) nil (25910 33276 345797 0) 0 nil])
([nil nil ((16673 . 16674) (#("r" 0 1 (help-echo nil face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 16673) (undo-tree-id28 . -1)) nil (25910 33276 345796 0) 0 nil])
([nil nil ((#("lsp-find-references" 0 19 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16619) (undo-tree-id26 . -18) (undo-tree-id27 . -19)) nil (25910 33276 345794 0) 0 nil])
([nil nil ((16625 . 16629) (#("m" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -16625) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 16626 (16619 . 16626)) nil (25910 33276 345788 0) 0 nil])
([nil nil ((#("Find " 0 5 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16639) (undo-tree-id32 . -4) (undo-tree-id33 . -5) (t 25910 33276 361826 574000)) nil (25910 33280 125136 0) 0 nil])
([nil nil ((16639 . 16645) (#("references" 0 10 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 16639) (undo-tree-id29 . -9) (undo-tree-id30 . -10) (undo-tree-id31 . -10)) nil (25910 33280 125130 0) 0 nil])
([nil nil ((9342 . 9343) (9340 . 9342) (#("p" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -9340) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -9341) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (#("p" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -9342) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) 9343 (9341 . 9343) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -9341) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (#("
" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -9342) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) 9343 (9342 . 9343) (9332 . 9342) (9320 . 9343) (#("<s" 0 2 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -9320) (undo-tree-id366 . -2) 9322 (9320 . 9322) (9319 . 9320) (9308 . 9319) (9303 . 9308) (t 25910 33280 139029 867000)) nil (25932 59827 840187 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 9759 . 9760) (nil fontified nil 9699 . 9760) (nil fontified nil 9680 . 9699) (nil fontified nil 9651 . 9680) (nil fontified nil 9631 . 9651) (nil fontified nil 9593 . 9631) (nil fontified nil 9570 . 9593) (nil fontified nil 9543 . 9570) (nil fontified nil 9510 . 9543) (nil fontified nil 9502 . 9510) (nil fontified nil 9461 . 9502) (nil fontified nil 9427 . 9461) (nil fontified nil 9392 . 9427) (nil fontified nil 9363 . 9392) (nil fontified nil 9343 . 9363) (9343 . 9760)) nil (25932 59827 839773 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 9761) (undo-tree-id0 . -1)) nil (25932 59827 839764 0) 0 nil])
([nil nil ((9679 . 9680) (t 25932 59827 858360 794000) 9665) nil (25932 60176 898182 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10083 . 10084) (nil fontified nil 10080 . 10084) (nil fontified nil 10060 . 10080) (nil fontified nil 9995 . 10060) (nil fontified nil 9931 . 9995) (nil fontified nil 9866 . 9931) (nil fontified nil 9800 . 9866) (nil fontified nil 9761 . 9800) (nil fontified nil 9730 . 9761) (nil fontified nil 9680 . 9730) (9680 . 10084)) nil (25932 60176 898180 0) 0 nil])
([nil nil ((9806 . 9822) (#("		" 0 2 (wrap-prefix #("                      " 0 6 (face org-indent) 6 22 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . -9806) (undo-tree-id367 . -2) (9765 . 9773) (#("	" 0 1 (wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . -9765) (undo-tree-id368 . -1) (9680 . 9682) (9730 . 9732) (9761 . 9762) (#("      " 0 6 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9761) (undo-tree-id369 . -3) (undo-tree-id370 . -3) (undo-tree-id371 . -3) (undo-tree-id372 . -3) (undo-tree-id373 . -3) (undo-tree-id374 . -3) (undo-tree-id375 . -3) (undo-tree-id376 . -3) (undo-tree-id377 . -3) (undo-tree-id378 . -3) (undo-tree-id379 . -3) (undo-tree-id380 . -3) (undo-tree-id381 . -3) (undo-tree-id382 . -3) (undo-tree-id383 . -3) (undo-tree-id384 . -3) (undo-tree-id385 . -3) (undo-tree-id386 . -3) (undo-tree-id387 . -3) (undo-tree-id388 . -3) (undo-tree-id389 . -3) (9800 . 9802) (#("              " 0 14 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #("                    " 0 6 (face org-indent) 6 20 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9800) (undo-tree-id390 . -3) (undo-tree-id391 . -3) (undo-tree-id392 . -3) (undo-tree-id393 . -3) (undo-tree-id394 . -3) (undo-tree-id395 . -3) (undo-tree-id396 . -3) (undo-tree-id397 . -3) (undo-tree-id398 . -3) (undo-tree-id399 . -3) (undo-tree-id400 . -3) (undo-tree-id401 . -3) (undo-tree-id402 . -3) (undo-tree-id403 . -3) (undo-tree-id404 . -3) (undo-tree-id405 . -3) (undo-tree-id406 . -3) (undo-tree-id407 . -3) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . -3) (9866 . 9867) (9882 . 9883) (9931 . 9933) (9995 . 9997) (10076 . 10078) (#("  " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 10080) 9343) nil (25932 60176 898175 0) 0 nil])
([nil nil ((10098 . 10099) (t 25932 60176 913672 947000) 10097) nil (25932 60238 525622 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10177 . 10178) (nil fontified nil 10099 . 10178) (10099 . 10178)) nil (25932 60238 525621 0) 0 nil])
([nil nil ((10099 . 10103) 10177) nil (25932 60238 525617 0) 0 nil])
([nil nil ((10182 . 10183) (t 25932 60238 541213 227000) 10181) nil (25932 60253 149692 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10244 . 10245) (nil fontified nil 10183 . 10245) (10183 . 10245)) nil (25932 60253 149688 0) 0 nil])
([nil nil ((10183 . 10187) 10244 (t 25932 60253 165309 438000)) nil (25932 60350 518793 0) 0 nil])
([nil nil ((#("  ;; Dont know how to get tab to indent
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 5 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 5 40 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 10921) (undo-tree-id554 . -39) (undo-tree-id555 . -12) (undo-tree-id556 . -12) (undo-tree-id557 . -12) (undo-tree-id558 . -12) (undo-tree-id559 . -12) (undo-tree-id560 . -12) (undo-tree-id561 . -12) (undo-tree-id562 . -12) (undo-tree-id563 . -12) (undo-tree-id564 . -12) (undo-tree-id565 . -12) (undo-tree-id566 . -12) (undo-tree-id567 . -12) (undo-tree-id568 . -12) (undo-tree-id569 . -12) (undo-tree-id570 . -12) (undo-tree-id571 . -12) (undo-tree-id572 . -12) (undo-tree-id573 . -12) (undo-tree-id574 . -12) (undo-tree-id575 . -12) (undo-tree-id576 . -12) (undo-tree-id577 . -12) (undo-tree-id578 . -12) (undo-tree-id579 . -12) (undo-tree-id580 . -12) (undo-tree-id581 . -12) (undo-tree-id582 . -12) (undo-tree-id583 . -12) (undo-tree-id584 . -12) (undo-tree-id585 . -12) (undo-tree-id586 . -12) (undo-tree-id587 . -12) (undo-tree-id588 . -12) (undo-tree-id589 . -12) (undo-tree-id590 . -12) (undo-tree-id591 . -12) (undo-tree-id592 . -12) (undo-tree-id593 . -12) (undo-tree-id594 . -12) (undo-tree-id595 . -12) (undo-tree-id596 . -12) (undo-tree-id597 . -12) (undo-tree-id598 . -12) (undo-tree-id599 . -12) (undo-tree-id600 . -12) (undo-tree-id601 . -12) (undo-tree-id602 . -12) (undo-tree-id603 . -12) (undo-tree-id604 . -12) (undo-tree-id605 . -12) (undo-tree-id606 . -12) (undo-tree-id607 . -12) (undo-tree-id608 . -12) (undo-tree-id609 . -12) (undo-tree-id610 . -12) (undo-tree-id611 . -12) (undo-tree-id612 . -12) (undo-tree-id613 . -12) (undo-tree-id614 . -12) (undo-tree-id615 . -12) (undo-tree-id616 . -12) (undo-tree-id617 . -12) (undo-tree-id618 . -12) (undo-tree-id619 . -12) (undo-tree-id620 . -12) (undo-tree-id621 . -12) (undo-tree-id622 . -12) (undo-tree-id623 . -12) (undo-tree-id624 . -12) (undo-tree-id625 . -12) (undo-tree-id626 . -12) (undo-tree-id627 . -12) (undo-tree-id628 . -12) (undo-tree-id629 . -12) (undo-tree-id630 . -12) (undo-tree-id631 . -12) (undo-tree-id632 . -12) (undo-tree-id633 . -12) (undo-tree-id634 . -12) (undo-tree-id635 . -12) (undo-tree-id636 . -40) 10933 (t 25932 60254 157660 302000)) nil (25932 60368 482873 0) 0 nil] [nil nil ((#("  :bind ((\"C-`\"   . popper-toggle)
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 2 7 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 7 10 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 10 15 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 15 35 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9392) (undo-tree-id411 . -34) (undo-tree-id412 . -32) (undo-tree-id413 . -32) (undo-tree-id414 . -32) (undo-tree-id415 . -32) (undo-tree-id416 . -32) (undo-tree-id417 . -32) (undo-tree-id418 . -32) (undo-tree-id419 . -32) (undo-tree-id420 . -32) (undo-tree-id421 . -32) (undo-tree-id422 . -32) (undo-tree-id423 . -32) (undo-tree-id424 . -32) (undo-tree-id425 . -32) (undo-tree-id426 . -32) (undo-tree-id427 . -32) (undo-tree-id428 . -32) (undo-tree-id429 . -32) (undo-tree-id430 . -32) (undo-tree-id431 . -32) (undo-tree-id432 . -32) (undo-tree-id433 . -32) (undo-tree-id434 . -32) (undo-tree-id435 . -32) (undo-tree-id436 . -32) (undo-tree-id437 . -32) (undo-tree-id438 . -32) (undo-tree-id439 . -32) (undo-tree-id440 . -32) (undo-tree-id441 . -32) (undo-tree-id442 . -32) (undo-tree-id443 . -32) (undo-tree-id444 . -32) (undo-tree-id445 . -32) (undo-tree-id446 . -32) (undo-tree-id447 . -32) (undo-tree-id448 . -32) (undo-tree-id449 . -32) (undo-tree-id450 . -32) (undo-tree-id451 . -32) (undo-tree-id452 . -32) (undo-tree-id453 . -32) (undo-tree-id454 . -32) (undo-tree-id455 . -32) (undo-tree-id456 . -32) (undo-tree-id457 . -32) (undo-tree-id458 . -35) 9424 (t 25932 60254 157660 302000)) ((9392 . 9427)) (25932 60350 518039 0) 0 nil])
([nil nil ((#("  ;; (general-define-key
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 5 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 5 24 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 24 25 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 10921) (undo-tree-id526 . -24) (undo-tree-id527 . -12) (undo-tree-id528 . -12) (undo-tree-id529 . -12) (undo-tree-id530 . -12) (undo-tree-id531 . -12) (undo-tree-id532 . -12) (undo-tree-id533 . -12) (undo-tree-id534 . -12) (undo-tree-id535 . -24) (undo-tree-id536 . -12) (undo-tree-id537 . -12) (undo-tree-id538 . -12) (undo-tree-id539 . -12) (undo-tree-id540 . -12) (undo-tree-id541 . -12) (undo-tree-id542 . -12) (undo-tree-id543 . -12) (undo-tree-id544 . -12) (undo-tree-id545 . -12) (undo-tree-id546 . -12) (undo-tree-id547 . -12) (undo-tree-id548 . -12) (undo-tree-id549 . -12) (undo-tree-id550 . -12) (undo-tree-id551 . -12) (undo-tree-id552 . -12) (undo-tree-id553 . -25) 10933) nil (25932 60368 482797 0) 0 nil])
nil
([nil nil ((#("  ;;  :states 'insert
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 6 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 6 21 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 21 22 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 10921) (undo-tree-id491 . -21) (undo-tree-id492 . -12) (undo-tree-id493 . -12) (undo-tree-id494 . -12) (undo-tree-id495 . -12) (undo-tree-id496 . -12) (undo-tree-id497 . -12) (undo-tree-id498 . -12) (undo-tree-id499 . -12) (undo-tree-id500 . -21) (undo-tree-id501 . -12) (undo-tree-id502 . -12) (undo-tree-id503 . -12) (undo-tree-id504 . -12) (undo-tree-id505 . -12) (undo-tree-id506 . -12) (undo-tree-id507 . -12) (undo-tree-id508 . -12) (undo-tree-id509 . -12) (undo-tree-id510 . -12) (undo-tree-id511 . -12) (undo-tree-id512 . -12) (undo-tree-id513 . -12) (undo-tree-id514 . -12) (undo-tree-id515 . -12) (undo-tree-id516 . -12) (undo-tree-id517 . -12) (undo-tree-id518 . -12) (undo-tree-id519 . -12) (undo-tree-id520 . -12) (undo-tree-id521 . -12) (undo-tree-id522 . -12) (undo-tree-id523 . -12) (undo-tree-id524 . -12) (undo-tree-id525 . -22) 10933) nil (25932 60368 482759 0) 0 nil])
([nil nil ((#("  ;;  :keymaps 'org-mode-map
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 6 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 6 28 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 28 29 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 10921) (undo-tree-id463 . -28) (undo-tree-id464 . -12) (undo-tree-id465 . -12) (undo-tree-id466 . -12) (undo-tree-id467 . -12) (undo-tree-id468 . -12) (undo-tree-id469 . -12) (undo-tree-id470 . -12) (undo-tree-id471 . -12) (undo-tree-id472 . -28) (undo-tree-id473 . -12) (undo-tree-id474 . -12) (undo-tree-id475 . -12) (undo-tree-id476 . -12) (undo-tree-id477 . -12) (undo-tree-id478 . -12) (undo-tree-id479 . -12) (undo-tree-id480 . -12) (undo-tree-id481 . -12) (undo-tree-id482 . -12) (undo-tree-id483 . -12) (undo-tree-id484 . -12) (undo-tree-id485 . -12) (undo-tree-id486 . -12) (undo-tree-id487 . -12) (undo-tree-id488 . -12) (undo-tree-id489 . -12) (undo-tree-id490 . -29) 10933) nil (25932 60368 482725 0) 0 nil])
([nil nil ((#("  ;;  \"TAB\" 'indent-for-tab-command)
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 6 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 6 36 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 36 37 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 10921) (undo-tree-id460 . -36) (undo-tree-id461 . -12) (undo-tree-id462 . -36) 10933) nil (25932 60368 482700 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 10921) (undo-tree-id459 . -1)) nil (25932 60368 482693 0) 0 nil])
([nil nil ((10921 . 10922) (t 25932 60368 499385 992000)) nil (25932 60369 750401 0) 0 nil])
([nil nil ((#("C" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9403) (t 25932 60369 768714 117000)) nil (25932 60467 909540 0) 0 nil])
([nil nil ((#("-" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9403)) nil (25932 60467 909539 0) 0 nil])
([nil nil ((#("`" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9403)) nil (25932 60467 909538 0) 0 nil])
([nil nil ((9405 . 9408) (9403 . 9405) (#("j" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -9403) (undo-tree-id712 . -1) 9404 (9403 . 9404)) nil (25932 60467 909538 0) 0 nil])
([nil nil ((#("M" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9440)) nil (25932 60467 909536 0) 0 nil])
([nil nil ((#("-" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9440)) nil (25932 60467 909535 0) 0 nil])
([nil nil ((#("`" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9440)) nil (25932 60467 909535 0) 0 nil])
([nil nil ((9443 . 9445) (#("a" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -9443) (undo-tree-id711 . -1) 9444 (9440 . 9444)) nil (25932 60467 909534 0) 0 nil])
([nil nil ((#("C" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9403) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1)) nil (25932 60467 909531 0) 0 nil])
([nil nil ((#("-" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9403) (undo-tree-id671 . -1) (undo-tree-id672 . -1)) nil (25932 60467 909492 0) 0 nil])
([nil nil ((#("T" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9403) (undo-tree-id669 . -1) (undo-tree-id670 . -1)) nil (25932 60467 909489 0) 0 nil])
([nil nil ((#("A" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9403) (undo-tree-id667 . -1) (undo-tree-id668 . -1)) nil (25932 60467 909487 0) 0 nil])
([nil nil ((#("B" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9403) (undo-tree-id665 . -1) (undo-tree-id666 . -1)) nil (25932 60467 910719 0) 0 nil])
([nil nil ((9405 . 9406) (#("T" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -9405) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) 9406 (9403 . 9406) (t 25932 60468 572223 770000)) nil (25932 60472 427570 0) 0 nil] [nil nil ((#("    " 0 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -9400) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (9392 . 9400) 9406 (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -9396) (undo-tree-id651 . -2) (undo-tree-id652 . -2) (undo-tree-id653 . -2) (undo-tree-id654 . -2) (undo-tree-id655 . -2) (undo-tree-id656 . -2) (undo-tree-id657 . -2) (undo-tree-id658 . -2) (undo-tree-id659 . -2) (undo-tree-id660 . -2) (undo-tree-id661 . -2) (undo-tree-id662 . -2) (undo-tree-id663 . -2) (undo-tree-id664 . -2) (9392 . 9396) 9404 (9403 . 9404)) ((#(" " 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9403) (#("    " 0 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9392) (9396 . 9398) (#("        " 0 8 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9392) (9400 . 9404)) (25932 60467 909478 0) 0 nil])
([nil nil ((9472 . 9475) 9343 (t 25932 60472 442507 642000)) nil (25932 60484 311746 0) 0 nil])
nil
([nil nil ((9462 . 9463) (#("_" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -9462) (undo-tree-id756 . -1) 9463 (9462 . 9464) (#("_" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -9462) (9462 . 9463) (#("(" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . -9462) (undo-tree-id757 . -1) (#(")" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 9463) (9462 . 9464) (#("(" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -9462) (9462 . 9463)) nil (25932 60484 311744 0) 0 nil])
([nil nil ((#("_" 0 1 (face (font-lock-warning-face org-block) font-lock-multiline t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 9463) (undo-tree-id753 . 1) (undo-tree-id754 . -1) (undo-tree-id755 . -1)) nil (25932 60484 311738 0) 0 nil])
([nil nil ((9427 . 9428) (#("        " 0 8 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9427) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9464) (#("     " 0 5 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9468) (9549 . 9550) (#("        " 0 8 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9549) (9576 . 9577) (#("        " 0 8 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9576) (9599 . 9600) (#("        " 0 8 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9599) (9637 . 9638) (#("        " 0 8 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9637) (9657 . 9658) (#("        " 0 8 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                " 0 6 (face org-indent) 6 16 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9657) (9771 . 9772) (#("        " 0 8 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9771) (9812 . 9814) (#("                " 0 16 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                      " 0 6 (face org-indent) 6 22 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9812) (9880 . 9882) (#("                " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                        " 0 6 (face org-indent) 6 24 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 16 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                        " 0 6 (face org-indent) 6 24 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9880) (9947 . 9949) (#("                " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                        " 0 6 (face org-indent) 6 24 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 2 16 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                        " 0 6 (face org-indent) 6 24 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9947) (10013 . 10015) (#("                " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                        " 0 6 (face org-indent) 6 24 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 2 16 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                        " 0 6 (face org-indent) 6 24 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 10013) (10080 . 10082) (#("                " 0 16 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                        " 0 6 (face org-indent) 6 24 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 10080) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10105) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10189) 9343 (t 25932 60484 327097 748000)) nil (25932 60713 354230 0) 0 nil])
([nil nil ((10125 . 10126) (t 25932 60714 465813 415000) 10063) nil (25932 60801 325810 0) 0 nil] [nil nil ((#("  :bind ((\"C-t\"   . popper-toggle)
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 2 7 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 7 10 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 10 15 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 15 35 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9392) (undo-tree-id823 . -34) (undo-tree-id824 . -2) (undo-tree-id825 . -2) (undo-tree-id826 . -2) (undo-tree-id827 . -2) (undo-tree-id828 . -2) (undo-tree-id829 . -2) (undo-tree-id830 . -2) (undo-tree-id831 . -2) (undo-tree-id832 . -2) (undo-tree-id833 . -2) (undo-tree-id834 . -2) (undo-tree-id835 . -2) (undo-tree-id836 . -2) (undo-tree-id837 . -2) (undo-tree-id838 . -2) (undo-tree-id839 . -2) (undo-tree-id840 . -2) (undo-tree-id841 . -2) (undo-tree-id842 . -2) (undo-tree-id843 . -2) (undo-tree-id844 . -2) (undo-tree-id845 . -2) (undo-tree-id846 . -2) (undo-tree-id847 . -2) (undo-tree-id848 . -2) (undo-tree-id849 . -2) (undo-tree-id850 . -2) (undo-tree-id851 . -2) (undo-tree-id852 . -2) (undo-tree-id853 . -2) (undo-tree-id854 . -2) (undo-tree-id855 . -2) (undo-tree-id856 . -2) (undo-tree-id857 . -2) (undo-tree-id858 . -2) (undo-tree-id859 . -2) (undo-tree-id860 . -2) (undo-tree-id861 . -2) (undo-tree-id862 . -2) (undo-tree-id863 . -2) (undo-tree-id864 . -2) (undo-tree-id865 . -2) (undo-tree-id866 . -2) (undo-tree-id867 . -2) (undo-tree-id868 . -2) (undo-tree-id869 . -2) (undo-tree-id870 . -2) (undo-tree-id871 . -2) (undo-tree-id872 . -2) (undo-tree-id873 . -2) (undo-tree-id874 . -2) (undo-tree-id875 . -2) (undo-tree-id876 . -2) (undo-tree-id877 . -35) 9394 (t 25932 60618 284528 662000)) ((9392 . 9427)) (25932 60712 788763 0) 0 nil])
([nil nil ((10126 . 10174) 9343) nil (25932 60801 325806 0) 0 nil])
([nil nil ((#("	 (\"C-TAB\"   . popper-cycle))
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 3 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 3 10 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 10 29 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 29 30 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9392) (undo-tree-id787 . 1) (undo-tree-id788 . -29) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -29) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -30) 9393) ((9392 . 9422)) (25932 60712 612816 0) 0 nil])
([nil nil ((10178 . 10228) 9343 (t 25932 60801 341350 425000)) nil (25932 60818 350313 0) 0 nil])
([nil nil ((#("  ;; (\"C-M-`\" . popper-toggle-type))
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 2 5 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 5 6 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 6 13 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 13 36 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 36 37 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9392) (undo-tree-id758 . 37) (undo-tree-id759 . -36) (undo-tree-id760 . -8) (undo-tree-id761 . -2) (undo-tree-id762 . -2) (undo-tree-id763 . -2) (undo-tree-id764 . -2) (undo-tree-id765 . -2) (undo-tree-id766 . -2) (undo-tree-id767 . -2) (undo-tree-id768 . -36) (undo-tree-id769 . -8) (undo-tree-id770 . -8) (undo-tree-id771 . -8) (undo-tree-id772 . -8) (undo-tree-id773 . -8) (undo-tree-id774 . -8) (undo-tree-id775 . -8) (undo-tree-id776 . -8) (undo-tree-id777 . -8) (undo-tree-id778 . -8) (undo-tree-id779 . -8) (undo-tree-id780 . -8) (undo-tree-id781 . -8) (undo-tree-id782 . -8) (undo-tree-id783 . -8) (undo-tree-id784 . -8) (undo-tree-id785 . -8) (undo-tree-id786 . -37) 9400) ((9392 . 9429) (t 25932 60712 375744 193000)) (25932 60712 359010 0) 0 nil])
([nil nil ((#("  :bind ((\"C-t\"   . popper-toggle)
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 2 7 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 7 10 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 10 15 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 15 35 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9392) (undo-tree-id1007 . -34) (undo-tree-id1008 . -2) (undo-tree-id1009 . -2) (undo-tree-id1010 . -2) (undo-tree-id1011 . -2) (undo-tree-id1012 . -2) (undo-tree-id1013 . -2) (undo-tree-id1014 . -2) (undo-tree-id1015 . -2) (undo-tree-id1016 . -2) (undo-tree-id1017 . -2) (undo-tree-id1018 . -2) (undo-tree-id1019 . -2) (undo-tree-id1020 . -2) (undo-tree-id1021 . -2) (undo-tree-id1022 . -2) (undo-tree-id1023 . -2) (undo-tree-id1024 . -2) (undo-tree-id1025 . -2) (undo-tree-id1026 . -2) (undo-tree-id1027 . -2) (undo-tree-id1028 . -2) (undo-tree-id1029 . -2) (undo-tree-id1030 . -2) (undo-tree-id1031 . -2) (undo-tree-id1032 . -2) (undo-tree-id1033 . -2) (undo-tree-id1034 . -2) (undo-tree-id1035 . -2) (undo-tree-id1036 . -2) (undo-tree-id1037 . -2) (undo-tree-id1038 . -2) (undo-tree-id1039 . -2) (undo-tree-id1040 . -2) (undo-tree-id1041 . -2) (undo-tree-id1042 . -2) (undo-tree-id1043 . -2) (undo-tree-id1044 . -2) (undo-tree-id1045 . -2) (undo-tree-id1046 . -2) (undo-tree-id1047 . -2) (undo-tree-id1048 . -2) (undo-tree-id1049 . -2) (undo-tree-id1050 . -2) (undo-tree-id1051 . -2) (undo-tree-id1052 . -2) (undo-tree-id1053 . -2) (undo-tree-id1054 . -2) (undo-tree-id1055 . -2) (undo-tree-id1056 . -2) (undo-tree-id1057 . -2) (undo-tree-id1058 . -2) (undo-tree-id1059 . -12) (undo-tree-id1060 . -35) (undo-tree-id1061 . -35) (undo-tree-id1062 . -35) (undo-tree-id1063 . -35) (undo-tree-id1064 . -35) (undo-tree-id1065 . -35) (undo-tree-id1066 . -35) (undo-tree-id1067 . -35) (undo-tree-id1068 . -35) (undo-tree-id1069 . -35) (undo-tree-id1070 . -35) (undo-tree-id1071 . -35) (undo-tree-id1072 . -35) (undo-tree-id1073 . -35) (undo-tree-id1074 . -12) (undo-tree-id1075 . -12) (undo-tree-id1076 . -12) (undo-tree-id1077 . -12) (undo-tree-id1078 . -12) (undo-tree-id1079 . -12) (undo-tree-id1080 . -12) (undo-tree-id1081 . -12) (undo-tree-id1082 . -12) (undo-tree-id1083 . -12) (undo-tree-id1084 . -12) (undo-tree-id1085 . -12) (undo-tree-id1086 . -12) (undo-tree-id1087 . -12) (undo-tree-id1088 . -12) (undo-tree-id1089 . -12) (undo-tree-id1090 . -12) (undo-tree-id1091 . -12) (undo-tree-id1092 . -12) (undo-tree-id1093 . -12) (undo-tree-id1094 . -12) (undo-tree-id1095 . -12) (undo-tree-id1096 . -12) (undo-tree-id1097 . -12) (undo-tree-id1098 . -12) (undo-tree-id1099 . -12) (undo-tree-id1100 . -12) (undo-tree-id1101 . -12) (undo-tree-id1102 . -12) (undo-tree-id1103 . -12) (undo-tree-id1104 . -12) (undo-tree-id1105 . -35) 9404 (t 25932 60818 366432 522000)) nil (25932 60838 51819 0) 0 nil])
nil
([nil nil ((#("	 (\"C-TAB\"   . popper-cycle))
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 3 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 3 10 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 10 29 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 29 30 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9392) (undo-tree-id927 . -29) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -29) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -5) (undo-tree-id960 . -30) (undo-tree-id961 . -30) (undo-tree-id962 . -30) (undo-tree-id963 . -30) (undo-tree-id964 . -30) (undo-tree-id965 . -30) (undo-tree-id966 . -30) (undo-tree-id967 . -30) (undo-tree-id968 . -30) (undo-tree-id969 . -30) (undo-tree-id970 . -30) (undo-tree-id971 . -30) (undo-tree-id972 . -30) (undo-tree-id973 . -30) (undo-tree-id974 . -30) (undo-tree-id975 . -30) (undo-tree-id976 . -30) (undo-tree-id977 . -30) (undo-tree-id978 . -30) (undo-tree-id979 . -30) (undo-tree-id980 . -30) (undo-tree-id981 . -11) (undo-tree-id982 . -11) (undo-tree-id983 . -11) (undo-tree-id984 . -11) (undo-tree-id985 . -11) (undo-tree-id986 . -11) (undo-tree-id987 . -11) (undo-tree-id988 . -11) (undo-tree-id989 . -11) (undo-tree-id990 . -11) (undo-tree-id991 . -11) (undo-tree-id992 . -11) (undo-tree-id993 . -11) (undo-tree-id994 . -11) (undo-tree-id995 . -29) (undo-tree-id996 . -5) (undo-tree-id997 . -5) (undo-tree-id998 . -5) (undo-tree-id999 . -5) (undo-tree-id1000 . -5) (undo-tree-id1001 . -5) (undo-tree-id1002 . -5) (undo-tree-id1003 . -5) (undo-tree-id1004 . -5) (undo-tree-id1005 . -5) (undo-tree-id1006 . -30) 9397) nil (25932 60838 51732 0) 0 nil])
([nil nil ((#("  ;; (\"C-M-`\" . popper-toggle-type))
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 2 5 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 5 6 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 6 13 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 13 36 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 36 37 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9392) (undo-tree-id878 . -36) (undo-tree-id879 . -12) (undo-tree-id880 . -37) (undo-tree-id881 . -37) (undo-tree-id882 . -37) (undo-tree-id883 . -37) (undo-tree-id884 . -37) (undo-tree-id885 . -37) (undo-tree-id886 . -37) (undo-tree-id887 . -12) (undo-tree-id888 . -12) (undo-tree-id889 . -12) (undo-tree-id890 . -12) (undo-tree-id891 . -12) (undo-tree-id892 . -12) (undo-tree-id893 . -12) (undo-tree-id894 . -12) (undo-tree-id895 . -12) (undo-tree-id896 . -12) (undo-tree-id897 . -12) (undo-tree-id898 . -12) (undo-tree-id899 . -12) (undo-tree-id900 . -12) (undo-tree-id901 . -12) (undo-tree-id902 . -12) (undo-tree-id903 . -12) (undo-tree-id904 . -12) (undo-tree-id905 . -12) (undo-tree-id906 . -12) (undo-tree-id907 . -12) (undo-tree-id908 . -36) (undo-tree-id909 . -12) (undo-tree-id910 . -12) (undo-tree-id911 . -12) (undo-tree-id912 . -12) (undo-tree-id913 . -12) (undo-tree-id914 . -12) (undo-tree-id915 . -12) (undo-tree-id916 . -12) (undo-tree-id917 . -12) (undo-tree-id918 . -12) (undo-tree-id919 . -12) (undo-tree-id920 . -12) (undo-tree-id921 . -12) (undo-tree-id922 . -12) (undo-tree-id923 . -12) (undo-tree-id924 . -12) (undo-tree-id925 . -12) (undo-tree-id926 . -37) 9404) nil (25932 60840 241774 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10072 . 10073) (#("
" 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -10148) (10072 . 10149) 10071 (t 25932 60841 358880 954000)) nil (25932 60958 185402 0) 0 nil] [nil nil ((#("  :ensure t ; or :straight t
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 2 9 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 9 12 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 12 14 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 14 29 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 9363) (undo-tree-id1106 . -28) (undo-tree-id1107 . -29) (undo-tree-id1108 . -29) (undo-tree-id1109 . -29) (undo-tree-id1110 . -29) (undo-tree-id1111 . -29) (undo-tree-id1112 . -29) (undo-tree-id1113 . -29) (undo-tree-id1114 . -29) (undo-tree-id1115 . -29) (undo-tree-id1116 . -29) (undo-tree-id1117 . -29) (undo-tree-id1118 . -29) (undo-tree-id1119 . -29) (undo-tree-id1120 . -29) (undo-tree-id1121 . -29) (undo-tree-id1122 . -29) (undo-tree-id1123 . -29) (undo-tree-id1124 . -29) (undo-tree-id1125 . -29) (undo-tree-id1126 . -29) (undo-tree-id1127 . -29) (undo-tree-id1128 . -29) (undo-tree-id1129 . -29) (undo-tree-id1130 . -29) (undo-tree-id1131 . -29) (undo-tree-id1132 . -29) (undo-tree-id1133 . -29) (undo-tree-id1134 . -29) (undo-tree-id1135 . -29) (undo-tree-id1136 . -29) (undo-tree-id1137 . -29) (undo-tree-id1138 . -29) (undo-tree-id1139 . -29) (undo-tree-id1140 . -29) (undo-tree-id1141 . -29) (undo-tree-id1142 . -29) (undo-tree-id1143 . -29) (undo-tree-id1144 . -29) (undo-tree-id1145 . -29) (undo-tree-id1146 . -29) (undo-tree-id1147 . -29) (undo-tree-id1148 . -29) (undo-tree-id1149 . -29) (undo-tree-id1150 . -29) (undo-tree-id1151 . -29) (undo-tree-id1152 . -29) (undo-tree-id1153 . -29) (undo-tree-id1154 . -29) (undo-tree-id1155 . -29) (undo-tree-id1156 . -29) (undo-tree-id1157 . -29) (undo-tree-id1158 . -29) (undo-tree-id1159 . -29) (undo-tree-id1160 . -29) (undo-tree-id1161 . -29) (undo-tree-id1162 . -29) (undo-tree-id1163 . -29) (undo-tree-id1164 . -29) (undo-tree-id1165 . -29) (undo-tree-id1166 . -29) (undo-tree-id1167 . -29) (undo-tree-id1168 . -29) (undo-tree-id1169 . -29) (undo-tree-id1170 . -29) (undo-tree-id1171 . -29) (undo-tree-id1172 . -29) (undo-tree-id1173 . -29) (undo-tree-id1174 . -29) (undo-tree-id1175 . -29) (undo-tree-id1176 . -29) (undo-tree-id1177 . -29) (undo-tree-id1178 . -29) (undo-tree-id1179 . -29) (undo-tree-id1180 . -29) (undo-tree-id1181 . -29) (undo-tree-id1182 . -29) (undo-tree-id1183 . -29) (undo-tree-id1184 . -29) (undo-tree-id1185 . -29) (undo-tree-id1186 . -29) (undo-tree-id1187 . -29) (undo-tree-id1188 . -29) (undo-tree-id1189 . -6) (undo-tree-id1190 . -29) (undo-tree-id1191 . -29) (undo-tree-id1192 . -29) (undo-tree-id1193 . -29) (undo-tree-id1194 . -29) (undo-tree-id1195 . -29) (undo-tree-id1196 . -29) (undo-tree-id1197 . -29) (undo-tree-id1198 . -29) (undo-tree-id1199 . -29) (undo-tree-id1200 . -29) (undo-tree-id1201 . -29) (undo-tree-id1202 . -29) (undo-tree-id1203 . -29) (undo-tree-id1204 . -29) (undo-tree-id1205 . -29) (undo-tree-id1206 . -29) (undo-tree-id1207 . -29) (undo-tree-id1208 . -29) (undo-tree-id1209 . -29) (undo-tree-id1210 . -29) (undo-tree-id1211 . -29) (undo-tree-id1212 . -29) (undo-tree-id1213 . -29) (undo-tree-id1214 . -29) (undo-tree-id1215 . -29) (undo-tree-id1216 . -29) (undo-tree-id1217 . -29) (undo-tree-id1218 . -29) (undo-tree-id1219 . -29) (undo-tree-id1220 . -29) (undo-tree-id1221 . -29) (undo-tree-id1222 . -29) (undo-tree-id1223 . -29) (undo-tree-id1224 . -29) (undo-tree-id1225 . -29) (undo-tree-id1226 . -29) (undo-tree-id1227 . -29) (undo-tree-id1228 . -29) (undo-tree-id1229 . -29) (undo-tree-id1230 . -29) (undo-tree-id1231 . -29) (undo-tree-id1232 . -29) (undo-tree-id1233 . -29) (undo-tree-id1234 . -29) (undo-tree-id1235 . -29) (undo-tree-id1236 . -29) (undo-tree-id1237 . -29) (undo-tree-id1238 . -29) (undo-tree-id1239 . -29) (undo-tree-id1240 . -29) (undo-tree-id1241 . -29) (undo-tree-id1242 . -29) (undo-tree-id1243 . -29) (undo-tree-id1244 . -29) (undo-tree-id1245 . -29) (undo-tree-id1246 . -29) (undo-tree-id1247 . -29) (undo-tree-id1248 . -29) (undo-tree-id1249 . -29) (undo-tree-id1250 . -29) (undo-tree-id1251 . -29) (undo-tree-id1252 . -29) (undo-tree-id1253 . -29) (undo-tree-id1254 . -29) (undo-tree-id1255 . -29) (undo-tree-id1256 . -29) (undo-tree-id1257 . -29) (undo-tree-id1258 . -29) (undo-tree-id1259 . -29) (undo-tree-id1260 . -29) (undo-tree-id1261 . -29) (undo-tree-id1262 . -29) (undo-tree-id1263 . -29) (undo-tree-id1264 . -29) (undo-tree-id1265 . -29) (undo-tree-id1266 . -29) (undo-tree-id1267 . -29) (undo-tree-id1268 . -29) (undo-tree-id1269 . -29) (undo-tree-id1270 . -29) (undo-tree-id1271 . -29) (undo-tree-id1272 . -29) (undo-tree-id1273 . -29) (undo-tree-id1274 . -29) (undo-tree-id1275 . -29) (undo-tree-id1276 . -29) (undo-tree-id1277 . -29) (undo-tree-id1278 . -29) (undo-tree-id1279 . -29) (undo-tree-id1280 . -29) (undo-tree-id1281 . -29) (undo-tree-id1282 . -29) (undo-tree-id1283 . -29) (undo-tree-id1284 . -29) (undo-tree-id1285 . -29) (undo-tree-id1286 . -29) (undo-tree-id1287 . -29) (undo-tree-id1288 . -29) (undo-tree-id1289 . -29) (undo-tree-id1290 . -29) (undo-tree-id1291 . -29) (undo-tree-id1292 . -29) (undo-tree-id1293 . -29) (undo-tree-id1294 . -29) (undo-tree-id1295 . -29) (undo-tree-id1296 . -29) (undo-tree-id1297 . -29) (undo-tree-id1298 . -29) (undo-tree-id1299 . -29) (undo-tree-id1300 . -29) (undo-tree-id1301 . -29) (undo-tree-id1302 . -29) (undo-tree-id1303 . -29) (undo-tree-id1304 . -29) (undo-tree-id1305 . -29) (undo-tree-id1306 . -29) (undo-tree-id1307 . -29) (undo-tree-id1308 . -29) (undo-tree-id1309 . -29) (undo-tree-id1310 . -29) (undo-tree-id1311 . -29) (undo-tree-id1312 . -29) (undo-tree-id1313 . -29) (undo-tree-id1314 . -29) (undo-tree-id1315 . -29) (undo-tree-id1316 . -29) (undo-tree-id1317 . -29) (undo-tree-id1318 . -29) (undo-tree-id1319 . -29) (undo-tree-id1320 . -29) (undo-tree-id1321 . -29) (undo-tree-id1322 . -29) (undo-tree-id1323 . -29) (undo-tree-id1324 . -6) (undo-tree-id1325 . -6) (undo-tree-id1326 . -6) (undo-tree-id1327 . -6) (undo-tree-id1328 . -6) (undo-tree-id1329 . -6) (undo-tree-id1330 . -6) (undo-tree-id1331 . -6) (undo-tree-id1332 . -6) (undo-tree-id1333 . -6) (undo-tree-id1334 . -6) (undo-tree-id1335 . -6) (undo-tree-id1336 . -6) (undo-tree-id1337 . -6) (undo-tree-id1338 . -6) (undo-tree-id1339 . -6) (undo-tree-id1340 . -6) (undo-tree-id1341 . -6) (undo-tree-id1342 . -6) (undo-tree-id1343 . -6) (undo-tree-id1344 . -6) (undo-tree-id1345 . -6) (undo-tree-id1346 . -6) (undo-tree-id1347 . -6) (undo-tree-id1348 . -6) (undo-tree-id1349 . -6) (undo-tree-id1350 . -6) (undo-tree-id1351 . -6) (undo-tree-id1352 . -6) (undo-tree-id1353 . -6) (undo-tree-id1354 . -6) (undo-tree-id1355 . -6) (undo-tree-id1356 . -6) (undo-tree-id1357 . -6) (undo-tree-id1358 . -6) (undo-tree-id1359 . -6) (undo-tree-id1360 . -6) (undo-tree-id1361 . -6) (undo-tree-id1362 . -29) 9369 (t 25932 60838 68117 883000)) ((9363 . 9392) (t 25932 60839 212411 159000)) (25932 60839 196014 0) 0 nil])
([nil nil ((10051 . 10054)) nil (25932 60958 185400 0) 0 nil])
nil
([nil nil ((#("e" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -10051) (undo-tree-id1370 . -1) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -10052) (undo-tree-id1371 . -1) (#("l" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -10053) (undo-tree-id1372 . -1) 10054) nil (25932 60958 185399 0) 0 nil])
([nil nil ((10051 . 10052)) nil (25932 60958 185395 0) 0 nil])
([nil nil ((#(" \"C-t\" 'popper-toggle)
(elpaca nil (evil-define-key 'normal evil-motion-mode-map (kbd \"RET\") nil))
  (evil-define-key 'global " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 6 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 6 22 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 22 23 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t rear-nonsticky t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 23 24 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t) 24 30 (face (font-lock-keyword-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t) 30 36 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t) 36 51 (face (font-lock-keyword-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t) 51 86 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t) 86 91 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t) 91 98 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t) 98 99 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 99 102 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 102 117 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 117 126 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10051) (undo-tree-id1363 . 28) (undo-tree-id1364 . -21) (undo-tree-id1365 . -23) (undo-tree-id1366 . -98) (undo-tree-id1367 . -22) (undo-tree-id1368 . -21) (undo-tree-id1369 . -21) 9343) nil (25932 60958 185391 0) 0 nil])
([nil nil ((#("evil-define-key 'global \"C-TAB\" 'popper-cycle)
  (" 0 15 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 15 24 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 24 31 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 31 45 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 45 47 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 47 50 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10027) (undo-tree-id1373 . 26) (undo-tree-id1374 . -24) (undo-tree-id1375 . -24) (undo-tree-id1376 . -24) (undo-tree-id1377 . -24) (undo-tree-id1378 . -24) (undo-tree-id1379 . -45) (undo-tree-id1380 . -24) (undo-tree-id1381 . -24) (undo-tree-id1382 . -24) (undo-tree-id1383 . -24) (undo-tree-id1384 . -24) (undo-tree-id1385 . -24) (undo-tree-id1386 . -24) (undo-tree-id1387 . -24) (undo-tree-id1388 . -24) (undo-tree-id1389 . -24) (undo-tree-id1390 . -24) (undo-tree-id1391 . -24) (undo-tree-id1392 . -24) (undo-tree-id1393 . -24) (undo-tree-id1394 . -24) (undo-tree-id1395 . -24) (undo-tree-id1396 . -24) (undo-tree-id1397 . -24) (undo-tree-id1398 . -24) (undo-tree-id1399 . -24) (undo-tree-id1400 . -24) (undo-tree-id1401 . -24) (undo-tree-id1402 . -24) (undo-tree-id1403 . -24) (undo-tree-id1404 . -24) (undo-tree-id1405 . -24) (undo-tree-id1406 . -24) (undo-tree-id1407 . -24) (undo-tree-id1408 . -24) (undo-tree-id1409 . -24) (undo-tree-id1410 . -24) (undo-tree-id1411 . -24) (undo-tree-id1412 . -24) (undo-tree-id1413 . -24) (undo-tree-id1414 . -24) (undo-tree-id1415 . -24) (undo-tree-id1416 . -24) (undo-tree-id1417 . -24) (undo-tree-id1418 . -24) 9343 (t 25932 60958 203166 204000)) nil (25932 60958 927790 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -9360) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (#("f" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -9361) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -9362) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) 9363 (9360 . 9363) (t 25932 60958 941279 99000)) nil (25932 60963 396934 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10696 . 10697) (#("
" 0 1 (wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -10753) (10694 . 10754) 10640 (t 25932 60963 414943 956000)) nil (25932 60975 3680 0) 0 nil])
([nil nil ((10719 . 10725) (#("motion" 0 6 (help-echo nil face (org-block) font-lock-multiline t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 10719) (undo-tree-id1580 . -5) (undo-tree-id1581 . -6) (undo-tree-id1582 . -6) (t 25932 60975 20165 706000)) nil (25932 60995 122545 0) 0 nil])
([nil nil ((10727 . 10730) (#("j" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . -10727) (undo-tree-id1584 . -1) 10728 (t 25932 60995 139356 90000)) nil (25932 61008 62411 0) 0 nil])
([nil nil ((#("evil-next-visual-line" 0 21 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 10733) (undo-tree-id1583 . -20)) nil (25932 61008 62408 0) 0 nil])
([nil nil ((10733 . 10746)) nil (25932 61008 62397 0) 0 nil])
([nil nil ((10748 . 10803) 10470 (t 25932 61008 78860 924000)) nil (25932 61023 419183 0) 0 nil])
([nil nil ((10795 . 10798) (#("togg" 0 4 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 10795) 10470 (t 25932 61023 435849 556000)) nil (25932 61028 127695 0) 0 nil])
([nil nil ((10726 . 10730) (10731 . 10732) (10779 . 10783) (10786 . 10787) 10470 (t 25932 61028 144532 25000)) nil (25932 61054 920997 0) 0 nil])
([nil nil ((10726 . 10727) (10729 . 10730) (#("(" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 10729) (10784 . 10785) (10787 . 10788) (#("(" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 10787) 10470 (t 25932 61054 938635 407000)) nil (25932 61105 759203 0) 0 nil])
([nil nil ((21561 . 21584) (#("<s" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -21561) (undo-tree-id24 . -2) 21563 (21561 . 21563) (21560 . 21561) (21559 . 21560) (#("i" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -21559) (undo-tree-id25 . -1) 21560 (21558 . 21560) (21553 . 21558) (t 25932 61105 777011 693000)) nil (25937 64873 552981 0) 0 nil])
([nil nil ((21581 . 21583) (21573 . 21581) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -21573) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 21574 (21573 . 21574)) nil (25937 64873 552973 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21982 . 21983) (nil fontified nil 21901 . 21983) (nil fontified nil 21826 . 21901) (nil fontified nil 21816 . 21826) (nil fontified nil 21752 . 21816) (nil fontified nil 21682 . 21752) (nil fontified nil 21674 . 21682) (nil fontified nil 21641 . 21674) (nil fontified nil 21616 . 21641) (nil fontified nil 21604 . 21616) (nil fontified nil 21584 . 21604) (21584 . 21983) (t 25937 64873 572802 611000)) nil (25938 16708 729505 0) 0 nil])
([nil nil ((21865 . 21868) (#("4" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . -21865) (undo-tree-id26 . -1) 21866 (t 25938 16708 755273 952000)) nil (25938 16743 210270 0) 0 nil])
([nil nil ((21985 . 21986) (t 25938 16743 227489 769000) 21934) nil (25938 17117 838544 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 22036 . 22037) (nil fontified nil 21986 . 22037) (21986 . 22037)) nil (25938 17117 838543 0) 0 nil])
([nil nil ((21902 . 21903) 21876) nil (25938 17117 838542 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21963 . 21964) (nil fontified nil 21903 . 21964) (21903 . 21964)) nil (25938 17117 838541 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 21964) (undo-tree-id95 . 1) (undo-tree-id96 . -1)) nil (25938 17127 843424 0) 0 nil])
([nil nil ((#("<" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 21934) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . 1) (undo-tree-id834 . -1) (undo-tree-id835 . -1)) nil (25938 17141 469239 0) 0 nil] [nil nil ((#(")
  (org-ai-install-yasnippets)) ; if you are using yasnippet and want `ai` snippets
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
#+end_src
* Emacs
#+begin_src emacs-lisp
;; Correct indentation ;)
(add-hook 'rust-mode-hook
          (lambda () (setq indent-tabs-mode nil)))
(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)

(global-display-line-numbers-mode 1)
(global-visual-line-mode t)

(setq display-line-numbers-type 'relative)
(setq scroll-margin 8)
(setq indent-tabs-mode nil)
(setq tab-width 4)


;; I prefer cmd key for meta
(setq mac-option-key-is-meta nil
      mac-command-key-is-meta t
      mac-command-modifier 'meta
      mac-option-modifier 'none)
#+end_src
* Main variables
#+begin_src emacs-lisp
(defvar Dropbox-dir " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 33 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 33 35 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 35 83 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 83 84 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 84 85 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 85 135 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 135 136 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 136 137 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 137 146 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 146 147 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 147 148 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (0 1 [9673]) keymap (keymap) face org-level-1) 148 149 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1) 149 154 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1) 154 155 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 155 177 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 177 178 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 178 181 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 181 204 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 204 230 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 230 241 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 241 247 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 247 252 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 252 256 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 256 281 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 281 300 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 300 319 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 319 340 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 340 341 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 341 378 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 378 406 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 406 407 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 407 408 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 408 412 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 412 450 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 450 451 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 451 455 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 455 473 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 473 474 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 474 478 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 478 501 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 501 502 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 502 506 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 506 520 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 520 521 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 521 522 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 522 525 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 525 551 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 551 552 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 552 556 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 556 584 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 584 616 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 616 649 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 649 682 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 682 691 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 691 692 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) face org-block-end-line) 692 693 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (0 1 [9673]) keymap (keymap) face org-level-1) 693 694 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1) 694 708 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1) 708 709 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 709 731 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 731 732 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 732 733 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 733 739 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 739 740 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 740 751 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face org-block) help-echo nil src-block t) 751 752 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 21962) (undo-tree-id129 . 598) (undo-tree-id130 . -691) (undo-tree-id131 . 44) (undo-tree-id132 . -146) (undo-tree-id133 . 750) (undo-tree-id134 . -751) (undo-tree-id135 . -85) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -87) (undo-tree-id158 . -87) (undo-tree-id159 . -87) (undo-tree-id160 . -87) (undo-tree-id161 . -87) (undo-tree-id162 . -87) (undo-tree-id163 . -87) (undo-tree-id164 . -87) (undo-tree-id165 . -87) (undo-tree-id166 . -87) (undo-tree-id167 . -87) (undo-tree-id168 . -87) (undo-tree-id169 . -87) (undo-tree-id170 . -87) (undo-tree-id171 . -87) (undo-tree-id172 . -87) (undo-tree-id173 . -87) (undo-tree-id174 . -87) (undo-tree-id175 . -87) (undo-tree-id176 . -87) (undo-tree-id177 . -87) (undo-tree-id178 . -87) (undo-tree-id179 . -87) (undo-tree-id180 . -87) (undo-tree-id181 . -87) (undo-tree-id182 . -87) (undo-tree-id183 . -87) (undo-tree-id184 . -87) (undo-tree-id185 . -87) (undo-tree-id186 . -87) (undo-tree-id187 . -87) (undo-tree-id188 . -87) (undo-tree-id189 . -87) (undo-tree-id190 . -87) (undo-tree-id191 . -87) (undo-tree-id192 . -87) (undo-tree-id193 . -87) (undo-tree-id194 . -87) (undo-tree-id195 . -87) (undo-tree-id196 . -87) (undo-tree-id197 . -87) (undo-tree-id198 . -87) (undo-tree-id199 . -87) (undo-tree-id200 . -87) (undo-tree-id201 . -87) (undo-tree-id202 . -87) (undo-tree-id203 . -87) (undo-tree-id204 . -87) (undo-tree-id205 . -87) (undo-tree-id206 . -87) (undo-tree-id207 . -87) (undo-tree-id208 . -87) (undo-tree-id209 . -87) (undo-tree-id210 . -87) (undo-tree-id211 . -87) (undo-tree-id212 . -87) (undo-tree-id213 . -87) (undo-tree-id214 . -87) (undo-tree-id215 . -87) (undo-tree-id216 . -87) (undo-tree-id217 . -87) (undo-tree-id218 . -87) (undo-tree-id219 . -87) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -5) (undo-tree-id235 . -5) (undo-tree-id236 . -5) (undo-tree-id237 . -5) (undo-tree-id238 . -5) (undo-tree-id239 . -5) (undo-tree-id240 . -5) (undo-tree-id241 . -5) (undo-tree-id242 . -5) (undo-tree-id243 . -5) (undo-tree-id244 . -5) (undo-tree-id245 . -5) (undo-tree-id246 . -5) (undo-tree-id247 . -5) (undo-tree-id248 . -5) (undo-tree-id249 . -5) (undo-tree-id250 . -5) (undo-tree-id251 . -5) (undo-tree-id252 . -5) (undo-tree-id253 . -5) (undo-tree-id254 . -5) (undo-tree-id255 . -5) (undo-tree-id256 . -5) (undo-tree-id257 . -5) (undo-tree-id258 . -5) (undo-tree-id259 . -5) (undo-tree-id260 . -5) (undo-tree-id261 . -5) (undo-tree-id262 . -752) 21946) ((21962 . 22714)) (25938 17127 842565 0) 0 nil] [nil nil ((#("  " 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -21820) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (21816 . 21820) 21818) ((#("    " 0 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 21816) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (21820 . 21822) (t 25938 17117 861113 399000)) (25938 17117 838534 0) 0 nil])
([nil nil ((#("ENTER " 0 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 21934) (undo-tree-id765 . -5) (undo-tree-id766 . -6) (undo-tree-id767 . -6) (undo-tree-id768 . -6) (undo-tree-id769 . -6) (undo-tree-id770 . -6) (undo-tree-id771 . -6) (undo-tree-id772 . -6) (undo-tree-id773 . -6) (undo-tree-id774 . -6) (undo-tree-id775 . -6) (undo-tree-id776 . -6) (undo-tree-id777 . -6) (undo-tree-id778 . -6) (undo-tree-id779 . -6) (undo-tree-id780 . -6) (undo-tree-id781 . -6) (undo-tree-id782 . -6) (undo-tree-id783 . -6) (undo-tree-id784 . -6) (undo-tree-id785 . -6) (undo-tree-id786 . -6) (undo-tree-id787 . -6) (undo-tree-id788 . -6) (undo-tree-id789 . -6) (undo-tree-id790 . -6) (undo-tree-id791 . -6) (undo-tree-id792 . -6) (undo-tree-id793 . -6) (undo-tree-id794 . -6) (undo-tree-id795 . -6) (undo-tree-id796 . 6) (undo-tree-id797 . -6)) nil (25938 17141 469205 0) 0 nil])
nil
nil
([nil nil ((#("YOUR " 0 5 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 21934) (undo-tree-id272 . -5) (undo-tree-id273 . -4) (undo-tree-id274 . -5) (undo-tree-id275 . -5) (undo-tree-id276 . -5) (undo-tree-id277 . -5) (undo-tree-id278 . -5) (undo-tree-id279 . -5) (undo-tree-id280 . -5) (undo-tree-id281 . -5) (undo-tree-id282 . -5) (undo-tree-id283 . -5) (undo-tree-id284 . -5) (undo-tree-id285 . -5) (undo-tree-id286 . -5) (undo-tree-id287 . -5) (undo-tree-id288 . -5) (undo-tree-id289 . -5) (undo-tree-id290 . -5) (undo-tree-id291 . -5) (undo-tree-id292 . -5) (undo-tree-id293 . -5) (undo-tree-id294 . -5) (undo-tree-id295 . -5) (undo-tree-id296 . -5) (undo-tree-id297 . -5) (undo-tree-id298 . -5) (undo-tree-id299 . -5) (undo-tree-id300 . -5) (undo-tree-id301 . -5) (undo-tree-id302 . -5) (undo-tree-id303 . -5) (undo-tree-id304 . -5) (undo-tree-id305 . -5) (undo-tree-id306 . -5) (undo-tree-id307 . -5) (undo-tree-id308 . -5) (undo-tree-id309 . -5) (undo-tree-id310 . -5) (undo-tree-id311 . -5) (undo-tree-id312 . -5) (undo-tree-id313 . -5) (undo-tree-id314 . -5) (undo-tree-id315 . -5) (undo-tree-id316 . -5) (undo-tree-id317 . -5) (undo-tree-id318 . -5) (undo-tree-id319 . -5) (undo-tree-id320 . -5) (undo-tree-id321 . -5) (undo-tree-id322 . -5) (undo-tree-id323 . -5) (undo-tree-id324 . -5) (undo-tree-id325 . -5) (undo-tree-id326 . -5) (undo-tree-id327 . -5) (undo-tree-id328 . -5) (undo-tree-id329 . -5) (undo-tree-id330 . -5) (undo-tree-id331 . -5) (undo-tree-id332 . -5) (undo-tree-id333 . -5) (undo-tree-id334 . -5) (undo-tree-id335 . -5) (undo-tree-id336 . -5) (undo-tree-id337 . -5) (undo-tree-id338 . -5) (undo-tree-id339 . -5) (undo-tree-id340 . -5) (undo-tree-id341 . -5) (undo-tree-id342 . -5) (undo-tree-id343 . -5) (undo-tree-id344 . -5) (undo-tree-id345 . -5) (undo-tree-id346 . -5) (undo-tree-id347 . -5) (undo-tree-id348 . -5) (undo-tree-id349 . -5) (undo-tree-id350 . -5) (undo-tree-id351 . -5) (undo-tree-id352 . -5) (undo-tree-id353 . -5) (undo-tree-id354 . -5) (undo-tree-id355 . -5) (undo-tree-id356 . -5) (undo-tree-id357 . -5) (undo-tree-id358 . -5) (undo-tree-id359 . -5) (undo-tree-id360 . -5) (undo-tree-id361 . -5) (undo-tree-id362 . -5) (undo-tree-id363 . -5) (undo-tree-id364 . -5) (undo-tree-id365 . -5) (undo-tree-id366 . -5) (undo-tree-id367 . -5) (undo-tree-id368 . -5) (undo-tree-id369 . -5) (undo-tree-id370 . -5) (undo-tree-id371 . -5) (undo-tree-id372 . -5) (undo-tree-id373 . -5) (undo-tree-id374 . -5) (undo-tree-id375 . -5) (undo-tree-id376 . -5) (undo-tree-id377 . -5) (undo-tree-id378 . -5) (undo-tree-id379 . -5) (undo-tree-id380 . -5) (undo-tree-id381 . -5) (undo-tree-id382 . -5) (undo-tree-id383 . -5) (undo-tree-id384 . -5) (undo-tree-id385 . -5) (undo-tree-id386 . -5) (undo-tree-id387 . -5) (undo-tree-id388 . -5) (undo-tree-id389 . -5) (undo-tree-id390 . -5) (undo-tree-id391 . -5) (undo-tree-id392 . -5) (undo-tree-id393 . -5) (undo-tree-id394 . -5) (undo-tree-id395 . -5) (undo-tree-id396 . -5) (undo-tree-id397 . -5) (undo-tree-id398 . -5) (undo-tree-id399 . -5) (undo-tree-id400 . -5) (undo-tree-id401 . -5) (undo-tree-id402 . -5) (undo-tree-id403 . -5) (undo-tree-id404 . -5) (undo-tree-id405 . -5) (undo-tree-id406 . -5) (undo-tree-id407 . -5) (undo-tree-id408 . -5) (undo-tree-id409 . -5) (undo-tree-id410 . -5) (undo-tree-id411 . -5) (undo-tree-id412 . -5) (undo-tree-id413 . -5) (undo-tree-id414 . -5) (undo-tree-id415 . -5) (undo-tree-id416 . -5) (undo-tree-id417 . -5) (undo-tree-id418 . -5) (undo-tree-id419 . -5) (undo-tree-id420 . -5) (undo-tree-id421 . -5) (undo-tree-id422 . -5) (undo-tree-id423 . -5) (undo-tree-id424 . -5) (undo-tree-id425 . -5) (undo-tree-id426 . -5) (undo-tree-id427 . -5) (undo-tree-id428 . -5) (undo-tree-id429 . -5) (undo-tree-id430 . -5) (undo-tree-id431 . -5) (undo-tree-id432 . -5) (undo-tree-id433 . -5) (undo-tree-id434 . -5) (undo-tree-id435 . -5) (undo-tree-id436 . -5) (undo-tree-id437 . -5) (undo-tree-id438 . -5) (undo-tree-id439 . -5) (undo-tree-id440 . -5) (undo-tree-id441 . -5) (undo-tree-id442 . -5) (undo-tree-id443 . -5) (undo-tree-id444 . -5) (undo-tree-id445 . -5) (undo-tree-id446 . -5) (undo-tree-id447 . -5) (undo-tree-id448 . -5) (undo-tree-id449 . -5) (undo-tree-id450 . -5) (undo-tree-id451 . -5) (undo-tree-id452 . -5) (undo-tree-id453 . -5) (undo-tree-id454 . -5) (undo-tree-id455 . -5) (undo-tree-id456 . -5) (undo-tree-id457 . -5) (undo-tree-id458 . -5) (undo-tree-id459 . -5) (undo-tree-id460 . -5) (undo-tree-id461 . -5) (undo-tree-id462 . -5) (undo-tree-id463 . -5) (undo-tree-id464 . -5) (undo-tree-id465 . -5) (undo-tree-id466 . -5) (undo-tree-id467 . -5) (undo-tree-id468 . -5) (undo-tree-id469 . -5) (undo-tree-id470 . -5) (undo-tree-id471 . -5) (undo-tree-id472 . -5) (undo-tree-id473 . -5) (undo-tree-id474 . -5) (undo-tree-id475 . -5) (undo-tree-id476 . -5) (undo-tree-id477 . -5) (undo-tree-id478 . -5) (undo-tree-id479 . -5) (undo-tree-id480 . -5) (undo-tree-id481 . -5) (undo-tree-id482 . -5) (undo-tree-id483 . -5) (undo-tree-id484 . -5) (undo-tree-id485 . -5) (undo-tree-id486 . -5) (undo-tree-id487 . -5) (undo-tree-id488 . -5) (undo-tree-id489 . -5) (undo-tree-id490 . -5) (undo-tree-id491 . -5) (undo-tree-id492 . -5) (undo-tree-id493 . -5) (undo-tree-id494 . -5) (undo-tree-id495 . -5) (undo-tree-id496 . -5) (undo-tree-id497 . -5) (undo-tree-id498 . -5) (undo-tree-id499 . -5) (undo-tree-id500 . -5) (undo-tree-id501 . -5) (undo-tree-id502 . -5) (undo-tree-id503 . -5) (undo-tree-id504 . -5) (undo-tree-id505 . -5) (undo-tree-id506 . -5) (undo-tree-id507 . -5) (undo-tree-id508 . -5) (undo-tree-id509 . -5) (undo-tree-id510 . -5) (undo-tree-id511 . -5) (undo-tree-id512 . -5) (undo-tree-id513 . -5) (undo-tree-id514 . -5) (undo-tree-id515 . -5) (undo-tree-id516 . -5) (undo-tree-id517 . -5) (undo-tree-id518 . -5) (undo-tree-id519 . -5) (undo-tree-id520 . -5) (undo-tree-id521 . -5) (undo-tree-id522 . -5) (undo-tree-id523 . -5) (undo-tree-id524 . -5) (undo-tree-id525 . -5) (undo-tree-id526 . -5) (undo-tree-id527 . -5) (undo-tree-id528 . -5) (undo-tree-id529 . -5) (undo-tree-id530 . -5) (undo-tree-id531 . -5) (undo-tree-id532 . -5) (undo-tree-id533 . -5) (undo-tree-id534 . -5) (undo-tree-id535 . -5) (undo-tree-id536 . -5) (undo-tree-id537 . -5) (undo-tree-id538 . -5) (undo-tree-id539 . -5) (undo-tree-id540 . -5) (undo-tree-id541 . -5) (undo-tree-id542 . -5) (undo-tree-id543 . -5) (undo-tree-id544 . -5) (undo-tree-id545 . -5) (undo-tree-id546 . -5) (undo-tree-id547 . -5) (undo-tree-id548 . -5) (undo-tree-id549 . -5) (undo-tree-id550 . -5) (undo-tree-id551 . -5) (undo-tree-id552 . -5) (undo-tree-id553 . -5) (undo-tree-id554 . -5) (undo-tree-id555 . -5) (undo-tree-id556 . -5) (undo-tree-id557 . -5) (undo-tree-id558 . -5) (undo-tree-id559 . -5) (undo-tree-id560 . -5) (undo-tree-id561 . -5) (undo-tree-id562 . -5) (undo-tree-id563 . -5) (undo-tree-id564 . -5) (undo-tree-id565 . -5) (undo-tree-id566 . -5) (undo-tree-id567 . -5) (undo-tree-id568 . -5) (undo-tree-id569 . -5) (undo-tree-id570 . -5) (undo-tree-id571 . -5) (undo-tree-id572 . -5) (undo-tree-id573 . -5) (undo-tree-id574 . -5) (undo-tree-id575 . -5) (undo-tree-id576 . -5) (undo-tree-id577 . -5) (undo-tree-id578 . -5) (undo-tree-id579 . -5) (undo-tree-id580 . -5) (undo-tree-id581 . -5) (undo-tree-id582 . -5) (undo-tree-id583 . -5) (undo-tree-id584 . -5) (undo-tree-id585 . -5) (undo-tree-id586 . -5) (undo-tree-id587 . -5) (undo-tree-id588 . -5) (undo-tree-id589 . -5) (undo-tree-id590 . -5) (undo-tree-id591 . -5) (undo-tree-id592 . -5) (undo-tree-id593 . -5) (undo-tree-id594 . -5) (undo-tree-id595 . -5) (undo-tree-id596 . -5) (undo-tree-id597 . -5) (undo-tree-id598 . -5) (undo-tree-id599 . -5) (undo-tree-id600 . -5) (undo-tree-id601 . -5) (undo-tree-id602 . -5) (undo-tree-id603 . -5) (undo-tree-id604 . -5) (undo-tree-id605 . -5) (undo-tree-id606 . -5) (undo-tree-id607 . -5) (undo-tree-id608 . -5) (undo-tree-id609 . -5) (undo-tree-id610 . -5) (undo-tree-id611 . -5) (undo-tree-id612 . -5) (undo-tree-id613 . -5) (undo-tree-id614 . -5) (undo-tree-id615 . -5) (undo-tree-id616 . -5) (undo-tree-id617 . -5) (undo-tree-id618 . -5) (undo-tree-id619 . -5) (undo-tree-id620 . -5) (undo-tree-id621 . -5) (undo-tree-id622 . -5) (undo-tree-id623 . -5) (undo-tree-id624 . -5) (undo-tree-id625 . -5) (undo-tree-id626 . -5) (undo-tree-id627 . -5) (undo-tree-id628 . -5) (undo-tree-id629 . -5) (undo-tree-id630 . -5) (undo-tree-id631 . -5) (undo-tree-id632 . -5) (undo-tree-id633 . -5) (undo-tree-id634 . -5) (undo-tree-id635 . -5) (undo-tree-id636 . -5) (undo-tree-id637 . -5) (undo-tree-id638 . -5) (undo-tree-id639 . -5) (undo-tree-id640 . -5) (undo-tree-id641 . -5) (undo-tree-id642 . -5) (undo-tree-id643 . -5) (undo-tree-id644 . -5) (undo-tree-id645 . -5) (undo-tree-id646 . -5) (undo-tree-id647 . -5) (undo-tree-id648 . -5) (undo-tree-id649 . -5) (undo-tree-id650 . -5) (undo-tree-id651 . -5) (undo-tree-id652 . -5) (undo-tree-id653 . -5) (undo-tree-id654 . -5) (undo-tree-id655 . -5) (undo-tree-id656 . -5) (undo-tree-id657 . -5) (undo-tree-id658 . -5) (undo-tree-id659 . -5) (undo-tree-id660 . -5) (undo-tree-id661 . -5) (undo-tree-id662 . -5) (undo-tree-id663 . -5) (undo-tree-id664 . -5) (undo-tree-id665 . -5) (undo-tree-id666 . -5) (undo-tree-id667 . -5) (undo-tree-id668 . -5) (undo-tree-id669 . -5) (undo-tree-id670 . -5) (undo-tree-id671 . -5) (undo-tree-id672 . -5) (undo-tree-id673 . -5) (undo-tree-id674 . -5) (undo-tree-id675 . -5) (undo-tree-id676 . -5) (undo-tree-id677 . -5) (undo-tree-id678 . -5) (undo-tree-id679 . -5) (undo-tree-id680 . -5) (undo-tree-id681 . -5) (undo-tree-id682 . -5) (undo-tree-id683 . -5) (undo-tree-id684 . -5) (undo-tree-id685 . -5) (undo-tree-id686 . -5) (undo-tree-id687 . -5) (undo-tree-id688 . -5) (undo-tree-id689 . -5) (undo-tree-id690 . -5) (undo-tree-id691 . -5) (undo-tree-id692 . -5) (undo-tree-id693 . -5) (undo-tree-id694 . -5) (undo-tree-id695 . -5) (undo-tree-id696 . -5) (undo-tree-id697 . -5) (undo-tree-id698 . -5) (undo-tree-id699 . -5) (undo-tree-id700 . -5) (undo-tree-id701 . -5) (undo-tree-id702 . -5) (undo-tree-id703 . -5) (undo-tree-id704 . -5) (undo-tree-id705 . -5) (undo-tree-id706 . -5) (undo-tree-id707 . -5) (undo-tree-id708 . -5) (undo-tree-id709 . -5) (undo-tree-id710 . -5) (undo-tree-id711 . -5) (undo-tree-id712 . -5) (undo-tree-id713 . -5) (undo-tree-id714 . -5) (undo-tree-id715 . -5) (undo-tree-id716 . -5) (undo-tree-id717 . -5) (undo-tree-id718 . -5) (undo-tree-id719 . -5) (undo-tree-id720 . -5) (undo-tree-id721 . -5) (undo-tree-id722 . -5) (undo-tree-id723 . -5) (undo-tree-id724 . -5) (undo-tree-id725 . -5) (undo-tree-id726 . -5) (undo-tree-id727 . -5) (undo-tree-id728 . -5) (undo-tree-id729 . -5) (undo-tree-id730 . -5) (undo-tree-id731 . -5) (undo-tree-id732 . -5) (undo-tree-id733 . -5) (undo-tree-id734 . -5) (undo-tree-id735 . -5) (undo-tree-id736 . -5) (undo-tree-id737 . -5) (undo-tree-id738 . -5) (undo-tree-id739 . -5) (undo-tree-id740 . -5) (undo-tree-id741 . -5) (undo-tree-id742 . -5) (undo-tree-id743 . -5) (undo-tree-id744 . -5) (undo-tree-id745 . -5) (undo-tree-id746 . -5) (undo-tree-id747 . -5) (undo-tree-id748 . -5) (undo-tree-id749 . -5) (undo-tree-id750 . -5) (undo-tree-id751 . -5) (undo-tree-id752 . -5) (undo-tree-id753 . -5) (undo-tree-id754 . -5) (undo-tree-id755 . -5) (undo-tree-id756 . -5) (undo-tree-id757 . -5) (undo-tree-id758 . -5) (undo-tree-id759 . -5) (undo-tree-id760 . -5) (undo-tree-id761 . -5) (undo-tree-id762 . -5) (undo-tree-id763 . -5) (undo-tree-id764 . -5)) nil (25938 17141 469168 0) 0 nil])
([nil nil ((#("API " 0 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 21934) (undo-tree-id270 . -3) (undo-tree-id271 . -4)) nil (25938 17141 468709 0) 0 nil])
([nil nil ((#("TOKEN " 0 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 21934) (undo-tree-id268 . -5) (undo-tree-id269 . -6)) nil (25938 17141 468706 0) 0 nil])
([nil nil ((#("HERE" 0 4 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 21934) (undo-tree-id266 . -3) (undo-tree-id267 . -4)) nil (25938 17141 469616 0) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 21934) (undo-tree-id890 . 1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1)) nil (25938 17156 162753 0) 0 nil] [nil nil ((#(">\")" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 21934) (undo-tree-id263 . -2) (undo-tree-id264 . 3) (undo-tree-id265 . -1)) ((21934 . 21937)) (25938 17141 468698 0) 0 nil])
([nil nil ((#("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" 0 50 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 50 51 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 22020) (undo-tree-id836 . -50) (undo-tree-id837 . -31) (undo-tree-id838 . -31) (undo-tree-id839 . -31) (undo-tree-id840 . -31) (undo-tree-id841 . -31) (undo-tree-id842 . -31) (undo-tree-id843 . -31) (undo-tree-id844 . -31) (undo-tree-id845 . -31) (undo-tree-id846 . -31) (undo-tree-id847 . -31) (undo-tree-id848 . -31) (undo-tree-id849 . -31) (undo-tree-id850 . -31) (undo-tree-id851 . -31) (undo-tree-id852 . -31) (undo-tree-id853 . -31) (undo-tree-id854 . -31) (undo-tree-id855 . -31) (undo-tree-id856 . -31) (undo-tree-id857 . -31) (undo-tree-id858 . -31) (undo-tree-id859 . -31) (undo-tree-id860 . -31) (undo-tree-id861 . -31) (undo-tree-id862 . -31) (undo-tree-id863 . -31) (undo-tree-id864 . -31) (undo-tree-id865 . -31) (undo-tree-id866 . -31) (undo-tree-id867 . -31) (undo-tree-id868 . -31) (undo-tree-id869 . -31) (undo-tree-id870 . -31) (undo-tree-id871 . -31) (undo-tree-id872 . -31) (undo-tree-id873 . -31) (undo-tree-id874 . -31) (undo-tree-id875 . -31) (undo-tree-id876 . -31) (undo-tree-id877 . -31) (undo-tree-id878 . -31) (undo-tree-id879 . -31) (undo-tree-id880 . -31) (undo-tree-id881 . -31) (undo-tree-id882 . -31) (undo-tree-id883 . -31) (undo-tree-id884 . -31) (undo-tree-id885 . -31) (undo-tree-id886 . -31) (undo-tree-id887 . -31) (undo-tree-id888 . -51) (undo-tree-id889 . -51)) nil (25938 17156 162747 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 21984 . 21985) (nil fontified nil 21934 . 21985) (21934 . 21985) 21933) nil (25938 17156 162687 0) 0 nil])
([nil nil ((#("(setq org-ai-openai-api-token \"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\")
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 5 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 5 30 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30 31 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 31 81 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 81 82 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 82 83 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 83 84 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 84 85 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 21903) (undo-tree-id894 . -31) (undo-tree-id895 . -84) (undo-tree-id896 . -31) (undo-tree-id897 . -81) (undo-tree-id898 . -31) (undo-tree-id899 . -31) (undo-tree-id900 . -31) (undo-tree-id901 . -31) (undo-tree-id902 . -31) (undo-tree-id903 . -31) (undo-tree-id904 . -31) (undo-tree-id905 . -31) (undo-tree-id906 . -31) (undo-tree-id907 . -31) (undo-tree-id908 . -31) (undo-tree-id909 . -31) (undo-tree-id910 . -31) (undo-tree-id911 . -31) (undo-tree-id912 . -31) (undo-tree-id913 . -31) (undo-tree-id914 . -31) (undo-tree-id915 . -31) (undo-tree-id916 . -31) (undo-tree-id917 . -31) (undo-tree-id918 . -31) (undo-tree-id919 . -31) (undo-tree-id920 . -31) (undo-tree-id921 . -31) (undo-tree-id922 . -31) (undo-tree-id923 . -31) (undo-tree-id924 . -31) (undo-tree-id925 . -31) (undo-tree-id926 . -31) (undo-tree-id927 . -31) (undo-tree-id928 . -31) (undo-tree-id929 . -31) (undo-tree-id930 . -31) (undo-tree-id931 . -31) (undo-tree-id932 . -31) (undo-tree-id933 . -31) (undo-tree-id934 . -31) (undo-tree-id935 . -31) (undo-tree-id936 . -31) (undo-tree-id937 . -31) (undo-tree-id938 . -31) (undo-tree-id939 . -31) (undo-tree-id940 . -31) (undo-tree-id941 . -31) (undo-tree-id942 . -31) (undo-tree-id943 . -31) (undo-tree-id944 . -31) (undo-tree-id945 . -31) (undo-tree-id946 . -31) (undo-tree-id947 . -31) (undo-tree-id948 . -31) (undo-tree-id949 . -31) (undo-tree-id950 . -31) (undo-tree-id951 . -31) (undo-tree-id952 . -31) (undo-tree-id953 . -31) (undo-tree-id954 . -31) (undo-tree-id955 . -31) (undo-tree-id956 . -31) (undo-tree-id957 . -31) (undo-tree-id958 . -31) (undo-tree-id959 . -31) (undo-tree-id960 . -31) (undo-tree-id961 . -31) (undo-tree-id962 . -31) (undo-tree-id963 . -31) (undo-tree-id964 . -31) (undo-tree-id965 . -31) (undo-tree-id966 . -31) (undo-tree-id967 . -31) (undo-tree-id968 . -31) (undo-tree-id969 . -31) (undo-tree-id970 . -31) (undo-tree-id971 . -31) (undo-tree-id972 . -31) (undo-tree-id973 . -31) (undo-tree-id974 . -31) (undo-tree-id975 . -31) (undo-tree-id976 . -31) (undo-tree-id977 . -31) (undo-tree-id978 . -31) (undo-tree-id979 . -31) (undo-tree-id980 . -31) (undo-tree-id981 . -31) (undo-tree-id982 . -31) (undo-tree-id983 . -31) (undo-tree-id984 . -31) (undo-tree-id985 . -31) (undo-tree-id986 . -31) (undo-tree-id987 . -31) (undo-tree-id988 . -31) (undo-tree-id989 . -31) (undo-tree-id990 . -31) (undo-tree-id991 . -31) (undo-tree-id992 . -31) (undo-tree-id993 . -31) (undo-tree-id994 . -31) (undo-tree-id995 . -31) (undo-tree-id996 . -31) (undo-tree-id997 . -31) (undo-tree-id998 . -31) (undo-tree-id999 . -31) (undo-tree-id1000 . -31) (undo-tree-id1001 . -31) (undo-tree-id1002 . -31) (undo-tree-id1003 . -31) (undo-tree-id1004 . -31) (undo-tree-id1005 . -31) (undo-tree-id1006 . -31) (undo-tree-id1007 . -31) (undo-tree-id1008 . -31) (undo-tree-id1009 . -31) (undo-tree-id1010 . -31) (undo-tree-id1011 . -31) (undo-tree-id1012 . -31) (undo-tree-id1013 . -31) (undo-tree-id1014 . -31) (undo-tree-id1015 . -31) (undo-tree-id1016 . -31) (undo-tree-id1017 . -31) (undo-tree-id1018 . -31) (undo-tree-id1019 . -31) (undo-tree-id1020 . -31) (undo-tree-id1021 . -31) (undo-tree-id1022 . -31) (undo-tree-id1023 . -31) (undo-tree-id1024 . -31) (undo-tree-id1025 . -31) (undo-tree-id1026 . -31) (undo-tree-id1027 . -31) (undo-tree-id1028 . -31) (undo-tree-id1029 . -31) (undo-tree-id1030 . -31) (undo-tree-id1031 . -31) (undo-tree-id1032 . -31) (undo-tree-id1033 . -31) (undo-tree-id1034 . -31) (undo-tree-id1035 . -31) (undo-tree-id1036 . -31) (undo-tree-id1037 . -31) (undo-tree-id1038 . -31) (undo-tree-id1039 . -31) (undo-tree-id1040 . -31) (undo-tree-id1041 . -31) (undo-tree-id1042 . -31) (undo-tree-id1043 . -31) (undo-tree-id1044 . -31) (undo-tree-id1045 . -31) (undo-tree-id1046 . -31) (undo-tree-id1047 . -31) (undo-tree-id1048 . -31) (undo-tree-id1049 . -31) (undo-tree-id1050 . -31) (undo-tree-id1051 . -31) (undo-tree-id1052 . -31) (undo-tree-id1053 . -31) (undo-tree-id1054 . -31) (undo-tree-id1055 . -31) (undo-tree-id1056 . -31) (undo-tree-id1057 . -31) (undo-tree-id1058 . -31) (undo-tree-id1059 . -31) (undo-tree-id1060 . -31) (undo-tree-id1061 . -31) (undo-tree-id1062 . -31) (undo-tree-id1063 . -31) (undo-tree-id1064 . -31) (undo-tree-id1065 . -31) (undo-tree-id1066 . -31) (undo-tree-id1067 . -31) (undo-tree-id1068 . -31) (undo-tree-id1069 . -31) (undo-tree-id1070 . -31) (undo-tree-id1071 . -31) (undo-tree-id1072 . -31) (undo-tree-id1073 . -31) (undo-tree-id1074 . -31) (undo-tree-id1075 . -31) (undo-tree-id1076 . -31) (undo-tree-id1077 . -31) (undo-tree-id1078 . -31) (undo-tree-id1079 . -31) (undo-tree-id1080 . -31) (undo-tree-id1081 . -31) (undo-tree-id1082 . -31) (undo-tree-id1083 . -31) (undo-tree-id1084 . -31) (undo-tree-id1085 . -31) (undo-tree-id1086 . -31) (undo-tree-id1087 . -31) (undo-tree-id1088 . -31) (undo-tree-id1089 . -31) (undo-tree-id1090 . -31) (undo-tree-id1091 . -31) (undo-tree-id1092 . -31) (undo-tree-id1093 . -31) (undo-tree-id1094 . -31) (undo-tree-id1095 . -31) (undo-tree-id1096 . -31) (undo-tree-id1097 . -31) (undo-tree-id1098 . -31) (undo-tree-id1099 . -31) (undo-tree-id1100 . -31) (undo-tree-id1101 . -31) (undo-tree-id1102 . -31) (undo-tree-id1103 . -31) (undo-tree-id1104 . -31) (undo-tree-id1105 . -31) (undo-tree-id1106 . -31) (undo-tree-id1107 . -31) (undo-tree-id1108 . -31) (undo-tree-id1109 . -31) (undo-tree-id1110 . -31) (undo-tree-id1111 . -31) (undo-tree-id1112 . -31) (undo-tree-id1113 . -31) (undo-tree-id1114 . -31) (undo-tree-id1115 . -31) (undo-tree-id1116 . -31) (undo-tree-id1117 . -31) (undo-tree-id1118 . -31) (undo-tree-id1119 . -31) (undo-tree-id1120 . -31) (undo-tree-id1121 . -31) (undo-tree-id1122 . -31) (undo-tree-id1123 . -31) (undo-tree-id1124 . -31) (undo-tree-id1125 . -31) (undo-tree-id1126 . -31) (undo-tree-id1127 . -31) (undo-tree-id1128 . -31) (undo-tree-id1129 . -31) (undo-tree-id1130 . -31) (undo-tree-id1131 . -31) (undo-tree-id1132 . -31) (undo-tree-id1133 . -31) (undo-tree-id1134 . -31) (undo-tree-id1135 . -31) (undo-tree-id1136 . -31) (undo-tree-id1137 . -31) (undo-tree-id1138 . -31) (undo-tree-id1139 . -31) (undo-tree-id1140 . -31) (undo-tree-id1141 . -31) (undo-tree-id1142 . -31) (undo-tree-id1143 . -31) (undo-tree-id1144 . -31) (undo-tree-id1145 . -31) (undo-tree-id1146 . -31) (undo-tree-id1147 . -31) (undo-tree-id1148 . -31) (undo-tree-id1149 . -31) (undo-tree-id1150 . -31) (undo-tree-id1151 . -31) (undo-tree-id1152 . -31) (undo-tree-id1153 . -31) (undo-tree-id1154 . -31) (undo-tree-id1155 . -31) (undo-tree-id1156 . -31) (undo-tree-id1157 . -31) (undo-tree-id1158 . -31) (undo-tree-id1159 . -31) (undo-tree-id1160 . -31) (undo-tree-id1161 . -31) (undo-tree-id1162 . -31) (undo-tree-id1163 . -31) (undo-tree-id1164 . -31) (undo-tree-id1165 . -31) (undo-tree-id1166 . -31) (undo-tree-id1167 . -31) (undo-tree-id1168 . -31) (undo-tree-id1169 . -31) (undo-tree-id1170 . -31) (undo-tree-id1171 . -31) (undo-tree-id1172 . -31) (undo-tree-id1173 . -31) (undo-tree-id1174 . -31) (undo-tree-id1175 . -31) (undo-tree-id1176 . -31) (undo-tree-id1177 . -31) (undo-tree-id1178 . -31) (undo-tree-id1179 . -31) (undo-tree-id1180 . -31) (undo-tree-id1181 . -31) (undo-tree-id1182 . -31) (undo-tree-id1183 . -31) (undo-tree-id1184 . -31) (undo-tree-id1185 . -31) (undo-tree-id1186 . -31) (undo-tree-id1187 . -31) (undo-tree-id1188 . -31) (undo-tree-id1189 . -31) (undo-tree-id1190 . -31) (undo-tree-id1191 . -31) (undo-tree-id1192 . -31) (undo-tree-id1193 . -31) (undo-tree-id1194 . -31) (undo-tree-id1195 . -31) (undo-tree-id1196 . -31) (undo-tree-id1197 . -31) (undo-tree-id1198 . -31) (undo-tree-id1199 . -31) (undo-tree-id1200 . -31) (undo-tree-id1201 . -31) (undo-tree-id1202 . -31) (undo-tree-id1203 . -31) (undo-tree-id1204 . -31) (undo-tree-id1205 . -31) (undo-tree-id1206 . -31) (undo-tree-id1207 . -31) (undo-tree-id1208 . -31) (undo-tree-id1209 . -31) (undo-tree-id1210 . -31) (undo-tree-id1211 . -31) (undo-tree-id1212 . -31) (undo-tree-id1213 . -31) (undo-tree-id1214 . -31) (undo-tree-id1215 . -31) (undo-tree-id1216 . -31) (undo-tree-id1217 . -31) (undo-tree-id1218 . -31) (undo-tree-id1219 . -31) (undo-tree-id1220 . -31) (undo-tree-id1221 . -31) (undo-tree-id1222 . -31) (undo-tree-id1223 . -31) (undo-tree-id1224 . -31) (undo-tree-id1225 . -31) (undo-tree-id1226 . -31) (undo-tree-id1227 . -31) (undo-tree-id1228 . -31) (undo-tree-id1229 . -31) (undo-tree-id1230 . -31) (undo-tree-id1231 . -31) (undo-tree-id1232 . -31) (undo-tree-id1233 . -31) (undo-tree-id1234 . -31) (undo-tree-id1235 . -31) (undo-tree-id1236 . -31) (undo-tree-id1237 . -31) (undo-tree-id1238 . -31) (undo-tree-id1239 . -31) (undo-tree-id1240 . -31) (undo-tree-id1241 . -31) (undo-tree-id1242 . -31) (undo-tree-id1243 . -31) (undo-tree-id1244 . -31) (undo-tree-id1245 . -31) (undo-tree-id1246 . -31) (undo-tree-id1247 . -31) (undo-tree-id1248 . -31) (undo-tree-id1249 . -31) (undo-tree-id1250 . -31) (undo-tree-id1251 . -31) (undo-tree-id1252 . -31) (undo-tree-id1253 . -31) (undo-tree-id1254 . -31) (undo-tree-id1255 . -31) (undo-tree-id1256 . -31) (undo-tree-id1257 . -31) (undo-tree-id1258 . -31) (undo-tree-id1259 . -31) (undo-tree-id1260 . -31) (undo-tree-id1261 . -31) (undo-tree-id1262 . -31) (undo-tree-id1263 . -31) (undo-tree-id1264 . -31) (undo-tree-id1265 . -31) (undo-tree-id1266 . -31) (undo-tree-id1267 . -31) (undo-tree-id1268 . -31) (undo-tree-id1269 . -31) (undo-tree-id1270 . -31) (undo-tree-id1271 . -31) (undo-tree-id1272 . -31) (undo-tree-id1273 . -31) (undo-tree-id1274 . -31) (undo-tree-id1275 . -31) (undo-tree-id1276 . -31) (undo-tree-id1277 . -31) (undo-tree-id1278 . -31) (undo-tree-id1279 . -31) (undo-tree-id1280 . -31) (undo-tree-id1281 . -31) (undo-tree-id1282 . -31) (undo-tree-id1283 . -31) (undo-tree-id1284 . -31) (undo-tree-id1285 . -31) (undo-tree-id1286 . -31) (undo-tree-id1287 . -31) (undo-tree-id1288 . -31) (undo-tree-id1289 . -31) (undo-tree-id1290 . -31) (undo-tree-id1291 . -31) (undo-tree-id1292 . -31) (undo-tree-id1293 . -31) (undo-tree-id1294 . -31) (undo-tree-id1295 . -31) (undo-tree-id1296 . -31) (undo-tree-id1297 . -31) (undo-tree-id1298 . -31) (undo-tree-id1299 . -31) (undo-tree-id1300 . -31) (undo-tree-id1301 . -31) (undo-tree-id1302 . -31) (undo-tree-id1303 . -31) (undo-tree-id1304 . -31) (undo-tree-id1305 . -31) (undo-tree-id1306 . -31) (undo-tree-id1307 . -31) (undo-tree-id1308 . -31) (undo-tree-id1309 . -31) (undo-tree-id1310 . -31) (undo-tree-id1311 . -31) (undo-tree-id1312 . -31) (undo-tree-id1313 . -31) (undo-tree-id1314 . -31) (undo-tree-id1315 . -31) (undo-tree-id1316 . -31) (undo-tree-id1317 . -31) (undo-tree-id1318 . -31) (undo-tree-id1319 . -31) (undo-tree-id1320 . -31) (undo-tree-id1321 . -31) (undo-tree-id1322 . -31) (undo-tree-id1323 . -31) (undo-tree-id1324 . -31) (undo-tree-id1325 . -31) (undo-tree-id1326 . -31) (undo-tree-id1327 . -31) (undo-tree-id1328 . -31) (undo-tree-id1329 . -31) (undo-tree-id1330 . -31) (undo-tree-id1331 . -31) (undo-tree-id1332 . -31) (undo-tree-id1333 . -31) (undo-tree-id1334 . -31) (undo-tree-id1335 . -31) (undo-tree-id1336 . -31) (undo-tree-id1337 . -31) (undo-tree-id1338 . -31) (undo-tree-id1339 . -31) (undo-tree-id1340 . -31) (undo-tree-id1341 . -31) (undo-tree-id1342 . -31) (undo-tree-id1343 . -31) (undo-tree-id1344 . -31) (undo-tree-id1345 . -31) (undo-tree-id1346 . -31) (undo-tree-id1347 . -31) (undo-tree-id1348 . -31) (undo-tree-id1349 . -31) (undo-tree-id1350 . -31) (undo-tree-id1351 . -31) (undo-tree-id1352 . -31) (undo-tree-id1353 . -31) (undo-tree-id1354 . -31) (undo-tree-id1355 . -31) (undo-tree-id1356 . -31) (undo-tree-id1357 . -31) (undo-tree-id1358 . -31) (undo-tree-id1359 . -31) (undo-tree-id1360 . -31) (undo-tree-id1361 . -31) (undo-tree-id1362 . -31) (undo-tree-id1363 . -31) (undo-tree-id1364 . -31) (undo-tree-id1365 . -31) (undo-tree-id1366 . -31) (undo-tree-id1367 . -31) (undo-tree-id1368 . -31) (undo-tree-id1369 . -31) (undo-tree-id1370 . -31) (undo-tree-id1371 . -31) (undo-tree-id1372 . -31) (undo-tree-id1373 . -31) (undo-tree-id1374 . -31) (undo-tree-id1375 . -31) (undo-tree-id1376 . -31) (undo-tree-id1377 . -31) (undo-tree-id1378 . -31) (undo-tree-id1379 . -31) (undo-tree-id1380 . -31) (undo-tree-id1381 . -31) (undo-tree-id1382 . -31) (undo-tree-id1383 . -31) (undo-tree-id1384 . -31) (undo-tree-id1385 . -31) (undo-tree-id1386 . -31) (undo-tree-id1387 . -31) (undo-tree-id1388 . -31) (undo-tree-id1389 . -31) (undo-tree-id1390 . -31) (undo-tree-id1391 . -31) (undo-tree-id1392 . -31) (undo-tree-id1393 . -31) (undo-tree-id1394 . -31) (undo-tree-id1395 . -31) (undo-tree-id1396 . -31) (undo-tree-id1397 . -31) (undo-tree-id1398 . -31) (undo-tree-id1399 . -31) (undo-tree-id1400 . -31) (undo-tree-id1401 . -31) (undo-tree-id1402 . -31) (undo-tree-id1403 . -31) (undo-tree-id1404 . -31) (undo-tree-id1405 . -31) (undo-tree-id1406 . -31) (undo-tree-id1407 . -31) (undo-tree-id1408 . -31) (undo-tree-id1409 . -31) (undo-tree-id1410 . -31) (undo-tree-id1411 . -31) (undo-tree-id1412 . -31) (undo-tree-id1413 . -31) (undo-tree-id1414 . -31) (undo-tree-id1415 . -31) (undo-tree-id1416 . -31) (undo-tree-id1417 . -31) (undo-tree-id1418 . -31) (undo-tree-id1419 . -31) (undo-tree-id1420 . -31) (undo-tree-id1421 . -31) (undo-tree-id1422 . -31) (undo-tree-id1423 . -31) (undo-tree-id1424 . -31) (undo-tree-id1425 . -31) (undo-tree-id1426 . -31) (undo-tree-id1427 . -31) (undo-tree-id1428 . -31) (undo-tree-id1429 . -31) (undo-tree-id1430 . -31) (undo-tree-id1431 . -31) (undo-tree-id1432 . -31) (undo-tree-id1433 . -31) (undo-tree-id1434 . -31) (undo-tree-id1435 . -31) (undo-tree-id1436 . -31) (undo-tree-id1437 . -31) (undo-tree-id1438 . -31) (undo-tree-id1439 . -31) (undo-tree-id1440 . -31) (undo-tree-id1441 . -31) (undo-tree-id1442 . -31) (undo-tree-id1443 . -31) (undo-tree-id1444 . -31) (undo-tree-id1445 . -31) (undo-tree-id1446 . -31) (undo-tree-id1447 . -31) (undo-tree-id1448 . -31) (undo-tree-id1449 . -31) (undo-tree-id1450 . -31) (undo-tree-id1451 . -31) (undo-tree-id1452 . -31) 21984 (t 25938 17156 182055 698000)) nil (25938 17254 915831 0) 0 nil])
([nil nil ((590 . 596) (586 . 590) (t 25938 17254 934773 243000)) nil (25938 17301 297275 0) 0 nil])
([nil nil ((596 . 597) (t 25938 17301 318196 907000) 594) nil (25938 17305 1008 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 597 . 598) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -654) (597 . 655)) nil (25938 17305 1004 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) rear-nonsticky t)) . 597) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (t 25938 17305 19073 611000)) nil (25938 17311 480901 0) 0 nil])
([nil nil ((#("elpaca" 0 6 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block))) . 630) (undo-tree-id1457 . -5) (undo-tree-id1458 . -6) (undo-tree-id1459 . -6) (undo-tree-id1460 . -6) (undo-tree-id1461 . -6) (undo-tree-id1462 . -6) (undo-tree-id1463 . -6) (undo-tree-id1464 . -6) (undo-tree-id1465 . -6) (undo-tree-id1466 . -6) (undo-tree-id1467 . -6) (undo-tree-id1468 . -6) (undo-tree-id1469 . -6) (undo-tree-id1470 . -6) (undo-tree-id1471 . -6) (undo-tree-id1472 . -6) (undo-tree-id1473 . -6) (undo-tree-id1474 . -6) (undo-tree-id1475 . -6) (undo-tree-id1476 . -6) (undo-tree-id1477 . -6) (undo-tree-id1478 . -6) (undo-tree-id1479 . -6)) nil (25938 17311 480880 0) 0 nil])
([nil nil ((#("-" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block))) . 630) (undo-tree-id1456 . -1)) nil (25938 17311 480854 0) 0 nil])
([nil current ((630 . 636) (#("setup" 0 5 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block))) . 630) (undo-tree-id1453 . -4) (undo-tree-id1454 . -5) (undo-tree-id1455 . -5)) nil (25938 17311 480850 0) 0 nil])
nil
