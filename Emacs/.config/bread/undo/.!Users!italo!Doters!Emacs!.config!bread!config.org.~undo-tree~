(undo-tree-save-format-version . 1)
"f34c2a2e3e360fa0db24e6f4b89c7fbf37084696"
[nil nil nil nil (25950 22477 869432 0) 0 nil]
([nil nil ((#("** TODO Swiper
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 3 7 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-todo org-todo org-level-2)) 7 14 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 14 15 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 32192) (undo-tree-id53 . -3) (undo-tree-id54 . -14) 32195 (t 25939 19425 857845 495000)) nil (25950 22477 869430 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -22154) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 22155 (22154 . 22155) (22149 . 22154) (#("_" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -22149) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 22150 (22144 . 22150) (22132 . 22155) (#("<s" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -22132) (undo-tree-id35 . -2) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) 22134 (22132 . 22134) (22131 . 22132) (22126 . 22131) (nil fontified nil 22123 . 22126) (nil line-prefix #("**" 0 2 (face org-indent)) 22123 . 22126) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 22123 . 22126) (#("*** " 0 4 (fontified nil line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 22123) (22127 . 22130) (nil fontified t 22126 . 22127) (nil line-prefix #("***" 0 3 (face org-indent)) 22126 . 22127) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 22126 . 22127) (nil keymap (keymap) 22126 . 22127) (nil face org-level-4 22126 . 22127) (nil fontified t 22125 . 22126) (nil line-prefix #("***" 0 3 (face org-indent)) 22125 . 22126) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 22125 . 22126) (nil composition (3 1 [9670]) 22125 . 22126) (nil keymap (keymap) 22125 . 22126) (nil face org-level-4 22125 . 22126) (nil fontified t 22123 . 22125) (nil line-prefix #("***" 0 3 (face org-indent)) 22123 . 22125) (nil wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) 22123 . 22125) (nil face org-hide 22123 . 22125) (nil keymap (keymap) 22123 . 22125) (#("**** " 0 3 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide keymap (keymap)) 3 4 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) composition (3 1 [9670]) keymap (keymap) face org-level-4) 4 5 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) keymap (keymap) face org-level-4)) . 22123) (22128 . 22132) (nil fontified t 22127 . 22128) (nil line-prefix #("**" 0 2 (face org-indent)) 22127 . 22128) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 22127 . 22128) (nil keymap (keymap) 22127 . 22128) (nil face org-level-3 22127 . 22128) (nil fontified t 22126 . 22127) (nil line-prefix #("**" 0 2 (face org-indent)) 22126 . 22127) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 22126 . 22127) (nil composition (2 1 [9632]) 22126 . 22127) (nil keymap (keymap) 22126 . 22127) (nil face org-level-3 22126 . 22127) (nil fontified t 22124 . 22126) (nil line-prefix #("**" 0 2 (face org-indent)) 22124 . 22126) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 22124 . 22126) (nil face org-hide 22124 . 22126) (nil keymap (keymap) 22124 . 22126) (#("*** " 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 22123) (22127 . 22132) (22122 . 22127)) nil (25950 22477 869423 0) 0 nil])
([nil nil ((10779 . 10785) (#("normal" 0 6 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 10779) (undo-tree-id55 . -5) (undo-tree-id56 . -6) (undo-tree-id57 . -6) (t 25950 22477 878102 442000)) nil (25950 23323 432615 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10813) (undo-tree-id59 . -1) 10814 (10813 . 10814) (t 25950 23323 441564 884000)) nil (25950 23426 728300 0) 0 nil])
([nil nil ((#("global" 0 6 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10779) (undo-tree-id58 . -5)) nil (25950 23426 728298 0) 0 nil])
([nil nil ((10779 . 10782)) nil (25950 23426 728287 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10810) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("b" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10811) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("b" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10812) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("b" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10813) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("b" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10814) (undo-tree-id130 . -1) (#("b" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10815) (undo-tree-id131 . -1) (#("b" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10816) (undo-tree-id132 . -1) 10817 (10810 . 10817) (t 25950 23426 732415 280000)) nil (25950 23434 989836 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10778) (undo-tree-id60 . -1) (undo-tree-id61 . -1)) nil (25950 23440 809446 0) 0 nil])
([nil nil ((10778 . 10786) (t 25950 23434 994196 586000)) nil (25950 23446 740559 0) 0 nil] [nil nil ((#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10771) (10755 . 10771) 10818 (#("        " 0 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10767) (10755 . 10767) 10814 (#("    " 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10763) (10755 . 10763) 10810 (#("  " 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10759) (10755 . 10759) 10808 (t 25950 23434 994196 586000)) ((#("    " 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10755) (10759 . 10761) (#("        " 0 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10755) (10763 . 10767) (#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10755) (10767 . 10775) (#("                " 0 16 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10755) (10771 . 10783)) (25950 23440 806566 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10786) (undo-tree-id142 . 1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (t 25950 23446 745182 262000)) nil (25950 23448 573617 0) 0 nil])
nil
([nil nil ((#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10786) (undo-tree-id139 . 1) (undo-tree-id140 . -1) (undo-tree-id141 . -1)) nil (25950 23448 573614 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10786) (undo-tree-id136 . 1) (undo-tree-id137 . -1) (undo-tree-id138 . -1)) nil (25950 23448 573611 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10786) (undo-tree-id133 . 1) (undo-tree-id134 . -1) (undo-tree-id135 . -1)) nil (25950 23527 832837 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 10815 . 10816) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -10872) (10813 . 10873) 10812 (t 25950 23528 670444 585000)) nil (25950 23538 74437 0) 0 nil] [nil nil ((10786 . 10794) (t 25950 23448 578178 174000)) ((#("'global " 0 8 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10786)) (25950 23527 384861 0) 0 nil])
([nil nil ((10838 . 10844) (#("normal" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 1 2 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 2 3 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 3 4 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 4 5 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 5 6 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil)) . 10838) (undo-tree-id215 . -5) (undo-tree-id216 . -6) (undo-tree-id217 . -6)) nil (25950 23538 74434 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10821) (undo-tree-id161 . -1) (undo-tree-id163 . -1) (undo-tree-id165 . -1) (undo-tree-id167 . -1) (undo-tree-id169 . -1) (undo-tree-id171 . -1) (undo-tree-id173 . -1) (undo-tree-id175 . -1) (undo-tree-id177 . -1) (undo-tree-id179 . -1) (undo-tree-id181 . -1) (undo-tree-id183 . -1) (undo-tree-id185 . -1) (undo-tree-id187 . -1) (undo-tree-id189 . -1) (undo-tree-id191 . -1) (undo-tree-id193 . -1) (undo-tree-id195 . -1) (#("w" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -10822) (undo-tree-id196 . -1) (undo-tree-id198 . -1) (undo-tree-id200 . -1) (undo-tree-id202 . -1) (undo-tree-id204 . -1) (undo-tree-id206 . -1) (undo-tree-id208 . -1) (undo-tree-id210 . -1) (undo-tree-id212 . -1) (undo-tree-id214 . -1) 10823 (10821 . 10823) (t 25950 23499 35911 850000)) ((#("bw" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10821) (10821 . 10823)) (25950 23527 120120 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 23551 . 23552) (nil fontified nil 23503 . 23552) (nil fontified nil 23463 . 23503) (nil fontified nil 23423 . 23463) (nil fontified nil 23394 . 23423) (nil fontified nil 23393 . 23394) (nil fontified nil 23358 . 23393) (nil fontified nil 23312 . 23358) (nil fontified nil 23258 . 23312) (nil fontified nil 23219 . 23258) (nil fontified nil 23166 . 23219) (nil fontified nil 23135 . 23166) (nil fontified nil 23134 . 23135) (nil fontified nil 23073 . 23134) (nil fontified nil 23014 . 23073) (nil fontified nil 22954 . 23014) (nil fontified nil 22895 . 22954) (nil fontified nil 22803 . 22895) (nil fontified nil 22767 . 22803) (nil fontified nil 22729 . 22767) (nil fontified nil 22703 . 22729) (nil fontified nil 22673 . 22703) (nil fontified nil 22651 . 22673) (nil fontified nil 22617 . 22651) (nil fontified nil 22616 . 22617) (nil fontified nil 22573 . 22616) (nil fontified nil 22530 . 22573) (nil fontified nil 22484 . 22530) (nil fontified nil 22445 . 22484) (nil fontified nil 22444 . 22445) (nil fontified nil 22401 . 22444) (nil fontified nil 22370 . 22401) (nil fontified nil 22329 . 22370) (nil fontified nil 22303 . 22329) (nil fontified nil 22293 . 22303) (nil fontified nil 22281 . 22293) (nil fontified nil 22263 . 22281) (nil fontified nil 22214 . 22263) (22214 . 23552) (t 25950 23538 79141 22000)) nil (25950 27981 414661 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10778) (undo-tree-id160 . -1)) ((10778 . 10779)) (25950 23526 893810 0) 0 nil])
([nil nil ((#("/" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22353) (undo-tree-id405 . -1) (t 25950 27962 448884 691000)) nil (25950 27998 998246 0) 0 nil] [nil nil ((#(")
  (setq mu4e-maildir " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22368) (undo-tree-id226 . -22) (undo-tree-id227 . -23) 22353 (t 25950 27962 448884 691000)) ((22368 . 22391)) (25950 27980 898269 0) 0 nil] [nil nil ((#(")
  (setq mu4e-maildir " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22368) (undo-tree-id220 . -22) (undo-tree-id221 . -23) 22353 (t 25950 27962 448884 691000)) ((22368 . 22391)) (25950 27975 689979 0) 0 nil] [nil nil ((#(")
  (setq mu4e-maildir " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 9 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22368) (undo-tree-id218 . -22) (undo-tree-id219 . -23) 22353 (t 25950 27962 448884 691000)) ((22368 . 22391)) (25950 27974 113906 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10778) (undo-tree-id157 . -1) (undo-tree-id158 . -1)) ((10778 . 10779)) (25950 23526 479662 0) 0 nil])
([nil nil ((#("path" 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22353) (undo-tree-id403 . -3) (undo-tree-id404 . -4)) nil (25950 27998 998245 0) 0 nil])
([nil nil ((22369 . 22370) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -22369) (undo-tree-id222 . -1) (22369 . 22370) (#("\"" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . -22369) (undo-tree-id223 . -1) (22368 . 22370) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -22368) (undo-tree-id224 . -1) (22368 . 22369) (#("\"" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -22368) (undo-tree-id225 . -1) (22368 . 22369)) ((#("\"" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22368) (undo-tree-id228 . -1) (22368 . 22369) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 22368) (undo-tree-id229 . -1) (22368 . 22369) (#("\"\"" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . 22368) (undo-tree-id230 . -1) (undo-tree-id231 . -2) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (22369 . 22370) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . 22369) (undo-tree-id234 . -1) (22369 . 22370) (#("\"" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . 22369)) (25950 27980 896805 0) 0 nil])
nil
nil
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10778) (undo-tree-id155 . -1) (undo-tree-id156 . -1)) ((10778 . 10779)) (25950 23526 206471 0) 0 nil])
([nil nil ((#("/" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22353) (undo-tree-id402 . -1)) nil (25950 27998 998242 0) 0 nil])
nil
([nil nil ((#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10778) (undo-tree-id153 . -1) (undo-tree-id154 . -1)) ((10778 . 10779)) (25950 23525 985948 0) 0 nil])
([nil nil ((#("to" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22353) (undo-tree-id400 . -1) (undo-tree-id401 . -2)) nil (25950 27998 998240 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10778) (undo-tree-id151 . -1) (undo-tree-id152 . -1)) ((10778 . 10779)) (25950 23525 738797 0) 0 nil])
([nil nil ((#("/" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22353) (undo-tree-id399 . -1)) nil (25950 27998 998238 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10778) (undo-tree-id149 . -1) (undo-tree-id150 . -1)) ((10778 . 10779)) (25950 23525 277156 0) 0 nil])
([nil nil ((#("mu" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22353) (undo-tree-id397 . -1) (undo-tree-id398 . -2)) nil (25950 27998 998237 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10778) (undo-tree-id147 . -1) (undo-tree-id148 . -1)) ((10778 . 10779)) (25950 23525 276659 0) 0 nil])
([nil nil ((#("/" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22353) (undo-tree-id396 . -1)) nil (25950 27998 998234 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 10778) (undo-tree-id145 . -1) (undo-tree-id146 . -1)) ((10778 . 10779) (t 25950 23508 337145 28000)) (25950 23508 333356 0) 0 nil])
([nil nil ((#("mu" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22353) (undo-tree-id394 . -1) (undo-tree-id395 . -2)) nil (25950 27998 998233 0) 0 nil])
nil
([nil nil ((22353 . 22355) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -22353) (22353 . 22354) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -22353) (undo-tree-id255 . -1) (22353 . 22354) (#("/" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -22353) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (22353 . 22354) (#("u" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -22353) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (#("s" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -22354) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#("e" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -22355) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (#("r" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -22356) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) 22357 (22353 . 22357)) nil (25950 27998 998227 0) 0 nil])
([nil nil ((22367 . 22370) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -22367) (undo-tree-id235 . -1) (22367 . 22368) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -22367) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (22363 . 22368) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -22363) (undo-tree-id238 . -1) (22363 . 22364) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -22363) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (22358 . 22364) (#("/" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t org-emphasis t font-lock-fontified t face (font-lock-string-face org-block) help-echo nil src-block t)) . -22357) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) 22358 (22357 . 22358) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -22357) (22357 . 22358) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block))) . -22357) (22356 . 22358) (22354 . 22356)) nil (25950 27998 998089 0) 0 nil])
([nil nil ((22466 . 22478) (#("/" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . -22465) 22466 (22462 . 22466) (t 25950 27999 4378 914000)) nil (25950 28020 597385 0) 0 nil])
([nil nil ((22482 . 22494) (#("/" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . -22481) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) 22482 (22478 . 22482)) nil (25950 28020 597383 0) 0 nil])
([nil nil ((22498 . 22510) (#("/" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . -22497) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) 22498 (22494 . 22498)) nil (25950 28020 597378 0) 0 nil])
([nil nil ((#("  ;; Configureusr local/bin/muusrmlocal/bin/muusrulocal/bin/mu4e for sending emails
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 33 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 33 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 49 62 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 62 84 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 22448) (undo-tree-id855 . -83) (undo-tree-id856 . 22) (undo-tree-id857 . -61) (undo-tree-id858 . -30) (undo-tree-id859 . -33) (undo-tree-id860 . -33) (undo-tree-id861 . -32) (undo-tree-id862 . -33) (undo-tree-id863 . -32) (undo-tree-id864 . -33) (undo-tree-id865 . -33) (undo-tree-id866 . -33) (undo-tree-id867 . -33) (undo-tree-id868 . -33) (undo-tree-id869 . -33) (undo-tree-id870 . -33) (undo-tree-id871 . -39) (undo-tree-id872 . -40) (undo-tree-id873 . -38) (undo-tree-id874 . -40) (undo-tree-id875 . -38) (undo-tree-id876 . -39) (undo-tree-id877 . -43) (undo-tree-id878 . -44) (undo-tree-id879 . -42) (undo-tree-id880 . -44) (undo-tree-id881 . -42) (undo-tree-id882 . -43) (undo-tree-id883 . -46) (undo-tree-id884 . -49) (undo-tree-id885 . -49) (undo-tree-id886 . -48) (undo-tree-id887 . -49) (undo-tree-id888 . -48) (undo-tree-id889 . -49) (undo-tree-id890 . -49) (undo-tree-id891 . -49) (undo-tree-id892 . -49) (undo-tree-id893 . -49) (undo-tree-id894 . -49) (undo-tree-id895 . -49) (undo-tree-id896 . -55) (undo-tree-id897 . -56) (undo-tree-id898 . -54) (undo-tree-id899 . -56) (undo-tree-id900 . -54) (undo-tree-id901 . -55) (undo-tree-id902 . -59) (undo-tree-id903 . -60) (undo-tree-id904 . -58) (undo-tree-id905 . -60) (undo-tree-id906 . -58) (undo-tree-id907 . -59) (undo-tree-id908 . -62) (undo-tree-id909 . -61) (undo-tree-id910 . -61) (undo-tree-id911 . -61) (undo-tree-id912 . -61) (undo-tree-id913 . -61) (undo-tree-id914 . -61) (undo-tree-id915 . -61) (undo-tree-id916 . -61) (undo-tree-id917 . -61) (undo-tree-id918 . -61) (undo-tree-id919 . -61) (undo-tree-id920 . -61) (undo-tree-id921 . -61) (undo-tree-id922 . -61) (undo-tree-id923 . -61) (undo-tree-id924 . -61) (undo-tree-id925 . -61) (undo-tree-id926 . -61) (undo-tree-id927 . -61) (undo-tree-id928 . -61) (undo-tree-id929 . -61) (undo-tree-id930 . -61) (undo-tree-id931 . -61) (undo-tree-id932 . -61) (undo-tree-id933 . -61) (undo-tree-id934 . -61) (undo-tree-id935 . -61) (undo-tree-id936 . -61) (undo-tree-id937 . -84) 22509) nil (25950 28020 597370 0) 0 nil])
([nil nil ((#("  (setq mu4e-sent-folder   \"/gmail/Sent Mail\"
" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 27 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 28 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 44 45 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 45 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id840 . -45) (undo-tree-id841 . 46) (undo-tree-id842 . -44) (undo-tree-id843 . -45) (undo-tree-id844 . -44) (undo-tree-id845 . -44) (undo-tree-id846 . -44) (undo-tree-id847 . -44) (undo-tree-id848 . -44) (undo-tree-id849 . -44) (undo-tree-id850 . -44) (undo-tree-id851 . -44) (undo-tree-id852 . -44) (undo-tree-id853 . -44) (undo-tree-id854 . -46) 22492) nil (25950 28020 597291 0) 0 nil])
([nil nil ((#("        mu4e-drafts-folder \"/gmail/Drafts\"
" 0 27 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 28 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 41 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 42 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id825 . -42) (undo-tree-id826 . 43) (undo-tree-id827 . -41) (undo-tree-id828 . -42) (undo-tree-id829 . -41) (undo-tree-id830 . -41) (undo-tree-id831 . -41) (undo-tree-id832 . -41) (undo-tree-id833 . -41) (undo-tree-id834 . -41) (undo-tree-id835 . -41) (undo-tree-id836 . -41) (undo-tree-id837 . -41) (undo-tree-id838 . -41) (undo-tree-id839 . -43) 22489) nil (25950 28020 597279 0) 0 nil])
([nil nil ((#("        mu4e-trash-folder  \"/gmail/Trash\")
" 0 27 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 28 40 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 40 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 41 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id810 . -42) (undo-tree-id811 . 43) (undo-tree-id812 . -41) (undo-tree-id813 . -42) (undo-tree-id814 . -41) (undo-tree-id815 . -41) (undo-tree-id816 . -41) (undo-tree-id817 . -41) (undo-tree-id818 . -41) (undo-tree-id819 . -41) (undo-tree-id820 . -41) (undo-tree-id821 . -41) (undo-tree-id822 . -41) (undo-tree-id823 . -41) (undo-tree-id824 . -43) 22489) nil (25950 28020 597265 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id808 . 1) (undo-tree-id809 . -1)) nil (25950 28020 597241 0) 0 nil])
([nil nil ((#("  ;; Configure your mail accounts
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 33 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 33 34 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 22448) (undo-tree-id804 . -33) (undo-tree-id805 . 34) (undo-tree-id806 . -33) (undo-tree-id807 . -34)) nil (25950 28020 597239 0) 0 nil])
([nil nil ((#("  (setq mu4e-contexts
" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 21 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id800 . -21) (undo-tree-id801 . 22) (undo-tree-id802 . -21) (undo-tree-id803 . -22)) nil (25950 28020 597235 0) 0 nil])
([nil nil ((#("        `(,(make-mu4e-context
" 0 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 29 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id796 . -29) (undo-tree-id797 . 30) (undo-tree-id798 . -29) (undo-tree-id799 . -30)) nil (25950 28020 597231 0) 0 nil])
([nil nil ((#("            :name \"gmail\"
" 0 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 17 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 18 19 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 19 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 24 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 25 26 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id792 . -25) (undo-tree-id793 . 26) (undo-tree-id794 . -25) (undo-tree-id795 . -26)) nil (25950 28020 597228 0) 0 nil])
([nil nil ((#("            :match-func (lambda (msg)
" 0 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 23 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 31 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id788 . -37) (undo-tree-id789 . 38) (undo-tree-id790 . -37) (undo-tree-id791 . -38)) nil (25950 28020 597224 0) 0 nil])
([nil nil ((#("                          (when msg
" 0 27 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 31 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 35 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id784 . -35) (undo-tree-id785 . 36) (undo-tree-id786 . -35) (undo-tree-id787 . -36)) nil (25950 28020 597220 0) 0 nil])
([nil nil ((#("                            (mu4e-message-contact-field-matches msg :to \"your@gmail.com\")))
" 0 68 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 68 71 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 71 72 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 72 73 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 73 87 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 87 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 88 91 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 91 92 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id780 . -91) (undo-tree-id781 . 92) (undo-tree-id782 . -91) (undo-tree-id783 . -92)) nil (25950 28020 597216 0) 0 nil])
([nil nil ((#("            :vars '((user-mail-address . \"your@gmail.com\")
" 0 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 17 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 42 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 56 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 57 58 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 58 59 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id776 . -58) (undo-tree-id777 . 59) (undo-tree-id778 . -58) (undo-tree-id779 . -59)) nil (25950 28020 597213 0) 0 nil])
([nil nil ((#("                    (mu4e-sent-folder . \"/gmail/Sent Mail\")
" 0 40 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 40 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 41 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 57 58 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 58 59 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 59 60 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id772 . -59) (undo-tree-id773 . 60) (undo-tree-id774 . -59) (undo-tree-id775 . -60)) nil (25950 28020 597209 0) 0 nil])
([nil nil ((#("                    (mu4e-drafts-folder . \"/gmail/Drafts\")
" 0 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 43 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 56 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 57 58 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 58 59 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id768 . -58) (undo-tree-id769 . 59) (undo-tree-id770 . -58) (undo-tree-id771 . -59)) nil (25950 28020 597205 0) 0 nil])
([nil nil ((#("                    (mu4e-trash-folder . \"/gmail/Trash\")))))
" 0 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 42 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 54 55 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 55 60 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 60 61 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id765 . -60) (undo-tree-id766 . 61) (undo-tree-id767 . -60)) nil (25950 28020 597199 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id763 . 1) (undo-tree-id764 . -1)) nil (25950 28020 597196 0) 0 nil])
([nil nil ((#("  ;; Use mu4e for sending mail
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 30 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 22448) (undo-tree-id759 . -30) (undo-tree-id760 . 31) (undo-tree-id761 . -30) (undo-tree-id762 . -31)) nil (25950 28020 597194 0) 0 nil])
([nil nil ((#("  (setq message-send-mail-function 'smtpmail-send-it
" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 52 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id755 . -52) (undo-tree-id756 . 53) (undo-tree-id757 . -52) (undo-tree-id758 . -53)) nil (25950 28020 597191 0) 0 nil])
([nil nil ((#("        smtpmail-stream-type 'starttls
" 0 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id751 . -38) (undo-tree-id752 . 39) (undo-tree-id753 . -38) (undo-tree-id754 . -39)) nil (25950 28020 597187 0) 0 nil])
([nil nil ((#("        smtpmail-default-smtp-server \"smtp.gmail.com\"
" 0 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 38 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 52 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 53 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id747 . -53) (undo-tree-id748 . 54) (undo-tree-id749 . -53) (undo-tree-id750 . -54)) nil (25950 28020 597183 0) 0 nil])
([nil nil ((#("        smtpmail-smtp-server \"smtp.gmail.com\"
" 0 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 29 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 30 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 44 45 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 45 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id743 . -45) (undo-tree-id744 . 46) (undo-tree-id745 . -45) (undo-tree-id746 . -46)) nil (25950 28020 597178 0) 0 nil])
([nil nil ((#("        smtpmail-smtp-service 587)
" 0 34 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 34 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id739 . -34) (undo-tree-id740 . 35) (undo-tree-id741 . -34) (undo-tree-id742 . -35)) nil (25950 28020 597174 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id737 . 1) (undo-tree-id738 . -1)) nil (25950 28020 597170 0) 0 nil])
([nil nil ((#("  ;; Set the default context
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 28 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 22448) (undo-tree-id733 . -28) (undo-tree-id734 . 29) (undo-tree-id735 . -28) (undo-tree-id736 . -29)) nil (25950 28020 597168 0) 0 nil])
([nil nil ((#("  (setq mu4e-context-policy 'pick-first
" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 39 40 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 22448) (undo-tree-id729 . -39) (undo-tree-id730 . 40) (undo-tree-id731 . -39) (undo-tree-id732 . -40)) nil (25950 28020 597164 0) 0 nil])
([nil nil ((#("(use-package mu4e
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 17 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22263) (undo-tree-id718 . -17) (undo-tree-id719 . -18) (undo-tree-id720 . -18) (undo-tree-id721 . -18) (undo-tree-id722 . -18) (undo-tree-id723 . -18) (undo-tree-id724 . -18) (undo-tree-id725 . -18) (undo-tree-id726 . 18) (undo-tree-id727 . -1) (undo-tree-id728 . -18)) nil (25950 28020 597159 0) 0 nil])
([nil nil ((#("  :ensure t
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22263) (undo-tree-id708 . -11) (undo-tree-id709 . -12) (undo-tree-id710 . -12) (undo-tree-id711 . -12) (undo-tree-id712 . -12) (undo-tree-id713 . -12) (undo-tree-id714 . -12) (undo-tree-id715 . -12) (undo-tree-id716 . -11) (undo-tree-id717 . -12)) nil (25950 28020 597149 0) 0 nil])
([nil nil ((#("  :config
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 10 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22263) (undo-tree-id698 . -9) (undo-tree-id699 . -10) (undo-tree-id700 . -10) (undo-tree-id701 . -10) (undo-tree-id702 . -10) (undo-tree-id703 . -10) (undo-tree-id704 . -10) (undo-tree-id705 . -10) (undo-tree-id706 . -9) (undo-tree-id707 . -10)) nil (25950 28020 597140 0) 0 nil])
([nil nil ((#("  ;; Set the path to mu4e
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 25 26 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 22263) (undo-tree-id688 . -25) (undo-tree-id689 . -26) (undo-tree-id690 . -26) (undo-tree-id691 . -26) (undo-tree-id692 . -26) (undo-tree-id693 . -26) (undo-tree-id694 . -26) (undo-tree-id695 . -26) (undo-tree-id696 . -25) (undo-tree-id697 . -26)) nil (25950 28020 597131 0) 0 nil])
([nil nil ((#("  (setq mu4e-mu-binary \"/usr/local/bin/mu\")
" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 23 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 24 25 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 25 28 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 28 34 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 34 38 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 38 41 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 41 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 42 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 43 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22263) (undo-tree-id677 . -43) (undo-tree-id678 . -24) (undo-tree-id679 . -44) (undo-tree-id680 . -44) (undo-tree-id681 . -44) (undo-tree-id682 . -44) (undo-tree-id683 . -44) (undo-tree-id684 . -44) (undo-tree-id685 . -44) (undo-tree-id686 . -43) (undo-tree-id687 . -44)) nil (25950 28020 597114 0) 0 nil])
([nil nil ((#("  (setq mu4e-maildir \"~/Mail\")
" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 21 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 22 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 28 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 29 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22263) (undo-tree-id667 . -30) (undo-tree-id668 . -31) (undo-tree-id669 . -31) (undo-tree-id670 . -31) (undo-tree-id671 . -31) (undo-tree-id672 . -31) (undo-tree-id673 . -31) (undo-tree-id674 . -31) (undo-tree-id675 . -30) (undo-tree-id676 . -31)) nil (25950 28020 597104 0) 0 nil])
([nil nil ((#("  (setq mu4e-get-mail-command \"mbsync -a\")
" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 31 40 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 40 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 41 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22263) (undo-tree-id648 . -42) (undo-tree-id649 . -43) (undo-tree-id650 . -43) (undo-tree-id651 . -43) (undo-tree-id652 . -43) (undo-tree-id653 . -43) (undo-tree-id654 . -43) (undo-tree-id655 . -43) (undo-tree-id656 . -43) (undo-tree-id657 . -43) (undo-tree-id658 . -43) (undo-tree-id659 . -43) (undo-tree-id660 . -43) (undo-tree-id661 . -43) (undo-tree-id662 . -43) (undo-tree-id663 . -43) (undo-tree-id664 . -43) (undo-tree-id665 . -42) (undo-tree-id666 . -43)) nil (25950 28020 597095 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22263) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1)) nil (25950 28020 597075 0) 0 nil])
([nil nil ((#("        mu4e-compose-context-policy nil
" 0 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 39 40 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 22263) (undo-tree-id417 . -39) (undo-tree-id418 . 40) (undo-tree-id419 . -39) (undo-tree-id420 . -39) (undo-tree-id421 . -40)) nil (25950 28020 596883 0) 0 nil])
([nil nil ((#("        mu4e-context-policy-function 'identity))
" 0 48 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 48 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 22263) (undo-tree-id413 . -48) (undo-tree-id414 . 49) (undo-tree-id415 . -48) (undo-tree-id416 . -49)) nil (25950 28020 596879 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 22263) (undo-tree-id411 . 1) (undo-tree-id412 . -1)) nil (25950 28020 597894 0) 0 nil])
([nil nil ((#(";; Install mu4e package if not already installed
" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 22214) (undo-tree-id950 . -48) (undo-tree-id951 . -49) (undo-tree-id952 . -49) (undo-tree-id953 . -49) (undo-tree-id954 . -49) (undo-tree-id955 . -49) (undo-tree-id956 . -49) (undo-tree-id957 . -49) (undo-tree-id958 . -49) (undo-tree-id959 . -49) (undo-tree-id960 . -49) (undo-tree-id961 . -49) (undo-tree-id962 . -49) (undo-tree-id963 . -49) (undo-tree-id964 . -49) (undo-tree-id965 . -49) (undo-tree-id966 . -49) (undo-tree-id967 . -49) (undo-tree-id968 . -49) (undo-tree-id969 . -49) (undo-tree-id970 . -49) (undo-tree-id971 . -49) (undo-tree-id972 . -49) (undo-tree-id973 . -49) (undo-tree-id974 . -49) (undo-tree-id975 . -49) (undo-tree-id976 . -49) (undo-tree-id977 . -49) (undo-tree-id978 . -49) (undo-tree-id979 . -49) (undo-tree-id980 . -49) (undo-tree-id981 . -49) (undo-tree-id982 . -49) (undo-tree-id983 . -49) (undo-tree-id984 . -49) (undo-tree-id985 . -49) (undo-tree-id986 . -49) (undo-tree-id987 . -49) (undo-tree-id988 . -49) (undo-tree-id989 . -49) (undo-tree-id990 . -49) (undo-tree-id991 . -49) (undo-tree-id992 . -49) (undo-tree-id993 . -49) (undo-tree-id994 . -49) (undo-tree-id995 . -49) (undo-tree-id996 . -49) (undo-tree-id997 . -49) (undo-tree-id998 . -49) (undo-tree-id999 . -49) (undo-tree-id1000 . -49) (undo-tree-id1001 . -49) (undo-tree-id1002 . -49) (undo-tree-id1003 . -49) (undo-tree-id1004 . -49) (undo-tree-id1005 . -49) (undo-tree-id1006 . -49) (undo-tree-id1007 . -49) (undo-tree-id1008 . -49) (undo-tree-id1009 . -49) (undo-tree-id1010 . -49) (undo-tree-id1011 . -49) (undo-tree-id1012 . -49) (undo-tree-id1013 . -49) (undo-tree-id1014 . -49) (undo-tree-id1015 . -49) (undo-tree-id1016 . -49) (undo-tree-id1017 . -49) (undo-tree-id1018 . -49) (undo-tree-id1019 . -49) (undo-tree-id1020 . -49) (undo-tree-id1021 . -49) (undo-tree-id1022 . -49) (undo-tree-id1023 . -49) (undo-tree-id1024 . -49) (undo-tree-id1025 . -49) (undo-tree-id1026 . -49) (undo-tree-id1027 . -49) (undo-tree-id1028 . -49) (undo-tree-id1029 . -49) (undo-tree-id1030 . -49) (undo-tree-id1031 . -49) (undo-tree-id1032 . -49) (undo-tree-id1033 . -49) (undo-tree-id1034 . -49) (undo-tree-id1035 . -49) (undo-tree-id1036 . -49) (undo-tree-id1037 . -49) (undo-tree-id1038 . -49) (undo-tree-id1039 . -49) (undo-tree-id1040 . -49) (undo-tree-id1041 . -49) (undo-tree-id1042 . -49) (undo-tree-id1043 . -49) (undo-tree-id1044 . -49) (undo-tree-id1045 . -49) (undo-tree-id1046 . -49) (undo-tree-id1047 . -49) (undo-tree-id1048 . -49) (undo-tree-id1049 . -49) (undo-tree-id1050 . -49) (undo-tree-id1051 . -49) (undo-tree-id1052 . -49) (undo-tree-id1053 . -49) (undo-tree-id1054 . -49) (undo-tree-id1055 . -49) (undo-tree-id1056 . -49) (undo-tree-id1057 . -49) (undo-tree-id1058 . -49) (undo-tree-id1059 . -49) (undo-tree-id1060 . -49) (undo-tree-id1061 . -49) (undo-tree-id1062 . -49) (undo-tree-id1063 . -49) (undo-tree-id1064 . -49) (undo-tree-id1065 . -49) (undo-tree-id1066 . -49) (undo-tree-id1067 . -49) (undo-tree-id1068 . -49) (undo-tree-id1069 . -49) (undo-tree-id1070 . -49) (undo-tree-id1071 . -49) (undo-tree-id1072 . -49) (undo-tree-id1073 . -49) (undo-tree-id1074 . -49) (undo-tree-id1075 . -49) (undo-tree-id1076 . -49) (undo-tree-id1077 . -49) (undo-tree-id1078 . -49) (undo-tree-id1079 . -49) (undo-tree-id1080 . -49) (undo-tree-id1081 . -49) (undo-tree-id1082 . -49) (undo-tree-id1083 . -49) (undo-tree-id1084 . -49) (undo-tree-id1085 . -49) (undo-tree-id1086 . -49) (undo-tree-id1087 . -49) (undo-tree-id1088 . -49) (undo-tree-id1089 . -49) (undo-tree-id1090 . -49) (undo-tree-id1091 . -49) (undo-tree-id1092 . -49) (undo-tree-id1093 . -49) (undo-tree-id1094 . -49) (undo-tree-id1095 . -49) (undo-tree-id1096 . -49) (undo-tree-id1097 . -49) (undo-tree-id1098 . -49) (undo-tree-id1099 . -49) (undo-tree-id1100 . -49) (undo-tree-id1101 . -49) (undo-tree-id1102 . -49) (undo-tree-id1103 . -49) (undo-tree-id1104 . -49) (undo-tree-id1105 . -49) (undo-tree-id1106 . -49) (undo-tree-id1107 . -49) (undo-tree-id1108 . -49) (undo-tree-id1109 . -49) (undo-tree-id1110 . -49) (undo-tree-id1111 . -49) (undo-tree-id1112 . -49) (undo-tree-id1113 . -49) (undo-tree-id1114 . -49) (undo-tree-id1115 . -49) (undo-tree-id1116 . -49) (undo-tree-id1117 . -49) (undo-tree-id1118 . -49) (undo-tree-id1119 . -49) (undo-tree-id1120 . -49) (undo-tree-id1121 . -49) (undo-tree-id1122 . -49) (undo-tree-id1123 . -49) (undo-tree-id1124 . -49) (undo-tree-id1125 . -49) (undo-tree-id1126 . -49) (undo-tree-id1127 . -49) (undo-tree-id1128 . -49) (undo-tree-id1129 . -49) (undo-tree-id1130 . -49) (undo-tree-id1131 . -49) (undo-tree-id1132 . -49) (undo-tree-id1133 . -49) (undo-tree-id1134 . -49) (undo-tree-id1135 . -49) (undo-tree-id1136 . -49) (undo-tree-id1137 . -49) (undo-tree-id1138 . -49) (undo-tree-id1139 . -49) (undo-tree-id1140 . -49) (undo-tree-id1141 . -49) (undo-tree-id1142 . -49) (undo-tree-id1143 . -49) (undo-tree-id1144 . -49) (undo-tree-id1145 . -49) (undo-tree-id1146 . -49) (undo-tree-id1147 . -49) (undo-tree-id1148 . -49) (undo-tree-id1149 . -49) (undo-tree-id1150 . -49) (undo-tree-id1151 . -49) (undo-tree-id1152 . -49) (undo-tree-id1153 . -49) (undo-tree-id1154 . -49) (undo-tree-id1155 . -49) (undo-tree-id1156 . -49) (undo-tree-id1157 . -49) (undo-tree-id1158 . -49) (undo-tree-id1159 . -49) (undo-tree-id1160 . -49) (undo-tree-id1161 . -49) (undo-tree-id1162 . -49) (undo-tree-id1163 . -49) (undo-tree-id1164 . -49) (undo-tree-id1165 . -49) (undo-tree-id1166 . -49) (undo-tree-id1167 . -49) (undo-tree-id1168 . -49) (undo-tree-id1169 . -49) (undo-tree-id1170 . -49) (undo-tree-id1171 . -49) (undo-tree-id1172 . -49) (undo-tree-id1173 . -49) (undo-tree-id1174 . -49) (undo-tree-id1175 . -49) (undo-tree-id1176 . -49) (undo-tree-id1177 . -49) (undo-tree-id1178 . -49) (undo-tree-id1179 . -49) (undo-tree-id1180 . -49) (undo-tree-id1181 . -49) (undo-tree-id1182 . -49) (undo-tree-id1183 . -49) (undo-tree-id1184 . -49) (undo-tree-id1185 . -49) (undo-tree-id1186 . -49) (undo-tree-id1187 . -49) (undo-tree-id1188 . -49) (undo-tree-id1189 . -49) (undo-tree-id1190 . -49) (undo-tree-id1191 . -49) (undo-tree-id1192 . -49) (undo-tree-id1193 . -49) (undo-tree-id1194 . -49) (undo-tree-id1195 . -49) (undo-tree-id1196 . -49) (undo-tree-id1197 . -49) (undo-tree-id1198 . -49) (undo-tree-id1199 . -49) (undo-tree-id1200 . -49) (undo-tree-id1201 . -49) (undo-tree-id1202 . -49) (undo-tree-id1203 . -49) (undo-tree-id1204 . -49) (undo-tree-id1205 . -49) (undo-tree-id1206 . -49) (undo-tree-id1207 . -49) (undo-tree-id1208 . -49) (undo-tree-id1209 . -49) (undo-tree-id1210 . -49) (undo-tree-id1211 . -49) (undo-tree-id1212 . -49) (undo-tree-id1213 . -49) (undo-tree-id1214 . -49) (undo-tree-id1215 . -49) (undo-tree-id1216 . -49) (undo-tree-id1217 . -49) (undo-tree-id1218 . -49) (undo-tree-id1219 . -49) (undo-tree-id1220 . -49) (undo-tree-id1221 . -49) (undo-tree-id1222 . -49) (undo-tree-id1223 . -49) (undo-tree-id1224 . -49) (undo-tree-id1225 . -49) (undo-tree-id1226 . -49) (undo-tree-id1227 . -49) (undo-tree-id1228 . -49) (undo-tree-id1229 . -49) (undo-tree-id1230 . -49) (undo-tree-id1231 . -49) (undo-tree-id1232 . -49) (undo-tree-id1233 . -49) (undo-tree-id1234 . -49) (undo-tree-id1235 . -49) (undo-tree-id1236 . -49) (undo-tree-id1237 . -49) (undo-tree-id1238 . -49) (undo-tree-id1239 . -49) (undo-tree-id1240 . -49) (undo-tree-id1241 . -49) (undo-tree-id1242 . -49) (undo-tree-id1243 . -49) (undo-tree-id1244 . -49) (undo-tree-id1245 . -49) (undo-tree-id1246 . -49) (undo-tree-id1247 . -49) (undo-tree-id1248 . -49) (undo-tree-id1249 . -49) (undo-tree-id1250 . -49) (undo-tree-id1251 . -49) (undo-tree-id1252 . -49) (undo-tree-id1253 . -49) (undo-tree-id1254 . -49) (undo-tree-id1255 . -49) (undo-tree-id1256 . -49) (undo-tree-id1257 . -49) (undo-tree-id1258 . -49) (undo-tree-id1259 . -49) (undo-tree-id1260 . -49) (undo-tree-id1261 . -49) (undo-tree-id1262 . -49) (undo-tree-id1263 . -49) (undo-tree-id1264 . -49) (undo-tree-id1265 . -49) (undo-tree-id1266 . -49) (undo-tree-id1267 . -49) (undo-tree-id1268 . -49) (undo-tree-id1269 . -49) (t 25950 28021 195536 62000)) nil (25950 28022 306843 0) 0 nil] [nil nil ((#("#+end_src
" 0 9 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 9 10 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) face org-block-end-line)) . 22263) (undo-tree-id406 . -9) (undo-tree-id407 . -9) (undo-tree-id408 . 10) (undo-tree-id409 . -9) (undo-tree-id410 . -10)) ((22263 . 22273)) (25950 28020 596870 0) 0 nil])
([nil nil ((22214 . 22215) (t 25950 28022 315051 338000)) nil (25950 28023 371012 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 24251 . 24252) (nil fontified nil 24192 . 24252) (nil fontified nil 24166 . 24192) (nil fontified nil 24165 . 24166) (nil fontified nil 24116 . 24165) (nil fontified nil 24076 . 24116) (nil fontified nil 24036 . 24076) (nil fontified nil 24007 . 24036) (nil fontified nil 24006 . 24007) (nil fontified nil 23948 . 24006) (nil fontified nil 23898 . 23948) (nil fontified nil 23834 . 23898) (nil fontified nil 23782 . 23834) (nil fontified nil 23724 . 23782) (nil fontified nil 23664 . 23724) (nil fontified nil 23608 . 23664) (nil fontified nil 23546 . 23608) (nil fontified nil 23451 . 23546) (nil fontified nil 23415 . 23451) (nil fontified nil 23377 . 23415) (nil fontified nil 23350 . 23377) (nil fontified nil 23320 . 23350) (nil fontified nil 23319 . 23320) (nil fontified nil 23263 . 23319) (nil fontified nil 23213 . 23263) (nil fontified nil 23151 . 23213) (nil fontified nil 23100 . 23151) (nil fontified nil 23043 . 23100) (nil fontified nil 22984 . 23043) (nil fontified nil 22924 . 22984) (nil fontified nil 22857 . 22924) (nil fontified nil 22757 . 22857) (nil fontified nil 22721 . 22757) (nil fontified nil 22683 . 22721) (nil fontified nil 22657 . 22683) (nil fontified nil 22627 . 22657) (nil fontified nil 22605 . 22627) (nil fontified nil 22571 . 22605) (nil fontified nil 22570 . 22571) (nil fontified nil 22527 . 22570) (nil fontified nil 22484 . 22527) (nil fontified nil 22438 . 22484) (nil fontified nil 22399 . 22438) (nil fontified nil 22398 . 22399) (nil fontified nil 22355 . 22398) (nil fontified nil 22324 . 22355) (nil fontified nil 22280 . 22324) (nil fontified nil 22254 . 22280) (nil fontified nil 22244 . 22254) (nil fontified nil 22232 . 22244) (nil fontified nil 22214 . 22232) (22214 . 24252) (t 25950 28023 379399 69000)) nil (25950 28472 873665 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 24252) (undo-tree-id1362 . 1) (undo-tree-id1363 . -1)) nil (25950 28472 873660 0) 0 nil])
([nil nil ((#(";; Optional: Key bindings
" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3 26 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 24166) (undo-tree-id1332 . -25) (undo-tree-id1333 . -26) (undo-tree-id1334 . -26) (undo-tree-id1335 . -26) (undo-tree-id1336 . -26) (undo-tree-id1337 . -26) (undo-tree-id1338 . -26) (undo-tree-id1339 . -26) (undo-tree-id1340 . -26) (undo-tree-id1341 . -26) (undo-tree-id1342 . -26) (undo-tree-id1343 . -26) (undo-tree-id1344 . -26) (undo-tree-id1345 . -26) (undo-tree-id1346 . -26) (undo-tree-id1347 . -26) (undo-tree-id1348 . -26) (undo-tree-id1349 . -26) (undo-tree-id1350 . -26) (undo-tree-id1351 . -26) (undo-tree-id1352 . -26) (undo-tree-id1353 . -26) (undo-tree-id1354 . -26) (undo-tree-id1355 . -26) (undo-tree-id1356 . -26) (undo-tree-id1357 . -26) (undo-tree-id1358 . -26) (undo-tree-id1359 . -26) (undo-tree-id1360 . -26) (undo-tree-id1361 . -26)) nil (25950 28472 873657 0) 0 nil])
([nil nil ((#("(global-set-key (kbd \"<your preferred key binding>\") 'mu4e)
" 0 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 21 51 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 51 59 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 59 60 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 24166) (undo-tree-id1270 . -59) (undo-tree-id1271 . -60) (undo-tree-id1272 . -60) (undo-tree-id1273 . -60) (undo-tree-id1274 . -60) (undo-tree-id1275 . -60) (undo-tree-id1276 . -60) (undo-tree-id1277 . -60) (undo-tree-id1278 . -60) (undo-tree-id1279 . -60) (undo-tree-id1280 . -60) (undo-tree-id1281 . -60) (undo-tree-id1282 . -60) (undo-tree-id1283 . -60) (undo-tree-id1284 . -60) (undo-tree-id1285 . -60) (undo-tree-id1286 . -60) (undo-tree-id1287 . -60) (undo-tree-id1288 . -60) (undo-tree-id1289 . -60) (undo-tree-id1290 . -60) (undo-tree-id1291 . -60) (undo-tree-id1292 . -60) (undo-tree-id1293 . -60) (undo-tree-id1294 . -60) (undo-tree-id1295 . -60) (undo-tree-id1296 . -60) (undo-tree-id1297 . -60) (undo-tree-id1298 . -60) (undo-tree-id1299 . -60) (undo-tree-id1300 . -60) (undo-tree-id1301 . -60) (undo-tree-id1302 . -60) (undo-tree-id1303 . -60) (undo-tree-id1304 . -60) (undo-tree-id1305 . -60) (undo-tree-id1306 . -60) (undo-tree-id1307 . -60) (undo-tree-id1308 . -60) (undo-tree-id1309 . -60) (undo-tree-id1310 . -60) (undo-tree-id1311 . -60) (undo-tree-id1312 . -60) (undo-tree-id1313 . -60) (undo-tree-id1314 . -60) (undo-tree-id1315 . -60) (undo-tree-id1316 . -60) (undo-tree-id1317 . -60) (undo-tree-id1318 . -60) (undo-tree-id1319 . -60) (undo-tree-id1320 . -60) (undo-tree-id1321 . -60) (undo-tree-id1322 . -60) (undo-tree-id1323 . -60) (undo-tree-id1324 . -60) (undo-tree-id1325 . -60) (undo-tree-id1326 . -59) (undo-tree-id1327 . 60) (undo-tree-id1328 . -1) (undo-tree-id1329 . 2) (undo-tree-id1330 . -59) (undo-tree-id1331 . -60)) nil (25950 28472 873625 0) 0 nil])
([nil nil ((#("k" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -24164) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (#("k" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -24165) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (#("k" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -24166) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (#("k" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -24167) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (#("k" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -24168) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (#("k" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -24169) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) 24170 (24164 . 24170) (t 25950 28472 883400 292000)) nil (25950 28719 624334 0) 0 nil])
([nil nil ((#("  :ensure t
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22232) (undo-tree-id1699 . -11) (undo-tree-id1700 . -10) (undo-tree-id1701 . -10) (undo-tree-id1702 . -10) (undo-tree-id1703 . -10) (undo-tree-id1704 . -10) (undo-tree-id1705 . -10) (undo-tree-id1706 . -10) (undo-tree-id1707 . -10) (undo-tree-id1708 . -10) (undo-tree-id1709 . -10) (undo-tree-id1710 . -10) (undo-tree-id1711 . -10) (undo-tree-id1712 . -10) (undo-tree-id1713 . -10) (undo-tree-id1714 . -10) (undo-tree-id1715 . -10) (undo-tree-id1716 . -10) (undo-tree-id1717 . -10) (undo-tree-id1718 . -10) (undo-tree-id1719 . -10) (undo-tree-id1720 . -10) (undo-tree-id1721 . -10) (undo-tree-id1722 . -10) (undo-tree-id1723 . -10) (undo-tree-id1724 . -10) (undo-tree-id1725 . -12) 22242 (t 25950 28719 632523 906000)) nil (25950 28722 732161 0) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -24152) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (#("f" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -24153) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (#("s" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -24154) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) 24155 (24152 . 24155) (t 25950 28722 740803 574000)) nil (25950 28809 72742 0) 0 nil])
([nil nil ((24165 . 24177) (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 24165) (24164 . 24166) 22197 (t 25950 28809 592344 118000)) nil (25950 28815 299109 0) 0 nil] [nil nil ((22230 . 22231) (22215 . 22230) (22214 . 22216) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face org-block-begin-line)) . -22214) (22214 . 22215) (22214 . 22215) 22220 (t 25950 28735 8535 968000)) ((#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22214) (undo-tree-id1983 . 1) (undo-tree-id1984 . 1) (undo-tree-id1985 . 1) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face org-block-begin-line)) . 22214) (undo-tree-id1986 . 1) (undo-tree-id1987 . 1) (22214 . 22215) (#("()" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22214) (undo-tree-id1988 . 1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . 1) (undo-tree-id2095 . -2) (undo-tree-id2096 . 2) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (#("use-package mu4" 0 11 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 11 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 15 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block))) . 22215) (undo-tree-id2129 . -15) (undo-tree-id2130 . -15) (undo-tree-id2131 . -15) (undo-tree-id2132 . -15) (undo-tree-id2133 . -15) (undo-tree-id2134 . -15) (undo-tree-id2135 . -15) (undo-tree-id2136 . -15) (undo-tree-id2137 . -15) (undo-tree-id2138 . -15) (undo-tree-id2139 . -15) (undo-tree-id2140 . -15) (undo-tree-id2141 . -15) (undo-tree-id2142 . -15) (undo-tree-id2143 . -15) (undo-tree-id2144 . -15) (undo-tree-id2145 . -15) (undo-tree-id2146 . -15) (undo-tree-id2147 . -15) (undo-tree-id2148 . -15) (undo-tree-id2149 . -15) (undo-tree-id2150 . -15) (undo-tree-id2151 . -15) (undo-tree-id2152 . -15) (undo-tree-id2153 . -15) (undo-tree-id2154 . -15) (undo-tree-id2155 . -15) (undo-tree-id2156 . -15) (undo-tree-id2157 . -15) (undo-tree-id2158 . -15) (undo-tree-id2159 . -15) (undo-tree-id2160 . -15) (undo-tree-id2161 . -15) (undo-tree-id2162 . -15) (undo-tree-id2163 . -15) (undo-tree-id2164 . -15) (undo-tree-id2165 . -15) (undo-tree-id2166 . -15) (undo-tree-id2167 . -15) (undo-tree-id2168 . -15) (undo-tree-id2169 . -15) (undo-tree-id2170 . -15) (undo-tree-id2171 . -15) (undo-tree-id2172 . -15) (undo-tree-id2173 . -15) (undo-tree-id2174 . -15) (undo-tree-id2175 . -15) (undo-tree-id2176 . -15) (undo-tree-id2177 . -15) (undo-tree-id2178 . -15) (undo-tree-id2179 . -15) (undo-tree-id2180 . -15) (undo-tree-id2181 . -15) (undo-tree-id2182 . -15) (undo-tree-id2183 . -15) (undo-tree-id2184 . -15) (undo-tree-id2185 . -15) (undo-tree-id2186 . -15) (undo-tree-id2187 . -15) (undo-tree-id2188 . -15) (undo-tree-id2189 . -15) (undo-tree-id2190 . -15) (undo-tree-id2191 . -15) (undo-tree-id2192 . -15) (undo-tree-id2193 . -15) (undo-tree-id2194 . -15) (undo-tree-id2195 . -15) (undo-tree-id2196 . -15) (undo-tree-id2197 . -15) (undo-tree-id2198 . -15) (undo-tree-id2199 . -15) (undo-tree-id2200 . -15) (undo-tree-id2201 . -15) (undo-tree-id2202 . -15) (undo-tree-id2203 . -15) (undo-tree-id2204 . -15) (undo-tree-id2205 . -15) (undo-tree-id2206 . -15) (undo-tree-id2207 . -15) (undo-tree-id2208 . -15) (undo-tree-id2209 . -15) (undo-tree-id2210 . -15) (undo-tree-id2211 . -15) (undo-tree-id2212 . -15) (undo-tree-id2213 . -15) (undo-tree-id2214 . -15) (undo-tree-id2215 . -15) (undo-tree-id2216 . -15) (undo-tree-id2217 . -15) (undo-tree-id2218 . -15) (undo-tree-id2219 . -15) (undo-tree-id2220 . -15) (undo-tree-id2221 . -15) (undo-tree-id2222 . -15) (undo-tree-id2223 . -15) (undo-tree-id2224 . -15) (undo-tree-id2225 . -15) (undo-tree-id2226 . -15) (undo-tree-id2227 . -15) (undo-tree-id2228 . -15) (undo-tree-id2229 . -15) (undo-tree-id2230 . -15) (undo-tree-id2231 . -15) (undo-tree-id2232 . -15) (undo-tree-id2233 . -15) (undo-tree-id2234 . -15) (undo-tree-id2235 . -15) (undo-tree-id2236 . -15) (undo-tree-id2237 . -15) (undo-tree-id2238 . -15) (undo-tree-id2239 . -15) (undo-tree-id2240 . -15) (undo-tree-id2241 . -15) (undo-tree-id2242 . -15) (undo-tree-id2243 . -15) (undo-tree-id2244 . -15) (undo-tree-id2245 . -15) (undo-tree-id2246 . -15) (undo-tree-id2247 . -15) (undo-tree-id2248 . -15) (undo-tree-id2249 . -15) (undo-tree-id2250 . -15) (undo-tree-id2251 . -15) (undo-tree-id2252 . -15) (undo-tree-id2253 . -15) (undo-tree-id2254 . -15) (undo-tree-id2255 . -15) (undo-tree-id2256 . -15) (undo-tree-id2257 . -15) (undo-tree-id2258 . -15) (undo-tree-id2259 . -15) (undo-tree-id2260 . -15) (undo-tree-id2261 . -15) (undo-tree-id2262 . -15) (undo-tree-id2263 . -15) (undo-tree-id2264 . -15) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block))) . 22230) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1)) (25950 28808 576245 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 24164) (undo-tree-id2395 . -1) (t 25950 28815 308680 860000)) nil (25950 28819 995437 0) 0 nil])
([nil nil ((#("(use-package mu4e)
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 17 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 17 18 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 18 19 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22233) (undo-tree-id1818 . 2) (undo-tree-id1819 . -17) (undo-tree-id1820 . -17) (undo-tree-id1821 . -17) (undo-tree-id1822 . -16) (undo-tree-id1823 . -16) (undo-tree-id1824 . -16) (undo-tree-id1825 . -16) (undo-tree-id1826 . -16) (undo-tree-id1827 . -16) (undo-tree-id1828 . -16) (undo-tree-id1829 . -16) (undo-tree-id1830 . -16) (undo-tree-id1831 . -17) (undo-tree-id1832 . -17) (undo-tree-id1833 . -17) (undo-tree-id1834 . -17) (undo-tree-id1835 . -17) (undo-tree-id1836 . -17) (undo-tree-id1837 . -17) (undo-tree-id1838 . -17) (undo-tree-id1839 . -17) (undo-tree-id1840 . -17) (undo-tree-id1841 . -17) (undo-tree-id1842 . -17) (undo-tree-id1843 . -17) (undo-tree-id1844 . -17) (undo-tree-id1845 . -17) (undo-tree-id1846 . -17) (undo-tree-id1847 . -17) (undo-tree-id1848 . -17) (undo-tree-id1849 . -17) (undo-tree-id1850 . -17) (undo-tree-id1851 . -17) (undo-tree-id1852 . -17) (undo-tree-id1853 . -17) (undo-tree-id1854 . -17) (undo-tree-id1855 . -17) (undo-tree-id1856 . -17) (undo-tree-id1857 . -17) (undo-tree-id1858 . -17) (undo-tree-id1859 . -17) (undo-tree-id1860 . -17) (undo-tree-id1861 . -17) (undo-tree-id1862 . -17) (undo-tree-id1863 . -17) (undo-tree-id1864 . -17) (undo-tree-id1865 . -17) (undo-tree-id1866 . -17) (undo-tree-id1867 . -17) (undo-tree-id1868 . -17) (undo-tree-id1869 . -17) (undo-tree-id1870 . -17) (undo-tree-id1871 . -17) (undo-tree-id1872 . -17) (undo-tree-id1873 . -17) (undo-tree-id1874 . -17) (undo-tree-id1875 . -17) (undo-tree-id1876 . -17) (undo-tree-id1877 . -17) (undo-tree-id1878 . -17) (undo-tree-id1879 . -17) (undo-tree-id1880 . -17) (undo-tree-id1881 . -17) (undo-tree-id1882 . -17) (undo-tree-id1883 . -17) (undo-tree-id1884 . -17) (undo-tree-id1885 . -17) (undo-tree-id1886 . -17) (undo-tree-id1887 . -17) (undo-tree-id1888 . -17) (undo-tree-id1889 . -17) (undo-tree-id1890 . -17) (undo-tree-id1891 . -17) (undo-tree-id1892 . -17) (undo-tree-id1893 . -17) (undo-tree-id1894 . -17) (undo-tree-id1895 . -17) (undo-tree-id1896 . -17) (undo-tree-id1897 . -17) (undo-tree-id1898 . -17) (undo-tree-id1899 . -17) (undo-tree-id1900 . -17) (undo-tree-id1901 . -17) (undo-tree-id1902 . -17) (undo-tree-id1903 . -17) (undo-tree-id1904 . -17) (undo-tree-id1905 . -17) (undo-tree-id1906 . -17) (undo-tree-id1907 . -17) (undo-tree-id1908 . -17) (undo-tree-id1909 . -17) (undo-tree-id1910 . -17) (undo-tree-id1911 . -17) (undo-tree-id1912 . -17) (undo-tree-id1913 . -17) (undo-tree-id1914 . -17) (undo-tree-id1915 . -17) (undo-tree-id1916 . -17) (undo-tree-id1917 . -17) (undo-tree-id1918 . -17) (undo-tree-id1919 . -17) (undo-tree-id1920 . -17) (undo-tree-id1921 . -17) (undo-tree-id1922 . -17) (undo-tree-id1923 . -17) (undo-tree-id1924 . 2) (undo-tree-id1925 . -18) (undo-tree-id1926 . 19) (undo-tree-id1927 . -1) (undo-tree-id1928 . -17) (undo-tree-id1929 . -17) (undo-tree-id1930 . -17) (undo-tree-id1931 . -17) (undo-tree-id1932 . -17) (undo-tree-id1933 . -17) (undo-tree-id1934 . -17) (undo-tree-id1935 . -17) (undo-tree-id1936 . -17) (undo-tree-id1937 . -17) (undo-tree-id1938 . -17) (undo-tree-id1939 . -17) (undo-tree-id1940 . -17) (undo-tree-id1941 . -17) (undo-tree-id1942 . -17) (22210 . 22233) (#("#+begin_src emacs-lisp
" 0 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 22 23 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face org-block-begin-line)) . 22191) (undo-tree-id1943 . -12) (22214 . 22233) 22231 (t 25950 28803 7073 749000)) ((#("(use-package mu4e)
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t) 1 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t) 12 13 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t) 13 17 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t) 17 18 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t) 18 19 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t)) . 22214) (undo-tree-id1944 . -19) (undo-tree-id1945 . -19) (undo-tree-id1946 . -19) (undo-tree-id1947 . -19) (undo-tree-id1948 . -19) (undo-tree-id1949 . -19) (undo-tree-id1950 . -19) (undo-tree-id1951 . -19) (undo-tree-id1952 . -19) (undo-tree-id1953 . -19) (undo-tree-id1954 . -19) (undo-tree-id1955 . -19) (undo-tree-id1956 . -19) (undo-tree-id1957 . -19) (undo-tree-id1958 . -19) (undo-tree-id1959 . -19) (undo-tree-id1960 . -19) (undo-tree-id1961 . -19) (undo-tree-id1962 . -19) (undo-tree-id1963 . -19) (undo-tree-id1964 . -19) (undo-tree-id1965 . -19) (22191 . 22214) (#("#+begin_src emacs-lisp
" 0 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 22 23 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face org-block-begin-line)) . 22210) (undo-tree-id1966 . -23) (undo-tree-id1967 . -23) (undo-tree-id1968 . -23) (undo-tree-id1969 . -23) (undo-tree-id1970 . -23) (undo-tree-id1971 . -23) (undo-tree-id1972 . -23) (undo-tree-id1973 . -23) (undo-tree-id1974 . -23) (undo-tree-id1975 . -23) (undo-tree-id1976 . -23) (undo-tree-id1977 . -23) (undo-tree-id1978 . -23) (undo-tree-id1979 . -23) (undo-tree-id1980 . -23) (undo-tree-id1981 . -23) (undo-tree-id1982 . -23) (22233 . 22252) (t 25950 28808 415407 898000)) (25950 28808 405923 0) 0 nil])
([nil nil ((#("#+RESULTS:
" 0 10 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t face org-meta-line) 10 11 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 24164) (undo-tree-id2392 . -10) (undo-tree-id2393 . -10) (undo-tree-id2394 . -11)) nil (25950 28819 995433 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -24152) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (#("f" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -24153) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (#("s" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -24154) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) 24155 (24152 . 24155) (t 25950 28820 7290 664000)) nil (25950 28825 822182 0) 0 nil])
([nil nil ((#("j" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -24152) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) 24153 (24152 . 24153) (t 25950 28825 833141 402000)) nil (25950 28985 957583 0) 0 nil])
([nil nil ((24167 . 24168) (24155 . 24167) (24154 . 24156) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -24154) (24154 . 24155) (24153 . 24154) (24152 . 24153) 24151) nil (25950 28985 957556 0) 0 nil])
([nil nil ((#("(require 'mu4e)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 1 8 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 8 10 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 10 14 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 14 15 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 15 16 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24154) (undo-tree-id2534 . -15) (undo-tree-id2535 . 2) (undo-tree-id2536 . -14) (undo-tree-id2537 . -15) (undo-tree-id2538 . -13) (undo-tree-id2539 . -13) (undo-tree-id2540 . -13) (undo-tree-id2541 . -13) (undo-tree-id2542 . -13) (undo-tree-id2543 . -13) (undo-tree-id2544 . -13) (undo-tree-id2545 . -13) (undo-tree-id2546 . -13) (undo-tree-id2547 . 2) (undo-tree-id2548 . -15) (undo-tree-id2549 . 16) (undo-tree-id2550 . -1) (undo-tree-id2551 . -14) (undo-tree-id2552 . -14) (undo-tree-id2553 . -14) (undo-tree-id2554 . -14) (undo-tree-id2555 . -14) (undo-tree-id2556 . -14) (undo-tree-id2557 . -14) (undo-tree-id2558 . -14) (undo-tree-id2559 . -14) (undo-tree-id2560 . -14) (undo-tree-id2561 . -14) (undo-tree-id2562 . -14) (undo-tree-id2563 . -14) (undo-tree-id2564 . -14) (undo-tree-id2565 . -14) (undo-tree-id2566 . -14) (undo-tree-id2567 . -14) (undo-tree-id2568 . -14) (undo-tree-id2569 . -14) (undo-tree-id2570 . -14) (undo-tree-id2571 . -14) (undo-tree-id2572 . -14) (undo-tree-id2573 . -14) (undo-tree-id2574 . -14) (undo-tree-id2575 . -14) (undo-tree-id2576 . -14) (undo-tree-id2577 . -14) (undo-tree-id2578 . -14) (undo-tree-id2579 . -14) (undo-tree-id2580 . -14) (undo-tree-id2581 . -14) (undo-tree-id2582 . -14) (undo-tree-id2583 . -14) (undo-tree-id2584 . -14) (undo-tree-id2585 . -14) (undo-tree-id2586 . -14) (undo-tree-id2587 . -14) (undo-tree-id2588 . -14) (undo-tree-id2589 . -14) (undo-tree-id2590 . -14) (undo-tree-id2591 . -14) (undo-tree-id2592 . -14) (undo-tree-id2593 . -14) (undo-tree-id2594 . -14) (undo-tree-id2595 . -14) (undo-tree-id2596 . -14) (undo-tree-id2597 . -14) (undo-tree-id2598 . -14) (undo-tree-id2599 . -14) (undo-tree-id2600 . -14) (undo-tree-id2601 . -14) (undo-tree-id2602 . -14) (undo-tree-id2603 . -14) (undo-tree-id2604 . -14) (undo-tree-id2605 . -14) (undo-tree-id2606 . -14) (undo-tree-id2607 . -16) 24168 (t 25950 28985 967478 322000)) nil (25950 28988 857129 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24154) (undo-tree-id2608 . 1) (undo-tree-id2609 . -1) (t 25950 28988 866685 741000)) nil (25950 28989 558220 0) 0 nil])
([nil nil ((22231 . 22232) (t 25950 28989 568832 897000) 22230) nil (25950 29274 558190 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 23060 . 23061) (nil fontified nil 23005 . 23061) (nil fontified nil 22930 . 23005) (nil fontified nil 22852 . 22930) (nil fontified nil 22741 . 22852) (nil fontified nil 22689 . 22741) (nil fontified nil 22594 . 22689) (nil fontified nil 22510 . 22594) (nil fontified nil 22458 . 22510) (nil fontified nil 22412 . 22458) (nil fontified nil 22374 . 22412) (nil fontified nil 22232 . 22374) (22232 . 23061)) nil (25950 29274 558189 0) 0 nil])
([nil nil ((22232 . 22234) (22374 . 22376) (#("                " 0 16 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22374) (22412 . 22414) (#("                " 0 16 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22412) (22458 . 22461) (#("                        " 0 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22458) (22510 . 22513) (#("                        " 0 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22510) (22594 . 22600) (#("                                                " 0 48 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                                     " 0 4 (face org-indent) 4 53 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22594) (22689 . 22691) (#("                " 0 16 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22689) (22741 . 22743) (#("                " 0 16 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22741) (22852 . 22855) (#("                        " 0 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22852) (22930 . 22933) (#("                        " 0 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22930) (23005 . 23008) (#("                        " 0 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 23005) 22214) nil (25950 29274 558184 0) 0 nil])
([nil nil ((#("pre-" 0 4 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . 22404) (#(" ((\"./autogen.sh\")
			     (\"ninja\" \"-C\" \"build\")
			   " 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 17 19 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 19 22 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 22 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 35 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 36 40 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 40 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41 48 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 48 50 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50 53 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 53 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22413) (undo-tree-id2610 . -18) (undo-tree-id2611 . -17) (undo-tree-id2612 . -17) (undo-tree-id2613 . -17) (undo-tree-id2614 . -17) (#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22470) (#("make-symbolic-link (expand-file-name \"./build/mu/mu\")
						 (expand-file-name \"~/bin/mu\") 'ok-if-exists))
		 :build (" 0 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 52 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 54 60 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                                     " 0 4 (face org-indent) 4 53 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 60 79 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                                     " 0 4 (face org-indent) 4 53 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 79 89 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                                     " 0 4 (face org-indent) 4 53 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 89 107 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                                     " 0 4 (face org-indent) 4 53 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 107 109 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 109 110 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 110 116 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 116 118 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22472) (#("o)
		 :post-build ((\"mu\" \"init\" \"--quiet\" \"--maildir\" ,(concat (getenv \"HOME\") \"/Documents/emails\")
			       \"--my-address=\" ,secret-pers" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 17 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 20 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 24 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 31 32 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 41 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 42 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 53 71 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 71 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 77 79 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 79 98 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 98 100 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 100 103 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 103 110 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 110 125 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 125 138 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22614) (#("nal-email-address
			       \"--my-address=\" ,secret-work-email-address)
			      (\"mu\" \"--quiet\" \"index\")" 0 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 18 21 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 21 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 43 72 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 72 75 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 75 82 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 82 86 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 86 87 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 87 96 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 96 97 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 97 104 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 104 105 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22753) 22214 (t 25950 29274 568086 620000)) nil (25950 29315 160552 0) 0 nil])
([nil nil ((22376 . 27205) 22214 (t 25950 29315 172778 697000)) nil (25950 29468 697805 0) 0 nil])
([nil nil ((#("(use-package mu4e
  :elpaca `(mu4e :host github :files (\"mu4e/*.el\" \"build/mu4e/mu4e-meta.el\" \"build/mu4e/mu4e-config.el\" \"build/mu4e/mu4e.info\") :repo \"djcb/mu\"
		 :main \"mu4e/mu4e.el\"
		 :build (:not elpaca--compile-info))
  :config
  ;; Set the path to mu4e
  (setq mu4e-mu-binary \"/usr/local/bin/mu\")
  (setq mu4e-maildir \"~/Mail\")
  (setq mu4e-get-mail-command \"mbsync -a\")

  ;; Configure mu4e for sending emails
  (setq mu4e-sent-folder   \"/gmail/Sent Mail\"
        mu4e-drafts-folder \"/gmail/Drafts\"
        mu4e-trash-folder  \"/gmail/Trash\")

  ;; Configure your mail accounts
  (setq mu4e-contexts
        `(,(make-mu4e-context
            :name \"gmail\"
            :match-func (lambda (msg)
                          (when msg
                            (mu4e-message-contact-field-matches msg :to \"italoamaya03@gmail.com\")))
            :vars '((user-mail-address . \"italoamaya03@gmail.com\")
                    (mu4e-sent-folder . \"/gmail/Sent Mail\")
                    (mu4e-drafts-folder . \"/gmail/Drafts\")
                    (mu4e-trash-folder . \"/gmail/Trash\")
                    ;; Specify Gmail SMTP settings
                    (smtpmail-smtp-server . \"smtp.gmail.com\")
                    (smtpmail-smtp-service . 587)
                    (smtpmail-stream-type . starttls)))

          ,(make-mu4e-context
            :name \"icloud\"
            :match-func (lambda (msg)
                          (when msg
                            (mu4e-message-contact-field-matches msg :to \"italoamaya@me.com\")))
            :vars '((user-mail-address . \"italoamaya@me.com\")
                    (mu4e-sent-folder . \"/icloud/Sent\")
                    (mu4e-drafts-folder . \"/icloud/Drafts\")
                    (mu4e-trash-folder . \"/icloud/Trash\")
                    ;; Specify iCloud SMTP settings
                    (smtpmail-smtp-server . \"smtp.mail.me.com\")
                    (smtpmail-smtp-service . 587)
                    (smtpmail-stream-type . starttls)))))

  ;; Set the default context
  (setq mu4e-context-policy 'pick-first
        mu4e-compose-context-policy nil
        mu4e-context-policy-function 'identity))
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12 13 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 13 17 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil src-block t) 17 18 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 18 20 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 20 27 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 27 35 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 35 40 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 40 48 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 48 54 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 54 56 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 56 67 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 67 68 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 68 93 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 93 94 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 94 121 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 121 122 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 122 144 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 144 146 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 146 151 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 151 152 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 152 161 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 161 162 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 162 164 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 164 165 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 165 170 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 170 171 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 171 185 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 185 186 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 186 188 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 188 189 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 189 195 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 195 197 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 197 201 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 201 221 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 221 222 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 222 223 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 223 224 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 224 225 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 225 227 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 227 234 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 234 235 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 235 237 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 237 240 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 240 261 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 261 264 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 264 268 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 268 284 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 284 303 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 303 305 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 305 308 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 308 312 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 312 326 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 326 334 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 334 336 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 336 339 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 339 343 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 343 366 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 366 377 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 377 379 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 379 380 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 380 382 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 382 385 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 385 419 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 419 422 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 422 426 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 426 446 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 446 464 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 464 465 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 465 492 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 492 507 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 507 508 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 508 535 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 535 549 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 549 551 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 551 552 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 552 554 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 554 557 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 557 586 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 586 589 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 589 593 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 593 608 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 608 638 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 638 650 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 650 655 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 655 656 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 656 663 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 663 664 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 664 676 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 676 687 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 687 689 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 689 695 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 695 702 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 702 729 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 729 733 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 733 738 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 738 806 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 806 809 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 809 810 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 810 834 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 834 838 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 838 850 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 850 855 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 855 879 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 879 903 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 903 905 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 905 945 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 945 963 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 963 965 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 965 1007 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1007 1022 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1022 1024 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1024 1065 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1065 1078 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1078 1079 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1079 1081 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1081 1101 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1101 1104 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1104 1132 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1132 1176 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1176 1192 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1192 1194 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1194 1244 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1244 1300 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1300 1301 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1301 1331 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1331 1343 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1343 1348 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1348 1349 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1349 1357 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1357 1358 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1358 1370 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1370 1381 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1381 1383 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1383 1389 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1389 1396 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1396 1423 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1423 1427 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1427 1432 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1432 1500 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1500 1503 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1503 1504 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1504 1523 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1523 1527 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1527 1539 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1539 1544 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1544 1568 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1568 1587 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1587 1589 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1589 1629 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1629 1643 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1643 1645 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1645 1665 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1665 1666 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1666 1667 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1667 1668 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1668 1669 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1669 1670 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1670 1671 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1671 1672 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1672 1673 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1673 1674 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1674 1675 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1675 1676 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1676 1677 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1677 1678 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1678 1679 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1679 1680 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1680 1681 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1681 1683 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1683 1684 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1684 1687 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1687 1703 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1703 1705 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1705 1724 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1724 1734 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1734 1746 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1746 1761 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1761 1763 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1763 1783 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1783 1786 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1786 1815 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1815 1859 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1859 1877 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1877 1879 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1879 1929 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1929 1987 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1987 1988 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1988 1990 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1990 1993 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1993 2017 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2017 2020 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2020 2024 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2024 2057 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2057 2097 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2097 2145 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2145 2146 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 27043) (undo-tree-id2615 . -223) (undo-tree-id2616 . 1) (undo-tree-id2617 . -1589) (undo-tree-id2618 . -2145) (undo-tree-id2619 . -186) (undo-tree-id2620 . 1921) (undo-tree-id2621 . -223) (undo-tree-id2622 . -195) (undo-tree-id2623 . -588) (undo-tree-id2624 . -2145) (undo-tree-id2625 . -2145) 22214 (t 25950 29468 709603 646000)) nil (25950 29476 356557 0) 0 nil])
([nil nil ((#("
  :commands (mu4e mu4e-update-index)
  :custom
  (mu4e-update-interval 900 \"Update every fifteen minutes\")
  (mail-user-agent 'mu4e-user-agent)
  (mu4e-org-support t)
  (message-mail-user-agent 'mu4e-user-agent \"Use mu4e as default email program.\")
  (mu4e-maildir (expand-file-name \"~/Documents/emails/\"))
  (mu4e-attachment-dir \"~/Downloads\")
  (mu4e-completing-read-function 'completing-read)
  (mu4e-compose-signature-auto-include nil)
  (mu4e-use-fancy-chars t)
  (mu4e-view-show-addresses t)
  (mu4e-view-show-images t)
  (mu4e-sent-messages-behavior 'sent)
  (mu4e-get-mail-command \"mbsync -c ~/.mbsyncrc -a\")
  (mu4e-change-filenames-when-moving t \"Needed for mbsync\")
  (mu4e-confirm-quit nil)
  (mu4e-html2text-command  'mu4e-shr2text)
  (mu4e-context-policy 'pick-first)
  (mu4e-compose-context-policy 'always-ask)
  :config
  (setq mu4e-contexts
        (list
         (make-mu4e-context
          :name \"personal\"
          :enter-func (lambda () (mu4e-message \"Entering personal context\"))
          :leave-func (lambda () (mu4e-message \"Leaving personal context\"))
          :match-func (lambda (msg)
                        (when msg
                          (mu4e-message-contact-field-matches
                           msg '(:from :to :cc :bcc) secret-personal-email-account)))
          :vars `((user-mail-address .  ,secret-personal-email-address" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 3 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 12 38 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 38 40 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 40 47 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 47 48 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 48 76 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 76 106 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 106 108 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 108 145 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 145 168 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 168 212 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 212 248 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 248 250 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 250 284 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 284 305 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 305 308 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 308 331 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 331 344 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 344 346 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 346 397 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 397 441 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 441 468 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 468 499 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 499 527 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 527 565 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 565 590 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 590 616 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 616 618 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 618 651 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 651 657 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 657 676 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 676 678 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 678 704 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 704 747 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 747 783 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 783 827 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 827 829 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 829 836 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 836 837 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 837 840 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 840 844 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 844 859 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 859 873 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 873 901 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 901 911 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 911 916 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 916 917 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 917 927 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 927 928 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 928 938 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 938 949 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 949 951 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 951 957 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 957 975 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 975 1002 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1002 1005 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1005 1015 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1015 1026 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1026 1028 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1028 1034 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1034 1052 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1052 1078 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1078 1081 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1081 1091 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1091 1102 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1102 1104 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1104 1110 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1110 1117 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1117 1142 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1142 1146 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 1146 1151 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1151 1213 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1213 1246 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1246 1251 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1251 1252 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1252 1255 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1255 1256 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1256 1259 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1259 1260 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1260 1264 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1264 1299 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1299 1309 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1309 1314 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1314 1369 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 23063) (#("
                  (user-full-name . ,secret-personal-email-name)
                  (mu4e-compose-format-flowed . t)
                  (message-send-mail-function . smtpmail-send-it)
                  (smtpmail-smtp-user . ,secret-personal-email-account)
                  (smtpmail-auth-credentials . (expand-file-name \"~/.authinfo.gpg\"))
                  (smtpmail-smtp-server . \"smtp.gmail.com\")
                  (smtpmail-smtp-service . 587)
                  (smtpmail-debug-info . t)
                  (smtpmail-debug-verbose . t)))
         (make-mu4e-context
          :name \"work\"
          :enter-func (lambda () (mu4e-message \"Entering work context\"))
          :leave-func (lambda () (mu4e-message \"Leaving work context\"))
          :match-func (lambda (msg)
                        (when msg
                          (mu4e-message-contact-field-matches
                           msg '(:from :to :cc :bcc) secret-work-email-account)))
          :vars `((user-mail-address .  ,secret-work-email-address)
                  (user-full-name . ,secret-work-email-name)
                  (mu4e-compose-format-flowed . t)
                  (message-send-mail-function . smtpmail-send-it)
                  (smtpmail-smtp-user . ,secret-work-email-account)
                  (smtpmail-starttls-credentials . ((\"smtp.gmail.com\" 587 nil nil)))
                  (smtpmail-auth-credentials . ,secret-work-email-credential)
                  (smtpmail-default-smtp-server . \"smtp.gmail.com\")
                  (smtpmail-smtp-server . \"smtp.gmail.com\")
                  (smtpmail-smtp-service . 587)
                  (smtpmail-debug-info . t)
                  (smtpmail-debug-verbose . t)))))

  (add-to-list 'mu4e-view-actions
               '(\"ViewInBrowser\" . mu4e-action-view-in-browser) t)
  (add-to-list 'mu4e-bookmarks
               '( :name \"straight.el\"
                  :query \"list:straight.el.radian-software.github.com\"
                  :key ?s)
               'append)
  (add-to-list 'mu4e-bookmarks
               '( :name \"Elpaca\"
                  :query \"list:elpaca.progfolio.github.com\"
                  :key ?e)
               'append)

  (defun +mu4e-view-settings ()
    \"Settings for mu4e-view-mode.\"
    (visual-line-mode)
    (olivetti-mode)
    (variable-pitch-mode))
  (add-hook 'mu4e-view-mode-hook #'+mu4e-view-settings)

  ;;Fold all threads by default.
  ;;(add-hook 'mu4e-thread-mode-hook #'mu4e-thread-fold-all)

  :general
  (+general-global-application \"m\" 'mu4e :which-key \"mail\")
  (global-leader
    :keymaps '(mu4e-compose-mode-map)
    \"a\" 'mml-attach-file))
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 66 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 66 117 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 117 183 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 183 255 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 255 320 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 320 337 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 337 340 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 340 382 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 382 398 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 398 400 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 400 448 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 448 492 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 492 541 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 541 569 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 569 579 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 579 584 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 584 585 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 585 591 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 591 592 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 592 602 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 602 613 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 613 615 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 615 621 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 621 639 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 639 662 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 662 665 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 665 675 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 675 686 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 686 688 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 688 694 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 694 712 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 712 734 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 734 737 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 737 747 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 747 758 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 758 760 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 760 766 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 766 773 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 773 798 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 798 802 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 802 807 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 807 869 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 869 902 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 902 907 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 907 908 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 908 911 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 911 912 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 912 915 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 915 916 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 916 920 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 920 951 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 951 961 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 961 966 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 966 1019 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1019 1080 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1080 1131 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1131 1197 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1197 1265 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1265 1318 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1318 1334 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1334 1350 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1350 1428 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1428 1478 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1478 1494 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1494 1496 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1496 1538 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1538 1554 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1554 1556 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1556 1604 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1604 1648 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1648 1699 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1699 1700 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1700 1734 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1734 1751 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1751 1766 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1766 1801 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1801 1832 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1832 1850 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1850 1855 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1855 1856 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1856 1869 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1869 1870 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1870 1888 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1888 1894 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1894 1895 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1895 1940 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 1940 1941 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1941 1959 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1959 1963 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1963 1968 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1968 1992 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1992 2023 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2023 2041 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2041 2046 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 2046 2047 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2047 2055 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2055 2056 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2056 2074 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2074 2080 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 2080 2081 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2081 2115 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2115 2116 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2116 2134 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2134 2138 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 2138 2143 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2143 2167 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2167 2168 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2168 2171 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2171 2176 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 2176 2177 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2177 2196 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-function-name-face org-block) help-echo nil src-block t) 2196 2200 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2200 2204 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2204 2234 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-doc-face org-block) help-echo nil src-block t) 2234 2235 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2235 2258 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2258 2278 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2278 2305 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2305 2361 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2361 2362 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2362 2364 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2364 2366 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 2366 2395 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 2395 2397 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2397 2399 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 2399 2456 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 2456 2457 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2457 2459 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2459 2467 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 2467 2468 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2468 2499 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2499 2502 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2502 2509 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2509 2519 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 2519 2520 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2520 2526 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2526 2528 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2528 2545 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2545 2549 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2549 2557 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 2557 2583 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2583 2587 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2587 2590 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 2590 2610 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 24433) (undo-tree-id2626 . -2610) (undo-tree-id2627 . -2610) (undo-tree-id2628 . -2610) (undo-tree-id2629 . -2610) (undo-tree-id2630 . -2610) (undo-tree-id2631 . -2610) (undo-tree-id2632 . -2610) (undo-tree-id2633 . -2610) (undo-tree-id2634 . -2610) 22214 (t 25950 29476 368784 802000)) nil (25950 29495 713780 0) 0 nil])
([nil nil ((#("(concat (getenv \"HOME\")" 0 16 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 16 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 22 23 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22809) (22834 . 22835) (#("/Documents" 0 10 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . 22834) (22845 . 22846) (#("em" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . 22845) (#("s" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . 22850) 22214 (t 25950 29495 726842 459000)) nil (25950 29520 927443 0) 0 nil])
([nil nil ((22868 . 22870) (#("secret-person" 0 13 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22868) (22882 . 22883) (#("-address" 0 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22889) (22946 . 22947) (#("se" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22946) (22949 . 22950) (#("ret-w" 0 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22949) (22955 . 22957) (#("rk" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22955) (#("-address)" 0 9 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22963) 22214 (t 25950 29520 941481 964000)) nil (25950 29531 846672 0) 0 nil])
([nil nil ((#("
                 :pre-build ((\"./autogen.sh\")
                             (\"ninja\" \"-C\" \"build\")
                             (make-symbolic-link (expand-file-name \"./build/mu/mu\")
                                                 (expand-file-name \"~/bin/mu\") 'ok-if-exists))
                 :build (:not elpaca--compile-info)
                 :post-build ((\"mu\" \"init\" \"--quiet\" \"--maildir\" , \"~/Mail\")
                               \"--my-address=\" ,gmail-email
                               \"--my-address=\" ,icloud-email
                              (\"mu\" \"--quiet\" \"index\")))" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 18 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 18 28 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 28 31 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 31 45 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 45 47 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 47 77 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 77 84 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 84 85 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 85 89 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 89 90 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 90 97 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 97 99 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 99 166 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 166 181 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 181 183 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 183 250 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                                     " 0 4 (face org-indent) 4 53 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 250 260 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                                     " 0 4 (face org-indent) 4 53 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 260 278 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                                     " 0 4 (face org-indent) 4 53 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 278 295 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 295 301 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 301 303 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 303 307 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 307 330 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 330 347 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 347 358 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 358 361 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 361 365 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 365 366 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 366 372 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 372 373 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 373 382 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 382 383 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 383 394 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 394 396 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 396 397 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 397 398 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 398 399 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent))) 399 400 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 400 401 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent))) 401 405 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 405 407 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 407 438 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 438 453 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 453 455 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 455 457 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent))) 457 458 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 458 459 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent))) 459 467 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 467 498 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 498 513 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 513 515 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 515 516 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent))) 516 517 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 517 518 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent))) 518 519 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 519 521 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent))) 521 528 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 528 559 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 559 563 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 563 564 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 564 573 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 573 574 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 574 581 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 581 584 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22413) 22214 (t 25950 29531 861871 909000)) nil (25950 29598 78381 0) 0 nil])
([nil nil ((22414 . 22415) 22214 (t 25950 29598 96598 852000)) nil (25950 29600 690091 0) 0 nil])
([nil nil ((22415 . 22416) (t 25950 29600 703900 514000) 22414) nil (25950 29862 29735 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 23264 . 23265) (nil fontified nil 23209 . 23265) (nil fontified nil 23134 . 23209) (nil fontified nil 23056 . 23134) (nil fontified nil 22945 . 23056) (nil fontified nil 22893 . 22945) (nil fontified nil 22798 . 22893) (nil fontified nil 22714 . 22798) (nil fontified nil 22662 . 22714) (nil fontified nil 22616 . 22662) (nil fontified nil 22578 . 22616) (nil fontified nil 22434 . 22578) (nil fontified nil 22416 . 22434) (22416 . 23265)) nil (25950 29892 861384 0) 0 nil])
([nil nil ((#("                 :post-build ((\"mu\" \"init\" \"--quiet\" \"--maildir\" ,(concat (getenv \"HOME\") \"/Documents/emails\")
" 0 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 28 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 31 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 35 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 36 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 42 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 43 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 52 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 64 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 64 82 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 82 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 88 90 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 90 109 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 109 111 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22945) (undo-tree-id3226 . -110) (undo-tree-id3227 . -59) (undo-tree-id3228 . -59) (undo-tree-id3229 . -59) (undo-tree-id3230 . -59) (undo-tree-id3231 . -59) (undo-tree-id3232 . -59) (undo-tree-id3233 . -59) (undo-tree-id3234 . -56) (undo-tree-id3235 . -56) (undo-tree-id3236 . -56) (undo-tree-id3237 . -56) (undo-tree-id3238 . -56) (undo-tree-id3239 . -56) (undo-tree-id3240 . -56) (undo-tree-id3241 . -56) (undo-tree-id3242 . -56) (undo-tree-id3243 . -56) (undo-tree-id3244 . -56) (undo-tree-id3245 . -56) (undo-tree-id3246 . -56) (undo-tree-id3247 . -56) (undo-tree-id3248 . -56) (undo-tree-id3249 . -56) (undo-tree-id3250 . -56) (undo-tree-id3251 . -56) (undo-tree-id3252 . -56) (undo-tree-id3253 . -56) (undo-tree-id3254 . -56) (undo-tree-id3255 . -56) (undo-tree-id3256 . -56) (undo-tree-id3257 . -56) (undo-tree-id3258 . -56) (undo-tree-id3259 . -56) (undo-tree-id3260 . -56) (undo-tree-id3261 . -56) (undo-tree-id3262 . -56) (undo-tree-id3263 . -56) (undo-tree-id3264 . -55) (undo-tree-id3265 . -55) (undo-tree-id3266 . -55) (undo-tree-id3267 . -55) (undo-tree-id3268 . -55) (undo-tree-id3269 . -55) (undo-tree-id3270 . -55) (undo-tree-id3271 . -55) (undo-tree-id3272 . -55) (undo-tree-id3273 . -55) (undo-tree-id3274 . -55) (undo-tree-id3275 . -55) (undo-tree-id3276 . -55) (undo-tree-id3277 . -55) (undo-tree-id3278 . -55) (undo-tree-id3279 . -55) (undo-tree-id3280 . -55) (undo-tree-id3281 . -55) (undo-tree-id3282 . -55) (undo-tree-id3283 . -55) (undo-tree-id3284 . -55) (undo-tree-id3285 . -55) (undo-tree-id3286 . -55) (undo-tree-id3287 . -55) (undo-tree-id3288 . -55) (undo-tree-id3289 . -55) (undo-tree-id3290 . -55) (undo-tree-id3291 . -55) (undo-tree-id3292 . -55) (undo-tree-id3293 . -55) (undo-tree-id3294 . -55) (undo-tree-id3295 . -55) (undo-tree-id3296 . -55) (undo-tree-id3297 . -55) (undo-tree-id3298 . -55) (undo-tree-id3299 . -55) (undo-tree-id3300 . -55) (undo-tree-id3301 . -55) (undo-tree-id3302 . -55) (undo-tree-id3303 . -111) 23000) nil (25950 30227 397483 0) 0 nil] [nil nil ((23265 . 23266)) ((#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 23265) (undo-tree-id3071 . -1)) (25950 29892 449008 0) 0 nil])
([nil nil ((#("                               \"--my-address=\" ,secret-personal-email-address
" 0 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 31 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 46 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 77 78 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22945) (undo-tree-id3188 . -77) (undo-tree-id3189 . -59) (undo-tree-id3190 . -59) (undo-tree-id3191 . -59) (undo-tree-id3192 . -59) (undo-tree-id3193 . -59) (undo-tree-id3194 . -59) (undo-tree-id3195 . -59) (undo-tree-id3196 . -77) (undo-tree-id3197 . -56) (undo-tree-id3198 . -56) (undo-tree-id3199 . -56) (undo-tree-id3200 . -56) (undo-tree-id3201 . -56) (undo-tree-id3202 . -56) (undo-tree-id3203 . -56) (undo-tree-id3204 . -56) (undo-tree-id3205 . -56) (undo-tree-id3206 . -55) (undo-tree-id3207 . -55) (undo-tree-id3208 . -55) (undo-tree-id3209 . -55) (undo-tree-id3210 . -55) (undo-tree-id3211 . -55) (undo-tree-id3212 . -55) (undo-tree-id3213 . -55) (undo-tree-id3214 . -77) (undo-tree-id3215 . -55) (undo-tree-id3216 . -55) (undo-tree-id3217 . -55) (undo-tree-id3218 . -55) (undo-tree-id3219 . -55) (undo-tree-id3220 . -55) (undo-tree-id3221 . -55) (undo-tree-id3222 . -55) (undo-tree-id3223 . -55) (undo-tree-id3224 . -55) (undo-tree-id3225 . -78) 23000) nil (25950 30227 397422 0) 0 nil])
([nil nil ((#("                 :post-build ((\"mu\" \"init\" \"--quiet\" \"--maildir\" ,(concat (getenv \"HOME\") \"/Documents/emails\")
" 0 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17 28 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 28 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 31 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 35 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 36 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 42 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 43 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 52 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 64 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 64 82 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 82 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 88 90 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 90 109 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 109 111 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22945) (undo-tree-id2851 . -110) (undo-tree-id2852 . -56) (undo-tree-id2853 . -59) (undo-tree-id2854 . -59) (undo-tree-id2855 . -59) (undo-tree-id2856 . -59) (undo-tree-id2857 . -59) (undo-tree-id2858 . -59) (undo-tree-id2859 . -59) (undo-tree-id2860 . -56) (undo-tree-id2861 . -56) (undo-tree-id2862 . -56) (undo-tree-id2863 . -56) (undo-tree-id2864 . -56) (undo-tree-id2865 . -56) (undo-tree-id2866 . -56) (undo-tree-id2867 . -56) (undo-tree-id2868 . -56) (undo-tree-id2869 . -56) (undo-tree-id2870 . -56) (undo-tree-id2871 . -56) (undo-tree-id2872 . -56) (undo-tree-id2873 . -56) (undo-tree-id2874 . -56) (undo-tree-id2875 . -56) (undo-tree-id2876 . -56) (undo-tree-id2877 . -56) (undo-tree-id2878 . -56) (undo-tree-id2879 . -56) (undo-tree-id2880 . -56) (undo-tree-id2881 . -56) (undo-tree-id2882 . -56) (undo-tree-id2883 . -56) (undo-tree-id2884 . -56) (undo-tree-id2885 . -56) (undo-tree-id2886 . -56) (undo-tree-id2887 . -56) (undo-tree-id2888 . -56) (undo-tree-id2889 . -56) (undo-tree-id2890 . -56) (undo-tree-id2891 . -111) 23001 (t 25950 29862 51672 673000)) ((22945 . 23056)) (25950 29892 132877 0) 0 nil])
([nil nil ((#("                               \"--my-address=\" ,secret-work-email-address)
" 0 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 31 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 46 74 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 74 75 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22945) (undo-tree-id3129 . -74) (undo-tree-id3130 . -56) (undo-tree-id3131 . -56) (undo-tree-id3132 . -56) (undo-tree-id3133 . -56) (undo-tree-id3134 . -56) (undo-tree-id3135 . -56) (undo-tree-id3136 . -56) (undo-tree-id3137 . -59) (undo-tree-id3138 . -59) (undo-tree-id3139 . -59) (undo-tree-id3140 . -59) (undo-tree-id3141 . -59) (undo-tree-id3142 . -59) (undo-tree-id3143 . -59) (undo-tree-id3144 . -59) (undo-tree-id3145 . -59) (undo-tree-id3146 . -59) (undo-tree-id3147 . -59) (undo-tree-id3148 . -59) (undo-tree-id3149 . -59) (undo-tree-id3150 . -59) (undo-tree-id3151 . -74) (undo-tree-id3152 . -56) (undo-tree-id3153 . -56) (undo-tree-id3154 . -56) (undo-tree-id3155 . -56) (undo-tree-id3156 . -56) (undo-tree-id3157 . -56) (undo-tree-id3158 . -56) (undo-tree-id3159 . -56) (undo-tree-id3160 . -56) (undo-tree-id3161 . -55) (undo-tree-id3162 . -55) (undo-tree-id3163 . -55) (undo-tree-id3164 . -55) (undo-tree-id3165 . -55) (undo-tree-id3166 . -55) (undo-tree-id3167 . -55) (undo-tree-id3168 . -55) (undo-tree-id3169 . -55) (undo-tree-id3170 . -55) (undo-tree-id3171 . -55) (undo-tree-id3172 . -55) (undo-tree-id3173 . -55) (undo-tree-id3174 . -55) (undo-tree-id3175 . -55) (undo-tree-id3176 . -74) (undo-tree-id3177 . -55) (undo-tree-id3178 . -55) (undo-tree-id3179 . -55) (undo-tree-id3180 . -55) (undo-tree-id3181 . -55) (undo-tree-id3182 . -55) (undo-tree-id3183 . -55) (undo-tree-id3184 . -55) (undo-tree-id3185 . -55) (undo-tree-id3186 . -55) (undo-tree-id3187 . -75) 23000) nil (25950 30227 397389 0) 0 nil])
([nil nil ((#("                               \"--my-address=\" ,secret-personal-email-address
" 0 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 31 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 46 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 77 78 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22945) (undo-tree-id2830 . -77) (undo-tree-id2831 . -56) (undo-tree-id2832 . -59) (undo-tree-id2833 . -59) (undo-tree-id2834 . -59) (undo-tree-id2835 . -59) (undo-tree-id2836 . -59) (undo-tree-id2837 . -59) (undo-tree-id2838 . -59) (undo-tree-id2839 . -77) (undo-tree-id2840 . -56) (undo-tree-id2841 . -56) (undo-tree-id2842 . -56) (undo-tree-id2843 . -56) (undo-tree-id2844 . -56) (undo-tree-id2845 . -56) (undo-tree-id2846 . -56) (undo-tree-id2847 . -56) (undo-tree-id2848 . -56) (undo-tree-id2849 . -56) (undo-tree-id2850 . -78) 23001) ((22945 . 23023)) (25950 29891 887960 0) 0 nil])
([nil nil ((#("                              (\"mu\" \"--quiet\" \"index\")))
" 0 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 31 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 35 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 36 45 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 45 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 53 55 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 55 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 56 57 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 22945) (undo-tree-id3072 . -56) (undo-tree-id3073 . -57) (undo-tree-id3074 . -55) (undo-tree-id3075 . -57) (undo-tree-id3076 . -57) (undo-tree-id3077 . -55) (undo-tree-id3078 . -55) (undo-tree-id3079 . -55) (undo-tree-id3080 . -55) (undo-tree-id3081 . -55) (undo-tree-id3082 . -55) (undo-tree-id3083 . -56) (undo-tree-id3084 . -55) (undo-tree-id3085 . -55) (undo-tree-id3086 . -55) (undo-tree-id3087 . -55) (undo-tree-id3088 . -55) (undo-tree-id3089 . -55) (undo-tree-id3090 . -55) (undo-tree-id3091 . -55) (undo-tree-id3092 . -55) (undo-tree-id3093 . -55) (undo-tree-id3094 . -55) (undo-tree-id3095 . -55) (undo-tree-id3096 . -55) (undo-tree-id3097 . -55) (undo-tree-id3098 . -55) (undo-tree-id3099 . -55) (undo-tree-id3100 . -55) (undo-tree-id3101 . -55) (undo-tree-id3102 . -55) (undo-tree-id3103 . -55) (undo-tree-id3104 . -55) (undo-tree-id3105 . -55) (undo-tree-id3106 . -55) (undo-tree-id3107 . -55) (undo-tree-id3108 . -56) (undo-tree-id3109 . -55) (undo-tree-id3110 . -55) (undo-tree-id3111 . -55) (undo-tree-id3112 . -55) (undo-tree-id3113 . -55) (undo-tree-id3114 . -55) (undo-tree-id3115 . -55) (undo-tree-id3116 . -55) (undo-tree-id3117 . -55) (undo-tree-id3118 . 2) (undo-tree-id3119 . -56) (undo-tree-id3120 . -55) (undo-tree-id3121 . -55) (undo-tree-id3122 . -55) (undo-tree-id3123 . -55) (undo-tree-id3124 . -55) (undo-tree-id3125 . -55) (undo-tree-id3126 . -55) (undo-tree-id3127 . -55) (undo-tree-id3128 . -57) 23000) nil (25950 30227 397342 0) 0 nil])
([nil nil ((#("                               \"--my-address=\" ,secret-work-email-address)
" 0 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 31 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 46 74 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 74 75 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                   " 0 4 (face org-indent) 4 35 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22945) (undo-tree-id2795 . -74) (undo-tree-id2796 . -56) (undo-tree-id2797 . -56) (undo-tree-id2798 . -56) (undo-tree-id2799 . -56) (undo-tree-id2800 . -56) (undo-tree-id2801 . -56) (undo-tree-id2802 . -56) (undo-tree-id2803 . -56) (undo-tree-id2804 . -59) (undo-tree-id2805 . -59) (undo-tree-id2806 . -59) (undo-tree-id2807 . -59) (undo-tree-id2808 . -59) (undo-tree-id2809 . -59) (undo-tree-id2810 . -59) (undo-tree-id2811 . -59) (undo-tree-id2812 . -59) (undo-tree-id2813 . -59) (undo-tree-id2814 . -59) (undo-tree-id2815 . -59) (undo-tree-id2816 . -59) (undo-tree-id2817 . -59) (undo-tree-id2818 . -74) (undo-tree-id2819 . -56) (undo-tree-id2820 . -56) (undo-tree-id2821 . -56) (undo-tree-id2822 . -56) (undo-tree-id2823 . -56) (undo-tree-id2824 . -56) (undo-tree-id2825 . -56) (undo-tree-id2826 . -56) (undo-tree-id2827 . -56) (undo-tree-id2828 . -56) (undo-tree-id2829 . -75) 23001) ((22945 . 23020)) (25950 29891 650651 0) 0 nil])
([nil nil ((22944 . 22946)) nil (25950 30227 397286 0) 0 nil])
([nil nil ((#("                              (\"mu\" \"--quiet\" \"index\"))))
" 0 31 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 31 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 35 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 36 45 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 45 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 46 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 53 55 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 55 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 56 57 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 57 58 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 22945) (undo-tree-id2635 . -57) (undo-tree-id2636 . 1) (undo-tree-id2637 . -58) (undo-tree-id2638 . -56) (undo-tree-id2639 . -58) (undo-tree-id2640 . -58) (undo-tree-id2642 . -56) (undo-tree-id2644 . -56) (undo-tree-id2646 . -56) (undo-tree-id2648 . -56) (undo-tree-id2650 . -56) (undo-tree-id2652 . -56) (undo-tree-id2654 . -56) (undo-tree-id2656 . -56) (undo-tree-id2658 . -56) (undo-tree-id2660 . -56) (undo-tree-id2662 . -56) (undo-tree-id2664 . -56) (undo-tree-id2666 . -56) (undo-tree-id2668 . -56) (undo-tree-id2670 . -56) (undo-tree-id2672 . -56) (undo-tree-id2674 . -56) (undo-tree-id2675 . -56) (undo-tree-id2676 . -56) (undo-tree-id2678 . -56) (undo-tree-id2680 . -56) (undo-tree-id2682 . -56) (undo-tree-id2684 . -56) (undo-tree-id2686 . -56) (undo-tree-id2688 . -56) (undo-tree-id2690 . -56) (undo-tree-id2692 . -56) (undo-tree-id2694 . -56) (undo-tree-id2696 . -56) (undo-tree-id2698 . -56) (undo-tree-id2700 . -56) (undo-tree-id2702 . -56) (undo-tree-id2704 . -56) (undo-tree-id2706 . -56) (undo-tree-id2708 . -56) (undo-tree-id2710 . -56) (undo-tree-id2712 . -56) (undo-tree-id2714 . -56) (undo-tree-id2716 . -56) (undo-tree-id2718 . -56) (undo-tree-id2720 . -56) (undo-tree-id2722 . -56) (undo-tree-id2724 . -56) (undo-tree-id2726 . -56) (undo-tree-id2728 . -56) (undo-tree-id2730 . -56) (undo-tree-id2732 . -56) (undo-tree-id2734 . -56) (undo-tree-id2736 . -56) (undo-tree-id2738 . -56) (undo-tree-id2740 . -56) (undo-tree-id2742 . -56) (undo-tree-id2744 . -56) (undo-tree-id2745 . -56) (undo-tree-id2746 . -56) (undo-tree-id2748 . -56) (undo-tree-id2750 . -56) (undo-tree-id2752 . -56) (undo-tree-id2754 . -56) (undo-tree-id2756 . -56) (undo-tree-id2758 . -56) (undo-tree-id2760 . -56) (undo-tree-id2762 . -56) (undo-tree-id2764 . -56) (undo-tree-id2766 . -56) (undo-tree-id2768 . -56) (undo-tree-id2770 . -56) (undo-tree-id2772 . -56) (undo-tree-id2774 . -56) (undo-tree-id2776 . -56) (undo-tree-id2778 . -56) (undo-tree-id2780 . -56) (undo-tree-id2782 . -56) (undo-tree-id2784 . -56) (undo-tree-id2786 . -56) (undo-tree-id2788 . -56) (undo-tree-id2790 . -56) (undo-tree-id2791 . 2) (undo-tree-id2792 . -57) (undo-tree-id2794 . -58) 23001) ((22945 . 23003)) (25950 29891 193257 0) 0 nil])
([nil nil ((#("(use-package mu4e
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 17 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22416) (undo-tree-id3666 . -17) (undo-tree-id3667 . -18) (undo-tree-id3668 . -16) (undo-tree-id3669 . -16) (undo-tree-id3670 . -16) (undo-tree-id3671 . -16) (undo-tree-id3672 . -16) (undo-tree-id3673 . -16) (undo-tree-id3674 . -16) (undo-tree-id3675 . -16) (undo-tree-id3676 . -16) (undo-tree-id3677 . -16) (undo-tree-id3678 . -16) (undo-tree-id3679 . -16) (undo-tree-id3680 . -16) (undo-tree-id3681 . -16) (undo-tree-id3682 . -16) (undo-tree-id3683 . -16) (undo-tree-id3684 . -16) (undo-tree-id3685 . -16) (undo-tree-id3686 . -18) 22432 (t 25950 30227 418395 658000)) nil (25950 30240 66942 0) 0 nil])
([nil nil ((22944 . 22946)) ((#("))" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22944) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . 1) (undo-tree-id2947 . -2) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (t 25950 29873 927698 427000)) (25950 29873 910760 0) 0 nil])
([nil nil ((#("  :elpaca `(mu4e :host github :files (\"mu4e/*.el\" \"build/mu4e/mu4e-meta.el\" \"build/mu4e/mu4e-config.el\" \"build/mu4e/mu4e.info\") :repo \"djcb/mu\"
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 22 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 36 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 49 50 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 50 75 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 75 76 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 76 103 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 103 104 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 104 126 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 126 128 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 128 133 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 133 134 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 134 143 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 143 144 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22416) (undo-tree-id3617 . -143) (undo-tree-id3618 . -16) (undo-tree-id3619 . -142) (undo-tree-id3620 . -142) (undo-tree-id3621 . -142) (undo-tree-id3622 . -142) (undo-tree-id3623 . -142) (undo-tree-id3624 . -142) (undo-tree-id3625 . -142) (undo-tree-id3626 . -142) (undo-tree-id3627 . -142) (undo-tree-id3628 . -142) (undo-tree-id3629 . -142) (undo-tree-id3630 . -142) (undo-tree-id3631 . -142) (undo-tree-id3632 . -142) (undo-tree-id3633 . -52) (undo-tree-id3634 . -52) (undo-tree-id3635 . -52) (undo-tree-id3636 . -52) (undo-tree-id3637 . -52) (undo-tree-id3638 . -52) (undo-tree-id3639 . -52) (undo-tree-id3640 . -52) (undo-tree-id3641 . -52) (undo-tree-id3642 . -52) (undo-tree-id3643 . -52) (undo-tree-id3644 . -52) (undo-tree-id3645 . -52) (undo-tree-id3646 . -52) (undo-tree-id3647 . -143) (undo-tree-id3648 . -16) (undo-tree-id3649 . -16) (undo-tree-id3650 . -16) (undo-tree-id3651 . -16) (undo-tree-id3652 . -16) (undo-tree-id3653 . -16) (undo-tree-id3654 . -16) (undo-tree-id3655 . -16) (undo-tree-id3656 . -16) (undo-tree-id3657 . -16) (undo-tree-id3658 . -16) (undo-tree-id3659 . -16) (undo-tree-id3660 . -16) (undo-tree-id3661 . -16) (undo-tree-id3662 . -16) (undo-tree-id3663 . -16) (undo-tree-id3664 . -16) (undo-tree-id3665 . -144) 22432) nil (25950 30240 66924 0) 0 nil])
nil
([nil nil ((#("                 :main \"mu4e/mu4e.el\"
" 0 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 22 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 23 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 37 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22416) (undo-tree-id3589 . -37) (undo-tree-id3590 . -16) (undo-tree-id3591 . -36) (undo-tree-id3592 . -36) (undo-tree-id3593 . -36) (undo-tree-id3594 . -36) (undo-tree-id3595 . -36) (undo-tree-id3596 . -36) (undo-tree-id3597 . -36) (undo-tree-id3598 . -36) (undo-tree-id3599 . -36) (undo-tree-id3600 . -36) (undo-tree-id3601 . -36) (undo-tree-id3602 . -36) (undo-tree-id3603 . -36) (undo-tree-id3604 . -36) (undo-tree-id3605 . -37) (undo-tree-id3606 . -16) (undo-tree-id3607 . -16) (undo-tree-id3608 . -16) (undo-tree-id3609 . -16) (undo-tree-id3610 . -16) (undo-tree-id3611 . -16) (undo-tree-id3612 . -16) (undo-tree-id3613 . -16) (undo-tree-id3614 . -16) (undo-tree-id3615 . -16) (undo-tree-id3616 . -38) 22432) nil (25950 30240 66880 0) 0 nil])
([nil nil ((#("                 :pre-build ((\"./autogen.sh\")
" 0 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17 27 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 27 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 44 45 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 45 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22416) (undo-tree-id3561 . -45) (undo-tree-id3562 . -16) (undo-tree-id3563 . -44) (undo-tree-id3564 . -44) (undo-tree-id3565 . -44) (undo-tree-id3566 . -44) (undo-tree-id3567 . -44) (undo-tree-id3568 . -44) (undo-tree-id3569 . -44) (undo-tree-id3570 . -44) (undo-tree-id3571 . -44) (undo-tree-id3572 . -44) (undo-tree-id3573 . -44) (undo-tree-id3574 . -44) (undo-tree-id3575 . -44) (undo-tree-id3576 . -44) (undo-tree-id3577 . -45) (undo-tree-id3578 . -16) (undo-tree-id3579 . -16) (undo-tree-id3580 . -16) (undo-tree-id3581 . -16) (undo-tree-id3582 . -16) (undo-tree-id3583 . -16) (undo-tree-id3584 . -16) (undo-tree-id3585 . -16) (undo-tree-id3586 . -16) (undo-tree-id3587 . -16) (undo-tree-id3588 . -46) 22432) nil (25950 30240 66852 0) 0 nil])
([nil nil ((#("                             (\"ninja\" \"-C\" \"build\")
" 0 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 37 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 42 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 43 50 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50 51 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 51 52 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22416) (undo-tree-id3533 . -51) (undo-tree-id3534 . -16) (undo-tree-id3535 . -50) (undo-tree-id3536 . -50) (undo-tree-id3537 . -50) (undo-tree-id3538 . -50) (undo-tree-id3539 . -50) (undo-tree-id3540 . -50) (undo-tree-id3541 . -50) (undo-tree-id3542 . -50) (undo-tree-id3543 . -50) (undo-tree-id3544 . -50) (undo-tree-id3545 . -50) (undo-tree-id3546 . -50) (undo-tree-id3547 . -50) (undo-tree-id3548 . -50) (undo-tree-id3549 . -51) (undo-tree-id3550 . -16) (undo-tree-id3551 . -16) (undo-tree-id3552 . -16) (undo-tree-id3553 . -16) (undo-tree-id3554 . -16) (undo-tree-id3555 . -16) (undo-tree-id3556 . -16) (undo-tree-id3557 . -16) (undo-tree-id3558 . -16) (undo-tree-id3559 . -16) (undo-tree-id3560 . -52) 22432) nil (25950 30240 66828 0) 0 nil])
([nil nil ((#("                             (make-symbolic-link (expand-file-name \"./build/mu/mu\")
" 0 67 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 67 82 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 82 83 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 83 84 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22416) (undo-tree-id3512 . -83) (undo-tree-id3513 . -16) (undo-tree-id3514 . -52) (undo-tree-id3515 . -52) (undo-tree-id3516 . -52) (undo-tree-id3517 . -52) (undo-tree-id3518 . -52) (undo-tree-id3519 . -52) (undo-tree-id3520 . -52) (undo-tree-id3521 . -83) (undo-tree-id3522 . -16) (undo-tree-id3523 . -16) (undo-tree-id3524 . -16) (undo-tree-id3525 . -16) (undo-tree-id3526 . -16) (undo-tree-id3527 . -16) (undo-tree-id3528 . -16) (undo-tree-id3529 . -16) (undo-tree-id3530 . -16) (undo-tree-id3531 . -16) (undo-tree-id3532 . -84) 22432) nil (25950 30240 66800 0) 0 nil])
([nil nil ((#("                                                 (expand-file-name \"~/bin/mu\") 'ok-if-exists))
" 0 67 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                                     " 0 4 (face org-indent) 4 53 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 67 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                                     " 0 4 (face org-indent) 4 53 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 77 94 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                                     " 0 4 (face org-indent) 4 53 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 94 95 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                                     " 0 4 (face org-indent) 4 53 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22416) (undo-tree-id3491 . -94) (undo-tree-id3492 . -16) (undo-tree-id3493 . -52) (undo-tree-id3494 . -52) (undo-tree-id3495 . -52) (undo-tree-id3496 . -52) (undo-tree-id3497 . -52) (undo-tree-id3498 . -52) (undo-tree-id3499 . -52) (undo-tree-id3500 . -94) (undo-tree-id3501 . -16) (undo-tree-id3502 . -16) (undo-tree-id3503 . -16) (undo-tree-id3504 . -16) (undo-tree-id3505 . -16) (undo-tree-id3506 . -16) (undo-tree-id3507 . -16) (undo-tree-id3508 . -16) (undo-tree-id3509 . -16) (undo-tree-id3510 . -16) (undo-tree-id3511 . -95) 22432) nil (25950 30240 66774 0) 0 nil])
([nil nil ((#("                 :build (:not elpaca--compile-info)))
" 0 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 23 25 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 29 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22416) (undo-tree-id3304 . -53) (undo-tree-id3305 . 1) (undo-tree-id3306 . -54) (undo-tree-id3307 . -54) (undo-tree-id3308 . -54) (undo-tree-id3309 . -54) (undo-tree-id3310 . -54) (undo-tree-id3311 . -54) (undo-tree-id3312 . -54) (undo-tree-id3313 . -54) (undo-tree-id3314 . -54) (undo-tree-id3315 . -54) (undo-tree-id3316 . -54) (undo-tree-id3317 . -54) (undo-tree-id3318 . -54) (undo-tree-id3319 . -54) (undo-tree-id3320 . -54) (undo-tree-id3321 . -54) (undo-tree-id3322 . -54) (undo-tree-id3323 . -54) (undo-tree-id3324 . -54) (undo-tree-id3325 . -54) (undo-tree-id3326 . -54) (undo-tree-id3327 . -54) (undo-tree-id3328 . -54) (undo-tree-id3329 . -54) (undo-tree-id3330 . -54) (undo-tree-id3331 . -54) (undo-tree-id3332 . -54) (undo-tree-id3333 . -54) (undo-tree-id3334 . -54) (undo-tree-id3335 . -54) (undo-tree-id3336 . -54) (undo-tree-id3337 . -54) (undo-tree-id3338 . -54) (undo-tree-id3339 . -54) (undo-tree-id3340 . -54) (undo-tree-id3341 . -54) (undo-tree-id3342 . -54) (undo-tree-id3343 . -54) (undo-tree-id3344 . -54) (undo-tree-id3345 . -54) (undo-tree-id3346 . -54) (undo-tree-id3347 . -54) (undo-tree-id3348 . -54) (undo-tree-id3349 . -54) (undo-tree-id3350 . -54) (undo-tree-id3351 . -54) (undo-tree-id3352 . -54) (undo-tree-id3353 . -54) (undo-tree-id3354 . -54) (undo-tree-id3355 . -54) (undo-tree-id3356 . -54) (undo-tree-id3357 . -54) (undo-tree-id3358 . -54) (undo-tree-id3359 . -54) (undo-tree-id3360 . -54) (undo-tree-id3361 . -54) (undo-tree-id3362 . -54) (undo-tree-id3363 . -54) (undo-tree-id3364 . -54) (undo-tree-id3365 . -54) (undo-tree-id3366 . -54) (undo-tree-id3367 . -54) (undo-tree-id3368 . -54) (undo-tree-id3369 . -54) (undo-tree-id3370 . -54) (undo-tree-id3371 . -54) (undo-tree-id3372 . -54) (undo-tree-id3373 . -54) (undo-tree-id3374 . -54) (undo-tree-id3375 . -54) (undo-tree-id3376 . -54) (undo-tree-id3377 . -54) (undo-tree-id3378 . -54) (undo-tree-id3379 . -54) (undo-tree-id3380 . -54) (undo-tree-id3381 . -54) (undo-tree-id3382 . -54) (undo-tree-id3383 . -54) (undo-tree-id3384 . -54) (undo-tree-id3385 . -54) (undo-tree-id3386 . -54) (undo-tree-id3387 . -54) (undo-tree-id3388 . -54) (undo-tree-id3389 . -54) (undo-tree-id3390 . -54) (undo-tree-id3391 . -54) (undo-tree-id3392 . -54) (undo-tree-id3393 . -54) (undo-tree-id3394 . -54) (undo-tree-id3395 . -54) (undo-tree-id3396 . -54) (undo-tree-id3397 . -54) (undo-tree-id3398 . -54) (undo-tree-id3399 . -54) (undo-tree-id3400 . -54) (undo-tree-id3401 . -54) (undo-tree-id3402 . -54) (undo-tree-id3403 . -54) (undo-tree-id3404 . -54) (undo-tree-id3405 . -54) (undo-tree-id3406 . -54) (undo-tree-id3407 . -54) (undo-tree-id3408 . -54) (undo-tree-id3409 . -54) (undo-tree-id3410 . -54) (undo-tree-id3411 . -54) (undo-tree-id3412 . -54) (undo-tree-id3413 . -54) (undo-tree-id3414 . -54) (undo-tree-id3415 . -54) (undo-tree-id3416 . -54) (undo-tree-id3417 . -54) (undo-tree-id3418 . -54) (undo-tree-id3419 . -54) (undo-tree-id3420 . -54) (undo-tree-id3421 . -54) (undo-tree-id3422 . -54) (undo-tree-id3423 . -54) (undo-tree-id3424 . -54) (undo-tree-id3425 . -54) (undo-tree-id3426 . -54) (undo-tree-id3427 . -54) (undo-tree-id3428 . -54) (undo-tree-id3429 . -54) (undo-tree-id3430 . -54) (undo-tree-id3431 . -54) (undo-tree-id3432 . -54) (undo-tree-id3433 . -54) (undo-tree-id3434 . -54) (undo-tree-id3435 . -54) (undo-tree-id3436 . -54) (undo-tree-id3437 . -54) (undo-tree-id3438 . -54) (undo-tree-id3439 . -54) (undo-tree-id3440 . -54) (undo-tree-id3441 . -54) (undo-tree-id3442 . -54) (undo-tree-id3443 . -54) (undo-tree-id3444 . -54) (undo-tree-id3445 . -54) (undo-tree-id3446 . -54) (undo-tree-id3447 . -54) (undo-tree-id3448 . -54) (undo-tree-id3449 . -54) (undo-tree-id3450 . -54) (undo-tree-id3451 . -54) (undo-tree-id3452 . -54) (undo-tree-id3453 . -54) (undo-tree-id3454 . -54) (undo-tree-id3455 . -54) (undo-tree-id3456 . -54) (undo-tree-id3457 . -54) (undo-tree-id3458 . -54) (undo-tree-id3459 . -54) (undo-tree-id3460 . -54) (undo-tree-id3461 . -54) (undo-tree-id3462 . -54) (undo-tree-id3463 . -54) (undo-tree-id3464 . -54) (undo-tree-id3465 . -54) (undo-tree-id3466 . -54) (undo-tree-id3467 . -54) (undo-tree-id3468 . -54) (undo-tree-id3469 . -54) (undo-tree-id3470 . -54) (undo-tree-id3471 . -54) (undo-tree-id3472 . -54) (undo-tree-id3473 . -54) (undo-tree-id3474 . -54) (undo-tree-id3475 . -54) (undo-tree-id3476 . -54) (undo-tree-id3477 . -52) (undo-tree-id3478 . -16) (undo-tree-id3479 . -53) (undo-tree-id3480 . -16) (undo-tree-id3481 . -16) (undo-tree-id3482 . -16) (undo-tree-id3483 . -16) (undo-tree-id3484 . -16) (undo-tree-id3485 . -16) (undo-tree-id3486 . -16) (undo-tree-id3487 . -16) (undo-tree-id3488 . -16) (undo-tree-id3489 . -16) (undo-tree-id3490 . -54) 22432) nil (25950 30240 66750 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -22415) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (#("f" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-multiline t face (font-lock-warning-face org-block))) . -22416) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-multiline t face (font-lock-warning-face org-block))) . -22417) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) 22418 (22415 . 22418) (t 25950 30240 85913 940000)) nil (25950 30396 685174 0) 0 nil])
([nil nil ((22232 . 22245) (22232 . 22233) 22281 (t 25950 30396 705515 347000)) nil (25950 30513 278096 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-multiline t face (font-lock-warning-face org-block))) . -22429) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-multiline t face (font-lock-warning-face org-block))) . -22430) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) 22431 (22429 . 22431) (t 25950 30513 297570 663000)) nil (25950 30523 300804 0) 0 nil])
([nil nil ((#(" \"build/mu4e/mu4e-meta.el\" \"build/mu4e/mu4e-config.el\" \"build/mu4e/mu4e.info\"" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 26 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 26 27 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 54 55 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 55 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22295) (undo-tree-id3822 . -76) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -77) (t 25950 30523 319982 377000)) nil (25950 30537 410135 0) 0 nil])
([nil nil ((#("(use-package mu4e
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 17 18 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22214) (undo-tree-id4289 . -17) (undo-tree-id4290 . -16) (undo-tree-id4291 . -16) (undo-tree-id4292 . -16) (undo-tree-id4293 . -16) (undo-tree-id4294 . -16) (undo-tree-id4295 . -16) (undo-tree-id4296 . -16) (undo-tree-id4297 . -16) (undo-tree-id4298 . -16) (undo-tree-id4299 . -16) (undo-tree-id4300 . -16) (undo-tree-id4301 . -16) (undo-tree-id4302 . -16) (undo-tree-id4303 . -16) (undo-tree-id4304 . -16) (undo-tree-id4305 . -16) (undo-tree-id4306 . -16) (undo-tree-id4307 . -16) (undo-tree-id4308 . -16) (undo-tree-id4309 . -18) 22230 (t 25950 30537 429495 704000)) nil (25950 30663 723017 0) 0 nil])
([nil nil ((#("  :ensure nil
" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 13 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 14 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22214) (undo-tree-id4268 . -13) (undo-tree-id4269 . -12) (undo-tree-id4270 . -12) (undo-tree-id4271 . -12) (undo-tree-id4272 . -12) (undo-tree-id4273 . -12) (undo-tree-id4274 . -12) (undo-tree-id4275 . -12) (undo-tree-id4276 . -12) (undo-tree-id4277 . -13) (undo-tree-id4278 . -12) (undo-tree-id4279 . -12) (undo-tree-id4280 . -12) (undo-tree-id4281 . -12) (undo-tree-id4282 . -12) (undo-tree-id4283 . -12) (undo-tree-id4284 . -12) (undo-tree-id4285 . -12) (undo-tree-id4286 . -12) (undo-tree-id4287 . -12) (undo-tree-id4288 . -14) 22226) nil (25950 30663 722994 0) 0 nil])
([nil nil ((#("  :elpaca `(mu4e :host github :files (\"mu4e/*.el\") :repo \"djcb/mu\"
" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 22 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 36 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 49 51 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 51 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 56 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 57 66 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 66 67 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22214) (undo-tree-id4226 . -66) (undo-tree-id4227 . -12) (undo-tree-id4228 . -38) (undo-tree-id4229 . -38) (undo-tree-id4230 . -38) (undo-tree-id4231 . -38) (undo-tree-id4232 . -38) (undo-tree-id4233 . -38) (undo-tree-id4234 . -38) (undo-tree-id4235 . -38) (undo-tree-id4236 . -38) (undo-tree-id4237 . -38) (undo-tree-id4238 . -38) (undo-tree-id4239 . -38) (undo-tree-id4240 . -38) (undo-tree-id4241 . -38) (undo-tree-id4242 . -38) (undo-tree-id4243 . -38) (undo-tree-id4244 . -38) (undo-tree-id4245 . -38) (undo-tree-id4246 . -38) (undo-tree-id4247 . -38) (undo-tree-id4248 . -38) (undo-tree-id4249 . -38) (undo-tree-id4250 . -38) (undo-tree-id4251 . -38) (undo-tree-id4252 . -38) (undo-tree-id4253 . -38) (undo-tree-id4254 . -38) (undo-tree-id4255 . -38) (undo-tree-id4256 . -66) (undo-tree-id4257 . -12) (undo-tree-id4258 . -12) (undo-tree-id4259 . -12) (undo-tree-id4260 . -12) (undo-tree-id4261 . -12) (undo-tree-id4262 . -12) (undo-tree-id4263 . -12) (undo-tree-id4264 . -12) (undo-tree-id4265 . -12) (undo-tree-id4266 . -12) (undo-tree-id4267 . -67) 22226) nil (25950 30663 722974 0) 0 nil])
([nil nil ((#("                 :main \"mu4e/mu4e.el\"))
" 0 17 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 17 22 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 22 23 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 23 37 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 37 38 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 38 39 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 39 40 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                     " 0 4 (face org-indent) 4 21 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 22214) (undo-tree-id3838 . -39) (undo-tree-id3839 . 1) (undo-tree-id3840 . -38) (undo-tree-id3841 . -38) (undo-tree-id3842 . -38) (undo-tree-id3843 . -38) (undo-tree-id3844 . -38) (undo-tree-id3845 . -38) (undo-tree-id3846 . -40) (undo-tree-id3847 . -40) (undo-tree-id3848 . -40) (undo-tree-id3849 . -40) (undo-tree-id3850 . -40) (undo-tree-id3851 . -40) (undo-tree-id3852 . -40) (undo-tree-id3853 . -40) (undo-tree-id3854 . -40) (undo-tree-id3855 . -40) (undo-tree-id3856 . -40) (undo-tree-id3857 . -40) (undo-tree-id3858 . -40) (undo-tree-id3859 . -40) (undo-tree-id3860 . -40) (undo-tree-id3861 . -40) (undo-tree-id3862 . -40) (undo-tree-id3863 . -40) (undo-tree-id3864 . -40) (undo-tree-id3865 . -40) (undo-tree-id3866 . -40) (undo-tree-id3867 . -40) (undo-tree-id3868 . -40) (undo-tree-id3869 . -40) (undo-tree-id3870 . -40) (undo-tree-id3871 . -40) (undo-tree-id3872 . -40) (undo-tree-id3873 . -40) (undo-tree-id3874 . -40) (undo-tree-id3875 . -40) (undo-tree-id3876 . -40) (undo-tree-id3877 . -40) (undo-tree-id3878 . -40) (undo-tree-id3879 . -40) (undo-tree-id3880 . -40) (undo-tree-id3881 . -40) (undo-tree-id3882 . -40) (undo-tree-id3883 . -40) (undo-tree-id3884 . -40) (undo-tree-id3885 . -40) (undo-tree-id3886 . -40) (undo-tree-id3887 . -40) (undo-tree-id3888 . -40) (undo-tree-id3889 . -40) (undo-tree-id3890 . -40) (undo-tree-id3891 . -40) (undo-tree-id3892 . -40) (undo-tree-id3893 . -40) (undo-tree-id3894 . -40) (undo-tree-id3895 . -40) (undo-tree-id3896 . -40) (undo-tree-id3897 . -40) (undo-tree-id3898 . -40) (undo-tree-id3899 . -40) (undo-tree-id3900 . -40) (undo-tree-id3901 . -40) (undo-tree-id3902 . -40) (undo-tree-id3903 . -40) (undo-tree-id3904 . -40) (undo-tree-id3905 . -40) (undo-tree-id3906 . -40) (undo-tree-id3907 . -40) (undo-tree-id3908 . -40) (undo-tree-id3909 . -40) (undo-tree-id3910 . -40) (undo-tree-id3911 . -40) (undo-tree-id3912 . -40) (undo-tree-id3913 . -40) (undo-tree-id3914 . -40) (undo-tree-id3915 . -40) (undo-tree-id3916 . -40) (undo-tree-id3917 . -40) (undo-tree-id3918 . -40) (undo-tree-id3919 . -40) (undo-tree-id3920 . -40) (undo-tree-id3921 . -40) (undo-tree-id3922 . -40) (undo-tree-id3923 . -40) (undo-tree-id3924 . -40) (undo-tree-id3925 . -40) (undo-tree-id3926 . -40) (undo-tree-id3927 . -40) (undo-tree-id3928 . -40) (undo-tree-id3929 . -40) (undo-tree-id3930 . -40) (undo-tree-id3931 . -40) (undo-tree-id3932 . -40) (undo-tree-id3933 . -40) (undo-tree-id3934 . -40) (undo-tree-id3935 . -40) (undo-tree-id3936 . -40) (undo-tree-id3937 . -40) (undo-tree-id3938 . -40) (undo-tree-id3939 . -40) (undo-tree-id3940 . -40) (undo-tree-id3941 . -40) (undo-tree-id3942 . -40) (undo-tree-id3943 . -40) (undo-tree-id3944 . -40) (undo-tree-id3945 . -40) (undo-tree-id3946 . -40) (undo-tree-id3947 . -40) (undo-tree-id3948 . -40) (undo-tree-id3949 . -40) (undo-tree-id3950 . -40) (undo-tree-id3951 . -40) (undo-tree-id3952 . -40) (undo-tree-id3953 . -40) (undo-tree-id3954 . -40) (undo-tree-id3955 . -40) (undo-tree-id3956 . -40) (undo-tree-id3957 . -40) (undo-tree-id3958 . -40) (undo-tree-id3959 . -40) (undo-tree-id3960 . -40) (undo-tree-id3961 . -40) (undo-tree-id3962 . -40) (undo-tree-id3963 . -40) (undo-tree-id3964 . -40) (undo-tree-id3965 . -40) (undo-tree-id3966 . -40) (undo-tree-id3967 . -40) (undo-tree-id3968 . -40) (undo-tree-id3969 . -40) (undo-tree-id3970 . -40) (undo-tree-id3971 . -40) (undo-tree-id3972 . -40) (undo-tree-id3973 . -40) (undo-tree-id3974 . -40) (undo-tree-id3975 . -40) (undo-tree-id3976 . -40) (undo-tree-id3977 . -40) (undo-tree-id3978 . -40) (undo-tree-id3979 . -40) (undo-tree-id3980 . -40) (undo-tree-id3981 . -40) (undo-tree-id3982 . -40) (undo-tree-id3983 . -40) (undo-tree-id3984 . -40) (undo-tree-id3985 . -40) (undo-tree-id3986 . -40) (undo-tree-id3987 . -40) (undo-tree-id3988 . -40) (undo-tree-id3989 . -40) (undo-tree-id3990 . -40) (undo-tree-id3991 . -40) (undo-tree-id3992 . -40) (undo-tree-id3993 . -40) (undo-tree-id3994 . -40) (undo-tree-id3995 . -40) (undo-tree-id3996 . -40) (undo-tree-id3997 . -40) (undo-tree-id3998 . -40) (undo-tree-id3999 . -40) (undo-tree-id4000 . -40) (undo-tree-id4001 . -40) (undo-tree-id4002 . -40) (undo-tree-id4003 . -40) (undo-tree-id4004 . -40) (undo-tree-id4005 . -40) (undo-tree-id4006 . -40) (undo-tree-id4007 . -40) (undo-tree-id4008 . -40) (undo-tree-id4009 . -40) (undo-tree-id4010 . -40) (undo-tree-id4011 . -40) (undo-tree-id4012 . -40) (undo-tree-id4013 . -40) (undo-tree-id4014 . -40) (undo-tree-id4015 . -40) (undo-tree-id4016 . -40) (undo-tree-id4017 . -40) (undo-tree-id4018 . -40) (undo-tree-id4019 . -40) (undo-tree-id4020 . -39) (undo-tree-id4021 . -39) (undo-tree-id4022 . -39) (undo-tree-id4023 . -38) (undo-tree-id4024 . -38) (undo-tree-id4025 . -39) (undo-tree-id4026 . -39) (undo-tree-id4027 . -38) (undo-tree-id4028 . -38) (undo-tree-id4029 . -12) (undo-tree-id4030 . -38) (undo-tree-id4031 . -38) (undo-tree-id4032 . -38) (undo-tree-id4033 . -38) (undo-tree-id4034 . -38) (undo-tree-id4035 . -38) (undo-tree-id4036 . -38) (undo-tree-id4037 . -38) (undo-tree-id4038 . -38) (undo-tree-id4039 . -38) (undo-tree-id4040 . -38) (undo-tree-id4041 . -38) (undo-tree-id4042 . -38) (undo-tree-id4043 . -38) (undo-tree-id4044 . -38) (undo-tree-id4045 . -38) (undo-tree-id4046 . -38) (undo-tree-id4047 . -38) (undo-tree-id4048 . -38) (undo-tree-id4049 . -38) (undo-tree-id4050 . -38) (undo-tree-id4051 . -38) (undo-tree-id4052 . -38) (undo-tree-id4053 . -38) (undo-tree-id4054 . -38) (undo-tree-id4055 . -38) (undo-tree-id4056 . -38) (undo-tree-id4057 . -38) (undo-tree-id4058 . -38) (undo-tree-id4059 . -38) (undo-tree-id4060 . -38) (undo-tree-id4061 . -38) (undo-tree-id4062 . -38) (undo-tree-id4063 . -38) (undo-tree-id4064 . -38) (undo-tree-id4065 . -38) (undo-tree-id4066 . -38) (undo-tree-id4067 . -38) (undo-tree-id4068 . -38) (undo-tree-id4069 . -38) (undo-tree-id4070 . -38) (undo-tree-id4071 . -38) (undo-tree-id4072 . -38) (undo-tree-id4073 . -38) (undo-tree-id4074 . -38) (undo-tree-id4075 . -38) (undo-tree-id4076 . -38) (undo-tree-id4077 . -38) (undo-tree-id4078 . -38) (undo-tree-id4079 . -38) (undo-tree-id4080 . -38) (undo-tree-id4081 . -38) (undo-tree-id4082 . -38) (undo-tree-id4083 . -38) (undo-tree-id4084 . -38) (undo-tree-id4085 . -38) (undo-tree-id4086 . -38) (undo-tree-id4087 . -38) (undo-tree-id4088 . -38) (undo-tree-id4089 . -38) (undo-tree-id4090 . -38) (undo-tree-id4091 . -38) (undo-tree-id4092 . -38) (undo-tree-id4093 . -38) (undo-tree-id4094 . -38) (undo-tree-id4095 . -38) (undo-tree-id4096 . -38) (undo-tree-id4097 . -38) (undo-tree-id4098 . -38) (undo-tree-id4099 . -38) (undo-tree-id4100 . -38) (undo-tree-id4101 . -38) (undo-tree-id4102 . -38) (undo-tree-id4103 . -38) (undo-tree-id4104 . -38) (undo-tree-id4105 . -38) (undo-tree-id4106 . -38) (undo-tree-id4107 . -38) (undo-tree-id4108 . -38) (undo-tree-id4109 . -38) (undo-tree-id4110 . -38) (undo-tree-id4111 . -38) (undo-tree-id4112 . -38) (undo-tree-id4113 . -38) (undo-tree-id4114 . -38) (undo-tree-id4115 . -38) (undo-tree-id4116 . -38) (undo-tree-id4117 . -38) (undo-tree-id4118 . -38) (undo-tree-id4119 . -38) (undo-tree-id4120 . -38) (undo-tree-id4121 . -38) (undo-tree-id4122 . -38) (undo-tree-id4123 . -38) (undo-tree-id4124 . -38) (undo-tree-id4125 . -38) (undo-tree-id4126 . -38) (undo-tree-id4127 . -38) (undo-tree-id4128 . -38) (undo-tree-id4129 . -38) (undo-tree-id4130 . -38) (undo-tree-id4131 . -38) (undo-tree-id4132 . -38) (undo-tree-id4133 . -38) (undo-tree-id4134 . -38) (undo-tree-id4135 . -38) (undo-tree-id4136 . -38) (undo-tree-id4137 . -38) (undo-tree-id4138 . -38) (undo-tree-id4139 . -38) (undo-tree-id4140 . -38) (undo-tree-id4141 . -38) (undo-tree-id4142 . -38) (undo-tree-id4143 . -38) (undo-tree-id4144 . -38) (undo-tree-id4145 . -38) (undo-tree-id4146 . -38) (undo-tree-id4147 . -38) (undo-tree-id4148 . -38) (undo-tree-id4149 . -38) (undo-tree-id4150 . -38) (undo-tree-id4151 . -38) (undo-tree-id4152 . -38) (undo-tree-id4153 . -38) (undo-tree-id4154 . -38) (undo-tree-id4155 . -38) (undo-tree-id4156 . -38) (undo-tree-id4157 . -38) (undo-tree-id4158 . -38) (undo-tree-id4159 . -38) (undo-tree-id4160 . -38) (undo-tree-id4161 . -38) (undo-tree-id4162 . -38) (undo-tree-id4163 . -38) (undo-tree-id4164 . -38) (undo-tree-id4165 . -38) (undo-tree-id4166 . -38) (undo-tree-id4167 . -38) (undo-tree-id4168 . -38) (undo-tree-id4169 . -38) (undo-tree-id4170 . -38) (undo-tree-id4171 . -38) (undo-tree-id4172 . -38) (undo-tree-id4173 . -38) (undo-tree-id4174 . -38) (undo-tree-id4175 . -38) (undo-tree-id4176 . -38) (undo-tree-id4177 . -38) (undo-tree-id4178 . -38) (undo-tree-id4179 . -38) (undo-tree-id4180 . -38) (undo-tree-id4181 . -38) (undo-tree-id4182 . -38) (undo-tree-id4183 . -38) (undo-tree-id4184 . -38) (undo-tree-id4185 . -38) (undo-tree-id4186 . -38) (undo-tree-id4187 . -38) (undo-tree-id4188 . -38) (undo-tree-id4189 . -38) (undo-tree-id4190 . -38) (undo-tree-id4191 . -38) (undo-tree-id4192 . -38) (undo-tree-id4193 . -38) (undo-tree-id4194 . -38) (undo-tree-id4195 . -38) (undo-tree-id4196 . -38) (undo-tree-id4197 . -38) (undo-tree-id4198 . -38) (undo-tree-id4199 . -38) (undo-tree-id4200 . -38) (undo-tree-id4201 . -38) (undo-tree-id4202 . -38) (undo-tree-id4203 . -38) (undo-tree-id4204 . -38) (undo-tree-id4205 . -38) (undo-tree-id4206 . -38) (undo-tree-id4207 . -38) (undo-tree-id4208 . -38) (undo-tree-id4209 . -38) (undo-tree-id4210 . -38) (undo-tree-id4211 . -38) (undo-tree-id4212 . -38) (undo-tree-id4213 . -38) (undo-tree-id4214 . -39) (undo-tree-id4215 . -12) (undo-tree-id4216 . -12) (undo-tree-id4217 . -12) (undo-tree-id4218 . -12) (undo-tree-id4219 . -12) (undo-tree-id4220 . -12) (undo-tree-id4221 . -12) (undo-tree-id4222 . -12) (undo-tree-id4223 . -12) (undo-tree-id4224 . -12) (undo-tree-id4225 . -40) 22226) nil (25950 30663 722931 0) 0 nil])
([nil nil ((22214 . 22215) 22222 (t 25950 30663 743114 529000)) nil (25950 30664 684097 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 508 . 509) (#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -574) (508 . 575) 456 (t 25950 30664 703785 801000)) nil (25950 30770 167458 0) 0 nil])
([nil nil ((571 . 575)) nil (25950 30770 167454 0) 0 nil])
([nil nil ((22285 . 22295) (#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -22285) (undo-tree-id4312 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -22286) (undo-tree-id4313 . -1) (#("q" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -22287) (undo-tree-id4314 . -1) (#("u" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -22288) (undo-tree-id4315 . -1) (#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -22289) (undo-tree-id4316 . -1) (#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -22290) (undo-tree-id4317 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block))) . -22291) (undo-tree-id4318 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -22292) (undo-tree-id4319 . -1) (#("'" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -22293) (undo-tree-id4320 . -1) 22294 (22285 . 22294) (22284 . 22286) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face org-block-begin-line)) . -22284) (22284 . 22285) (t 25950 30770 186875 859000)) nil (25950 30818 460711 0) 0 nil])
([nil nil ((22296 . 22298) (22295 . 22297) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -22295) (22295 . 22296) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -22295) (undo-tree-id4311 . -1) 22296 (22295 . 22296)) nil (25950 30818 460701 0) 0 nil])
([nil nil ((22297 . 22317) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 22297) (undo-tree-id4310 . 1) 22284) nil (25950 30818 460696 0) 0 nil])
([nil nil ((22295 . 22296) (22317 . 22324) 22284 (t 25950 30818 481229 703000)) nil (25950 30869 236754 0) 0 nil])
([nil nil ((22319 . 23454) (#("	" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 22319) (22322 . 22700) (22324 . 23837) 22284 (t 25950 30869 256808 820000)) nil (25950 31040 283637 0) 0 nil])
([nil nil ((#(":custom
  " 0 7 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 7 8 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 8 10 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22321) 22284 (t 25950 31040 302162 270000)) nil (25950 31042 66995 0) 0 nil])
([nil nil ((22322 . 22327) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22377) 22284 (t 25950 31042 85789 706000)) nil (25950 31057 818521 0) 0 nil])
([nil nil ((22383 . 22384) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22383) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22418) (22420 . 22421) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22420) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22441) (22443 . 22444) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22443) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22523) (22525 . 22526) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22525) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22581) (22583 . 22584) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22583) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22619) (22621 . 22622) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22621) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22670) (22672 . 22673) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22672) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22714) (22716 . 22717) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22716) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22741) (22743 . 22744) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22743) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22772) (22774 . 22775) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22774) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22800) (22802 . 22803) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22802) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22838) (22840 . 22841) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22840) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22891) (22893 . 22894) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22893) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22951) (22953 . 22954) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22953) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22977) (22979 . 22980) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22979) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23020) (23022 . 23023) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23022) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23056) (23058 . 23059) (#("  (" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23058) 22284 (t 25950 31057 839039 41000)) nil (25950 31089 312938 0) 0 nil])
([nil nil ((#("c ~/.mbsyncrc -" 0 15 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22839) 22284 (t 25950 31089 333123 377000)) nil (25950 31094 666853 0) 0 nil])
([nil nil ((22319 . 22321) (22321 . 22322) (22383 . 22384) (22384 . 22386) (22417 . 22418) (22418 . 22420) (22438 . 22441) (22516 . 22517) (22517 . 22519) (22571 . 22572) (22572 . 22574) (22607 . 22610) (22655 . 22658) (22696 . 22699) (22720 . 22723) (22747 . 22748) (22748 . 22750) (22772 . 22773) (22773 . 22775) (22808 . 22811) (22842 . 22843) (22843 . 22845) (22899 . 22900) (22900 . 22902) (22923 . 22926) (22963 . 22966) (22996 . 22999) 22284 (t 25950 31094 686504 504000)) nil (25950 31106 673843 0) 0 nil])
([nil nil ((22566 . 22567) (#("Documents/em" 0 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22566) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22581) 22284 (t 25950 31106 691393 736000)) nil (25950 31129 725919 0) 0 nil])
([nil nil ((22601 . 22604) (#("Down" 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22601) (22606 . 22610) (#("o" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22606) (22608 . 22610) (#("ds" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22608) 22284 (t 25950 31129 744714 969000)) nil (25950 31149 253804 0) 0 nil])
([nil nil ((22612 . 22613) 22284 (t 25950 31149 273603 518000)) nil (25950 31150 350258 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)))) . 22612) 22284 (t 25950 31150 370549 329000)) nil (25950 31157 779634 0) 0 nil])
([nil nil ((#(":config
  " 0 7 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 7 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8 10 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23083) 22284 (t 25950 31157 799509 171000)) nil (25950 31171 336146 0) 0 nil])
([nil nil ((23081 . 23084) (23103 . 23105) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23103) (23117 . 23119) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23117) (23145 . 23147) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23145) (23172 . 23174) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23172) (23249 . 23251) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23249) (23325 . 23327) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23325) (23361 . 23365) (#("                      " 0 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23361) (23395 . 23399) (#("                      " 0 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23395) (23457 . 23461) (#("                      " 0 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23457) (23543 . 23545) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23543) (23615 . 23618) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23615) (23680 . 23683) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23680) (23731 . 23734) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23731) (23797 . 23800) (#("              " 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 2 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23797) (23869 . 23872) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23869) (23954 . 23957) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23954) (24014 . 24017) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24014) (24062 . 24065) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24062) (24106 . 24109) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24106) (24155 . 24157) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24155) (24183 . 24185) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24183) (24206 . 24208) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24206) (24279 . 24281) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24279) (24351 . 24353) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24351) (24387 . 24391) (#("                      " 0 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24387) (24421 . 24425) (#("                      " 0 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24421) (24483 . 24487) (#("                      " 0 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                               " 0 4 (face org-indent) 4 31 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24483) (24565 . 24567) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24565) (24633 . 24636) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24633) (24694 . 24697) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24694) (24745 . 24748) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24745) (24811 . 24814) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24811) (24879 . 24882) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24879) (24964 . 24967) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24964) (25042 . 25045) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25042) (25110 . 25113) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25110) (25170 . 25173) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 25170) (25218 . 25221) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 25218) (25262 . 25265) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 25262) 22284 (t 25950 31171 356636 367000)) nil (25950 31177 74549 0) 0 nil])
([nil nil ((23153 . 23155) (#("person" 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 23153) (23160 . 23161) 22284 (t 25950 31177 94819 745000)) nil (25950 31184 542035 0) 0 nil])
([nil nil ((24011 . 24014) (#("w" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 24011) (24013 . 24015) (#("rk" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 24013) 22284 (t 25950 31184 562648 713000)) nil (25950 31187 807438 0) 0 nil])
([nil nil ((24072 . 24075) (#("w" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 24072) (24074 . 24076) (#("rk" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 24074) 22284 (t 25950 31187 826685 554000)) nil (25950 31191 731308 0) 0 nil])
([nil nil ((24142 . 24145) (#("w" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 24142) (24144 . 24146) (#("rk" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 24144) 22284 (t 25950 31191 750975 893000)) nil (25950 31194 267516 0) 0 nil])
([nil nil ((23213 . 23215) (#("person" 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 23213) (23220 . 23221) 22284 (t 25950 31194 284440 624000)) nil (25950 31198 521932 0) 0 nil])
([nil nil ((23282 . 23284) (#("person" 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 23282) (23289 . 23290) 22284 (t 25950 31198 542375 488000)) nil (25950 31200 483591 0) 0 nil])
([nil nil ((23426 . 23428) (#("secret-person" 0 13 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23426) (23440 . 23441) (#("-account" 0 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23447) 22284 (t 25950 31200 503940 575000)) nil (25950 31210 79220 0) 0 nil])
([nil nil ((23478 . 23480) (#("secret-person" 0 13 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23478) (23492 . 23493) (#("-address" 0 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23499) 22284 (t 25950 31210 98327 777000)) nil (25950 31233 708539 0) 0 nil])
([nil nil ((23081 . 24480) 22284 (t 25950 31233 728930 437000)) nil (25950 31259 45825 0) 0 nil])
([nil nil ((23081 . 23086) (23101 . 23103) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)))) . 23101) (23131 . 23133) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)))) . 23131) (23157 . 23159) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)))) . 23157) (23195 . 23199) (#("                      " 0 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)))) . 23195) (23231 . 23235) (#("                      " 0 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 23231) (23331 . 23333) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)))) . 23331) (23398 . 23401) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 23398) (23458 . 23461) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 23458) (23517 . 23520) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 23517) (23574 . 23577) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 23574) (23625 . 23628) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 23625) (23687 . 23690) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 23687) (23737 . 23740) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 23737) (23794 . 23796) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)))) . 23794) (23824 . 23826) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)))) . 23824) (23851 . 23853) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)))) . 23851) (23889 . 23893) (#("                      " 0 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                              " 0 4 (face org-indent) 4 30 (face org-indent)))) . 23889) (23925 . 23929) (#("                      " 0 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 23925) (24020 . 24022) (#("      " 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)))) . 24020) (24082 . 24085) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24082) (24138 . 24141) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24138) (24198 . 24201) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24198) (24256 . 24259) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24256) (24308 . 24311) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24308) (24372 . 24375) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24372) (24422 . 24425) (#("              " 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24422) 22284 (t 25950 31259 66590 27000)) nil (25950 31280 979819 0) 0 nil])
([nil nil ((#("`" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)))) . 23110) (23112 . 23122) (#("," 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)))) . 23112) (24221 . 24222) 22284 (t 25950 31281 601 830000)) nil (25950 31310 938079 0) 0 nil])
([nil nil ((#("," 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 23684) 22284 (t 25950 31310 958585 389000)) nil (25950 31321 687216 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 23677) (#(")" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)))) . 24228) 22284 (t 25950 31321 708056 149000)) nil (25950 31349 740216 0) 0 nil])
([nil nil ((#("		   " 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                       " 0 4 (face org-indent) 4 23 (face org-indent))) 2 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                       " 0 4 (face org-indent) 4 23 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24268) (24292 . 24294) (#("		" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24292) (24298 . 24300) (24312 . 24314) (#("		" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24312) (24318 . 24320) (24365 . 24366) (#("g" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24365) (24382 . 24384) (#("		" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24382) (24388 . 24390) (24434 . 24435) (#("g" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24434) (#("		" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24451) (24457 . 24461) (24483 . 24492) (#("				" 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                      " 0 4 (face org-indent) 4 38 (face org-indent)))) . 24483) (24489 . 24500) (24499 . 24507) (#("				" 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                        " 0 4 (face org-indent) 4 40 (face org-indent)))) . 24499) (24507 . 24519) (24543 . 24550) (#("				" 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)))) . 24543) (24552 . 24565) (24578 . 24579) (#("gma" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent))) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24578) (24582 . 24584) (24583 . 24585) (#("-e" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24583) (24587 . 24595) (24589 . 24594) (24593 . 24596) (#("		" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)))) . 24593) (24599 . 24600) (24629 . 24630) (#(",gma" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24629) (24634 . 24636) (24635 . 24637) (#("-e" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24635) (24638 . 24640) (24639 . 24645) (24641 . 24646) (#("			" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 24643) (24650 . 24662) (24668 . 24670) (#(",secret-pers" 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24668) (24681 . 24686) (#("na" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24681) (24684 . 24689) (#("-" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24684) (24686 . 24689) (24690 . 24692) (#("-name" 0 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24690) (24697 . 24702) (#("			" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 24697) (24704 . 24711) (24737 . 24738) (#("			" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 24737) (24744 . 24755) (24792 . 24801) (#("			" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 24792) (24799 . 24802) (24821 . 24823) (#(",secre" 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24821) (#("-person" 0 7 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24828) (24837 . 24839) (#("-e" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24837) (24841 . 24849) (24843 . 24844) (#("-ac" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24843) (24848 . 24850) (#("unt" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24848) (24853 . 24857) (#("			" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 24853) (24860 . 24868) (24927 . 24939) (#("			" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 24927) (24976 . 24985) (#("			" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 24976) (24983 . 24986) (25013 . 25018) (#("			" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 25013) (25020 . 25027) (25046 . 25058) (#("			" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 25046) 22284 (t 25950 31349 757626 626000)) nil (25950 31496 742838 0) 0 nil])
([nil nil ((#("  :name \"gmail\"
		      :match-func (lambda (msg)
				    (when msg
				      (mu4e-message-contact-field-matches msg :to \"italoamaya03@gmail.com\")))
		      :vars '((user-mail-address . \"italoamaya03@gmail.com\")
			      (mu4e-sent-folder . \"/gmail/Sent Mail\")
			      (mu4e-drafts-folder . \"/gmail/Drafts\")
			      (mu4e-trash-folder . \"/gmail/Trash\")
			      ;; Specify Gmail SMTP settings
			      (smtpmail-smtp-server . \"smtp.gmail.com\")
			      (smtpmail-smtp-service . 587)
			      (smtpmail-stream-type . starttls)))
		    (make-mu4e-context
		      :name \"icloud\"
		      :match-func (lambda (msg)
				    (when msg
				      (mu4e-message-contact-field-matches msg :to \"italoamaya@me.com\")))
		      " 0 16 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent))) 16 18 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent))) 18 50 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent))) 50 54 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                        " 0 4 (face org-indent) 4 40 (face org-indent))) 54 68 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                        " 0 4 (face org-indent) 4 40 (face org-indent))) 68 72 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                          " 0 4 (face org-indent) 4 42 (face org-indent))) 72 150 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                          " 0 4 (face org-indent) 4 42 (face org-indent))) 150 152 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent))) 152 213 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent))) 213 216 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 216 262 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 262 265 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 265 310 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 310 313 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 313 356 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 356 359 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 359 396 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 396 399 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 399 447 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 447 450 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 450 486 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 486 489 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 489 531 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 531 533 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 533 556 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 556 558 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent))) 558 579 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent))) 579 581 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent))) 581 613 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent))) 613 617 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                        " 0 4 (face org-indent) 4 40 (face org-indent))) 617 631 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                        " 0 4 (face org-indent) 4 40 (face org-indent))) 631 635 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                          " 0 4 (face org-indent) 4 42 (face org-indent))) 635 708 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                          " 0 4 (face org-indent) 4 42 (face org-indent))) 708 710 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent))) 710 716 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent)))) . 23146) (#("vars '((user-mail-address . \"italoamaya@me.com\")
			      (mu4e-se" 0 49 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent))) 49 52 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 52 66 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)))) . 23863) (#("t-folder . \"/icloud/Sent\")
			      (mu4e-dr" 0 27 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 27 30 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 30 44 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)))) . 23930) (#("fts-folder . \"/icloud/Drafts\")
			      (" 0 31 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 31 34 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 34 41 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)))) . 23975) (#("u4e-trash-fold" 0 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)))) . 24017) (#("r" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)))) . 24032) (#(". " 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)))) . 24034) (#("/icloud/Trash\")
			      ;; Specify iCloud SMTP settin" 0 16 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 16 19 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 19 54 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)))) . 24037) (#("s
			      (s" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 2 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 5 13 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)))) . 24092) (#("tpm" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)))) . 24106) (#("-smtp-server . " 0 15 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent)))) . 24112) (#("smtp.mail.me.com\")
			      (smtpmail-smtp-service . 587)
			      (smtpmail-stream-type . starttls)))))
	    (setq mu4e-contexts" 0 19 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 19 22 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 22 58 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 58 61 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 61 99 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 99 105 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                  " 0 4 (face org-indent) 4 34 (face org-indent))) 105 108 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent))) 108 110 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 110 111 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 111 115 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 115 129 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24128) (#("  (list
(make-mu4e-context
    " 0 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8 27 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 27 29 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent))) 29 31 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24260) (#("nam" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . 24296) (#(" \"gmail\"
        :e" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent))) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent))) 6 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 8 9 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9 11 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent))) 11 15 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 15 17 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent))) 17 19 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . 24300) (24381 . 24383) (#("    " 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent))) 2 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24381) (24452 . 24454) (#("    " 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24452) (24486 . 24490) (#("                    " 0 9 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent))) 9 11 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11 20 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent)))) . 24486) (24518 . 24522) (#("                    " 0 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent))) 8 10 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 10 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 20 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent)))) . 24518) (24578 . 24582) (#("                    " 0 7 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                             " 0 4 (face org-indent) 4 29 (face org-indent))) 7 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                             " 0 4 (face org-indent) 4 29 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 20 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                             " 0 4 (face org-indent) 4 29 (face org-indent)))) . 24578) (24657 . 24659) (#("    " 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24657) (24721 . 24724) (#("            " 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24721) (24781 . 24784) (#("            " 0 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent))) 5 9 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24781) (24830 . 24833) (#("            " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent))) 1 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24830) (24894 . 24897) (#("            " 0 9 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent))) 9 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24894) (24958 . 24961) (#("            " 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent))) 4 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24958) (25041 . 25044) (#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 25041) (25099 . 25102) (#("            " 0 9 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent))) 9 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25099) (25145 . 25148) (#("            " 0 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent))) 5 9 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 25145) (25187 . 25190) (#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 25187) 22284 (t 25950 31496 762857 642000)) nil (25950 31505 709977 0) 0 nil])
([nil nil ((23542 . 23544) (#("Your Full N" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 7 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 7 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8 11 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 23542) (23554 . 23556) (#("me" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23554) (23557 . 23558) (#("(G" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 23557) (23561 . 23563) (#("il)" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 23561) 22284 (t 25950 31505 728437 155000)) nil (25950 31559 755026 0) 0 nil])
([nil nil ((23937 . 24944) 22284 (t 25950 31559 774598 942000)) nil (25950 31577 496985 0) 0 nil])
([nil nil ((23937 . 23942) (23956 . 23958) (#("    " 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)))) . 23956) (23979 . 23981) (#("    " 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)))) . 23979) (24052 . 24054) (#("    " 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)))) . 24052) (24124 . 24126) (#("    " 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)))) . 24124) (24158 . 24162) (#("                    " 0 20 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent)))) . 24158) (24190 . 24194) (#("                    " 0 20 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent)))) . 24190) (24250 . 24254) (#("                    " 0 20 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                             " 0 4 (face org-indent) 4 29 (face org-indent)))) . 24250) (24324 . 24326) (#("    " 0 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)))) . 24324) (24383 . 24386) (#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24383) (24444 . 24447) (#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24444) (24493 . 24496) (#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24493) (24557 . 24560) (#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24557) (24616 . 24619) (#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24616) (24699 . 24702) (#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24699) (24748 . 24751) (#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24748) (24808 . 24811) (#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24808) (24854 . 24857) (#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24854) (24896 . 24899) (#("            " 0 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)))) . 24896) 22284 (t 25950 31577 519763 200000)) nil (25950 31580 727861 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 24799) 22284 (t 25950 31580 750030 657000)) nil (25950 31586 712230 0) 0 nil])
([nil nil ((24356 . 24358) (#("Your Full N" 0 11 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 24356) (#("me (iC" 0 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 24368) (24376 . 24382) (#("ud)" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)))) . 24376) 22284 (t 25950 31586 732247 182000)) nil (25950 31592 681151 0) 0 nil])
([nil nil ((#("		   (make-mu4e-context
		    :name \"icloud\"
		    :enter-func (lambda () (mu4e-message \"Entering icloud context\"))
		    :leave-func (lambda () (mu4e-message \"Leaving icloud context\"))
		    :match-func (lambda (msg)
				  (when msg
				    (mu4e-message-contact-field-matches
				     msg '(:from :to :cc :bcc) secret-work-email-account)))
		    :vars `((user-mail-address .  ,secret-work-email-address)
			    (user-full-name . ,secret-work-email-name)
			    (mu4e-compose-format-flowed . t)
			    (message-send-mail-function . smtpmail-send-it)
			    (smtpmail-smtp-user . ,secret-work-email-account)
			    (smtpmail-starttls-credentials . ((\"smtp.gmail.com\" 587 nil nil)))
			    (smtpmail-auth-credentials . ,secret-work-email-credential)
			    (smtpmail-default-smtp-server . \"smtp.gmail.com\")
			    (smtpmail-smtp-server . \"smtp.gmail.com\")
			    (smtpmail-smtp-service . 587)
			    (smtpmail-debug-info . t)
			    (smtpmail-debug-verbose . t)))))
" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                       " 0 4 (face org-indent) 4 23 (face org-indent))) 2 24 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                       " 0 4 (face org-indent) 4 23 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24 26 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 26 30 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30 35 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 35 36 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 36 37 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 37 40 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 40 41 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 41 43 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 43 44 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 44 45 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 45 47 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 47 51 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 51 62 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 62 64 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 64 70 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 70 88 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 88 98 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 98 101 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 101 102 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 102 104 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 104 113 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 113 116 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 116 118 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 118 122 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 122 133 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 133 135 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 135 141 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 141 159 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 159 168 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 168 171 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 171 172 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 172 174 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 174 183 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 183 186 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 186 188 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 188 192 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 192 203 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 203 205 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 205 211 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 211 218 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 218 222 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                      " 0 4 (face org-indent) 4 38 (face org-indent))) 222 225 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                      " 0 4 (face org-indent) 4 38 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 225 229 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                      " 0 4 (face org-indent) 4 38 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 229 234 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                      " 0 4 (face org-indent) 4 38 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 234 238 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                        " 0 4 (face org-indent) 4 40 (face org-indent))) 238 278 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                        " 0 4 (face org-indent) 4 40 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 278 282 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent))) 282 293 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 293 298 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 298 299 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 299 302 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 302 303 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 303 306 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 306 307 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 307 311 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 311 342 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                         " 0 4 (face org-indent) 4 41 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 342 344 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent))) 344 348 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 348 353 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 353 406 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 406 409 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 409 456 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 456 459 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 459 496 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 496 499 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 499 551 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 551 554 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 554 608 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 608 611 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 611 650 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 650 666 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 666 682 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 682 685 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 685 749 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 749 752 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 752 788 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 788 804 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 804 806 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 806 809 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 809 837 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 837 853 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 853 855 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 855 858 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 858 892 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 892 895 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 895 925 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 925 928 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent))) 928 964 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 964 965 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                " 0 4 (face org-indent) 4 32 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 24788) 22284 (t 25950 31592 702620 544000)) nil (25950 31601 950103 0) 0 nil])
([nil nil ((24787 . 24789) 22284 (t 25950 31601 974344 337000)) nil (25950 31628 985941 0) 0 nil])
([nil nil ((22445 . 22446) (t 25950 31629 7637 294000) 22427) nil (25950 31768 722282 0) 0 nil])
([nil nil ((22446 . 22474) 22284) nil (25950 31768 722278 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -23109) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -23110) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -23111) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -23112) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . -23113) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) 23114 (23109 . 23114) (t 25950 31768 747579 940000)) nil (25950 31781 580470 0) 0 nil])
([nil nil ((#("\"Needed for mbsync\"" 0 19 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22940) (undo-tree-id4562 . -18) (undo-tree-id4563 . -19) (undo-tree-id4564 . -19) (t 25950 31781 604524 15000)) nil (25950 31786 560868 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22939) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1)) nil (25950 31786 560862 0) 0 nil])
([nil nil ((#(" \"Use mu4e as default email program.\"" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 37 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22519) (undo-tree-id4565 . -36) (undo-tree-id4566 . -37) (undo-tree-id4567 . -37) (t 25950 31786 584180 603000)) nil (25950 31789 361142 0) 0 nil])
([nil nil ((#(" \"Update every fifteen minutes\"" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 31 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22354) (undo-tree-id4568 . -30) (undo-tree-id4569 . -15) (undo-tree-id4570 . -15) (undo-tree-id4571 . -15) (undo-tree-id4572 . -15) (undo-tree-id4573 . -15) (undo-tree-id4574 . -15) (undo-tree-id4575 . -15) (undo-tree-id4576 . -31) (undo-tree-id4577 . -31) (t 25950 31789 385074 341000)) nil (25950 31791 729547 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -23023) (undo-tree-id4580 . -1) 23024 (23022 . 23024) (23021 . 23022) (t 25950 31791 753411 451000) 22996) nil (25950 31908 49713 0) 0 nil])
([nil nil ((#("d
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 23022) (undo-tree-id4578 . -1) (undo-tree-id4579 . 1)) nil (25950 31908 49711 0) 0 nil])
([nil nil ((22354 . 22355) 22319) nil (25950 31908 49702 0) 0 nil])
([nil nil ((22355 . 22400) 22284) nil (25950 31908 49698 0) 0 nil])
([nil nil ((25536 . 25538) (#("icloud" 0 6 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . 25536) (undo-tree-id4581 . -5) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -2) (undo-tree-id4608 . -2) (undo-tree-id4609 . -2) (undo-tree-id4610 . -2) (undo-tree-id4611 . -2) (undo-tree-id4612 . -2) (undo-tree-id4613 . -2) (undo-tree-id4614 . -2) (undo-tree-id4615 . -2) (undo-tree-id4616 . -2) (undo-tree-id4617 . -2) (undo-tree-id4618 . -2) (undo-tree-id4619 . -2) (undo-tree-id4620 . -2) (undo-tree-id4621 . -2) (undo-tree-id4622 . -2) (undo-tree-id4623 . -2) (undo-tree-id4624 . -2) (undo-tree-id4625 . -2) (undo-tree-id4626 . -2) (undo-tree-id4627 . -2) (undo-tree-id4628 . -2) (undo-tree-id4629 . -2) (undo-tree-id4630 . -2) (undo-tree-id4631 . -2) (undo-tree-id4632 . -2) (undo-tree-id4633 . -2) (undo-tree-id4634 . -2) (undo-tree-id4635 . -2) (undo-tree-id4636 . -2) (undo-tree-id4637 . -2) (undo-tree-id4638 . -2) (undo-tree-id4639 . -3) (undo-tree-id4640 . -3) (undo-tree-id4641 . -3) (undo-tree-id4642 . -3) (undo-tree-id4643 . -3) (undo-tree-id4644 . -3) (undo-tree-id4645 . -3) (undo-tree-id4646 . -3) (undo-tree-id4647 . -3) (undo-tree-id4648 . -3) (undo-tree-id4649 . -3) (undo-tree-id4650 . -3) (undo-tree-id4651 . -3) (undo-tree-id4652 . -3) (undo-tree-id4653 . -3) (undo-tree-id4654 . -3) (undo-tree-id4655 . -3) (undo-tree-id4656 . -3) (undo-tree-id4657 . -3) (undo-tree-id4658 . -3) (undo-tree-id4659 . -3) (undo-tree-id4660 . -3) (undo-tree-id4661 . -3) (undo-tree-id4662 . -3) (undo-tree-id4663 . -3) (undo-tree-id4664 . -3) (undo-tree-id4665 . -3) (undo-tree-id4666 . -3) (undo-tree-id4667 . -3) (undo-tree-id4668 . -3) (undo-tree-id4669 . -3) (undo-tree-id4670 . -3) (undo-tree-id4671 . -4) (undo-tree-id4672 . -4) (undo-tree-id4673 . -4) (undo-tree-id4674 . -4) (undo-tree-id4675 . -4) (undo-tree-id4676 . -4) (undo-tree-id4677 . -4) (undo-tree-id4678 . -4) (undo-tree-id4679 . -4) (undo-tree-id4680 . -4) (undo-tree-id4681 . -4) (undo-tree-id4682 . -4) (undo-tree-id4683 . -4) (undo-tree-id4684 . -4) (undo-tree-id4685 . -4) (undo-tree-id4686 . -4) (undo-tree-id4687 . -4) (undo-tree-id4688 . -4) (undo-tree-id4689 . -4) (undo-tree-id4690 . -4) (undo-tree-id4691 . -4) (undo-tree-id4692 . -4) (undo-tree-id4693 . -4) (undo-tree-id4694 . -4) (undo-tree-id4695 . -4) (undo-tree-id4696 . -4) (undo-tree-id4697 . -4) (undo-tree-id4698 . -4) (undo-tree-id4699 . -4) (undo-tree-id4700 . -4) (undo-tree-id4701 . -4) (undo-tree-id4702 . -4) (undo-tree-id4703 . -5) (undo-tree-id4704 . -5) (undo-tree-id4705 . -5) (undo-tree-id4706 . -5) (undo-tree-id4707 . -5) (undo-tree-id4708 . -5) (undo-tree-id4709 . -5) (undo-tree-id4710 . -5) (undo-tree-id4711 . -5) (undo-tree-id4712 . -5) (undo-tree-id4713 . -5) (undo-tree-id4714 . -5) (undo-tree-id4715 . -5) (undo-tree-id4716 . -5) (undo-tree-id4717 . -5) (undo-tree-id4718 . -5) (undo-tree-id4719 . -5) (undo-tree-id4720 . -5) (undo-tree-id4721 . -5) (undo-tree-id4722 . -5) (undo-tree-id4723 . -5) (undo-tree-id4724 . -5) (undo-tree-id4725 . -5) (undo-tree-id4726 . -5) (undo-tree-id4727 . -5) (undo-tree-id4728 . -5) (undo-tree-id4729 . -5) (undo-tree-id4730 . -5) (undo-tree-id4731 . -5) (undo-tree-id4732 . -5) (undo-tree-id4733 . -5) (undo-tree-id4734 . -5) (undo-tree-id4735 . -6) (undo-tree-id4736 . -6) (undo-tree-id4737 . -6) (undo-tree-id4738 . -6) (undo-tree-id4739 . -6) (undo-tree-id4740 . -6) (undo-tree-id4741 . -6) (undo-tree-id4742 . -6) (undo-tree-id4743 . -6) (undo-tree-id4744 . -6) (undo-tree-id4745 . -6) (undo-tree-id4746 . -6) (undo-tree-id4747 . -6) (undo-tree-id4748 . -6) (undo-tree-id4749 . -6) (undo-tree-id4750 . -6) (undo-tree-id4751 . -6) (undo-tree-id4752 . -6) (undo-tree-id4753 . -6) (undo-tree-id4754 . -6) (undo-tree-id4755 . -6) (undo-tree-id4756 . -6) (undo-tree-id4757 . -6) (undo-tree-id4758 . -6) (undo-tree-id4759 . -6) (undo-tree-id4760 . -6) (undo-tree-id4761 . -6) (undo-tree-id4762 . -6) (undo-tree-id4763 . -6) (undo-tree-id4764 . -6) (undo-tree-id4765 . -6) (undo-tree-id4766 . -6) (undo-tree-id4767 . -6) (undo-tree-id4768 . -6) (t 25950 31908 72734 945000)) nil (25950 31941 148421 0) 0 nil])
([nil nil ((24776 . 24777) (t 25950 31941 173560 280000) 24739) nil (25950 32457 576616 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 24966 . 24967) (nil fontified nil 24912 . 24967) (nil fontified nil 24885 . 24912) (nil fontified nil 24865 . 24885) (nil fontified nil 24842 . 24865) (nil fontified nil 24807 . 24842) (nil fontified nil 24777 . 24807) (24777 . 24967)) nil (25950 32457 576615 0) 0 nil])
([nil nil ((25096 . 25104) (#("	" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)))) . -25096) (25029 . 25037) (#("	" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)))) . -25029) (24991 . 24999) (#("	" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)))) . -24991) (24960 . 24968) (#("	" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)))) . -24960) (24926 . 24934) (#("	" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)))) . -24926) (24880 . 24888) (#("	" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)))) . -24880) (24837 . 24845) (#("	" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)))) . -24837) (22303 . 22304) (22320 . 22321) (22357 . 22358) (22405 . 22406) (22440 . 22441) (22463 . 22464) (22494 . 22495) (22537 . 22538) (22583 . 22584) (22625 . 22626) (22674 . 22675) (22718 . 22719) (22747 . 22748) (22776 . 22777) (22804 . 22805) (22844 . 22845) (22880 . 22881) (22920 . 22921) (22948 . 22949) (22989 . 22990) (23025 . 23026) (23073 . 23074) (23095 . 23096) (23108 . 23109) (23129 . 23130) (23149 . 23150) (23223 . 23224) (23288 . 23289) (23322 . 23323) (23342 . 23343) (23382 . 23383) (23443 . 23444) (23510 . 23511) (23546 . 23547) (23586 . 23587) (23645 . 23646) (23696 . 23697) (23770 . 23771) (23823 . 23824) (23856 . 23857) (23889 . 23890) (23929 . 23930) (23950 . 23951) (23971 . 23972) (24046 . 24047) (24112 . 24113) (24148 . 24149) (24162 . 24163) (24206 . 24207) (24266 . 24267) (24320 . 24321) (24360 . 24361) (24404 . 24405) (24455 . 24456) (24505 . 24506) (24583 . 24584) (24619 . 24620) (24670 . 24671) (24711 . 24712) (24740 . 24741) (24777 . 24783) (24807 . 24810) (24811 . 24812) (24842 . 24844) (24846 . 24848) (24865 . 24866) (24869 . 24872) (24885 . 24888) (24889 . 24890) (24912 . 24914) (24914 . 24916) (24968 . 24974) 22284) nil (25950 32457 576609 0) 0 nil])
([nil nil ((24837 . 24838) (#("        " 0 8 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 24837) (24880 . 24881) (#("        " 0 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24880) (24926 . 24927) (#("        " 0 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 24926) (24960 . 24961) (#("        " 0 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 24960) (24991 . 24992) (#("        " 0 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                   " 0 4 (face org-indent) 4 19 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 24991) (25029 . 25030) (#("        " 0 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 25029) (25096 . 25097) (#("        " 0 8 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 25096) 22284 (t 25950 32457 604003 439000)) nil (25950 32461 760210 0) 0 nil])
([nil nil ((#("T" 0 1 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 10982) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (t 25950 32461 782877 31000)) nil (25951 9889 176113 0) 0 nil])
([nil nil ((#("A" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 10982) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (25951 9889 176110 0) 0 nil])
([nil nil ((#("B" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 10982) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) nil (25951 9889 176108 0) 0 nil])
([nil nil ((10982 . 10987)) nil (25951 9889 176071 0) 0 nil])
([nil nil ((11005 . 11006) (11005 . 11006) (t 25951 9889 202081 396000)) nil (25951 17189 803863 0) 0 nil])
([nil nil ((11006 . 11079) 10600) nil (25951 17189 803859 0) 0 nil])
([nil nil ((11051 . 11052) (11061 . 11062) (11062 . 11066) (#("ut" 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11062) (11065 . 11066) (11066 . 11068) (#("m" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11066) (11068 . 11077) (11070 . 11071) (#("-" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11070) (11073 . 11074) (#("-" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11073) (11078 . 11080) 10600 (t 25951 17189 827447 582000)) nil (25951 17226 509846 0) 0 nil])
([nil nil ((11051 . 11052) 10600 (t 25951 17226 533957 464000)) nil (25951 17236 954652 0) 0 nil])
([nil nil ((11214 . 11226) (#("override" 0 8 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11214) (undo-tree-id6 . -7) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (t 25951 17236 978696 351000)) nil (25951 17880 923668 0) 0 nil])
([nil nil ((575 . 576) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -575) (undo-tree-id0 . -1) (575 . 576) (#("/" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -575) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (575 . 576) (t 25951 17880 949654 171000)) nil (25951 17946 345319 0) 0 nil])
([nil nil ((22456 . 22457) (t 25951 17946 368593 688000) 22455) nil (25951 18171 236531 0) 0 nil])
([nil nil ((22457 . 22484) 22384) nil (25951 18171 236528 0) 0 nil])
([nil nil ((22398 . 22399) (22405 . 22420) (22406 . 22427) (#("0
		   mu4e-mu-version 1.1" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 26 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                       " 0 4 (face org-indent) 4 23 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22455) (undo-tree-id3 . -1) (undo-tree-id4 . -2) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (#(".8" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                       " 0 4 (face org-indent) 4 23 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22482) 22384 (t 25951 18171 257136 520000)) nil (25951 18180 554451 0) 0 nil])
([nil nil ((22427 . 22428) (22433 . 22434) 22384 (t 25951 18180 573931 491000)) nil (25951 18186 385359 0) 0 nil])
([nil nil ((#("@" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 24685) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (t 25951 18186 408202 4000)) nil (25951 18682 509009 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 24685) (undo-tree-id53 . -1) (undo-tree-id54 . -1)) nil (25951 18682 509007 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 24685) (undo-tree-id51 . -1) (undo-tree-id52 . -1)) nil (25951 18682 509004 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 24685) (undo-tree-id49 . -1) (undo-tree-id50 . -1)) nil (25951 18682 509002 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 24685) (undo-tree-id47 . -1) (undo-tree-id48 . -1)) nil (25951 18682 509000 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 24685) (undo-tree-id45 . -1) (undo-tree-id46 . -1)) nil (25951 18682 508998 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 24685) (undo-tree-id43 . -1) (undo-tree-id44 . -1)) nil (25951 18682 508994 0) 0 nil])
([nil nil ((#("@" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 23855) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (t 25951 18682 535359 788000)) nil (25951 18687 247684 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 23855) (undo-tree-id73 . -1) (undo-tree-id74 . -1)) nil (25951 18687 247682 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 23855) (undo-tree-id71 . -1) (undo-tree-id72 . -1)) nil (25951 18687 247680 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 23855) (undo-tree-id69 . -1) (undo-tree-id70 . -1)) nil (25951 18687 247678 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 23855) (undo-tree-id67 . -1) (undo-tree-id68 . -1)) nil (25951 18687 247675 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 23855) (undo-tree-id65 . -1) (undo-tree-id66 . -1)) nil (25951 18687 247673 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 23855) (undo-tree-id63 . -1) (undo-tree-id64 . -1)) nil (25951 18687 247671 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 23855) (undo-tree-id61 . -1) (undo-tree-id62 . -1)) nil (25951 18687 247669 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 23855) (undo-tree-id59 . -1) (undo-tree-id60 . -1)) nil (25951 18687 247667 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                                 " 0 4 (face org-indent) 4 33 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 23855) (undo-tree-id57 . -1) (undo-tree-id58 . -1)) nil (25951 18687 247663 0) 0 nil])
([nil nil ((22384 . 22387) (22399 . 22402) (22437 . 22440) (22459 . 22462) (22496 . 22499) (22543 . 22546) (22581 . 22584) (22605 . 22608) (22635 . 22638) (22681 . 22684) (22728 . 22731) (22769 . 22772) (22821 . 22824) (22866 . 22869) (22894 . 22897) (22926 . 22929) (22955 . 22958) (22994 . 22997) (23033 . 23036) (23074 . 23077) (23101 . 23104) (23145 . 23148) (23182 . 23185) (23228 . 23231) (23254 . 23257) (23265 . 23268) (23290 . 23293) (23311 . 23314) (23382 . 23385) (23452 . 23455) (23485 . 23488) (23502 . 23505) (23547 . 23550) (23611 . 23614) (23674 . 23677) (23715 . 23718) (23756 . 23759) (23812 . 23815) (23858 . 23861) (23933 . 23936) (23983 . 23986) (24021 . 24024) (24055 . 24058) (24094 . 24097) (24119 . 24122) (24141 . 24144) (24213 . 24216) (24284 . 24287) (24317 . 24320) (24334 . 24337) (24379 . 24382) (24438 . 24441) (24496 . 24499) (24537 . 24540) (24578 . 24581) (24634 . 24637) (24678 . 24681) (24753 . 24756) (24794 . 24797) (24846 . 24849) (24884 . 24887) (24918 . 24921) (24959 . 24962) (24995 . 24998) (25034 . 25037) (25061 . 25064) (25085 . 25088) (25116 . 25119) (25176 . 25179) 22384 (t 25951 18687 272643 49000)) nil (25951 18817 260799 0) 0 nil])
([nil nil ((22376 . 22380) (#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -22376) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 22377 (22371 . 22377) (22361 . 22371) (22361 . 22362) 22373 (t 25951 18817 286315 872000)) nil (25951 18826 697658 0) 0 nil])
([nil nil ((9494 . 9495) (9492 . 9494) (#("e" 0 1 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -9492) (undo-tree-id11 . -1) (#("l" 0 1 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -9493) (undo-tree-id12 . -1) 9494 (9492 . 9494) (#("l" 0 1 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -9492) (undo-tree-id13 . -1) (#("e" 0 1 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -9493) (undo-tree-id14 . -1) 9494 (9475 . 9494) (9474 . 9476) (#("(" 0 1 (face org-block-begin-line font-lock-multiline t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . -9474) (9474 . 9475) (9474 . 9475) 9492 (t 25951 18826 722865 414000)) nil (25952 57347 470547 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 9494) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 9474) nil (25952 57347 470542 0) 0 nil])
([nil nil ((#("(use-package shackle)
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 12 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 12 13 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 13 20 (face (font-lock-constant-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 20 21 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 21 22 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 9474) (undo-tree-id15 . 2) (undo-tree-id16 . -20) (undo-tree-id17 . -20) (undo-tree-id18 . -20) (undo-tree-id19 . -20) (undo-tree-id20 . -18) (undo-tree-id21 . -18) (undo-tree-id22 . -18) (undo-tree-id23 . -18) (undo-tree-id24 . -18) (undo-tree-id25 . -18) (undo-tree-id26 . -18) (undo-tree-id27 . -18) (undo-tree-id28 . -18) (undo-tree-id29 . -18) (undo-tree-id30 . -18) (undo-tree-id31 . -18) (undo-tree-id32 . -18) (undo-tree-id33 . -18) (undo-tree-id34 . -18) (undo-tree-id35 . -18) (undo-tree-id36 . -18) (undo-tree-id37 . -18) (undo-tree-id38 . -18) (undo-tree-id39 . -18) (undo-tree-id40 . -18) (undo-tree-id41 . -18) (undo-tree-id42 . -18) (undo-tree-id43 . -18) (undo-tree-id44 . -18) (undo-tree-id45 . -18) (undo-tree-id46 . -18) (undo-tree-id47 . -18) (undo-tree-id48 . -18) (undo-tree-id49 . -18) (undo-tree-id50 . -18) (undo-tree-id51 . -18) (undo-tree-id52 . -22) (undo-tree-id53 . -21) 9492 (t 25952 57347 493463 341000)) nil (25952 57517 566383 0) 0 nil])
([nil nil ((9474 . 9475) 9492 (t 25952 57517 591625 281000)) nil (25952 57656 422178 0) 0 nil])
([nil nil ((#("
" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 9474) (undo-tree-id54 . 1) (undo-tree-id55 . -1)) nil (25952 57656 422175 0) 0 nil])
([nil nil ((10197 . 10199) (t 25952 57656 447228 636000)) nil (25952 57730 133011 0) 0 nil])
([nil nil ((#("; For echo area hints" 0 2 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 2 21 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10216) (undo-tree-id56 . -20)) nil (25952 57730 133011 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10215)) nil (25952 57730 133003 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10214)) nil (25952 57730 133002 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10213)) nil (25952 57730 133002 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10212)) nil (25952 57730 133001 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10211)) nil (25952 57730 133000 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10210)) nil (25952 57730 133000 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10209)) nil (25952 57730 133000 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10208)) nil (25952 57730 132999 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10207)) nil (25952 57730 132999 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10206)) nil (25952 57730 132998 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10205)) nil (25952 57730 132998 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10204)) nil (25952 57730 132997 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10203)) nil (25952 57730 132996 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10202)) nil (25952 57730 132996 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10201)) nil (25952 57730 132995 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10200)) nil (25952 57730 132994 0) 0 nil])
([nil nil ((10198 . 10277) 9474) nil (25952 57730 132991 0) 0 nil])
([nil nil ((#("*" 0 1 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                     " 0 6 (face org-indent) 6 21 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10270) 9474 (t 25952 57730 158085 213000)) nil (25952 57743 114418 0) 0 nil])
([nil nil ((10274 . 10349) 9474 (t 25952 57743 140546 147000)) nil (25952 57781 735605 0) 0 nil])
([nil nil ((10352 . 10354) 9474 (t 25952 57781 759011 139000)) nil (25960 33220 225576 0) 0 nil])
([nil nil ((10323 . 10326) (#("fgt" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 2 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 10323) (10321 . 10326) (#("left" 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10321)) ((10321 . 10325) (#("rifgt" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 2 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 3 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 4 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 10321) (10323 . 10326) (#("ght" 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10323)) (25960 33221 281744 0) 0 nil])
([nil nil ((10347 . 10348) (#("5" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10347) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1)) ((10347 . 10348) (#("8" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                       " 0 6 (face org-indent) 6 23 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 10347)) (25960 33223 25435 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12321 . 12322) (#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -12362) (12317 . 12363) 12277 (t 25960 33224 888147 166000)) nil (25960 33959 459745 0) 0 nil] [nil nil ((#("find" 0 4 (face (org-block) font-lock-multiline t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t)) . 11963)) ((11963 . 11967)) (25960 33222 40178 0) 0 nil])
([nil nil ((12323 . 12324) (#("k" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block) help-echo nil)) . 12323)) nil (25960 33959 459744 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 11963)) ((11963 . 11964)) (25960 33219 366425 0) 0 nil])
([nil nil ((12328 . 12330) (#("previous" 0 8 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 12328) (undo-tree-id133 . -7)) nil (25960 33959 460828 0) 0 nil])
([nil nil ((#("file " 0 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 11963)) ((11963 . 11968)) (25960 33218 940877 0) 0 nil])
([nil nil ((12342 . 12346) (#("i" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -12342) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) 12343 (12341 . 12343) (#("0" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -12341) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("f" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -12342) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("i" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -12343) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) 12344 (12341 . 12344) (#(" " 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -12341) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) 12342 (12335 . 12342) (#(" " 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -12335) (undo-tree-id347 . -1) 12336 (12331 . 12336) (#("buffer" 0 6 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 12331) (undo-tree-id348 . -5) (undo-tree-id349 . -6) (undo-tree-id350 . -6)) nil (25960 33967 309141 0) 0 nil] [nil nil ((12318 . 12319) (#("    \"s\" '(ff-buffer :wk \"next buffer\")
" 0 3 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3 4 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) rear-nonsticky t help-echo nil font-lock-multiline t face (org-block)) 4 7 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block)) 7 20 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 20 23 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block)) 23 24 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 24 37 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block)) 37 38 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 38 39 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 12318) (undo-tree-id0 . -38) (undo-tree-id1 . 27) (undo-tree-id2 . -10) (undo-tree-id3 . -10) (undo-tree-id4 . -10) (undo-tree-id5 . -20) (undo-tree-id6 . -10) (undo-tree-id7 . -10) (undo-tree-id8 . -10) (undo-tree-id9 . -10) (undo-tree-id10 . -10) (undo-tree-id11 . -10) (undo-tree-id12 . -10) (undo-tree-id13 . -10) (undo-tree-id14 . -10) (undo-tree-id15 . -10) (undo-tree-id16 . -10) (undo-tree-id17 . -10) (undo-tree-id18 . -10) (undo-tree-id19 . -10) (undo-tree-id20 . -10) (undo-tree-id21 . -10) (undo-tree-id22 . -10) (undo-tree-id23 . -10) (undo-tree-id24 . -10) (undo-tree-id25 . -10) (undo-tree-id26 . -10) (undo-tree-id27 . -10) (undo-tree-id28 . -10) (undo-tree-id29 . -10) (undo-tree-id30 . -10) (undo-tree-id31 . -10) (undo-tree-id32 . -10) (undo-tree-id33 . -10) (undo-tree-id34 . -10) (undo-tree-id35 . -10) (undo-tree-id36 . -10) (undo-tree-id37 . -10) (undo-tree-id38 . -10) (undo-tree-id39 . -10) (undo-tree-id40 . -10) (undo-tree-id41 . -10) (undo-tree-id42 . -10) (undo-tree-id43 . -10) (undo-tree-id44 . -10) (undo-tree-id45 . -10) (undo-tree-id46 . -10) (undo-tree-id47 . -10) (undo-tree-id48 . -10) (undo-tree-id49 . -10) (undo-tree-id50 . -10) (undo-tree-id51 . -10) (undo-tree-id52 . -10) (undo-tree-id53 . -10) (undo-tree-id54 . -10) (undo-tree-id55 . -10) (undo-tree-id56 . -10) (undo-tree-id57 . -10) (undo-tree-id58 . -10) (undo-tree-id59 . -10) (undo-tree-id60 . -10) (undo-tree-id61 . -10) (undo-tree-id62 . -10) (undo-tree-id63 . -10) (undo-tree-id64 . -10) (undo-tree-id65 . -10) (undo-tree-id66 . -10) (undo-tree-id67 . -10) (undo-tree-id68 . -10) (undo-tree-id69 . -10) (undo-tree-id70 . -10) (undo-tree-id71 . -10) (undo-tree-id72 . -10) (undo-tree-id73 . -10) (undo-tree-id74 . -10) (undo-tree-id75 . -10) (undo-tree-id76 . -10) (undo-tree-id77 . -10) (undo-tree-id78 . -10) (undo-tree-id79 . -10) (undo-tree-id80 . -10) (undo-tree-id81 . -10) (undo-tree-id82 . -10) (undo-tree-id83 . -10) (undo-tree-id84 . -10) (undo-tree-id85 . -10) (undo-tree-id86 . -12) (undo-tree-id87 . -12) (undo-tree-id88 . -12) (undo-tree-id89 . -12) (undo-tree-id90 . -12) (undo-tree-id91 . -12) (undo-tree-id92 . -12) (undo-tree-id93 . -12) (undo-tree-id94 . -12) (undo-tree-id95 . -12) (undo-tree-id96 . -12) (undo-tree-id97 . -12) (undo-tree-id98 . -12) (undo-tree-id99 . -12) (undo-tree-id100 . -13) (undo-tree-id101 . -13) (undo-tree-id102 . -13) (undo-tree-id103 . -13) (undo-tree-id104 . -13) (undo-tree-id105 . -13) (undo-tree-id106 . -13) (undo-tree-id107 . -13) (undo-tree-id108 . -13) (undo-tree-id109 . -13) (undo-tree-id110 . -13) (undo-tree-id111 . -13) (undo-tree-id112 . -13) (undo-tree-id113 . -13) (undo-tree-id114 . -20) (undo-tree-id115 . -20) (undo-tree-id116 . -20) (undo-tree-id117 . -20) (undo-tree-id118 . -20) (undo-tree-id119 . -20) (undo-tree-id120 . -20) (undo-tree-id121 . -20) (undo-tree-id122 . -20) (undo-tree-id123 . -20) (undo-tree-id124 . -20) (undo-tree-id125 . -20) (undo-tree-id126 . -20) (undo-tree-id127 . -20) (undo-tree-id128 . -20) (undo-tree-id129 . -20) (undo-tree-id130 . -20) (undo-tree-id131 . -39) (undo-tree-id132 . -39) 12338) ((12318 . 12357) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 12318) (undo-tree-id134 . 1)) (25960 33959 459737 0) 0 nil])
([nil nil ((11963 . 11966) (11963 . 11964)) ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11963) (#("ff-" 0 3 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11963) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2)) (25960 33218 229899 0) 0 nil])
([nil nil ((33715 . 33719) (#("t" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -33715) (undo-tree-id0 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -33716) (undo-tree-id1 . -1) 33717 (33710 . 33717) (t 25960 33967 334160 72000)) nil (25961 44010 158036 0) 0 nil])
nil
([nil nil ((10370 . 10378) 11965) ((#("COMMENT " 0 7 (face org-special-keyword wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 7 8 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 10370)) (25960 33218 48843 0) 0 nil])
([nil nil ((#(" " 0 1 (face (font-lock-warning-face org-block) font-lock-multiline t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-fontified t wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -33759) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("f" 0 1 (face (font-lock-warning-face org-block) font-lock-multiline t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-fontified t wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -33760) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("s" 0 1 (face (font-lock-warning-face org-block) font-lock-multiline t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-fontified t wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -33761) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 33762 (33758 . 33762) (t 25961 44010 184004 64000)) nil (25961 44018 338340 0) 0 nil])
([nil nil ((11974 . 11989) (11980 . 11981) (#("Pr" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 11980) (11983 . 11984) (#("jec" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 11983) (11987 . 11988) (#("ile" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 11987) (11991 . 11994) (#("fin" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 11991) (11995 . 12007) 10730) ((#("er or source" 0 12 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11995) (11991 . 11994) (#("hea" 0 3 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11991) (11987 . 11990) (#("o" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11987) (11983 . 11986) (#(" " 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11983) (11980 . 11982) (#("G" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11980) (#("find-other-file" 0 15 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11974)) (25960 33217 850901 0) 0 nil])
([nil nil ((#("j" 0 1 (face (font-lock-warning-face org-block) font-lock-multiline t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-fontified t wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 33758) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (t 25961 44018 361979 696000)) nil (25961 44018 984678 0) 0 nil])
([nil nil ((11963 . 11966) (#("'" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11963) (undo-tree-id0 . -1) (undo-tree-id2 . -1) (undo-tree-id4 . -1) (undo-tree-id6 . -1) (undo-tree-id8 . -1) (undo-tree-id10 . -1) (undo-tree-id12 . -1) (undo-tree-id14 . -1) (undo-tree-id16 . -1) (undo-tree-id18 . -1) (undo-tree-id20 . -1) (undo-tree-id22 . -1) (undo-tree-id24 . -1) (undo-tree-id26 . -1) (undo-tree-id28 . -1) 11964 (11963 . 11964) (#(" " 0 1 (wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -11963) (11963 . 11964) (#("'" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -11963) (11963 . 11964) (t 25960 22951 429073 117000)) ((#("'" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11963) (11963 . 11964) (#(" " 0 1 (wrap-prefix #("         " 0 4 (face org-indent) 4 9 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11963) (11963 . 11964) (#("'" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 11963) (11963 . 11964) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11963) (t 25960 33171 865617 963000)) (25960 33171 841073 0) 0 nil])
([nil nil ((33713 . 33716) (#("w" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                 " 0 4 (face org-indent) 4 17 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -33713) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) 33714 (33713 . 33714) (t 25961 44019 8330 671000)) nil (25961 44047 734581 0) 0 nil])
nil
([nil nil ((1651 . 1669) (1648 . 1651) (1647 . 1649) (#("(" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . -1647) (1647 . 1648) (1646 . 1647) (1638 . 1646) (#("s" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -1638) (undo-tree-id223 . -1) (#("a" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -1639) (undo-tree-id224 . -1) 1640 (1636 . 1640) (1624 . 1647) (#("<s" 0 2 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -1624) (undo-tree-id225 . -2) 1626 (1624 . 1626) (1623 . 1624) (1616 . 1623) (#(" " 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -1616) (undo-tree-id226 . -1) (#("_" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil)) . -1617) (undo-tree-id227 . -1) (#("_" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 1618) (1617 . 1619) (#("_" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil)) . -1617) (1615 . 1618) (#("F" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -1615) (undo-tree-id228 . -1) (#("-" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -1616) (undo-tree-id229 . -1) (#(" " 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -1617) (undo-tree-id230 . -1) 1618 (1614 . 1618) (1610 . 1614) (1609 . 1610) (t 25961 44047 759597 63000) 1469) nil (25963 1710 802447 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 1671) (undo-tree-id231 . -1) (t 25963 1710 831085 987000)) nil (25963 1711 995809 0) 0 nil])
([nil nil ((6750 . 6753) (6745 . 6750) (t 25963 1712 22318 517000)) nil (25963 33998 335305 0) 0 nil])
([nil nil ((#("*** tra
" 0 2 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [9632]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 7 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 7 8 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 6746) (undo-tree-id233 . 1) (undo-tree-id234 . -7) (undo-tree-id235 . -6) 6752) nil (25963 33998 335304 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 7527 . 7528) (#("
" 0 1 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil)) . -7535) (7527 . 7536) 6762) nil (25963 33998 335299 0) 0 nil])
([nil nil ((7556 . 7566) (7544 . 7567) (#("<s" 0 2 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -7544) (undo-tree-id232 . -2) 7546 (7544 . 7546) (7543 . 7544) (7538 . 7543) (7535 . 7538)) nil (25963 33998 430989 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 7778 . 7779) (nil fontified nil 7724 . 7779) (nil fontified nil 7669 . 7724) (nil fontified nil 7596 . 7669) (nil fontified nil 7567 . 7596) (7567 . 7779) (t 25963 33998 908464 175000)) nil (25963 34004 677149 0) 0 nil] [nil nil ((nil rear-nonsticky nil 7567 . 7568) (#("
" 0 1 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil)) . -7575) (7567 . 7576)) ((#("
*** tra
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 1 3 (font-lock-multiline t font-lock-fontified t keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil) 3 4 (font-lock-multiline t font-lock-fontified t face org-level-3 keymap (keymap) composition (2 1 [9632]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil) 4 5 (font-lock-multiline t font-lock-fontified t face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil) 5 8 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil) 8 9 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil)) . 7567) (undo-tree-id236 . -1) (undo-tree-id237 . -8) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (7575 . 7576) (nil rear-nonsticky t 7567 . 7568) (t 25963 33998 367944 321000)) (25963 33998 335275 0) 0 nil])
([nil nil ((#(" " 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 7567) (#(" " 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 7596) (#(" " 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 7671) (#(" " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 7724) 7567 (t 25963 34004 703408 787000)) nil (25963 34016 452274 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 12650 . 12651) (#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)))) . -12691) (12646 . 12692) 12606 (t 25963 34016 480757 223000)) nil (25964 29848 22956 0) 0 nil])
([nil nil ((12652 . 12653) (#("k" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-multiline t face (font-lock-string-face org-block) help-echo nil)) . 12652)) nil (25964 29848 22955 0) 0 nil])
([nil nil ((#("previous" 0 8 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 12657) (undo-tree-id5 . -7) (undo-tree-id6 . -8)) nil (25964 29848 22954 0) 0 nil])
([nil nil ((#("-" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 12657) (undo-tree-id3 . -1) (undo-tree-id4 . -1)) nil (25964 29848 22951 0) 0 nil])
([nil nil ((12657 . 12664) (#("buffer" 0 6 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 12657) (undo-tree-id0 . -5) (undo-tree-id1 . -6) (undo-tree-id2 . -6)) nil (25964 29848 22946 0) 0 nil])
([nil nil ((12670 . 12677) (#("next" 0 4 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block))) . 12670) (undo-tree-id72 . -3) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (t 25964 29848 53898 153000)) nil (25964 29852 217573 0) 0 nil])
([nil nil ((#("buffer" 0 6 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block))) . 12678) (undo-tree-id70 . -5) (undo-tree-id71 . -6)) nil (25964 29852 217569 0) 0 nil])
([nil nil ((#(" " 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block))) . 12677) (undo-tree-id7 . 1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1)) nil (25964 29852 217561 0) 0 nil])
([nil nil ((12772 . 12780) (t 25964 29852 245747 521000)) nil (25964 29858 828999 0) 0 nil])
([nil nil ((#(" FS B fs" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 8 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . 12772) (undo-tree-id78 . -7) (undo-tree-id79 . -8) (undo-tree-id80 . -8)) nil (25964 29860 233339 0) 0 nil] [nil nil ((#("\")) FS B fs" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4 11 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo "Easy to misread; consider moving the element to the next line" src-block t font-lock-multiline t face (font-lock-warning-face org-block))) . 12769) (undo-tree-id75 . -10) (undo-tree-id76 . -11) (undo-tree-id77 . -11)) ((12769 . 12780)) (25964 29858 827753 0) 0 nil])
([nil nil ((22872 . 22873) (22871 . 22872) (t 25964 29860 261233 133000) 22790) nil (25966 62532 768043 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 22982 . 22983) (nil fontified nil 22971 . 22983) (nil fontified nil 22894 . 22971) (nil fontified nil 22873 . 22894) (22873 . 22983)) nil (25966 62532 768023 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 22984) (undo-tree-id81 . -1) (t 25966 62532 809660 209000)) nil (25966 62534 779528 0) 0 nil])
([nil nil ((22897 . 22903) (#("straight" 0 8 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . 22897) (undo-tree-id82 . -7) (undo-tree-id83 . -8) (undo-tree-id84 . -8) (undo-tree-id85 . -8) (undo-tree-id86 . -8) (undo-tree-id87 . -8) (undo-tree-id88 . -8) (undo-tree-id89 . -8) (undo-tree-id90 . -8) (undo-tree-id91 . -8) (undo-tree-id92 . -8) (undo-tree-id93 . -8) (undo-tree-id94 . -8) (undo-tree-id95 . -8) (undo-tree-id96 . -8) (undo-tree-id97 . -8) (undo-tree-id98 . -8) (t 25966 62534 811285 342000)) nil (25966 62549 832068 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -22981) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("f" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-multiline t face (font-lock-warning-face org-block))) . -22982) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#("s" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo "Easy to misread; consider moving the element to the next line" font-lock-multiline t face (font-lock-warning-face org-block))) . -22983) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) 22984 (22981 . 22984) (t 25966 62549 862110 64000)) nil (25966 62553 887180 0) 0 nil])
([nil nil ((#(":" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . 22896) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (t 25966 62553 915699 217000)) nil (25966 62618 601264 0) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22896) (undo-tree-id353 . -1) (undo-tree-id354 . -1)) nil (25966 62618 601215 0) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22896) (undo-tree-id351 . -1) (undo-tree-id352 . -1)) nil (25966 62618 601213 0) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22896) (undo-tree-id349 . -1) (undo-tree-id350 . -1)) nil (25966 62618 601210 0) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22896) (undo-tree-id347 . -1) (undo-tree-id348 . -1)) nil (25966 62618 601208 0) 0 nil])
([nil nil ((#("p" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22896) (undo-tree-id345 . -1) (undo-tree-id346 . -1)) nil (25966 62618 601205 0) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22896) (undo-tree-id343 . -1) (undo-tree-id344 . -1)) nil (25966 62618 601202 0) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22896) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1)) nil (25966 62618 601199 0) 0 nil])
([nil nil ((#("(" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22896) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . 1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1)) nil (25966 62618 601160 0) 0 nil])
([nil nil ((#(")" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22958) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . 1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1)) nil (25966 62618 601125 0) 0 nil])
([nil nil ((22896 . 22898) (#("(" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -22896) (22896 . 22897) (t 25966 62618 631123 761000)) nil (25966 62658 353275 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22897) (undo-tree-id399 . 1) (undo-tree-id400 . 1) (undo-tree-id401 . -1)) nil (25966 62658 353273 0) 0 nil])
([nil nil ((22959 . 22960)) nil (25966 62658 353258 0) 0 nil])
([nil nil ((#("use" 0 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . 22874) (undo-tree-id424 . -2) (t 25966 62658 383330 832000)) nil (25966 62681 901146 0) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22874)) nil (25966 62681 901145 0) 0 nil])
([nil nil ((22880 . 22882) (#("(" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block))) . -22880) (22874 . 22881) (#("package" 0 7 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22874) (undo-tree-id422 . -6) (undo-tree-id423 . 7)) nil (25966 62681 901144 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 22881) (undo-tree-id419 . 1) (undo-tree-id420 . 1) (undo-tree-id421 . -1)) nil (25966 62681 901141 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22880) (undo-tree-id417 . 1) (undo-tree-id418 . -1)) nil (25966 62681 901137 0) 0 nil])
([nil nil ((22881 . 22882)) nil (25966 62681 901134 0) 0 nil])
([nil nil ((22956 . 22957)) nil (25966 62681 901134 0) 0 nil])
([nil nil ((#(")" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22955)) nil (25966 62681 901133 0) 0 nil])
([nil nil ((#("  :ensure t)
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 11 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 11 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22957) (undo-tree-id402 . -12) (undo-tree-id403 . -11) (undo-tree-id404 . -12) (undo-tree-id405 . -11) (undo-tree-id406 . -11) (undo-tree-id407 . -11) (undo-tree-id408 . -11) (undo-tree-id409 . -11) (undo-tree-id410 . -11) (undo-tree-id411 . -11) (undo-tree-id412 . -11) (undo-tree-id413 . -11) (undo-tree-id414 . -11) (undo-tree-id415 . 2) (undo-tree-id416 . -12) 22968) nil (25966 62681 901130 0) 0 nil])
([nil nil (22894) nil (25966 62692 739079 0) 0 nil])
([nil nil ((22889 . 22890) (#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -22889) (undo-tree-id428 . -1) (#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -22890) (undo-tree-id429 . -1) (#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -22891) (undo-tree-id430 . -1) 22892 (t 25966 62681 930288 786000)) nil (25966 62692 739078 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22890) (undo-tree-id425 . 1) (undo-tree-id426 . 1) (undo-tree-id427 . -1)) nil (25966 62692 739071 0) 0 nil])
([nil nil ((#("(copilot :host github :repo \"zerolfx/copilot.el\" :files (\"dist\" \"*.el\"" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9 14 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 14 22 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 22 27 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 27 28 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28 48 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 48 49 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49 55 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 55 57 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 57 63 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 63 64 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 64 70 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 22881) (undo-tree-id577 . -69) (undo-tree-id578 . -10) (undo-tree-id579 . -10) (undo-tree-id580 . -10) (undo-tree-id581 . -10) (undo-tree-id582 . -10) (undo-tree-id583 . -10) (undo-tree-id584 . -10) (undo-tree-id585 . -10) (undo-tree-id586 . -10) (undo-tree-id587 . -10) (undo-tree-id588 . -10) (undo-tree-id589 . -10) (undo-tree-id590 . -10) (undo-tree-id591 . -10) (undo-tree-id592 . -10) (undo-tree-id593 . -10) (undo-tree-id594 . -10) (undo-tree-id595 . -10) (undo-tree-id596 . -10) (undo-tree-id597 . -10) (undo-tree-id598 . -10) (undo-tree-id599 . -10) (undo-tree-id600 . -10) (undo-tree-id601 . -10) (undo-tree-id602 . -10) (undo-tree-id603 . -10) (undo-tree-id604 . -10) (undo-tree-id605 . -10) (undo-tree-id606 . -10) (undo-tree-id607 . -10) (undo-tree-id608 . -10) (undo-tree-id609 . -10) (undo-tree-id610 . -10) (undo-tree-id611 . -10) (undo-tree-id612 . -10) (undo-tree-id613 . -10) (undo-tree-id614 . -10) (undo-tree-id615 . -10) (undo-tree-id616 . -10) (undo-tree-id617 . -10) (undo-tree-id618 . -10) (undo-tree-id619 . -10) (undo-tree-id620 . -10) (undo-tree-id621 . -10) (undo-tree-id622 . -10) (undo-tree-id623 . -10) (undo-tree-id624 . -10) (undo-tree-id625 . -9) (undo-tree-id626 . -9) (undo-tree-id627 . -9) (undo-tree-id628 . -9) (undo-tree-id629 . -9) (undo-tree-id630 . -9) (undo-tree-id631 . -9) (undo-tree-id632 . -9) (undo-tree-id633 . -9) (undo-tree-id634 . -9) (undo-tree-id635 . -9) (undo-tree-id636 . -9) (undo-tree-id637 . -9) (undo-tree-id638 . -9) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . 70) (undo-tree-id654 . -1) (undo-tree-id655 . -70) (t 25966 62692 769471 361000)) nil (25966 62797 431260 0) 0 nil])
([nil nil ((22872 . 22873) 22872) nil (25966 62797 431182 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 22982 . 22983) (nil fontified nil 22971 . 22983) (nil fontified nil 22894 . 22971) (nil fontified nil 22873 . 22894) (22873 . 22983)) nil (25966 62797 431182 0) 0 nil])
([nil nil ((#("(elpaca ))
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 7 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 8 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8 10 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10 11 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22984) (undo-tree-id448 . -10) (undo-tree-id449 . -11) (undo-tree-id450 . -11) (undo-tree-id451 . -11) (undo-tree-id452 . -11) (undo-tree-id453 . -11) (undo-tree-id454 . -11) (undo-tree-id455 . -11) (undo-tree-id456 . -8) (undo-tree-id457 . -8) (undo-tree-id458 . -9) (undo-tree-id459 . -8) (undo-tree-id460 . -8) (undo-tree-id461 . -8) (undo-tree-id462 . -8) (undo-tree-id463 . -8) (undo-tree-id464 . -8) (undo-tree-id465 . -8) (undo-tree-id466 . -8) (undo-tree-id467 . -8) (undo-tree-id468 . -8) (undo-tree-id469 . -8) (undo-tree-id470 . -8) (undo-tree-id471 . -8) (undo-tree-id472 . -8) (undo-tree-id473 . -8) (undo-tree-id474 . -8) (undo-tree-id475 . -8) (undo-tree-id476 . -8) (undo-tree-id477 . -8) (undo-tree-id478 . -8) (undo-tree-id479 . -8) (undo-tree-id480 . -8) (undo-tree-id481 . -8) (undo-tree-id482 . -8) (undo-tree-id483 . -8) (undo-tree-id484 . -8) (undo-tree-id485 . -8) (undo-tree-id486 . -8) (undo-tree-id487 . -8) (undo-tree-id488 . -8) (undo-tree-id489 . -8) (undo-tree-id490 . -8) (undo-tree-id491 . -8) (undo-tree-id492 . -8) (undo-tree-id493 . -8) (undo-tree-id494 . -8) (undo-tree-id495 . -8) (undo-tree-id496 . -8) (undo-tree-id497 . -8) (undo-tree-id498 . -8) (undo-tree-id499 . -8) (undo-tree-id500 . -8) (undo-tree-id501 . -8) (undo-tree-id502 . -8) (undo-tree-id503 . -8) (undo-tree-id504 . -8) (undo-tree-id505 . -8) (undo-tree-id506 . -8) (undo-tree-id507 . -8) (undo-tree-id508 . -8) (undo-tree-id509 . -8) (undo-tree-id510 . -8) (undo-tree-id511 . -8) (undo-tree-id512 . -8) (undo-tree-id513 . -8) (undo-tree-id514 . -8) (undo-tree-id515 . -8) (undo-tree-id516 . -8) (undo-tree-id517 . -8) (undo-tree-id518 . -8) (undo-tree-id519 . -8) (undo-tree-id520 . -8) (undo-tree-id521 . -8) (undo-tree-id522 . -8) (undo-tree-id523 . -8) (undo-tree-id524 . -8) (undo-tree-id525 . -8) (undo-tree-id526 . -8) (undo-tree-id527 . -8) (undo-tree-id528 . -8) (undo-tree-id529 . -8) (undo-tree-id530 . -8) (undo-tree-id531 . -8) (undo-tree-id532 . -8) (undo-tree-id533 . -8) (undo-tree-id534 . -8) (undo-tree-id535 . -9) (undo-tree-id536 . 2) (undo-tree-id537 . -10) (undo-tree-id538 . -9) (undo-tree-id539 . -9) (undo-tree-id540 . -9) (undo-tree-id541 . -9) (undo-tree-id542 . -9) (undo-tree-id543 . -9) (undo-tree-id544 . -9) (undo-tree-id545 . -9) (undo-tree-id546 . -9) (undo-tree-id547 . -9) (undo-tree-id548 . -9) (undo-tree-id549 . -9) (undo-tree-id550 . -9) (undo-tree-id551 . -9) (undo-tree-id552 . -9) (undo-tree-id553 . -9) (undo-tree-id554 . -9) (undo-tree-id555 . -9) (undo-tree-id556 . -9) (undo-tree-id557 . -9) (undo-tree-id558 . -9) (undo-tree-id559 . -9) (undo-tree-id560 . -9) (undo-tree-id561 . -9) (undo-tree-id562 . -9) (undo-tree-id563 . -9) (undo-tree-id564 . -9) (undo-tree-id565 . -9) (undo-tree-id566 . -9) (undo-tree-id567 . -9) (undo-tree-id568 . -9) (undo-tree-id569 . -9) (undo-tree-id570 . -9) (undo-tree-id571 . -9) (undo-tree-id572 . -9) (undo-tree-id573 . -9) (undo-tree-id574 . -9) (undo-tree-id575 . -9) (undo-tree-id576 . -11) 22993) nil (25966 62797 431178 0) 0 nil])
([nil nil ((22897 . 22904) (#("straight " 0 8 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 8 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22897) (undo-tree-id431 . -8) (undo-tree-id432 . -5) (undo-tree-id433 . -5) (undo-tree-id434 . -5) (undo-tree-id435 . -5) (undo-tree-id436 . -5) (undo-tree-id437 . -5) (undo-tree-id438 . -5) (undo-tree-id439 . -5) (undo-tree-id440 . -5) (undo-tree-id441 . -5) (undo-tree-id442 . -5) (undo-tree-id443 . -5) (undo-tree-id444 . -5) (undo-tree-id445 . -5) (undo-tree-id446 . -9) (undo-tree-id447 . -9)) nil (25966 62797 431060 0) 0 nil])
([nil nil ((22980 . 22981) (t 25966 62797 459638 567000)) nil (25966 62852 757854 0) 0 nil])
([nil nil ((22981 . 22982)) nil (25966 62852 757852 0) 0 nil])
([nil nil ((22981 . 23033) 22404) nil (25966 62852 757849 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 23033) (undo-tree-id656 . 1) 22404 (t 25966 62852 791535 212000)) nil (25966 62894 99451 0) 0 nil])
([nil nil ((#("√" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -22990) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (#("ß" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -22991) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) 22992 (22990 . 22992) (#("©" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -22990) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) 22991 (22990 . 22991) (#("" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -22990) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) 22991 (22990 . 22991) (#("ƒ" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -22990) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) 22991 (22990 . 22991) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -22990) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) 22991 (22990 . 22991) (#("√" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -22990) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) 22991 (22990 . 22991) (#("ß" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -22990) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) 22991 (22990 . 22991) (t 25966 62855 157533 918000)) nil (25966 62906 225250 0) 0 nil] [nil nil ((nil fontified t 22994 . 22996) (t 25966 62855 157533 918000) (nil line-prefix #("      " 0 6 (face org-indent)) 22994 . 22996) (t 25966 62855 157533 918000) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 22994 . 22996) (t 25966 62855 157533 918000) (nil font-lock-fontified t 22994 . 22996) (t 25966 62855 157533 918000) (nil help-echo nil 22994 . 22996) (t 25966 62855 157533 918000) (nil src-block t 22994 . 22996) (t 25966 62855 157533 918000) (nil font-lock-multiline t 22994 . 22996) (t 25966 62855 157533 918000) (nil face (font-lock-builtin-face org-block) 22994 . 22996) (t 25966 62855 157533 918000) (nil fontified t 22993 . 22994) (t 25966 62855 157533 918000) (nil line-prefix #("      " 0 6 (face org-indent)) 22993 . 22994) (t 25966 62855 157533 918000) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 22993 . 22994) (t 25966 62855 157533 918000) (nil font-lock-fontified t 22993 . 22994) (t 25966 62855 157533 918000) (nil help-echo nil 22993 . 22994) (t 25966 62855 157533 918000) (nil src-block t 22993 . 22994) (t 25966 62855 157533 918000) (nil font-lock-multiline t 22993 . 22994) (t 25966 62855 157533 918000) (nil face (font-lock-builtin-face org-block) 22993 . 22994) (t 25966 62855 157533 918000) (#("config" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 4 6 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -22984) (t 25966 62855 157533 918000) (22990 . 23002) (t 25966 62855 157533 918000) 22990) ((#("config/bread" 0 9 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 9 10 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 10 12 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t)) . 22990) (undo-tree-id1046 . -11) (undo-tree-id1047 . -12) (undo-tree-id1048 . -11) (t 25966 62855 157533 918000) (22984 . 22990) (t 25966 62855 157533 918000) (nil face (font-lock-builtin-face org-block) 22993 . 22994) (t 25966 62855 157533 918000) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 22993 . 22994) (t 25966 62855 157533 918000) (nil fontified nil 22993 . 22994) (t 25966 62855 157533 918000) (nil face (font-lock-builtin-face org-block) 22994 . 22996) (t 25966 62855 157533 918000) (nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) 22994 . 22996) (t 25966 62855 157533 918000)) (25966 62894 95428 0) 0 nil] [nil nil ((#("f" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -22987) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (#("" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -22988) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (#("l" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -22989) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) 22990 (22989 . 22990) (22988 . 22989) (t 25966 62855 157533 918000)) ((#("" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . 22988) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (#("l" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . 22989) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (22987 . 22990)) (25966 62880 111107 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . 11703) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (t 25966 62906 258638 983000)) nil (25966 62912 30169 0) 0 nil])
nil
nil
([nil nil ((#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -12151) (undo-tree-id1333 . -1) 12152 (12151 . 12152) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12151) (undo-tree-id1334 . -1) 12152 (12151 . 12152) (t 25966 62912 60339 317000)) nil (25966 63468 877644 0) 0 nil])
([nil nil ((11456 . 11457) (t 25966 63000 593602 375000) 11456) nil (25966 63521 728918 0) 0 nil] [nil nil ((#("  (evil-global-set-key 'normal (kbd \"C-t\") 'popper-toggle)
" 0 36 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 36 41 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 41 59 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11276) (undo-tree-id0 . -59) (undo-tree-id1 . -58) (t 25966 63000 593602 375000)) ((11276 . 11335)) (25966 63468 876604 0) 0 nil] [nil nil ((#("≈" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12257) (undo-tree-id1313 . -1) (#("Ω" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12258) (undo-tree-id1314 . -1) (#("≈" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12259) (undo-tree-id1315 . -1) (#("ç" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12260) (undo-tree-id1316 . -1) (#("√" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12261) (undo-tree-id1317 . -1) (#("ß" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12262) (undo-tree-id1318 . -1) 12263 (#("∂" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12263) (undo-tree-id1319 . -1) (#("ƒ" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12264) (undo-tree-id1320 . -1) (#("©" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12265) (undo-tree-id1321 . -1) (#("~" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12266) (undo-tree-id1322 . -1) (#("≥" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12267) (undo-tree-id1323 . -1) (#("≤" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12268) (undo-tree-id1324 . -1) (#("µ" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12269) (undo-tree-id1325 . -1) (#("…" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12270) (undo-tree-id1326 . -1) (#("œ" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12271) (undo-tree-id1327 . -1) (#("ø" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12272) (undo-tree-id1328 . -1) (#("∑" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12273) (undo-tree-id1329 . -1) (#("ˆ" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12274) (undo-tree-id1330 . -1) (#("´" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12275) (undo-tree-id1331 . -1) (#("¥" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -12276) (undo-tree-id1332 . -1) 12277 (12262 . 12277) (12257 . 12262)) ((#("≈Ω≈ç√" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 12257) (#("ß∂ƒ©~≥≤µ…œø∑ˆ´¥" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 6 7 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 8 9 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9 10 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10 11 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 13 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 14 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14 15 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 12262) (12257 . 12277) (t 25966 62976 168730 291000)) (25966 62999 829609 0) 0 nil])
([nil nil ((11456 . 11457) 11456) nil (25966 63521 728917 0) 0 nil])
nil
([nil nil ((12291 . 12298) (t 25966 62976 168730 291000)) ((#("kkj fsu" 0 7 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 12291)) (25966 62999 828065 0) 0 nil] [nil nil ((#("∫" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 12221)) ((12221 . 12222)) (25966 62974 948301 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11796 . 11797) (nil fontified nil 11743 . 11797) (nil fontified nil 11742 . 11743) (nil fontified nil 11709 . 11742) (nil fontified nil 11669 . 11709) (nil fontified nil 11635 . 11669) (nil fontified nil 11619 . 11635) (nil fontified nil 11606 . 11619) (nil fontified nil 11547 . 11606) (nil fontified nil 11482 . 11547) (nil fontified nil 11457 . 11482) (11457 . 11797)) nil (25966 63521 728913 0) 0 nil])
nil
([nil nil ((12221 . 12223)) ((#("C-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 12221) (undo-tree-id1351 . -2) (undo-tree-id1352 . -2) (undo-tree-id1353 . -2) (undo-tree-id1354 . -2) (undo-tree-id1355 . -2) (undo-tree-id1356 . -2) (undo-tree-id1357 . -2) (undo-tree-id1358 . -2) (undo-tree-id1359 . -2) (undo-tree-id1360 . -2) (undo-tree-id1361 . -2) (undo-tree-id1362 . -2) (undo-tree-id1363 . -2) (undo-tree-id1364 . -2) (undo-tree-id1365 . -2) (undo-tree-id1366 . -2) (undo-tree-id1367 . -2) (undo-tree-id1368 . -2) (undo-tree-id1369 . -2) (undo-tree-id1370 . -2) (undo-tree-id1371 . -2) (undo-tree-id1372 . -2) (undo-tree-id1373 . -2) (undo-tree-id1374 . -2) (undo-tree-id1375 . -2) (undo-tree-id1376 . -2) (undo-tree-id1377 . -2) (undo-tree-id1378 . -2) (undo-tree-id1379 . -2) (undo-tree-id1380 . -2) (undo-tree-id1381 . -2) (undo-tree-id1382 . -2) (undo-tree-id1383 . -2)) (25966 62974 807825 0) 0 nil])
([nil nil ((11719 . 11727) (#("	" 0 1 (wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -11719) (undo-tree-id2 . -1) (11677 . 11685) (#("	" 0 1 (wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -11677) (undo-tree-id3 . -1) (11457 . 11459) (11482 . 11483) (11484 . 11485) (11619 . 11621) (11637 . 11639) (11669 . 11670) (#("      " 0 6 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11669) (11709 . 11710) (#("      " 0 6 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11709) (11743 . 11745) 11051 (t 25966 63521 763307 837000)) nil (25966 63523 922674 0) 0 nil])
([nil nil ((12223 . 12226)) ((#("SPC" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 12223) (undo-tree-id1340 . -3) (undo-tree-id1341 . -3) (undo-tree-id1342 . -3) (undo-tree-id1343 . -3) (undo-tree-id1344 . -3) (undo-tree-id1345 . -3) (undo-tree-id1346 . -3) (undo-tree-id1347 . -3) (undo-tree-id1348 . -3) (undo-tree-id1349 . -3) (undo-tree-id1350 . -3) (t 25966 62959 286866 818000)) (25966 62974 733880 0) 0 nil])
([nil nil ((#("define" 0 6 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11758) (undo-tree-id195 . -5) (undo-tree-id196 . -6) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) (undo-tree-id204 . -6) (undo-tree-id205 . -6) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -6) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -6) (undo-tree-id214 . -6) (undo-tree-id215 . -6) (undo-tree-id216 . -6) (undo-tree-id217 . -6) (undo-tree-id218 . -6) (undo-tree-id219 . -6) (undo-tree-id220 . -6) (undo-tree-id221 . -6) (undo-tree-id222 . -6) (undo-tree-id223 . -6) (undo-tree-id224 . -6) (undo-tree-id225 . -6) (undo-tree-id226 . -6) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (undo-tree-id229 . -6) (undo-tree-id230 . -6) (undo-tree-id231 . -6) (undo-tree-id232 . -6) (undo-tree-id233 . -6) (undo-tree-id234 . -6) (undo-tree-id235 . -6) (undo-tree-id236 . -6) (undo-tree-id237 . -6) (undo-tree-id238 . -6) (t 25966 63523 953325 319000)) nil (25966 63566 77150 0) 0 nil])
([nil nil ((#("C" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -12221) (undo-tree-id1335 . -1) (#("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -12222) (undo-tree-id1336 . -1) (#("S" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -12223) (undo-tree-id1337 . -1) (#("P" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -12224) (undo-tree-id1338 . -1) (#("C" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -12225) (undo-tree-id1339 . -1) 12226 (t 25966 62959 286866 818000)) ((12221 . 12226)) (25966 62974 729957 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11758) (undo-tree-id194 . -1)) nil (25966 63566 77098 0) 0 nil])
nil
([nil nil ((11763 . 11777) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -11763) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) 11764 (11758 . 11764) (#("i" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -11758) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) 11759 (11758 . 11759) (#("key" 0 3 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11758) (undo-tree-id190 . -2) (undo-tree-id191 . 3) (undo-tree-id192 . -3) (undo-tree-id193 . -3)) nil (25966 63566 77094 0) 0 nil])
([nil nil ((#("global" 0 6 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11778) (undo-tree-id138 . -5) (undo-tree-id139 . -6)) nil (25966 63566 77031 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11778) (undo-tree-id137 . -1)) nil (25966 63566 77029 0) 0 nil])
([nil nil ((#("m" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11778) (undo-tree-id135 . -1) (undo-tree-id136 . -1)) nil (25966 63566 77027 0) 0 nil])
([nil nil ((#("a" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11778) (undo-tree-id133 . -1) (undo-tree-id134 . -1)) nil (25966 63566 77024 0) 0 nil])
([nil nil ((#("p" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11778) (undo-tree-id131 . -1) (undo-tree-id132 . -1)) nil (25966 63566 77021 0) 0 nil])
([nil nil ((11778 . 11785) (#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -11778) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("i" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -11779) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("n" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -11780) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) 11781 (11779 . 11781) (11778 . 11779)) nil (25966 63566 77012 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11821 . 11822) (#("
" 0 1 (wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -11901) (11817 . 11902) 11778 (t 25966 63566 109732 934000)) nil (25966 63592 827003 0) 0 nil])
([nil nil ((#(")" 0 1 (help-echo nil face (org-block) font-lock-multiline t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11900) (undo-tree-id241 . 1) (undo-tree-id242 . -1)) nil (25966 63592 827001 0) 0 nil])
([nil nil ((#(")" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11899) (undo-tree-id239 . 1) (undo-tree-id240 . -1)) nil (25966 63592 826995 0) 0 nil])
([nil nil ((#("    " 0 3 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 3 4 (face (org-block) font-lock-multiline t help-echo nil rear-nonsticky t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . -11818) 11898 (t 25966 63592 858094 547000)) nil (25966 63607 903688 0) 0 nil])
([nil nil ((#("'" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id300 . -1) (undo-tree-id301 . -1)) nil (25966 63607 903687 0) 0 nil])
([nil nil ((#("p" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id298 . -1) (undo-tree-id299 . -1)) nil (25966 63607 903685 0) 0 nil])
([nil nil ((#("e" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id296 . -1) (undo-tree-id297 . -1)) nil (25966 63607 903682 0) 0 nil])
([nil nil ((#("e" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id294 . -1) (undo-tree-id295 . -1)) nil (25966 63607 903679 0) 0 nil])
([nil nil ((#("p" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1)) nil (25966 63607 903677 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1)) nil (25966 63607 903666 0) 0 nil])
([nil nil ((#("d" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id274 . -1) (undo-tree-id275 . -1)) nil (25966 63607 903657 0) 0 nil])
([nil nil ((#("i" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id272 . -1) (undo-tree-id273 . -1)) nil (25966 63607 903654 0) 0 nil])
([nil nil ((#("r" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id270 . -1) (undo-tree-id271 . -1)) nil (25966 63607 903652 0) 0 nil])
([nil nil ((#("e" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id268 . -1) (undo-tree-id269 . -1)) nil (25966 63607 903646 0) 0 nil])
([nil nil ((#("d" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id266 . -1) (undo-tree-id267 . -1)) nil (25966 63607 903644 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id264 . -1) (undo-tree-id265 . -1)) nil (25966 63607 903641 0) 0 nil])
([nil nil ((#("p" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t src-block t)) . 11873) (undo-tree-id262 . -1) (undo-tree-id263 . -1)) nil (25966 63607 903639 0) 0 nil])
([nil nil ((#("r" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id260 . -1) (undo-tree-id261 . -1)) nil (25966 63607 903636 0) 0 nil])
([nil nil ((#("e" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id258 . -1) (undo-tree-id259 . -1)) nil (25966 63607 903633 0) 0 nil])
([nil nil ((#("v" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id256 . -1) (undo-tree-id257 . -1)) nil (25966 63607 903631 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id254 . -1) (undo-tree-id255 . -1)) nil (25966 63607 903628 0) 0 nil])
([nil nil ((#("f" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id252 . -1) (undo-tree-id253 . -1)) nil (25966 63607 903626 0) 0 nil])
([nil nil ((#("i" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id250 . -1) (undo-tree-id251 . -1)) nil (25966 63607 903623 0) 0 nil])
([nil nil ((#("l" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id248 . -1) (undo-tree-id249 . -1)) nil (25966 63607 903620 0) 0 nil])
([nil nil ((#("e" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11873) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1)) nil (25966 63607 903616 0) 0 nil])
([nil nil ((11873 . 11889)) nil (25966 63607 903600 0) 0 nil])
([nil nil ((11836 . 11842) (#("normal" 0 6 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11836) (undo-tree-id317 . -5) (undo-tree-id318 . -6) (undo-tree-id319 . -6) (t 25966 63607 935209 617000)) nil (25966 63617 699514 0) 0 nil])
([nil nil ((#("peep" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11843) (undo-tree-id315 . -3) (undo-tree-id316 . -4)) nil (25966 63617 699510 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11843) (undo-tree-id314 . -1)) nil (25966 63617 699507 0) 0 nil])
([nil nil ((#("dired" 0 5 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11843) (undo-tree-id312 . -4) (undo-tree-id313 . -5)) nil (25966 63617 699506 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11843) (undo-tree-id311 . -1)) nil (25966 63617 699503 0) 0 nil])
([nil nil ((#("mode" 0 4 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11843) (undo-tree-id309 . -3) (undo-tree-id310 . -4)) nil (25966 63617 699501 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11843) (undo-tree-id308 . -1)) nil (25966 63617 699498 0) 0 nil])
([nil nil ((#("m" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11843) (undo-tree-id306 . -1) (undo-tree-id307 . -1)) nil (25966 63617 699496 0) 0 nil])
([nil nil ((#("a" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11843) (undo-tree-id304 . -1) (undo-tree-id305 . -1)) nil (25966 63617 699493 0) 0 nil])
([nil nil ((#("p" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11843) (undo-tree-id302 . -1) (undo-tree-id303 . -1)) nil (25966 63617 699488 0) 0 nil])
([nil nil ((11843 . 11849) (t 25966 63617 732089 327000)) nil (25966 63668 903210 0) 0 nil])
([nil nil ((11849 . 11859) 11051) nil (25966 63668 903205 0) 0 nil])
([nil nil ((#("  (evil-global-set-key 'insert (kbd \"<tab>\") #'rk/copilot-tab)
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 30 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 30 31 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 31 36 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 36 43 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 43 61 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 61 62 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 62 63 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11755) (undo-tree-id320 . -23) (undo-tree-id321 . -61) (undo-tree-id322 . -61) (undo-tree-id323 . -23) (undo-tree-id324 . -23) (undo-tree-id325 . -23) (undo-tree-id326 . -30) (undo-tree-id327 . -30) (undo-tree-id328 . -30) (undo-tree-id329 . -30) (undo-tree-id330 . -30) (undo-tree-id331 . -30) (undo-tree-id332 . -30) 11051 (t 25966 63668 935581 161000)) nil (25966 63670 195868 0) 0 nil])
([nil nil ((11755 . 11757) 11051 (t 25966 63670 226762 159000)) nil (25966 63670 930378 0) 0 nil])
([nil nil ((11805 . 11810) (#("k" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 11805) 11051 (t 25966 63670 960969 75000)) nil (25966 63675 798682 0) 0 nil])
([nil nil ((#("company-yasnippet-or-completion)
        (" 0 33 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 33 41 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 41 42 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11686) 11051 (t 25966 63675 831206 230000)) nil (25966 63696 188621 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11712) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) 11051 (t 25966 63696 220253 156000)) nil (25966 63707 530662 0) 0 nil])
([nil nil ((11712 . 11713) 11719 (t 25966 63707 564213 246000)) nil (25966 63710 578056 0) 0 nil])
([nil nil ((11712 . 11713) (t 25966 63710 610928 238000)) nil (25966 63766 395597 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12452 . 12453) (nil fontified nil 12377 . 12453) (nil fontified nil 12292 . 12377) (nil fontified nil 12206 . 12292) (nil fontified nil 12126 . 12206) (nil fontified nil 12051 . 12126) (nil fontified nil 12050 . 12051) (nil fontified nil 12025 . 12050) (nil fontified nil 12004 . 12025) (nil fontified nil 11982 . 12004) (nil fontified nil 11946 . 11982) (nil fontified nil 11933 . 11946) (nil fontified nil 11900 . 11933) (nil fontified nil 11884 . 11900) (nil fontified nil 11819 . 11884) (nil fontified nil 11752 . 11819) (nil fontified nil 11712 . 11752) (11712 . 12453)) nil (25966 63766 395592 0) 0 nil])
([nil nil ((11941 . 11949) (#("	" 0 1 (wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -11941) (undo-tree-id339 . -1) (11712 . 11714) (11752 . 11753) (11754 . 11755) (11884 . 11885) (11886 . 11887) (11900 . 11901) (11902 . 11903) (11933 . 11934) (#("      " 0 6 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11933) (11946 . 11948) (11990 . 11992) (12004 . 12006) (12029 . 12031) (12051 . 12053) (12126 . 12128) (12206 . 12208) (12292 . 12294) (12377 . 12379) 11051 (t 25966 63766 428114 646000)) nil (25966 63769 328195 0) 0 nil])
([nil nil ((12086 . 12144) (#(")" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 12086) (undo-tree-id340 . -1) (12070 . 12086) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -12070) (undo-tree-id341 . -1) 12071 (12070 . 12071) (12069 . 12071) (#("(" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -12069) (12069 . 12070) (#("a" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -12069) (undo-tree-id342 . -1) (#("k" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -12070) (undo-tree-id343 . -1) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -12071) (undo-tree-id344 . -1) (#("l" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -12072) (undo-tree-id345 . -1) (#("d" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -12073) (undo-tree-id346 . -1) (#("j" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . -12074) (undo-tree-id347 . -1) 12075 (12069 . 12075) (12068 . 12069) (12068 . 12069) (t 25966 63769 361046 355000)) nil (25966 63841 724225 0) 0 nil])
([nil nil ((#("  (defun rk/copilot-complete-or-accept ()
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 8 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 9 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 9 38 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 38 42 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11712) (undo-tree-id657 . -41) (undo-tree-id658 . -41) (undo-tree-id659 . -38) (undo-tree-id660 . -38) (undo-tree-id661 . -38) (undo-tree-id662 . -38) (undo-tree-id663 . -38) (undo-tree-id664 . -38) (undo-tree-id665 . -38) (undo-tree-id666 . -38) (undo-tree-id667 . -38) (undo-tree-id668 . -38) (undo-tree-id669 . -38) (undo-tree-id670 . -38) (undo-tree-id671 . -38) (undo-tree-id672 . -38) (undo-tree-id673 . -38) (undo-tree-id674 . -38) (undo-tree-id675 . -38) (undo-tree-id676 . -38) (undo-tree-id677 . -38) (undo-tree-id678 . -38) (undo-tree-id679 . -38) (undo-tree-id680 . -38) (undo-tree-id681 . -38) (undo-tree-id682 . -38) (undo-tree-id683 . -38) (undo-tree-id684 . -38) (undo-tree-id685 . -38) (undo-tree-id686 . -38) (undo-tree-id687 . -38) (undo-tree-id688 . -38) (undo-tree-id689 . -38) (undo-tree-id690 . -38) (undo-tree-id691 . -38) (undo-tree-id692 . -38) (undo-tree-id693 . -38) (undo-tree-id694 . -38) (undo-tree-id695 . -38) (undo-tree-id696 . -38) (undo-tree-id697 . -38) (undo-tree-id698 . -38) (undo-tree-id699 . -38) (undo-tree-id700 . -38) (undo-tree-id701 . -38) (undo-tree-id702 . -38) (undo-tree-id703 . -38) (undo-tree-id704 . -38) (undo-tree-id705 . -38) (undo-tree-id706 . -38) (undo-tree-id707 . -38) (undo-tree-id708 . -38) (undo-tree-id709 . -38) (undo-tree-id710 . -38) (undo-tree-id711 . -38) (undo-tree-id712 . -38) (undo-tree-id713 . -38) (undo-tree-id714 . -38) (undo-tree-id715 . -38) (undo-tree-id716 . -38) (undo-tree-id717 . -38) (undo-tree-id718 . -38) (undo-tree-id719 . -42) 11750 (t 25966 63841 755873 177000)) nil (25966 63866 882082 0) 0 nil])
([nil nil ((#("    \"Command that either triggers a completion or accepts one if one
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 3 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 69 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11712) (undo-tree-id609 . -68) (undo-tree-id610 . -38) (undo-tree-id611 . -38) (undo-tree-id612 . -38) (undo-tree-id613 . -38) (undo-tree-id614 . -38) (undo-tree-id615 . -38) (undo-tree-id616 . -38) (undo-tree-id617 . -38) (undo-tree-id618 . -38) (undo-tree-id619 . -38) (undo-tree-id620 . -38) (undo-tree-id621 . -38) (undo-tree-id622 . -38) (undo-tree-id623 . -38) (undo-tree-id624 . -38) (undo-tree-id625 . -38) (undo-tree-id626 . -38) (undo-tree-id627 . -38) (undo-tree-id628 . -38) (undo-tree-id629 . -38) (undo-tree-id630 . -38) (undo-tree-id631 . -38) (undo-tree-id632 . -38) (undo-tree-id633 . -38) (undo-tree-id634 . -38) (undo-tree-id635 . -38) (undo-tree-id636 . -38) (undo-tree-id637 . -38) (undo-tree-id638 . -38) (undo-tree-id639 . -38) (undo-tree-id640 . -38) (undo-tree-id641 . -38) (undo-tree-id642 . -38) (undo-tree-id643 . -38) (undo-tree-id644 . -38) (undo-tree-id645 . -38) (undo-tree-id646 . -38) (undo-tree-id647 . -38) (undo-tree-id648 . -38) (undo-tree-id649 . -38) (undo-tree-id650 . -38) (undo-tree-id651 . -38) (undo-tree-id652 . -38) (undo-tree-id653 . -38) (undo-tree-id654 . -38) (undo-tree-id655 . -38) (undo-tree-id656 . -69) 11750) nil (25966 63866 882023 0) 0 nil])
([nil nil ((#("is available. Useful if you tend to hammer your keys like I do.\"
" 0 63 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 63 64 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 64 65 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11712) (undo-tree-id561 . -64) (undo-tree-id562 . -38) (undo-tree-id563 . -38) (undo-tree-id564 . -38) (undo-tree-id565 . -38) (undo-tree-id566 . -38) (undo-tree-id567 . -38) (undo-tree-id568 . -38) (undo-tree-id569 . -38) (undo-tree-id570 . -38) (undo-tree-id571 . -38) (undo-tree-id572 . -38) (undo-tree-id573 . -38) (undo-tree-id574 . -38) (undo-tree-id575 . -38) (undo-tree-id576 . -38) (undo-tree-id577 . -38) (undo-tree-id578 . -38) (undo-tree-id579 . -38) (undo-tree-id580 . -38) (undo-tree-id581 . -38) (undo-tree-id582 . -38) (undo-tree-id583 . -38) (undo-tree-id584 . -38) (undo-tree-id585 . -38) (undo-tree-id586 . -38) (undo-tree-id587 . -38) (undo-tree-id588 . -38) (undo-tree-id589 . -38) (undo-tree-id590 . -38) (undo-tree-id591 . -38) (undo-tree-id592 . -38) (undo-tree-id593 . -38) (undo-tree-id594 . -38) (undo-tree-id595 . -38) (undo-tree-id596 . -38) (undo-tree-id597 . -38) (undo-tree-id598 . -38) (undo-tree-id599 . -38) (undo-tree-id600 . -38) (undo-tree-id601 . -38) (undo-tree-id602 . -38) (undo-tree-id603 . -38) (undo-tree-id604 . -38) (undo-tree-id605 . -38) (undo-tree-id606 . -38) (undo-tree-id607 . -38) (undo-tree-id608 . -65) 11750) nil (25966 63866 881968 0) 0 nil])
([nil nil ((#("    (interactive)
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 3 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 5 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 5 16 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 16 18 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11712) (undo-tree-id544 . -17) (undo-tree-id545 . -16) (undo-tree-id546 . -16) (undo-tree-id547 . -16) (undo-tree-id548 . -16) (undo-tree-id549 . -16) (undo-tree-id550 . -16) (undo-tree-id551 . -16) (undo-tree-id552 . -16) (undo-tree-id553 . -16) (undo-tree-id554 . -16) (undo-tree-id555 . -16) (undo-tree-id556 . -16) (undo-tree-id557 . -16) (undo-tree-id558 . -16) (undo-tree-id559 . -16) (undo-tree-id560 . -18) 11728) nil (25966 63866 881923 0) 0 nil])
([nil nil ((#("    (if (copilot--overlay-visible)
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 1 3 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 3 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 4 5 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 5 7 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 7 35 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11712) (undo-tree-id541 . -34) (undo-tree-id542 . -16) (undo-tree-id543 . -35) 11728) nil (25966 63866 881905 0) 0 nil])
([nil nil ((#("        (progn
" 0 8 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 9 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 9 14 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 14 15 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11712) (undo-tree-id538 . -14) (undo-tree-id539 . -13) (undo-tree-id540 . -15) 11725) nil (25966 63866 881902 0) 0 nil])
([nil nil ((#("          (copilot-accept-completion)
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 38 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11712) (undo-tree-id535 . -37) (undo-tree-id536 . -13) (undo-tree-id537 . -38) 11725) nil (25966 63866 881898 0) 0 nil])
([nil nil ((#("          (open-line 1)
" 0 8 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 8 10 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 10 24 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11712) (undo-tree-id522 . -23) (undo-tree-id523 . -13) (undo-tree-id524 . -13) (undo-tree-id525 . -13) (undo-tree-id526 . -13) (undo-tree-id527 . -13) (undo-tree-id528 . -13) (undo-tree-id529 . -13) (undo-tree-id530 . -13) (undo-tree-id531 . -13) (undo-tree-id532 . -13) (undo-tree-id533 . -13) (undo-tree-id534 . -24) 11725) nil (25966 63866 881895 0) 0 nil])
([nil nil ((#("          (next-line))
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 23 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11712) (undo-tree-id502 . -22) (undo-tree-id503 . -13) (undo-tree-id504 . -13) (undo-tree-id505 . -13) (undo-tree-id506 . -13) (undo-tree-id507 . -13) (undo-tree-id508 . -13) (undo-tree-id509 . -13) (undo-tree-id510 . -13) (undo-tree-id511 . -13) (undo-tree-id512 . -13) (undo-tree-id513 . -13) (undo-tree-id514 . -13) (undo-tree-id515 . -13) (undo-tree-id516 . -13) (undo-tree-id517 . -13) (undo-tree-id518 . -13) (undo-tree-id519 . -13) (undo-tree-id520 . -13) (undo-tree-id521 . -23) 11725) nil (25966 63866 881882 0) 0 nil])
([nil nil ((#("      (copilot-complete)))
" 0 4 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 4 6 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 6 27 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11712) (undo-tree-id482 . -26) (undo-tree-id483 . -13) (undo-tree-id484 . -13) (undo-tree-id485 . -13) (undo-tree-id486 . -13) (undo-tree-id487 . -13) (undo-tree-id488 . -13) (undo-tree-id489 . -13) (undo-tree-id490 . -13) (undo-tree-id491 . -13) (undo-tree-id492 . -13) (undo-tree-id493 . -13) (undo-tree-id494 . -13) (undo-tree-id495 . -13) (undo-tree-id496 . -13) (undo-tree-id497 . -13) (undo-tree-id498 . -13) (undo-tree-id499 . -13) (undo-tree-id500 . -13) (undo-tree-id501 . -27) 11725) nil (25966 63866 881862 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11712) (undo-tree-id481 . -1)) nil (25966 63866 881843 0) 0 nil])
([nil nil ((11712 . 11713)) nil (25966 63866 881841 0) 0 nil])
([nil nil ((#("  (define-key copilot-mode-map (kbd \"M-C-<next>\") #'copilot-next-completion)
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 36 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 36 37 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 37 47 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 47 48 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 77 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11790) (undo-tree-id479 . -76) (undo-tree-id480 . -77)) nil (25966 63866 881840 0) 0 nil])
([nil nil ((#("  (define-key copilot-mode-map (kbd \"M-C-<prior>\") #'copilot-previous-completion)
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 36 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 36 37 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 37 48 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 49 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 49 82 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11790) (undo-tree-id477 . -81) (undo-tree-id478 . -82)) nil (25966 63866 881838 0) 0 nil])
([nil nil ((#("  (define-key copilot-mode-map (kbd \"M-C-<right>\") #'copilot-accept-completion-by-word)
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 36 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 36 37 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 37 48 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 49 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 49 88 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11790) (undo-tree-id475 . -87) (undo-tree-id476 . -88)) nil (25966 63866 881835 0) 0 nil])
([nil nil ((#("  (define-key copilot-mode-map (kbd \"M-C-<down>\") #'copilot-accept-completion-by-line)
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 36 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 36 37 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 37 47 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 47 48 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 48 87 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11790) (undo-tree-id473 . -86) (undo-tree-id474 . -87)) nil (25966 63866 881833 0) 0 nil])
([nil nil ((#("  (define-key global-map (kbd \"M-C-<return>\") #'rk/copilot-complete-or-accept)
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 30 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 30 31 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 31 43 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 43 44 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 44 77 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 77 78 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 78 79 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11790) (undo-tree-id466 . -78) (undo-tree-id467 . -3) (undo-tree-id468 . -77) (undo-tree-id469 . -77) (undo-tree-id470 . -3) (undo-tree-id471 . -3) (undo-tree-id472 . -79)) nil (25966 63866 881830 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11790) (undo-tree-id464 . 1) (undo-tree-id465 . -1)) nil (25966 63866 881823 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 11789) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1)) nil (25966 63866 883511 0) 0 nil])
([nil nil ((11713 . 11717)) nil (25966 63868 559830 0) 0 nil] [nil nil ((#("  (evil-define-key 'insert copilot-mode-map (kbd \"<tab>\") #'rk/copilot-tab)
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 2 3 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 3 13 (face (font-lock-keyword-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 13 18 (face (font-lock-keyword-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 18 33 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 33 43 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 43 49 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 49 50 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 50 55 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 55 56 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 56 75 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t) 75 76 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11789) (undo-tree-id348 . -75) (undo-tree-id349 . 76) (undo-tree-id350 . -2) (undo-tree-id351 . -76)) ((11789 . 11865)) (25966 63866 881712 0) 0 nil])
([nil nil (11713) nil (25966 63870 965276 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11715) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11716) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) 11717 (t 25966 63868 594072 128000)) nil (25966 63870 965270 0) 0 nil])
([nil nil ((#("C" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11763) (t 25966 63870 999882 986000)) nil (25966 63893 683610 0) 0 nil])
([nil nil ((#("-" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11763)) nil (25966 63893 683609 0) 0 nil])
([nil nil ((#("S" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11763)) nil (25966 63893 683608 0) 0 nil])
([nil nil ((#("P" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11763)) nil (25966 63893 683608 0) 0 nil])
([nil nil ((#("C" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11763)) nil (25966 63893 683607 0) 0 nil])
([nil nil ((11763 . 11764) (#("ˆ" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -11763) (undo-tree-id827 . -1) 11764 (11763 . 11764) (#("©" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11763) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) 11764 (11763 . 11764) (#("ƒ" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11763) (undo-tree-id860 . -1) 11764 (11763 . 11764) (11762 . 11764) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -11762) (11762 . 11763) (#("\"" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -11762) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (#("\"" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11763) (#("" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11763) (undo-tree-id864 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11764) (undo-tree-id865 . -1) 11765 (11764 . 11765) (11763 . 11764)) nil (25966 63893 683601 0) 0 nil])
([nil nil ((#("j" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11785) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) 11786 (11785 . 11786) (t 25966 63893 716736 362000)) nil (25966 63905 368816 0) 0 nil])
([nil nil ((11724 . 11725) (11714 . 11724) (11713 . 11715) (#("(" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -11713) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (11713 . 11714) (11713 . 11714) 11784 (t 25966 63905 402226 189000)) nil (25966 63914 658843 0) 0 nil])
([nil nil ((#("(evil-defind)
" 0 12 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 12 13 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 13 14 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11713) (undo-tree-id906 . -13) (undo-tree-id907 . 2) (undo-tree-id908 . -13) (undo-tree-id909 . -6) (undo-tree-id910 . -6) (undo-tree-id911 . -6) (undo-tree-id912 . -6) (undo-tree-id913 . -6) (undo-tree-id914 . -6) (undo-tree-id915 . -6) (undo-tree-id916 . -6) (undo-tree-id917 . -6) (undo-tree-id918 . -6) (undo-tree-id919 . -6) (undo-tree-id920 . -6) (undo-tree-id921 . -6) (undo-tree-id922 . -6) (undo-tree-id923 . -6) (undo-tree-id924 . -6) (undo-tree-id925 . -6) (undo-tree-id926 . -6) (undo-tree-id927 . -6) (undo-tree-id928 . -6) (undo-tree-id929 . -6) (undo-tree-id930 . -6) (undo-tree-id931 . -6) (undo-tree-id932 . -6) (undo-tree-id933 . -6) (undo-tree-id934 . -6) (undo-tree-id935 . -6) (undo-tree-id936 . -6) (undo-tree-id937 . -6) (undo-tree-id938 . -6) (undo-tree-id939 . -6) (undo-tree-id940 . -7) (undo-tree-id941 . -7) (undo-tree-id942 . -7) (undo-tree-id943 . -7) (undo-tree-id944 . -7) (undo-tree-id945 . -7) (undo-tree-id946 . -7) (undo-tree-id947 . -7) (undo-tree-id948 . -7) (undo-tree-id949 . -7) (undo-tree-id950 . -7) (undo-tree-id951 . -7) (undo-tree-id952 . -7) (undo-tree-id953 . -7) (undo-tree-id954 . -7) (undo-tree-id955 . -8) (undo-tree-id956 . -8) (undo-tree-id957 . -8) (undo-tree-id958 . -8) (undo-tree-id959 . -8) (undo-tree-id960 . -8) (undo-tree-id961 . -8) (undo-tree-id962 . -8) (undo-tree-id963 . -8) (undo-tree-id964 . -8) (undo-tree-id965 . -8) (undo-tree-id966 . -8) (undo-tree-id967 . -8) (undo-tree-id968 . -8) (undo-tree-id969 . -8) (undo-tree-id970 . -9) (undo-tree-id971 . -9) (undo-tree-id972 . -9) (undo-tree-id973 . -9) (undo-tree-id974 . -9) (undo-tree-id975 . -9) (undo-tree-id976 . -9) (undo-tree-id977 . -9) (undo-tree-id978 . -9) (undo-tree-id979 . -9) (undo-tree-id980 . -9) (undo-tree-id981 . -9) (undo-tree-id982 . -9) (undo-tree-id983 . -9) (undo-tree-id984 . -9) (undo-tree-id985 . -10) (undo-tree-id986 . -10) (undo-tree-id987 . -10) (undo-tree-id988 . -10) (undo-tree-id989 . -10) (undo-tree-id990 . -10) (undo-tree-id991 . -10) (undo-tree-id992 . -10) (undo-tree-id993 . -10) (undo-tree-id994 . -10) (undo-tree-id995 . -10) (undo-tree-id996 . -10) (undo-tree-id997 . -10) (undo-tree-id998 . -10) (undo-tree-id999 . -10) (undo-tree-id1000 . -11) (undo-tree-id1001 . -11) (undo-tree-id1002 . -11) (undo-tree-id1003 . -11) (undo-tree-id1004 . -11) (undo-tree-id1005 . -11) (undo-tree-id1006 . -11) (undo-tree-id1007 . -11) (undo-tree-id1008 . -11) (undo-tree-id1009 . -11) (undo-tree-id1010 . -11) (undo-tree-id1011 . -11) (undo-tree-id1012 . -11) (undo-tree-id1013 . -11) (undo-tree-id1014 . -11) (undo-tree-id1015 . -11) (undo-tree-id1016 . -11) (undo-tree-id1017 . -11) (undo-tree-id1018 . -11) (undo-tree-id1019 . -11) (undo-tree-id1020 . -11) (undo-tree-id1021 . -11) (undo-tree-id1022 . -11) (undo-tree-id1023 . -11) (undo-tree-id1024 . -11) (undo-tree-id1025 . -11) (undo-tree-id1026 . -11) (undo-tree-id1027 . -11) (undo-tree-id1028 . -11) (undo-tree-id1029 . -11) (undo-tree-id1030 . -11) (undo-tree-id1031 . -11) (undo-tree-id1032 . -11) (undo-tree-id1033 . -11) (undo-tree-id1034 . -11) (undo-tree-id1035 . -11) (undo-tree-id1036 . -11) (undo-tree-id1037 . -11) (undo-tree-id1038 . -11) (undo-tree-id1039 . -11) (undo-tree-id1040 . -11) (undo-tree-id1041 . -11) (undo-tree-id1042 . -11) (undo-tree-id1043 . -11) (undo-tree-id1044 . -11) (undo-tree-id1045 . -11) (undo-tree-id1046 . -11) (undo-tree-id1047 . -11) (undo-tree-id1048 . -11) (undo-tree-id1049 . -11) (undo-tree-id1050 . -11) (undo-tree-id1051 . -11) (undo-tree-id1052 . -11) (undo-tree-id1053 . -11) (undo-tree-id1054 . -11) (undo-tree-id1055 . -11) (undo-tree-id1056 . -11) (undo-tree-id1057 . -11) (undo-tree-id1058 . -11) (undo-tree-id1059 . -11) (undo-tree-id1060 . -11) (undo-tree-id1061 . -11) (undo-tree-id1062 . -11) (undo-tree-id1063 . -11) (undo-tree-id1064 . -11) (undo-tree-id1065 . -11) (undo-tree-id1066 . -11) (undo-tree-id1067 . -11) (undo-tree-id1068 . -11) (undo-tree-id1069 . -11) (undo-tree-id1070 . -11) (undo-tree-id1071 . -11) (undo-tree-id1072 . -11) (undo-tree-id1073 . -11) (undo-tree-id1074 . -11) (undo-tree-id1075 . -11) (undo-tree-id1076 . -11) (undo-tree-id1077 . -11) (undo-tree-id1078 . -11) (undo-tree-id1079 . -11) (undo-tree-id1080 . -11) (undo-tree-id1081 . -11) (undo-tree-id1082 . -11) (undo-tree-id1083 . -11) (undo-tree-id1084 . -11) (undo-tree-id1085 . -11) (undo-tree-id1086 . -11) (undo-tree-id1087 . -11) (undo-tree-id1088 . -11) (undo-tree-id1089 . -11) (undo-tree-id1090 . -12) (undo-tree-id1091 . -12) (undo-tree-id1092 . -12) (undo-tree-id1093 . -12) (undo-tree-id1094 . -12) (undo-tree-id1095 . -12) (undo-tree-id1096 . -12) (undo-tree-id1097 . -12) (undo-tree-id1098 . -12) (undo-tree-id1099 . -12) (undo-tree-id1100 . -12) (undo-tree-id1101 . -12) (undo-tree-id1102 . -12) (undo-tree-id1103 . -12) (undo-tree-id1104 . -12) (undo-tree-id1105 . -12) (undo-tree-id1106 . -12) (undo-tree-id1107 . -12) (undo-tree-id1108 . -12) (undo-tree-id1109 . -12) (undo-tree-id1110 . -12) (undo-tree-id1111 . -12) (undo-tree-id1112 . -12) (undo-tree-id1113 . -12) (undo-tree-id1114 . -12) (undo-tree-id1115 . -12) (undo-tree-id1116 . -12) (undo-tree-id1117 . -12) (undo-tree-id1118 . -12) (undo-tree-id1119 . -12) (undo-tree-id1120 . -12) (undo-tree-id1121 . -11) (undo-tree-id1122 . -11) (undo-tree-id1123 . -11) (undo-tree-id1124 . -11) (undo-tree-id1125 . -11) (undo-tree-id1126 . -11) (undo-tree-id1127 . -11) (undo-tree-id1128 . -11) (undo-tree-id1129 . -11) (undo-tree-id1130 . -11) (undo-tree-id1131 . -11) (undo-tree-id1132 . -11) (undo-tree-id1133 . -11) (undo-tree-id1134 . -11) (undo-tree-id1135 . -11) (undo-tree-id1136 . -11) (undo-tree-id1137 . -11) (undo-tree-id1138 . -11) (undo-tree-id1139 . -11) (undo-tree-id1140 . -11) (undo-tree-id1141 . -11) (undo-tree-id1142 . -11) (undo-tree-id1143 . -11) (undo-tree-id1144 . -11) (undo-tree-id1145 . -11) (undo-tree-id1146 . -11) (undo-tree-id1147 . -11) (undo-tree-id1148 . -11) (undo-tree-id1149 . -11) (undo-tree-id1150 . -11) (undo-tree-id1151 . -11) (undo-tree-id1152 . -11) (undo-tree-id1153 . -11) (undo-tree-id1154 . -11) (undo-tree-id1155 . -11) (undo-tree-id1156 . -11) (undo-tree-id1157 . -11) (undo-tree-id1158 . -11) (undo-tree-id1159 . -11) (undo-tree-id1160 . -11) (undo-tree-id1161 . -14) 11724) nil (25966 63914 658830 0) 0 nil])
([nil nil ((11763 . 11764) (#("ˆ" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11763) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) 11764 (t 25966 63914 694202 621000)) nil (25966 63935 595250 0) 0 nil])
([nil nil ((11763 . 11764) (t 25966 63935 629519 995000)) nil (25966 63942 991796 0) 0 nil])
([nil nil ((#("©" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11764) (undo-tree-id1196 . 1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1)) nil (25966 63942 991793 0) 0 nil])
([nil nil ((11777 . 11785) (t 25966 63943 25630 568000)) nil (25966 63995 942701 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11784) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (t 25966 63995 976904 81000)) nil (25966 63996 634872 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11793) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (#("f" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11794) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11795) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) 11796 (11793 . 11796) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11793) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (#("F" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11794) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (#("S" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11795) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) 11796 (11793 . 11796) (t 25966 63996 670761 885000)) nil (25966 64008 676607 0) 0 nil])
([nil nil ((11797 . 11819) (11796 . 11797) (#("≈" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11796) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) 11797 (11795 . 11797) (11793 . 11795) (t 25966 64008 712477 351000)) nil (25966 64019 190142 0) 0 nil])
([nil nil ((#(";; ç is the key above tab" 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 25 (src-block t help-echo nil face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11794) (undo-tree-id2011 . -24) (undo-tree-id2012 . -2) (undo-tree-id2013 . -2) (undo-tree-id2014 . -2) (undo-tree-id2015 . -2) (undo-tree-id2016 . -2) (undo-tree-id2017 . -2) (undo-tree-id2018 . -2) (undo-tree-id2019 . -2) (undo-tree-id2020 . -2) (undo-tree-id2021 . -2) (undo-tree-id2022 . -2) (undo-tree-id2023 . -2) (undo-tree-id2024 . -2) (undo-tree-id2025 . -2) (undo-tree-id2026 . -2) (undo-tree-id2027 . -2) (undo-tree-id2028 . -2) (undo-tree-id2029 . -2) (undo-tree-id2030 . -2) (undo-tree-id2031 . -2) (undo-tree-id2032 . -2) (undo-tree-id2033 . -2) (undo-tree-id2034 . -2) (undo-tree-id2035 . -2) (undo-tree-id2036 . -2) (undo-tree-id2037 . -2) (undo-tree-id2038 . -2) (undo-tree-id2039 . -2) (undo-tree-id2040 . -2) (undo-tree-id2041 . -2) (undo-tree-id2042 . -2) (undo-tree-id2043 . -2) (undo-tree-id2044 . -2) (undo-tree-id2045 . -2) (undo-tree-id2046 . -2) (undo-tree-id2047 . -2) (undo-tree-id2048 . -2) (undo-tree-id2049 . -2) (undo-tree-id2050 . -2) (undo-tree-id2051 . -2) (undo-tree-id2052 . -2) (undo-tree-id2053 . -2) (undo-tree-id2054 . -2) (undo-tree-id2055 . -2) (undo-tree-id2056 . -2) (undo-tree-id2057 . -2) (undo-tree-id2058 . -2) (undo-tree-id2059 . -2) (undo-tree-id2060 . -2) (undo-tree-id2061 . -2) (undo-tree-id2062 . -2) (undo-tree-id2063 . -2) (undo-tree-id2064 . -2) (undo-tree-id2065 . -2) (undo-tree-id2066 . -2) (undo-tree-id2067 . -2) (undo-tree-id2068 . -2) (undo-tree-id2069 . -2) (undo-tree-id2070 . -2) (undo-tree-id2071 . -2) (undo-tree-id2072 . -2) (undo-tree-id2073 . -2) (undo-tree-id2074 . -2) (undo-tree-id2075 . -2) (undo-tree-id2076 . -2) (undo-tree-id2077 . -2) (undo-tree-id2078 . -2) (undo-tree-id2079 . -2) (undo-tree-id2080 . -2) (undo-tree-id2081 . -2) (undo-tree-id2082 . -2) (undo-tree-id2083 . -2) (undo-tree-id2084 . -2) (undo-tree-id2085 . -2) (undo-tree-id2086 . -2) (undo-tree-id2087 . -2) (undo-tree-id2088 . -2) (undo-tree-id2089 . -2) (undo-tree-id2090 . -2) (undo-tree-id2091 . -2) (undo-tree-id2092 . -3) (undo-tree-id2093 . -24) (undo-tree-id2094 . -24) (undo-tree-id2095 . -24) (undo-tree-id2096 . -24) (undo-tree-id2097 . -24) (undo-tree-id2098 . -24) (undo-tree-id2099 . -24) (undo-tree-id2100 . -24) (undo-tree-id2101 . -24) (undo-tree-id2102 . -24) (undo-tree-id2103 . -24) (undo-tree-id2104 . -24) (undo-tree-id2105 . -24) (undo-tree-id2106 . -24) (undo-tree-id2107 . -24) (undo-tree-id2108 . -24) (undo-tree-id2109 . -24) (undo-tree-id2110 . -24) (undo-tree-id2111 . -24) (undo-tree-id2112 . -24) (undo-tree-id2113 . -24) (undo-tree-id2114 . -24) (undo-tree-id2115 . -24) (undo-tree-id2116 . -24) (undo-tree-id2117 . -24) (undo-tree-id2118 . -24) (undo-tree-id2119 . -24) (undo-tree-id2120 . -24) (undo-tree-id2121 . -24) (undo-tree-id2122 . -24) (undo-tree-id2123 . -22) (undo-tree-id2124 . -22) (undo-tree-id2125 . -22) (undo-tree-id2126 . -22) (undo-tree-id2127 . -22) (undo-tree-id2128 . -22) (undo-tree-id2129 . -22) (undo-tree-id2130 . -22) (undo-tree-id2131 . -22) (undo-tree-id2132 . -22) (undo-tree-id2133 . -22) (undo-tree-id2134 . -22) (undo-tree-id2135 . -22) (undo-tree-id2136 . -22) (undo-tree-id2137 . -22) (undo-tree-id2138 . -22) (undo-tree-id2139 . -22) (undo-tree-id2140 . -22) (undo-tree-id2141 . -22) (undo-tree-id2142 . -22) (undo-tree-id2143 . -22) (undo-tree-id2144 . -16) (undo-tree-id2145 . -16) (undo-tree-id2146 . -16) (undo-tree-id2147 . -16) (undo-tree-id2148 . -16) (undo-tree-id2149 . -16) (undo-tree-id2150 . -16) (undo-tree-id2151 . -16) (undo-tree-id2152 . -16) (undo-tree-id2153 . -16) (undo-tree-id2154 . -16) (undo-tree-id2155 . -16) (undo-tree-id2156 . -16) (undo-tree-id2157 . -16) (undo-tree-id2158 . -16) (undo-tree-id2159 . -16) (undo-tree-id2160 . -16) (undo-tree-id2161 . -16) (undo-tree-id2162 . -16) (undo-tree-id2163 . -16) (undo-tree-id2164 . -16) (undo-tree-id2165 . -12) (undo-tree-id2166 . -12) (undo-tree-id2167 . -12) (undo-tree-id2168 . -12) (undo-tree-id2169 . -12) (undo-tree-id2170 . -12) (undo-tree-id2171 . -12) (undo-tree-id2172 . -12) (undo-tree-id2173 . -12) (undo-tree-id2174 . -12) (undo-tree-id2175 . -12) (undo-tree-id2176 . -12) (undo-tree-id2177 . -12) (undo-tree-id2178 . -12) (undo-tree-id2179 . -12) (undo-tree-id2180 . -12) (undo-tree-id2181 . -12) (undo-tree-id2182 . -12) (undo-tree-id2183 . -12) (undo-tree-id2184 . -12) (undo-tree-id2185 . -12) (undo-tree-id2186 . -12) (undo-tree-id2187 . -12) (undo-tree-id2188 . -12) (undo-tree-id2189 . -12) (undo-tree-id2190 . -12) (undo-tree-id2191 . -12) (undo-tree-id2192 . -12) (undo-tree-id2193 . -8) (undo-tree-id2194 . -8) (undo-tree-id2195 . -8) (undo-tree-id2196 . -8) (undo-tree-id2197 . -8) (undo-tree-id2198 . -8) (undo-tree-id2199 . -8) (undo-tree-id2200 . -8) (undo-tree-id2201 . -8) (undo-tree-id2202 . -8) (undo-tree-id2203 . -8) (undo-tree-id2204 . -8) (undo-tree-id2205 . -8) (undo-tree-id2206 . -8) (undo-tree-id2207 . -8) (undo-tree-id2208 . -8) (undo-tree-id2209 . -8) (undo-tree-id2210 . -8) (undo-tree-id2211 . -8) (undo-tree-id2212 . -8) (undo-tree-id2213 . -8) (undo-tree-id2214 . -5) (undo-tree-id2215 . -5) (undo-tree-id2216 . -5) (undo-tree-id2217 . -5) (undo-tree-id2218 . -5) (undo-tree-id2219 . -5) (undo-tree-id2220 . -5) (undo-tree-id2221 . -5) (undo-tree-id2222 . -5) (undo-tree-id2223 . -5) (undo-tree-id2224 . -5) (undo-tree-id2225 . -5) (undo-tree-id2226 . -5) (undo-tree-id2227 . -5) (undo-tree-id2228 . -5) (undo-tree-id2229 . -5) (undo-tree-id2230 . -5) (undo-tree-id2231 . -5) (undo-tree-id2232 . -5) (undo-tree-id2233 . -5) (undo-tree-id2234 . -5) (undo-tree-id2235 . -5) (undo-tree-id2236 . -5) (undo-tree-id2237 . -5) (undo-tree-id2238 . -5) (undo-tree-id2239 . -5) (undo-tree-id2240 . -5) (undo-tree-id2241 . -5) (undo-tree-id2242 . -3) (undo-tree-id2243 . -3) (undo-tree-id2244 . -3) (undo-tree-id2245 . -3) (undo-tree-id2246 . -3) (undo-tree-id2247 . -3) (undo-tree-id2248 . -3) (undo-tree-id2249 . -3) (undo-tree-id2250 . -3) (undo-tree-id2251 . -3) (undo-tree-id2252 . -3) (undo-tree-id2253 . -3) (undo-tree-id2254 . -3) (undo-tree-id2255 . -3) (undo-tree-id2256 . -3) (undo-tree-id2257 . -3) (undo-tree-id2258 . -3) (undo-tree-id2259 . -3) (undo-tree-id2260 . -3) (undo-tree-id2261 . -3) (undo-tree-id2262 . -3) (undo-tree-id2263 . -3) (undo-tree-id2264 . -3) (undo-tree-id2265 . -3) (undo-tree-id2266 . -3) (undo-tree-id2267 . -3) (undo-tree-id2268 . -3) (undo-tree-id2269 . -3) (undo-tree-id2270 . -3) (undo-tree-id2271 . -3) (undo-tree-id2272 . -3) (undo-tree-id2273 . -3) (undo-tree-id2274 . -3) (undo-tree-id2275 . -3) (undo-tree-id2276 . -3) (undo-tree-id2277 . -3) (undo-tree-id2278 . -3) (undo-tree-id2279 . -3) (undo-tree-id2280 . -3) (undo-tree-id2281 . -3) (undo-tree-id2282 . -3) (undo-tree-id2283 . -3) (undo-tree-id2284 . -25) (undo-tree-id2285 . -25) (t 25966 64019 224026 598000)) nil (25966 64023 177864 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11793) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1)) nil (25966 64023 177566 0) 0 nil])
([nil nil ((#("#" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11767) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (t 25966 64023 213639 785000)) nil (25966 64027 545541 0) 0 nil])
([nil nil ((11792 . 11796) (t 25966 64027 580173 667000)) nil (25966 64045 194168 0) 0 nil])
([nil nil ((11790 . 11793) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -11790) (undo-tree-id2316 . 1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) 11791) nil (25966 64045 194164 0) 0 nil])
([nil nil ((11798 . 11820) (t 25966 64045 230303 159000)) nil (25966 64056 615167 0) 0 nil])
([nil nil ((#(";; ç is the key above tab" 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 25 (src-block t help-echo nil face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11795) (undo-tree-id2342 . -24) (undo-tree-id2343 . -2) (undo-tree-id2344 . -2) (undo-tree-id2345 . -3) (undo-tree-id2346 . -3) (undo-tree-id2347 . -3) (undo-tree-id2348 . -3) (undo-tree-id2349 . -3) (undo-tree-id2350 . -3) (undo-tree-id2351 . -3) (undo-tree-id2352 . -3) (undo-tree-id2353 . -3) (undo-tree-id2354 . -3) (undo-tree-id2355 . -3) (undo-tree-id2356 . -3) (undo-tree-id2357 . -3) (undo-tree-id2358 . -3) (undo-tree-id2359 . -3) (undo-tree-id2360 . -3) (undo-tree-id2361 . -3) (undo-tree-id2362 . -3) (undo-tree-id2363 . -3) (undo-tree-id2364 . -3) (undo-tree-id2365 . -3) (undo-tree-id2366 . -3) (undo-tree-id2367 . -3) (undo-tree-id2368 . -3) (undo-tree-id2369 . -3) (undo-tree-id2370 . -3) (undo-tree-id2371 . -3) (undo-tree-id2372 . -3) (undo-tree-id2373 . -3) (undo-tree-id2374 . -3) (undo-tree-id2375 . -3) (undo-tree-id2376 . -3) (undo-tree-id2377 . -3) (undo-tree-id2378 . -3) (undo-tree-id2379 . -3) (undo-tree-id2380 . -3) (undo-tree-id2381 . -3) (undo-tree-id2382 . -3) (undo-tree-id2383 . -3) (undo-tree-id2384 . -3) (undo-tree-id2385 . -3) (undo-tree-id2386 . -3) (undo-tree-id2387 . -3) (undo-tree-id2388 . -3) (undo-tree-id2389 . -3) (undo-tree-id2390 . -3) (undo-tree-id2391 . -3) (undo-tree-id2392 . -3) (undo-tree-id2393 . -3) (undo-tree-id2394 . -3) (undo-tree-id2395 . -3) (undo-tree-id2396 . -3) (undo-tree-id2397 . -3) (undo-tree-id2398 . -3) (undo-tree-id2399 . -3) (undo-tree-id2400 . -3) (undo-tree-id2401 . -3) (undo-tree-id2402 . -3) (undo-tree-id2403 . -3) (undo-tree-id2404 . -3) (undo-tree-id2405 . -3) (undo-tree-id2406 . -3) (undo-tree-id2407 . -3) (undo-tree-id2408 . -3) (undo-tree-id2409 . -3) (undo-tree-id2410 . -3) (undo-tree-id2411 . -3) (undo-tree-id2412 . -3) (undo-tree-id2413 . -3) (undo-tree-id2414 . -3) (undo-tree-id2415 . -3) (undo-tree-id2416 . -3) (undo-tree-id2417 . -3) (undo-tree-id2418 . -3) (undo-tree-id2419 . -3) (undo-tree-id2420 . -3) (undo-tree-id2421 . -3) (undo-tree-id2422 . -3) (undo-tree-id2423 . -3) (undo-tree-id2424 . -3) (undo-tree-id2425 . -3) (undo-tree-id2426 . -3) (undo-tree-id2427 . -3) (undo-tree-id2428 . -3) (undo-tree-id2429 . -3) (undo-tree-id2430 . -3) (undo-tree-id2431 . -3) (undo-tree-id2432 . -3) (undo-tree-id2433 . -3) (undo-tree-id2434 . -3) (undo-tree-id2435 . -3) (undo-tree-id2436 . -3) (undo-tree-id2437 . -3) (undo-tree-id2438 . -25) (undo-tree-id2439 . -25) (undo-tree-id2440 . -25) (undo-tree-id2441 . -25) (undo-tree-id2442 . -25) (undo-tree-id2443 . -25) (undo-tree-id2444 . -25) (undo-tree-id2445 . -25) (undo-tree-id2446 . -25) (undo-tree-id2447 . -25) (undo-tree-id2448 . -25) (undo-tree-id2449 . -25) (undo-tree-id2450 . -25) (undo-tree-id2451 . -25) (undo-tree-id2452 . -25) (undo-tree-id2453 . -25) (undo-tree-id2454 . -25) (undo-tree-id2455 . -25) (undo-tree-id2456 . -25) (undo-tree-id2457 . -25) (undo-tree-id2458 . -25) (undo-tree-id2459 . -25) (undo-tree-id2460 . -25) (undo-tree-id2461 . -25) (undo-tree-id2462 . -25) (undo-tree-id2463 . -25) (undo-tree-id2464 . -25) (undo-tree-id2465 . -25) (undo-tree-id2466 . -25) (undo-tree-id2467 . -25) (undo-tree-id2468 . -25) (undo-tree-id2469 . -25) (undo-tree-id2470 . -25) (undo-tree-id2471 . -25) (undo-tree-id2472 . -25) (undo-tree-id2473 . -25) (undo-tree-id2474 . -25) (undo-tree-id2475 . -25) (undo-tree-id2476 . -25) (undo-tree-id2477 . -25) (undo-tree-id2478 . -25) (undo-tree-id2479 . -25) (undo-tree-id2480 . -25) (undo-tree-id2481 . -25) (undo-tree-id2482 . -25) (undo-tree-id2483 . -25) (undo-tree-id2484 . -25) (undo-tree-id2485 . -25) (undo-tree-id2486 . -25) (undo-tree-id2487 . -25) (undo-tree-id2488 . -25) (undo-tree-id2489 . -25) (undo-tree-id2490 . -25) (undo-tree-id2491 . -25) (undo-tree-id2492 . -25) (undo-tree-id2493 . -25) (undo-tree-id2494 . -25) (undo-tree-id2495 . -25) (undo-tree-id2496 . -25) (undo-tree-id2497 . -24) (undo-tree-id2498 . -24) (undo-tree-id2499 . -24) (undo-tree-id2500 . -24) (undo-tree-id2501 . -24) (undo-tree-id2502 . -24) (undo-tree-id2503 . -24) (undo-tree-id2504 . -24) (undo-tree-id2505 . -24) (undo-tree-id2506 . -24) (undo-tree-id2507 . -24) (undo-tree-id2508 . -24) (undo-tree-id2509 . -24) (undo-tree-id2510 . -24) (undo-tree-id2511 . -24) (undo-tree-id2512 . -24) (undo-tree-id2513 . -24) (undo-tree-id2514 . -24) (undo-tree-id2515 . -24) (undo-tree-id2516 . -24) (undo-tree-id2517 . -24) (undo-tree-id2518 . -24) (undo-tree-id2519 . -24) (undo-tree-id2520 . -22) (undo-tree-id2521 . -22) (undo-tree-id2522 . -22) (undo-tree-id2523 . -22) (undo-tree-id2524 . -22) (undo-tree-id2525 . -22) (undo-tree-id2526 . -22) (undo-tree-id2527 . -22) (undo-tree-id2528 . -22) (undo-tree-id2529 . -22) (undo-tree-id2530 . -22) (undo-tree-id2531 . -22) (undo-tree-id2532 . -22) (undo-tree-id2533 . -22) (undo-tree-id2534 . -22) (undo-tree-id2535 . -22) (undo-tree-id2536 . -22) (undo-tree-id2537 . -22) (undo-tree-id2538 . -22) (undo-tree-id2539 . -22) (undo-tree-id2540 . -22) (undo-tree-id2541 . -16) (undo-tree-id2542 . -16) (undo-tree-id2543 . -16) (undo-tree-id2544 . -16) (undo-tree-id2545 . -16) (undo-tree-id2546 . -16) (undo-tree-id2547 . -16) (undo-tree-id2548 . -16) (undo-tree-id2549 . -16) (undo-tree-id2550 . -16) (undo-tree-id2551 . -16) (undo-tree-id2552 . -16) (undo-tree-id2553 . -16) (undo-tree-id2554 . -16) (undo-tree-id2555 . -16) (undo-tree-id2556 . -16) (undo-tree-id2557 . -16) (undo-tree-id2558 . -16) (undo-tree-id2559 . -16) (undo-tree-id2560 . -16) (undo-tree-id2561 . -16) (undo-tree-id2562 . -12) (undo-tree-id2563 . -12) (undo-tree-id2564 . -12) (undo-tree-id2565 . -12) (undo-tree-id2566 . -12) (undo-tree-id2567 . -12) (undo-tree-id2568 . -12) (undo-tree-id2569 . -12) (undo-tree-id2570 . -12) (undo-tree-id2571 . -12) (undo-tree-id2572 . -12) (undo-tree-id2573 . -12) (undo-tree-id2574 . -12) (undo-tree-id2575 . -12) (undo-tree-id2576 . -12) (undo-tree-id2577 . -12) (undo-tree-id2578 . -12) (undo-tree-id2579 . -12) (undo-tree-id2580 . -12) (undo-tree-id2581 . -12) (undo-tree-id2582 . -12) (undo-tree-id2583 . -8) (undo-tree-id2584 . -8) (undo-tree-id2585 . -8) (undo-tree-id2586 . -8) (undo-tree-id2587 . -8) (undo-tree-id2588 . -8) (undo-tree-id2589 . -8) (undo-tree-id2590 . -8) (undo-tree-id2591 . -8) (undo-tree-id2592 . -8) (undo-tree-id2593 . -8) (undo-tree-id2594 . -8) (undo-tree-id2595 . -8) (undo-tree-id2596 . -8) (undo-tree-id2597 . -8) (undo-tree-id2598 . -8) (undo-tree-id2599 . -8) (undo-tree-id2600 . -8) (undo-tree-id2601 . -8) (undo-tree-id2602 . -8) (undo-tree-id2603 . -8) (undo-tree-id2604 . -5) (undo-tree-id2605 . -5) (undo-tree-id2606 . -5) (undo-tree-id2607 . -5) (undo-tree-id2608 . -5) (undo-tree-id2609 . -5) (undo-tree-id2610 . -5) (undo-tree-id2611 . -5) (undo-tree-id2612 . -5) (undo-tree-id2613 . -5) (undo-tree-id2614 . -5) (undo-tree-id2615 . -5) (undo-tree-id2616 . -5) (undo-tree-id2617 . -5) (undo-tree-id2618 . -5) (undo-tree-id2619 . -5) (undo-tree-id2620 . -5) (undo-tree-id2621 . -5) (undo-tree-id2622 . -5) (undo-tree-id2623 . -5) (undo-tree-id2624 . -5) (undo-tree-id2625 . -3) (undo-tree-id2626 . -3) (undo-tree-id2627 . -3) (undo-tree-id2628 . -3) (undo-tree-id2629 . -3) (undo-tree-id2630 . -3) (undo-tree-id2631 . -3) (undo-tree-id2632 . -3) (undo-tree-id2633 . -3) (undo-tree-id2634 . -3) (undo-tree-id2635 . -3) (undo-tree-id2636 . -3) (undo-tree-id2637 . -3) (undo-tree-id2638 . -3) (undo-tree-id2639 . -3) (undo-tree-id2640 . -3) (undo-tree-id2641 . -3) (undo-tree-id2642 . -3) (undo-tree-id2643 . -3) (undo-tree-id2644 . -3) (undo-tree-id2645 . -3) (undo-tree-id2646 . -3) (undo-tree-id2647 . -3) (undo-tree-id2648 . -3) (undo-tree-id2649 . -3) (undo-tree-id2650 . -3) (undo-tree-id2651 . -3) (undo-tree-id2652 . -3) (undo-tree-id2653 . -25) (undo-tree-id2654 . -25)) nil (25966 64056 615158 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11794) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (t 25966 64056 651556 672000)) nil (25966 64061 650472 0) 0 nil])
([nil nil ((11712 . 11713) (11712 . 11713) (t 25966 64061 687279 772000)) nil (25966 64067 585257 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11713) (undo-tree-id2969 . 1) (undo-tree-id2970 . 1) (undo-tree-id2971 . -1) (t 25966 64067 620570 348000)) nil (25966 64068 610590 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 11713) (undo-tree-id2967 . 1) (undo-tree-id2968 . -1)) nil (25966 64068 610584 0) 0 nil])
([nil nil ((27066 . 27068) (#("(" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -27066) (27066 . 27067) (27065 . 27066) (27064 . 27065) (t 25966 64068 645948 672000) 27033) nil (25972 31992 387356 0) 0 nil])
([nil nil ((#("()
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 27066) (undo-tree-id2972 . -2) (undo-tree-id2973 . 2) (undo-tree-id2974 . 3) (undo-tree-id2975 . -1) (undo-tree-id2976 . 2) (undo-tree-id2977 . -2)) nil (25972 31992 388952 0) 0 nil])
([nil nil ((6745 . 6839)) ((#("
*** " 0 1 (face org-block-end-line wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 3 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil) 3 4 (face org-level-3 keymap (keymap) composition (2 1 [9632]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil) 4 5 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil)) . 6745) (undo-tree-id2978 . -5) (undo-tree-id2979 . -5) (undo-tree-id2980 . -5) (undo-tree-id2981 . -5) (#("Alert" 0 5 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil)) . 6750) (undo-tree-id2982 . -5) (undo-tree-id2983 . -5) (undo-tree-id2984 . -5) (undo-tree-id2985 . -5) (#("
" 0 1 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 6755) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (#("<s" 0 2 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 6756) (undo-tree-id2990 . -2) (undo-tree-id2991 . -2) (undo-tree-id2992 . -2) (undo-tree-id2993 . -2) (#("cript src=\"https://gitlab.com/ambrevar/emacs-alert/raw/master/alert.el\"></script>" 0 11 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 11 69 (font-lock-multiline t htmlize-link (:uri "https://gitlab.com/ambrevar/emacs-alert/raw/master/alert.el") help-echo "LINK: https://gitlab.com/ambrevar/emacs-alert/raw/master/alert.el" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 69 70 (font-lock-multiline t htmlize-link (:uri "https://gitlab.com/ambrevar/emacs-alert/raw/master/alert.el") help-echo "LINK: https://gitlab.com/ambrevar/emacs-alert/raw/master/alert.el" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 70 81 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 6758) (undo-tree-id2994 . -80) (undo-tree-id2995 . 1) (undo-tree-id2996 . -81) (undo-tree-id2997 . 9) (undo-tree-id2998 . -73) (undo-tree-id2999 . -80)) (25972 31993 656264 0) 0 nil])
([nil nil ((#("<script src=\"https://gitlab.com/ambrevar/emacs-alert/raw/master/alert.el\"></script>
" 0 2 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 2 13 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 13 71 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://gitlab.com/ambrevar/emacs-alert/raw/master/alert.el") help-echo "LINK: https://gitlab.com/ambrevar/emacs-alert/raw/master/alert.el" wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 71 72 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link htmlize-link (:uri "https://gitlab.com/ambrevar/emacs-alert/raw/master/alert.el") help-echo "LINK: https://gitlab.com/ambrevar/emacs-alert/raw/master/alert.el" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 72 83 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 83 84 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 6756) (undo-tree-id3005 . -83) (undo-tree-id3006 . 1) (undo-tree-id3007 . -2) (undo-tree-id3008 . -2) (undo-tree-id3009 . -2) (undo-tree-id3010 . -2) (undo-tree-id3011 . -2) (undo-tree-id3012 . -2) (undo-tree-id3013 . -2) (undo-tree-id3014 . -2) (undo-tree-id3015 . -2) (undo-tree-id3016 . -2) (undo-tree-id3017 . -2) (undo-tree-id3018 . -2) (undo-tree-id3019 . -2) (undo-tree-id3020 . -2) (undo-tree-id3021 . -2) (undo-tree-id3022 . -2) (undo-tree-id3023 . -2) (undo-tree-id3024 . -2) (undo-tree-id3025 . -2) (undo-tree-id3026 . -2) (undo-tree-id3027 . -2) (undo-tree-id3028 . -2) (undo-tree-id3029 . -2) (undo-tree-id3030 . -2) (undo-tree-id3031 . -2) (undo-tree-id3032 . -2) (undo-tree-id3033 . -2) (undo-tree-id3034 . -2) (undo-tree-id3035 . -2) (undo-tree-id3036 . -2) (undo-tree-id3037 . -2) (undo-tree-id3038 . -2) (undo-tree-id3039 . -2) (undo-tree-id3040 . -2) (undo-tree-id3041 . -2) (undo-tree-id3042 . -2) (undo-tree-id3043 . -2) (undo-tree-id3044 . -2) (undo-tree-id3045 . -2) (undo-tree-id3046 . -2) (undo-tree-id3047 . -2) (undo-tree-id3048 . -2) (undo-tree-id3049 . -2) (undo-tree-id3050 . -2) (undo-tree-id3051 . -2) (undo-tree-id3052 . -2) (undo-tree-id3053 . -2) (undo-tree-id3054 . -2) (undo-tree-id3055 . -84) 6758) nil (25972 32010 335466 0) 0 nil])
([nil nil ((6756 . 6757) 6758) nil (25972 32010 335402 0) 0 nil])
([nil nil ((6786 . 6797) (6781 . 6786) (#("e" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -6781) (undo-tree-id3000 . -1) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -6782) (undo-tree-id3001 . -1) (#("r" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -6783) (undo-tree-id3002 . -1) 6784 (6780 . 6784) (6779 . 6781) (#("(" 0 1 (face org-block-begin-line font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . -6779) (6779 . 6780) (#("
" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -6778) (undo-tree-id3003 . -1) 6779 (6778 . 6779) (6768 . 6778) (6756 . 6779) (#("<s" 0 2 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -6756) (undo-tree-id3004 . -2) 6758 (6756 . 6758)) nil (25972 32010 335398 0) 0 nil])
([nil nil ((6798 . 6799) (t 25972 32010 375992 534000) 6779) nil (25972 32031 456440 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 7247 . 7248) (nil fontified nil 7162 . 7248) (nil fontified nil 7145 . 7162) (nil fontified nil 7119 . 7145) (nil fontified nil 7118 . 7119) (nil fontified nil 7068 . 7118) (nil fontified nil 7052 . 7068) (nil fontified nil 7024 . 7052) (nil fontified nil 7007 . 7024) (nil fontified nil 6928 . 7007) (nil fontified nil 6912 . 6928) (nil fontified nil 6831 . 6912) (nil fontified nil 6799 . 6831) (6799 . 7248)) nil (25972 32031 456435 0) 0 nil])
([nil nil ((6799 . 6800) 6829 (t 25972 32031 493463 305000)) nil (25972 32033 485319 0) 0 nil])
([nil nil ((6797 . 6798) (t 25972 32033 517119 785000)) nil (25972 32051 879378 0) 0 nil])
([nil nil ((6798 . 6806) (#(")
" 0 1 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 1 2 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 6798) (undo-tree-id3056 . -2) (undo-tree-id3057 . 2) (undo-tree-id3058 . -2) (undo-tree-id3059 . -2) (6801 . 6802) (6833 . 6834) (6914 . 6915) (6932 . 6933) (7009 . 7010) (7031 . 7032) (7054 . 7055) (7070 . 7071) (#("       " 0 7 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("             " 0 6 (face org-indent) 6 13 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 7070) (7126 . 7127) (7147 . 7148) (7164 . 7165) (#("       " 0 7 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("             " 0 6 (face org-indent) 6 13 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 7164) (7250 . 7254) 6779) nil (25972 32051 879375 0) 0 nil])
([nil nil ((#("your_compilation_" 0 17 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 7094) (7112 . 7118) (#("om" 0 2 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 7112) (7116 . 7117) (#("nd_her" 0 6 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 7116) (#(")" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 7124) 6779 (t 25972 32051 916801 670000)) nil (25972 32070 379007 0) 0 nil])
([nil nil ((7107 . 7108) 6779 (t 25972 32070 413423 110000)) nil (25972 32072 299436 0) 0 nil])
([nil nil ((7248 . 7252) (7247 . 7249) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . -7247) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (7241 . 7248) (7240 . 7242) (#("(" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . -7240) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (7240 . 7241) (7239 . 7240) (t 25972 32072 337134 780000) 7239) nil (25972 32233 609945 0) 0 nil])
([nil nil ((7254 . 7255) (t 25972 32233 643684 381000) 7253) nil (25972 32407 285572 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 7373 . 7374) (nil fontified nil 7346 . 7374) (nil fontified nil 7293 . 7346) (nil fontified nil 7255 . 7293) (7255 . 7374)) nil (25972 32407 285567 0) 0 nil])
([nil nil ((7374 . 7375) (t 25972 32407 331666 287000) 7373) nil (25972 32418 24311 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 7471 . 7472) (nil fontified nil 7415 . 7472) (nil fontified nil 7375 . 7415) (7375 . 7472)) nil (25972 32418 24310 0) 0 nil])
([nil nil ((#("     ⇒ my-on-action-function
" 0 27 (help-echo nil face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 27 28 (help-echo nil face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 28 29 (help-echo nil face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 7346) (undo-tree-id3064 . -28) (undo-tree-id3065 . -29) (undo-tree-id3066 . -29) (undo-tree-id3067 . -27) (undo-tree-id3068 . -29) (undo-tree-id3069 . -27) (undo-tree-id3070 . -29) (undo-tree-id3071 . -29) (undo-tree-id3072 . -29) (undo-tree-id3073 . -29) (undo-tree-id3074 . -29) (undo-tree-id3075 . -29) (undo-tree-id3076 . -29) (undo-tree-id3077 . -29) (undo-tree-id3078 . -29) (undo-tree-id3079 . -29) (undo-tree-id3080 . -29) (undo-tree-id3081 . -29) (undo-tree-id3082 . -29) (undo-tree-id3083 . -29) (undo-tree-id3084 . -29) (undo-tree-id3085 . -29) (undo-tree-id3086 . -29) (undo-tree-id3087 . -29) (undo-tree-id3088 . -29) (undo-tree-id3089 . -29) (undo-tree-id3090 . -29) (undo-tree-id3091 . -29) (undo-tree-id3092 . -29) (undo-tree-id3093 . -29) (undo-tree-id3094 . -29) (undo-tree-id3095 . -29) (undo-tree-id3096 . -29) (undo-tree-id3097 . -29) (undo-tree-id3098 . -29) (undo-tree-id3099 . -29) (undo-tree-id3100 . -29) (undo-tree-id3101 . -29) (undo-tree-id3102 . -29) (undo-tree-id3103 . -29) (undo-tree-id3104 . -29) (undo-tree-id3105 . -29) (undo-tree-id3106 . -29) (undo-tree-id3107 . -29) (undo-tree-id3108 . -29) (undo-tree-id3109 . -29) (undo-tree-id3110 . -29) (undo-tree-id3111 . -29) (undo-tree-id3112 . -29) (undo-tree-id3113 . -29) (undo-tree-id3114 . -29) (undo-tree-id3115 . -29) (undo-tree-id3116 . -29) (undo-tree-id3117 . -29) (undo-tree-id3118 . -29) (undo-tree-id3119 . -29) (undo-tree-id3120 . -29) (undo-tree-id3121 . -29) (undo-tree-id3122 . -29) (undo-tree-id3123 . -29) (undo-tree-id3124 . -29) (undo-tree-id3125 . -29) (undo-tree-id3126 . -29) (undo-tree-id3127 . -29) (undo-tree-id3128 . -29) (undo-tree-id3129 . -29) (undo-tree-id3130 . -29) (undo-tree-id3131 . -29) (undo-tree-id3132 . -29) (undo-tree-id3133 . -27) (undo-tree-id3134 . -27) (undo-tree-id3135 . -27) (undo-tree-id3136 . -27) (undo-tree-id3137 . -27) (undo-tree-id3138 . -27) (undo-tree-id3139 . -27) (undo-tree-id3140 . -27) (undo-tree-id3141 . -27) (undo-tree-id3142 . -27) (undo-tree-id3143 . -27) (undo-tree-id3144 . -27) (undo-tree-id3145 . -27) (undo-tree-id3146 . -27) (undo-tree-id3147 . -27) (undo-tree-id3148 . -27) (undo-tree-id3149 . -27) (undo-tree-id3150 . -27) (undo-tree-id3151 . -27) (undo-tree-id3152 . -27) (undo-tree-id3153 . -27) (undo-tree-id3154 . -27) (undo-tree-id3155 . -27) (undo-tree-id3156 . -27) (undo-tree-id3157 . -27) (undo-tree-id3158 . -27) (undo-tree-id3159 . -27) (undo-tree-id3160 . -27) (undo-tree-id3161 . -27) (undo-tree-id3162 . -27) (undo-tree-id3163 . -27) (undo-tree-id3164 . -27) (undo-tree-id3165 . -27) (undo-tree-id3166 . -27) (undo-tree-id3167 . -27) (undo-tree-id3168 . -27) (undo-tree-id3169 . -27) (undo-tree-id3170 . -27) (undo-tree-id3171 . -27) (undo-tree-id3172 . -27) (undo-tree-id3173 . -27) (undo-tree-id3174 . -27) (undo-tree-id3175 . -27) (undo-tree-id3176 . -27) (undo-tree-id3177 . -27) (undo-tree-id3178 . -27) (undo-tree-id3179 . -27) (undo-tree-id3180 . -27) (undo-tree-id3181 . -27) (undo-tree-id3182 . -27) (undo-tree-id3183 . -27) (undo-tree-id3184 . -27) (undo-tree-id3185 . -27) (undo-tree-id3186 . -27) (undo-tree-id3187 . -27) (undo-tree-id3188 . -27) (undo-tree-id3189 . -27) (undo-tree-id3190 . -27) (undo-tree-id3191 . -27) (undo-tree-id3192 . -27) (undo-tree-id3193 . -27) (undo-tree-id3194 . -27) (undo-tree-id3195 . -27) (undo-tree-id3196 . -27) (undo-tree-id3197 . -27) (undo-tree-id3198 . -27) (undo-tree-id3199 . -27) (undo-tree-id3200 . -27) (undo-tree-id3201 . -27) (undo-tree-id3202 . -27) (undo-tree-id3203 . -27) (undo-tree-id3204 . -27) (undo-tree-id3205 . -27) (undo-tree-id3206 . -29) 7373) nil (25972 32418 24303 0) 0 nil])
([nil nil ((7444 . 7445) (7443 . 7444) (t 25972 32418 70753 33000) 7413) nil (25972 32425 478004 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 7641 . 7642) (nil fontified nil 7609 . 7642) (nil fontified nil 7574 . 7609) (nil fontified nil 7519 . 7574) (nil fontified nil 7484 . 7519) (nil fontified nil 7468 . 7484) (nil fontified nil 7446 . 7468) (nil fontified nil 7445 . 7446) (7445 . 7642)) nil (25972 32425 477999 0) 0 nil])
([nil nil ((#("
" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 7445) (undo-tree-id3207 . -1) (t 25972 32425 525835 647000)) nil (25972 32428 157 0) 0 nil])
([nil nil ((7254 . 7255) (t 25972 32428 47608 876000) 7241) nil (25972 32429 782448 0) 0 nil])
([nil nil ((#("#+begin_src emacs-lisp
(use-package alert
 :config
 (defun my-compile-and-notify ()
   \"Compile the current buffer asynchronously and send a notification when done.\"
   (interactive)
   (let ((compilation-buffer-name-function (lambda (_) \"*Async Compilation*\")))
     (async-start
      ;; Compilation command
      (lambda ()
	(compile \"cd ..; make\"))

      ;; Callback function
      (lambda (_)
	(alert \"Compilation finished\" :title \"Emacs Compilation\" :severity 'normal)))))
 )

(alert \"helo\")

(defun my-on-action-function (id key)
  (message \"Message %d, key \\\"%s\\\" pressed\" id key))
(defun my-on-close-function (id reason)
  (message \"Message %d, closed due to \\\"%s\\\"\" id reason))

(notifications-notify
 :title \"Title\"
 :body \"This is <b>important</b>.\"
 :actions '(\"Confirm\" \"I agree\" \"Refuse\" \"I disagree\")
 :on-action 'my-on-action-function
 :on-close 'my-on-close-function)
#+end_src
" 0 22 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 22 23 (face org-block-begin-line font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 23 24 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 24 35 (face (font-lock-keyword-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 35 36 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 36 41 (face (font-lock-constant-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 41 42 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 42 43 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 43 50 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 50 51 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 51 52 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 52 53 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 53 58 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 58 59 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 59 80 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 80 84 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 84 85 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 85 87 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 87 165 (face (font-lock-doc-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 165 166 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 166 167 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 167 170 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 170 181 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 181 183 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 183 185 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 185 186 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 186 187 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 187 190 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 190 227 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 227 233 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 233 238 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 238 239 (face (font-lock-doc-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 239 240 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 240 257 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 257 258 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 258 259 (face (font-lock-doc-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 259 263 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 263 264 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 264 281 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("           " 0 6 (face org-indent) 6 11 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 281 286 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 286 287 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 287 290 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 290 310 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 310 311 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 311 317 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 317 323 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 323 327 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 327 328 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 328 337 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 337 339 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 339 345 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 345 347 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 347 348 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 348 350 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 350 351 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 351 352 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 352 353 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 353 354 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 354 359 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 359 360 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 360 363 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 363 381 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 381 382 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 382 388 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 388 394 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 394 399 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 399 400 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 400 407 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 407 429 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 429 430 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 430 436 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 436 437 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 437 456 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 456 457 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 457 466 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 466 478 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 478 479 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 479 480 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 480 483 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 483 484 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 484 491 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 491 496 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 496 497 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 497 498 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 498 499 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 499 500 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 500 501 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 501 506 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 506 507 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 507 528 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 528 538 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 538 549 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 549 581 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 581 591 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 591 592 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 592 597 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 597 598 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 598 618 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 618 630 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 630 631 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 631 642 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 642 676 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 676 687 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 687 688 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 688 689 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 689 690 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 690 711 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 711 712 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 712 713 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 713 719 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 719 720 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 720 727 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 727 728 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 728 729 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 729 734 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 734 735 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 735 762 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 762 763 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 763 764 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 764 772 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 772 775 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 775 784 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 784 785 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 785 794 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 794 795 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 795 803 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 803 804 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 804 816 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 816 818 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 818 819 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 819 829 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 829 853 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 853 854 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 854 863 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 863 885 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 885 886 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 886 887 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 887 896 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 896 897 (face org-block-end-line wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 6756) (undo-tree-id3208 . -896) (undo-tree-id3209 . 209) (undo-tree-id3210 . -885) (undo-tree-id3211 . -42) (undo-tree-id3212 . -12) (undo-tree-id3213 . -896) (undo-tree-id3214 . -42) (undo-tree-id3215 . -42) (undo-tree-id3216 . -500) (undo-tree-id3217 . -500) (undo-tree-id3218 . -591) (undo-tree-id3219 . -885) (undo-tree-id3220 . -21) (undo-tree-id3221 . -885) (undo-tree-id3222 . -885) (undo-tree-id3223 . -499) (undo-tree-id3224 . -690) (undo-tree-id3225 . -885) (undo-tree-id3226 . -21) (undo-tree-id3227 . -897) 6777 (t 25972 32429 830559 302000)) nil (25972 32460 587942 0) 0 nil])
([nil nil ((#("*** Alert
" 0 2 (keymap (keymap) face org-hide wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (face org-level-3 keymap (keymap) composition (2 1 [9632]) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (face org-level-3 keymap (keymap) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 9 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 9 10 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 6746) (undo-tree-id3228 . -9) (undo-tree-id3229 . -10) (undo-tree-id3230 . -10) (undo-tree-id3231 . -10) (undo-tree-id3232 . -10) (undo-tree-id3233 . -10) (undo-tree-id3234 . -10) (undo-tree-id3235 . -10) (undo-tree-id3236 . -10) (undo-tree-id3237 . -10) (undo-tree-id3238 . -10) (undo-tree-id3239 . -10) (undo-tree-id3240 . -8) (undo-tree-id3241 . -10) (undo-tree-id3242 . -10) (undo-tree-id3243 . -10) (undo-tree-id3244 . -10) (undo-tree-id3245 . -10) (undo-tree-id3246 . -8) (undo-tree-id3247 . -8) (undo-tree-id3248 . -8) (undo-tree-id3249 . -8) (undo-tree-id3250 . -8) (undo-tree-id3251 . -8) (undo-tree-id3252 . -8) (undo-tree-id3253 . -8) (undo-tree-id3254 . -8) (undo-tree-id3255 . -8) (undo-tree-id3256 . -8) (undo-tree-id3257 . -8) (undo-tree-id3258 . -8) (undo-tree-id3259 . -8) (undo-tree-id3260 . -8) (undo-tree-id3261 . -8) (undo-tree-id3262 . -8) (undo-tree-id3263 . -8) (undo-tree-id3264 . -8) (undo-tree-id3265 . -8) (undo-tree-id3266 . -8) (undo-tree-id3267 . -8) (undo-tree-id3268 . -8) (undo-tree-id3269 . -8) (undo-tree-id3270 . -8) (undo-tree-id3271 . -8) (undo-tree-id3272 . -8) (undo-tree-id3273 . -8) (undo-tree-id3274 . -8) (undo-tree-id3275 . -8) (undo-tree-id3276 . -8) (undo-tree-id3277 . -8) (undo-tree-id3278 . -8) (undo-tree-id3279 . -10) 6754 (t 25972 32460 627726 295000)) nil (25972 32461 325740 0) 0 nil])
([nil nil ((27066 . 27067) (27065 . 27066) (t 25972 32461 366123 57000) 27065) nil (25987 2723 295403 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 27506 . 27507) (nil fontified nil 27475 . 27507) (nil fontified nil 27433 . 27475) (nil fontified nil 27386 . 27433) (nil fontified nil 27331 . 27386) (nil fontified nil 27234 . 27331) (nil fontified nil 27202 . 27234) (nil fontified nil 27169 . 27202) (nil fontified nil 27153 . 27169) (nil fontified nil 27103 . 27153) (nil fontified nil 27067 . 27103) (27067 . 27507)) nil (25987 2723 295401 0) 0 nil])
([nil nil ((27070 . 27082) (#("L" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block))) . -27070) (undo-tree-id0 . -1) 27071 (27067 . 27071) (#("/" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -27067) (undo-tree-id1 . -1) (#("/" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -27068) (undo-tree-id2 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -27069) (undo-tree-id3 . -1) 27070 (27069 . 27070) (#("/" 0 1 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 27069) (27068 . 27069) (27067 . 27069) (#("/" 0 1 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -27067) (27067 . 27068) (27067 . 27068) 27098) nil (25987 2723 295394 0) 0 nil])
([nil nil ((26532 . 26537) 26536 (t 25987 2723 341229 954000)) nil (25987 2750 171849 0) 0 nil])
([nil nil ((nil fontified t 26534 . 26535) (nil line-prefix "" 26534 . 26535) (nil wrap-prefix #("* " 0 2 (face org-indent)) 26534 . 26535) (nil face (org-priority org-level-1) 26534 . 26535) (nil font-lock-fontified t 26534 . 26535) (#("B" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face (org-priority org-level-1) font-lock-fontified t)) . 26534) (26535 . 26536) 26541) nil (25987 2750 171848 0) 0 nil])
([nil nil ((nil fontified t 26534 . 26535) (nil line-prefix "" 26534 . 26535) (nil wrap-prefix #("* " 0 2 (face org-indent)) 26534 . 26535) (nil face (org-priority org-level-1) 26534 . 26535) (nil font-lock-fontified t 26534 . 26535) (#("C" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face (org-priority org-level-1) font-lock-fontified t)) . 26534) (26535 . 26536) 26541) nil (25987 2750 171847 0) 0 nil])
([nil nil ((nil fontified t 26534 . 26535) (nil line-prefix "" 26534 . 26535) (nil wrap-prefix #("* " 0 2 (face org-indent)) 26534 . 26535) (nil face (org-priority org-level-1) 26534 . 26535) (nil font-lock-fontified t 26534 . 26535) (#("B" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face (org-priority org-level-1) font-lock-fontified t)) . 26534) (26535 . 26536) 26541) nil (25987 2750 171846 0) 0 nil])
([nil nil ((#("* [#A] Emacs
#+begin_src emacs-lisp
;; Correct indentation ;)
(add-hook 'rust-mode-hook
          (lambda () (setq indent-tabs-mode nil)))
(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)

(global-display-line-numbers-mode 1)
(global-visual-line-mode t)

(setq display-line-numbers-type 'relative)
(setq scroll-margin 8)
(setq indent-tabs-mode nil)
(setq tab-width 4)


;; I prefer cmd key for meta
(setq mac-option-key-is-meta nil
      mac-command-key-is-meta t
      mac-command-modifier 'meta
      mac-option-modifier 'none)


;; Kill buffers
(defun kill-all-except-dashboard ()
  \"Kill all buffers except the dashboard buffer.\"
  (interactive)
  (dolist (buffer (buffer-list))
    (with-current-buffer buffer
      ;; Check if the buffer is not the dashboard and is either not modified or is a file buffer
      (when (and (not (eq major-mode 'dashboard-mode))
                 (or (not (buffer-modified-p))
                     (buffer-file-name)))
        (kill-buffer buffer)))))
#+end_src
" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (0 1 [9673]) keymap (keymap) face org-level-1) 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1) 2 4 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) font-lock-fontified t face (org-priority org-level-1)) 4 5 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face (org-priority org-level-1) font-lock-fontified t) 5 6 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) font-lock-fontified t face (org-priority org-level-1)) 6 7 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1) 7 12 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1) 12 13 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent))) 13 35 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 35 36 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 36 39 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 39 62 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 62 88 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 88 99 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 99 105 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 105 110 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 110 114 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 114 139 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 139 158 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 158 177 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 177 198 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 198 199 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 199 236 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 236 264 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 264 265 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 265 266 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 266 270 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 270 308 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 308 309 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 309 313 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 313 331 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 331 332 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 332 336 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 336 359 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 359 360 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 360 364 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 364 378 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 378 379 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 379 380 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 380 383 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 383 409 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 409 410 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 410 414 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 414 442 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 442 474 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 474 507 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 507 540 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 540 541 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 541 542 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 542 545 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 545 557 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 557 558 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 558 559 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 559 564 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 564 565 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 565 590 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-function-name-face org-block)) 590 594 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 594 596 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 596 643 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face org-block)) 643 644 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 644 647 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 647 658 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 658 660 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 660 663 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 663 669 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 669 693 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 693 698 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 698 717 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 717 725 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 725 731 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 731 734 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 734 822 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 822 829 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 829 833 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 833 835 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 835 838 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 838 877 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 877 895 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 895 897 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 897 924 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 924 966 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("                       " 0 2 (face org-indent) 2 23 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 966 997 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 997 998 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 998 999 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 999 1008 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 1008 1009 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) face org-block-end-line)) . 26530) (undo-tree-id4 . 11) (undo-tree-id5 . -542) (undo-tree-id6 . -542) (undo-tree-id7 . -1008) (undo-tree-id8 . -11) (undo-tree-id9 . -11) 26541) nil (25987 2750 171845 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 995 . 996) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -2004) (995 . 2005)) nil (25987 2750 171831 0) 0 nil])
([nil nil ((#("[#" 0 2 (font-lock-fontified t fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face (org-priority org-level-1))) . 998) (undo-tree-id15 . -1) (undo-tree-id16 . 2) (undo-tree-id17 . -1) (undo-tree-id18 . -2) (t 25987 2750 206602 259000)) nil (25987 2751 930835 0) 0 nil])
([nil nil ((#("A" 0 1 (font-lock-fontified t fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . 998) (undo-tree-id14 . -1)) nil (25987 2751 930831 0) 0 nil])
([nil nil ((#("] " 0 1 (font-lock-fontified t fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1) 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . 998) (undo-tree-id10 . -1) (undo-tree-id11 . 2) (undo-tree-id12 . -1) (undo-tree-id13 . -2)) nil (25987 2751 930827 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 14812) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (t 25987 2751 966447 177000)) nil (25987 2817 514676 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id55 . -1) (undo-tree-id56 . -1)) nil (25987 2817 514674 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id53 . -1) (undo-tree-id54 . -1)) nil (25987 2817 514672 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id51 . -1) (undo-tree-id52 . -1)) nil (25987 2817 514670 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id49 . -1) (undo-tree-id50 . -1)) nil (25987 2817 514667 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id47 . -1) (undo-tree-id48 . -1)) nil (25987 2817 514665 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id45 . -1) (undo-tree-id46 . -1)) nil (25987 2817 514664 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id43 . -1) (undo-tree-id44 . -1)) nil (25987 2817 514662 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id41 . -1) (undo-tree-id42 . -1)) nil (25987 2817 514660 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id39 . -1) (undo-tree-id40 . -1)) nil (25987 2817 514657 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id37 . -1) (undo-tree-id38 . -1)) nil (25987 2817 514655 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id35 . -1) (undo-tree-id36 . -1)) nil (25987 2817 514653 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id33 . -1) (undo-tree-id34 . -1)) nil (25987 2817 514651 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id31 . -1) (undo-tree-id32 . -1)) nil (25987 2817 514649 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id29 . -1) (undo-tree-id30 . -1)) nil (25987 2817 514647 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id27 . -1) (undo-tree-id28 . -1)) nil (25987 2817 514645 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14812) (undo-tree-id25 . -1) (undo-tree-id26 . -1)) nil (25987 2817 514642 0) 0 nil])
([nil nil ((14828 . 14837) (#("f" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -14828) (undo-tree-id19 . -1) (#("d" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -14829) (undo-tree-id20 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -14830) (undo-tree-id21 . -1) 14831 (14829 . 14831) (#("p" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -14829) (undo-tree-id22 . -1) 14830 (14829 . 14830) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -14829) (undo-tree-id23 . -1) 14830 (14827 . 14830) (14823 . 14827) (14820 . 14823) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -14820) (undo-tree-id24 . -1) 14821 (14812 . 14821)) nil (25987 2817 514637 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 14850 . 14851) (nil fontified nil 14812 . 14851) (14812 . 14851) 14811 (t 25987 2817 551542 104000)) nil (25987 2870 88880 0) 0 nil])
([nil nil ((#("kill-all-except-dashboard" 0 25 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 14851) (undo-tree-id59 . -24) (undo-tree-id60 . -24) (undo-tree-id61 . -24) (undo-tree-id62 . -24) (undo-tree-id63 . -24) (undo-tree-id64 . -24) (undo-tree-id65 . -24) (undo-tree-id66 . -24) (undo-tree-id67 . -24) (undo-tree-id68 . -24) (undo-tree-id69 . -24) (undo-tree-id70 . -24) (undo-tree-id71 . -24) (undo-tree-id72 . -24) (undo-tree-id73 . -24) (undo-tree-id74 . -24) (undo-tree-id75 . -24) (undo-tree-id76 . -24) (undo-tree-id77 . -24) (undo-tree-id78 . -24) (undo-tree-id79 . -24) (undo-tree-id80 . -24) (undo-tree-id81 . -24) (undo-tree-id82 . -24) (undo-tree-id83 . -24) (undo-tree-id84 . -24) (undo-tree-id85 . -24) (undo-tree-id86 . -24) (undo-tree-id87 . -24) (undo-tree-id88 . -24) (undo-tree-id89 . -24) (undo-tree-id90 . -24) (undo-tree-id91 . -24) (undo-tree-id92 . -24) (undo-tree-id93 . -24) (undo-tree-id94 . -24) (undo-tree-id95 . -24) (undo-tree-id96 . -24) (undo-tree-id97 . -24) (undo-tree-id98 . -24) (undo-tree-id99 . -24) (undo-tree-id100 . -24) (undo-tree-id101 . -24) (undo-tree-id102 . -24) (undo-tree-id103 . -24) (undo-tree-id104 . -24) (undo-tree-id105 . -24) (undo-tree-id106 . -24) (undo-tree-id107 . -24) (undo-tree-id108 . -24) (undo-tree-id109 . -24) (undo-tree-id110 . -24) (undo-tree-id111 . -24) (undo-tree-id112 . -24) (undo-tree-id113 . -24) (undo-tree-id114 . -24) (undo-tree-id115 . -24) (undo-tree-id116 . -24) (undo-tree-id117 . -24) (undo-tree-id118 . -24) (undo-tree-id119 . -24) (undo-tree-id120 . -24) (undo-tree-id121 . -24) (undo-tree-id122 . -24) (undo-tree-id123 . -24) (undo-tree-id124 . -24) (undo-tree-id125 . -24) (undo-tree-id126 . -24) (undo-tree-id127 . -24) (undo-tree-id128 . -24) (undo-tree-id129 . -24) (undo-tree-id130 . -24) (undo-tree-id131 . -24) (undo-tree-id132 . -24) (undo-tree-id133 . -24) (undo-tree-id134 . -24) (undo-tree-id135 . -24) (undo-tree-id136 . -24) (undo-tree-id137 . -24) (undo-tree-id138 . -24) (undo-tree-id139 . -24) (undo-tree-id140 . -24) (undo-tree-id141 . -24) (undo-tree-id142 . -24) (undo-tree-id143 . -24) (undo-tree-id144 . -24) (undo-tree-id145 . -24) (undo-tree-id146 . -24) (undo-tree-id147 . -24) (undo-tree-id148 . -24) (undo-tree-id149 . -24) (undo-tree-id150 . -24) (undo-tree-id151 . -24) (undo-tree-id152 . -24) (undo-tree-id153 . -24) (undo-tree-id154 . -24) (undo-tree-id155 . -24) (undo-tree-id156 . -24) (undo-tree-id157 . -24) (undo-tree-id158 . -24) (undo-tree-id159 . -24) (undo-tree-id160 . -24) (undo-tree-id161 . -24) (undo-tree-id162 . -24) (undo-tree-id163 . -24) (undo-tree-id164 . -24) (undo-tree-id165 . -24) (undo-tree-id166 . -24) (undo-tree-id167 . -24) (undo-tree-id168 . -24) (undo-tree-id169 . -24) (undo-tree-id170 . -24) (undo-tree-id171 . -24) (undo-tree-id172 . -24) (undo-tree-id173 . -24) (undo-tree-id174 . -24) (undo-tree-id175 . -24) (undo-tree-id176 . -24) (undo-tree-id177 . -24) (undo-tree-id178 . -24) (undo-tree-id179 . -24) (undo-tree-id180 . -24) (undo-tree-id181 . -24) (undo-tree-id182 . -24) (undo-tree-id183 . -24) (undo-tree-id184 . -24) (undo-tree-id185 . -24) (undo-tree-id186 . -24) (undo-tree-id187 . -24) (undo-tree-id188 . -24) (undo-tree-id189 . -24) (undo-tree-id190 . -24) (undo-tree-id191 . -24) (undo-tree-id192 . -24) (undo-tree-id193 . -24) (undo-tree-id194 . -24) (undo-tree-id195 . -24) (undo-tree-id196 . -24) (undo-tree-id197 . -24) (undo-tree-id198 . -24) (undo-tree-id199 . -24) (undo-tree-id200 . -24) (undo-tree-id201 . -24) (undo-tree-id202 . -24) (undo-tree-id203 . -25)) nil (25987 2870 88874 0) 0 nil])
([nil nil ((#("multiple " 0 9 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 14862) (undo-tree-id208 . -8) (undo-tree-id209 . -9) (t 25987 2870 124308 534000)) nil (25987 2880 352460 0) 0 nil])
([nil nil ((#("buffers" 0 7 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 14862) (undo-tree-id206 . -6) (undo-tree-id207 . -7)) nil (25987 2880 352457 0) 0 nil])
([nil nil ((14872 . 14882) (14868 . 14872) (#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -14868) (undo-tree-id204 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -14869) (undo-tree-id205 . -1) 14870 (14862 . 14870)) nil (25987 2880 352453 0) 0 nil])
([nil nil ((#(";; Kill buffers
(defun kill-all-except-dashboard ()
  \"Kill all buffers except the dashboard buffer.\"
  (interactive)
  (dolist (buffer (buffer-list))
    (with-current-buffer buffer
      ;; Check if the buffer is not the dashboard and is either not modified or is a file buffer
      (when (and (not (eq major-mode 'dashboard-mode))
                 (or (not (buffer-modified-p))
                     (buffer-file-name)))
        (kill-buffer buffer)))))
" 0 3 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3 15 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 15 16 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 16 17 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 17 22 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 22 23 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 23 48 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-function-name-face org-block)) 48 52 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 52 54 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 54 101 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-doc-face org-block)) 101 102 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 102 105 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 105 116 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 116 118 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 118 121 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 121 127 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 127 151 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 151 156 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 156 175 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 175 183 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 183 189 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 189 192 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 192 280 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 280 287 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 287 291 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 291 293 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 293 296 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 296 335 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 335 353 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 353 355 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 355 382 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) font-lock-multiline t face (org-block)) 382 424 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("                       " 0 2 (face org-indent) 2 23 (face org-indent)) font-lock-multiline t face (org-block)) 424 455 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) font-lock-multiline t face (org-block)) 455 456 (src-block t font-lock-fontified t rear-nonsticky t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) font-lock-multiline t face (org-block)) 456 457 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) font-lock-multiline t face (org-block))) . 1533) (undo-tree-id239 . -432) (undo-tree-id240 . -456) (undo-tree-id241 . -432) (undo-tree-id242 . -8) (undo-tree-id243 . -432) (undo-tree-id244 . -457) (undo-tree-id245 . -8) (undo-tree-id246 . -432) (undo-tree-id247 . -24) (undo-tree-id248 . -24) (undo-tree-id249 . -24) (undo-tree-id250 . -60) (undo-tree-id251 . -60) (undo-tree-id252 . -60) (undo-tree-id253 . -60) (undo-tree-id254 . -60) (undo-tree-id255 . -60) (undo-tree-id256 . -60) (undo-tree-id257 . -110) (undo-tree-id258 . -110) (undo-tree-id259 . -110) (undo-tree-id260 . -110) (undo-tree-id261 . -110) (undo-tree-id262 . -110) (undo-tree-id263 . -110) (undo-tree-id264 . -126) (undo-tree-id265 . -126) (undo-tree-id266 . -126) (undo-tree-id267 . -126) (undo-tree-id268 . -126) (undo-tree-id269 . -126) (undo-tree-id270 . -126) (undo-tree-id271 . -159) (undo-tree-id272 . -159) (undo-tree-id273 . -159) (undo-tree-id274 . -159) (undo-tree-id275 . -159) (undo-tree-id276 . -159) (undo-tree-id277 . -159) (undo-tree-id278 . -191) (undo-tree-id279 . -191) (undo-tree-id280 . -191) (undo-tree-id281 . -191) (undo-tree-id282 . -191) (undo-tree-id283 . -191) (undo-tree-id284 . -191) (undo-tree-id285 . -288) (undo-tree-id286 . -288) (undo-tree-id287 . -288) (undo-tree-id288 . -288) (undo-tree-id289 . -288) (undo-tree-id290 . -288) (undo-tree-id291 . -288) (undo-tree-id292 . -343) (undo-tree-id293 . -343) (undo-tree-id294 . -343) (undo-tree-id295 . -343) (undo-tree-id296 . -343) (undo-tree-id297 . -343) (undo-tree-id298 . -343) (undo-tree-id299 . -390) (undo-tree-id300 . -390) (undo-tree-id301 . -390) (undo-tree-id302 . -390) (undo-tree-id303 . -390) (undo-tree-id304 . -390) (undo-tree-id305 . -390) (undo-tree-id306 . -432) (undo-tree-id307 . -432) (undo-tree-id308 . -432) (undo-tree-id309 . -432) (undo-tree-id310 . -432) (undo-tree-id311 . -432) (undo-tree-id312 . -432) (undo-tree-id313 . 25) (undo-tree-id314 . -433) (undo-tree-id315 . 6) (undo-tree-id316 . -452) (undo-tree-id317 . -432) (undo-tree-id318 . -432) (undo-tree-id319 . -432) (undo-tree-id320 . -432) (undo-tree-id321 . -432) (undo-tree-id322 . -432) (undo-tree-id323 . -432) (undo-tree-id324 . -432) (undo-tree-id325 . -457) 1965 (t 25987 2880 388194 936000)) nil (25987 2895 465038 0) 0 nil])
([nil nil ((#("p" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -1534) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) 1535 (1534 . 1535) (1533 . 1534) (1533 . 1534) 1541) nil (25987 2895 464963 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2164 . 2165) (nil fontified nil 2132 . 2165) (nil fontified nil 2090 . 2132) (nil fontified nil 2043 . 2090) (nil fontified nil 1985 . 2043) (nil fontified nil 1928 . 1985) (nil fontified nil 1873 . 1928) (nil fontified nil 1816 . 1873) (nil fontified nil 1735 . 1816) (nil fontified nil 1703 . 1735) (nil fontified nil 1670 . 1703) (nil fontified nil 1654 . 1670) (nil fontified nil 1584 . 1654) (nil fontified nil 1534 . 1584) (1534 . 2165)) nil (25987 2895 464932 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 2165) (undo-tree-id326 . -1) (t 25987 2895 498931 798000)) nil (25987 2898 688592 0) 0 nil])
([nil nil ((#("(defun kill-all-except-dashboard-and-essential ()
  \"Kill all buffers except the dashboard, *scratch*, and *Messages*.\"
  (interactive)
  (dolist (buffer (buffer-list))
    (with-current-buffer buffer
      ;; Check if the buffer is neither the dashboard, *scratch*, nor *Messages*
      ;; and is either not modified or is a file buffer.
      (when (and (not (eq major-mode 'dashboard-mode))
                 (not (equal (buffer-name) \"*scratch*\"))
                 (not (equal (buffer-name) \"*Messages*\"))
                 (or (not (buffer-modified-p))
                     (buffer-file-name)))
        (kill-buffer buffer)))))
" 0 1 (face (org-block) font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 1 6 (face (font-lock-keyword-face org-block) font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 6 7 (face (org-block) font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 7 46 (face (font-lock-function-name-face org-block) font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 46 50 (face (org-block) font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 50 52 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 52 92 (face (font-lock-doc-face org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 92 93 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 93 100 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 100 101 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 101 107 (face (font-lock-doc-face org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 107 108 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 108 116 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 116 117 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 117 119 (face (font-lock-doc-face org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 119 120 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 120 123 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 123 134 (face (font-lock-keyword-face org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 134 136 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 136 139 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 139 145 (face (font-lock-keyword-face org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 145 169 (face (org-block) font-lock-multiline t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 169 174 (face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 174 193 (face (font-lock-keyword-face org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 193 201 (face (org-block) font-lock-multiline t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 201 207 (face (org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 207 210 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 210 256 (face (font-lock-comment-face org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 256 257 (face (font-lock-comment-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 257 264 (face (font-lock-comment-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 264 265 (face (font-lock-comment-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 265 271 (face (font-lock-comment-face org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 271 272 (face (font-lock-comment-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 272 280 (face (font-lock-comment-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 280 281 (face (font-lock-comment-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 281 282 (face (font-lock-comment-face org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 282 288 (face (org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 288 291 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 291 339 (face (font-lock-comment-face org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 339 346 (face (org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 346 350 (face (font-lock-keyword-face org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 350 352 (face (org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 352 355 (face (font-lock-keyword-face org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 355 394 (face (org-block) font-lock-multiline t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 394 437 (face (org-block) font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 437 438 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 438 439 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 439 446 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 446 447 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 447 448 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 448 451 (face (org-block) font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 451 494 (face (org-block) font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 494 495 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 495 496 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 496 504 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 504 505 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 505 506 (face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 506 509 (face (org-block) font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 509 527 (face (org-block) font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 527 529 (face (font-lock-keyword-face org-block) font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t help-echo nil font-lock-fontified t fontified t) 529 556 (face (org-block) font-lock-multiline t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 556 598 (face (org-block) font-lock-multiline t wrap-prefix #("                       " 0 2 (face org-indent) 2 23 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t) 598 631 (face (org-block) font-lock-multiline t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-fontified t fontified t)) . 1534) (undo-tree-id0 . -598) (undo-tree-id1 . -631) (undo-tree-id2 . -598) (undo-tree-id3 . -598) (undo-tree-id4 . -631) (undo-tree-id5 . -598) (undo-tree-id6 . -50) (undo-tree-id7 . -50) (undo-tree-id8 . -50) (undo-tree-id9 . -50) (undo-tree-id10 . -50) (undo-tree-id11 . -50) (undo-tree-id12 . -50) (undo-tree-id13 . -50) (undo-tree-id14 . -50) (undo-tree-id15 . -50) (undo-tree-id16 . -50) (undo-tree-id17 . -50) (undo-tree-id18 . -50) (undo-tree-id19 . -50) (undo-tree-id20 . -50) (undo-tree-id21 . -50) (undo-tree-id22 . -50) (undo-tree-id23 . -50) (undo-tree-id24 . -50) (undo-tree-id25 . -50) (undo-tree-id26 . -50) (undo-tree-id27 . -120) (undo-tree-id28 . -120) (undo-tree-id29 . -120) (undo-tree-id30 . -120) (undo-tree-id31 . -120) (undo-tree-id32 . -120) (undo-tree-id33 . -120) (undo-tree-id34 . -136) (undo-tree-id35 . -136) (undo-tree-id36 . -136) (undo-tree-id37 . -136) (undo-tree-id38 . -136) (undo-tree-id39 . -136) (undo-tree-id40 . -136) (undo-tree-id41 . -169) (undo-tree-id42 . -169) (undo-tree-id43 . -169) (undo-tree-id44 . -169) (undo-tree-id45 . -169) (undo-tree-id46 . -169) (undo-tree-id47 . -169) (undo-tree-id48 . -201) (undo-tree-id49 . -201) (undo-tree-id50 . -201) (undo-tree-id51 . -201) (undo-tree-id52 . -201) (undo-tree-id53 . -201) (undo-tree-id54 . -201) (undo-tree-id55 . -282) (undo-tree-id56 . -282) (undo-tree-id57 . -282) (undo-tree-id58 . -282) (undo-tree-id59 . -282) (undo-tree-id60 . -282) (undo-tree-id61 . -282) (undo-tree-id62 . -339) (undo-tree-id63 . -339) (undo-tree-id64 . -339) (undo-tree-id65 . -339) (undo-tree-id66 . -339) (undo-tree-id67 . -339) (undo-tree-id68 . -339) (undo-tree-id69 . -394) (undo-tree-id70 . -394) (undo-tree-id71 . -394) (undo-tree-id72 . -394) (undo-tree-id73 . -394) (undo-tree-id74 . -394) (undo-tree-id75 . -394) (undo-tree-id76 . -451) (undo-tree-id77 . -451) (undo-tree-id78 . -451) (undo-tree-id79 . -451) (undo-tree-id80 . -451) (undo-tree-id81 . -451) (undo-tree-id82 . -451) (undo-tree-id83 . -509) (undo-tree-id84 . -509) (undo-tree-id85 . -509) (undo-tree-id86 . -509) (undo-tree-id87 . -509) (undo-tree-id88 . -509) (undo-tree-id89 . -509) (undo-tree-id90 . -509) (undo-tree-id91 . -509) (undo-tree-id92 . -509) (undo-tree-id93 . -509) (undo-tree-id94 . -509) (undo-tree-id95 . -509) (undo-tree-id96 . -509) (undo-tree-id97 . -509) (undo-tree-id98 . -509) (undo-tree-id99 . -509) (undo-tree-id100 . -509) (undo-tree-id101 . -509) (undo-tree-id102 . -509) (undo-tree-id103 . -509) (undo-tree-id104 . -509) (undo-tree-id105 . -509) (undo-tree-id106 . -509) (undo-tree-id107 . -509) (undo-tree-id108 . -509) (undo-tree-id109 . -509) (undo-tree-id110 . -509) (undo-tree-id111 . -556) (undo-tree-id112 . -556) (undo-tree-id113 . -556) (undo-tree-id114 . -556) (undo-tree-id115 . -556) (undo-tree-id116 . -556) (undo-tree-id117 . -556) (undo-tree-id118 . -556) (undo-tree-id119 . -556) (undo-tree-id120 . -556) (undo-tree-id121 . -556) (undo-tree-id122 . -556) (undo-tree-id123 . -556) (undo-tree-id124 . -556) (undo-tree-id125 . -556) (undo-tree-id126 . -556) (undo-tree-id127 . -556) (undo-tree-id128 . -556) (undo-tree-id129 . -556) (undo-tree-id130 . -556) (undo-tree-id131 . -556) (undo-tree-id132 . -598) (undo-tree-id133 . -598) (undo-tree-id134 . -598) (undo-tree-id135 . -598) (undo-tree-id136 . -598) (undo-tree-id137 . -598) (undo-tree-id138 . -598) (undo-tree-id139 . -598) (undo-tree-id140 . -598) (undo-tree-id141 . -598) (undo-tree-id142 . -598) (undo-tree-id143 . -598) (undo-tree-id144 . -598) (undo-tree-id145 . -598) (undo-tree-id146 . -598) (undo-tree-id147 . -598) (undo-tree-id148 . -598) (undo-tree-id149 . -598) (undo-tree-id150 . -598) (undo-tree-id151 . -598) (undo-tree-id152 . -598) (undo-tree-id153 . -598) (undo-tree-id154 . -631) (undo-tree-id155 . -630) 2132 (t 25987 2898 724951 286000)) nil (25987 3004 203876 0) 0 nil])
([nil nil ((1534 . 1535)) nil (25987 3004 203735 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2345 . 2346) (nil fontified nil 2313 . 2346) (nil fontified nil 2271 . 2313) (nil fontified nil 2243 . 2271) (nil fontified nil 2158 . 2243) (nil fontified nil 2119 . 2158) (nil fontified nil 2080 . 2119) (nil fontified nil 2023 . 2080) (nil fontified nil 1964 . 2023) (nil fontified nil 1907 . 1964) (nil fontified nil 1852 . 1907) (nil fontified nil 1770 . 1852) (nil fontified nil 1738 . 1770) (nil fontified nil 1705 . 1738) (nil fontified nil 1689 . 1705) (nil fontified nil 1584 . 1689) (nil fontified nil 1534 . 1584) (1534 . 2346)) nil (25987 3004 203731 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3187 . 3188) (nil fontified nil 3155 . 3188) (nil fontified nil 3113 . 3155) (nil fontified nil 3085 . 3113) (nil fontified nil 2997 . 3085) (nil fontified nil 2958 . 2997) (nil fontified nil 2919 . 2958) (nil fontified nil 2847 . 2919) (nil fontified nil 2788 . 2847) (nil fontified nil 2731 . 2788) (nil fontified nil 2676 . 2731) (nil fontified nil 2594 . 2676) (nil fontified nil 2562 . 2594) (nil fontified nil 2529 . 2562) (nil fontified nil 2513 . 2529) (nil fontified nil 2396 . 2513) (nil fontified nil 2346 . 2396) (2346 . 3188) (t 25987 3004 241611 907000)) nil (25987 3065 844423 0) 0 nil])
([nil nil ((#("(defun kill-all-except-dashboard-and-essential ()
  \"Kill all buffers except the dashboard, *scratch*, and *Messages*, prompting to save unsaved buffers.\"
  (interactive)
  (dolist (buffer (buffer-list))
    (with-current-buffer buffer
      ;; Check if the buffer is neither the dashboard, *scratch*, nor *Messages*.
      (when (and (not (eq major-mode 'dashboard-mode))
                 (not (equal (buffer-name) \"*scratch*\"))
                 (not (equal (buffer-name) \"*Messages*\")))
        ;; If the buffer is modified, prompt to save it.
        (when (and (buffer-modified-p)
                   (buffer-file-name))
          (if (yes-or-no-p (format \"Save buffer %s before killing? \" (buffer-name)))
              (save-buffer)
            (set-buffer-modified-p nil)))
        (kill-buffer buffer)))))
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 1 6 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 6 7 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 7 46 (face (font-lock-function-name-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 46 50 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 50 52 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 52 92 (face (font-lock-doc-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 92 93 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 93 100 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 100 101 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 101 107 (face (font-lock-doc-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 107 108 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 108 116 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 116 117 (face (font-lock-doc-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 117 154 (face (font-lock-doc-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 154 155 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 155 158 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 158 169 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 169 171 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 171 174 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 174 180 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 180 204 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 204 209 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 209 228 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 228 236 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 236 242 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 242 245 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 245 291 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 291 292 (face (font-lock-comment-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 292 299 (face (font-lock-comment-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 299 300 (face (font-lock-comment-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 300 306 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 306 307 (face (font-lock-comment-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 307 315 (face (font-lock-comment-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 315 316 (face (font-lock-comment-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 316 318 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 318 325 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 325 329 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 329 331 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 331 334 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 334 373 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 2 (face org-indent) 2 8 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 373 416 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 416 417 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 417 418 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 418 425 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 425 426 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 426 427 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 427 430 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 430 473 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 473 474 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 474 475 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 475 483 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 483 484 (face (font-lock-string-face org-block) org-emphasis t font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 484 485 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 485 489 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                   " 0 2 (face org-indent) 2 19 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 489 497 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 497 500 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 500 546 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 546 555 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 555 559 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 559 561 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 561 564 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 564 585 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 585 624 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("                     " 0 2 (face org-indent) 2 21 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 624 635 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 635 637 (face (font-lock-keyword-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 637 659 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 659 692 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 692 709 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 709 737 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t wrap-prefix #("                " 0 2 (face org-indent) 2 16 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 737 779 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t wrap-prefix #("              " 0 2 (face org-indent) 2 14 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 779 811 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent))) 811 812 (face (org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #("          " 0 2 (face org-indent) 2 10 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)))) . 1534) (undo-tree-id156 . -779) (undo-tree-id157 . -779) (undo-tree-id158 . -811) (undo-tree-id159 . -812) (undo-tree-id160 . -812) (undo-tree-id161 . -812) (undo-tree-id162 . -812) (undo-tree-id163 . -812) (undo-tree-id164 . -812) (undo-tree-id165 . -812) (undo-tree-id166 . -812) (undo-tree-id167 . -812) (undo-tree-id168 . -812) (undo-tree-id169 . -812) (undo-tree-id170 . -812) (undo-tree-id171 . -812) (undo-tree-id172 . -812) (undo-tree-id173 . -779) (undo-tree-id174 . -779) (undo-tree-id175 . -779) (undo-tree-id176 . -779) (undo-tree-id177 . -779) (undo-tree-id178 . -779) (undo-tree-id179 . -779) (undo-tree-id180 . -779) (undo-tree-id181 . -779) (undo-tree-id182 . -779) (undo-tree-id183 . -779) (undo-tree-id184 . -779) (undo-tree-id185 . -779) (undo-tree-id186 . -779) (undo-tree-id187 . -812) (undo-tree-id188 . -779) (undo-tree-id189 . -779) (undo-tree-id190 . -779) (undo-tree-id191 . -779) (undo-tree-id192 . -779) (undo-tree-id193 . -779) (undo-tree-id194 . -779) (undo-tree-id195 . -779) (undo-tree-id196 . -779) (undo-tree-id197 . -779) (undo-tree-id198 . -779) (undo-tree-id199 . -779) (undo-tree-id200 . -779) (undo-tree-id201 . -779) (undo-tree-id202 . -779) (undo-tree-id203 . -779) (undo-tree-id204 . -779) (undo-tree-id205 . -779) (undo-tree-id206 . -779) (undo-tree-id207 . -779) (undo-tree-id208 . -779) (undo-tree-id209 . -779) (undo-tree-id210 . -779) (undo-tree-id211 . -779) (undo-tree-id212 . -779) (undo-tree-id213 . -779) (undo-tree-id214 . -779) (undo-tree-id215 . -779) (undo-tree-id216 . -779) (undo-tree-id217 . -779) (undo-tree-id218 . -779) (undo-tree-id219 . -737) (undo-tree-id220 . -737) (undo-tree-id221 . -737) (undo-tree-id222 . -737) (undo-tree-id223 . -737) (undo-tree-id224 . -737) (undo-tree-id225 . -737) (undo-tree-id226 . -737) (undo-tree-id227 . -737) (undo-tree-id228 . -737) (undo-tree-id229 . -737) (undo-tree-id230 . -737) (undo-tree-id231 . -737) (undo-tree-id232 . -737) (undo-tree-id233 . -737) (undo-tree-id234 . -737) (undo-tree-id235 . -737) (undo-tree-id236 . -737) (undo-tree-id237 . -737) (undo-tree-id238 . -737) (undo-tree-id239 . -737) (undo-tree-id240 . -709) (undo-tree-id241 . -709) (undo-tree-id242 . -709) (undo-tree-id243 . -709) (undo-tree-id244 . -709) (undo-tree-id245 . -709) (undo-tree-id246 . -709) (undo-tree-id247 . -624) (undo-tree-id248 . -624) (undo-tree-id249 . -624) (undo-tree-id250 . -624) (undo-tree-id251 . -624) (undo-tree-id252 . -624) (undo-tree-id253 . -624) (undo-tree-id254 . -585) (undo-tree-id255 . -585) (undo-tree-id256 . -585) (undo-tree-id257 . -585) (undo-tree-id258 . -585) (undo-tree-id259 . -585) (undo-tree-id260 . -585) (undo-tree-id261 . -546) (undo-tree-id262 . -546) (undo-tree-id263 . -546) (undo-tree-id264 . -546) (undo-tree-id265 . -546) (undo-tree-id266 . -546) (undo-tree-id267 . -546) (undo-tree-id268 . -489) (undo-tree-id269 . -489) (undo-tree-id270 . -489) (undo-tree-id271 . -489) (undo-tree-id272 . -489) (undo-tree-id273 . -489) (undo-tree-id274 . -489) (undo-tree-id275 . -430) (undo-tree-id276 . -430) (undo-tree-id277 . -430) (undo-tree-id278 . -430) (undo-tree-id279 . -430) (undo-tree-id280 . -430) (undo-tree-id281 . -430) (undo-tree-id282 . -430) (undo-tree-id283 . -373) (undo-tree-id284 . -373) (undo-tree-id285 . -373) (undo-tree-id286 . -373) (undo-tree-id287 . -373) (undo-tree-id288 . -373) (undo-tree-id289 . -373) (undo-tree-id290 . -318) (undo-tree-id291 . -318) (undo-tree-id292 . -318) (undo-tree-id293 . -318) (undo-tree-id294 . -318) (undo-tree-id295 . -318) (undo-tree-id296 . -318) (undo-tree-id297 . -236) (undo-tree-id298 . -236) (undo-tree-id299 . -236) (undo-tree-id300 . -236) (undo-tree-id301 . -236) (undo-tree-id302 . -236) (undo-tree-id303 . -236) (undo-tree-id304 . -236) (undo-tree-id305 . -236) (undo-tree-id306 . -236) (undo-tree-id307 . -236) (undo-tree-id308 . -236) (undo-tree-id309 . -236) (undo-tree-id310 . -236) (undo-tree-id311 . -204) (undo-tree-id312 . -204) (undo-tree-id313 . -204) (undo-tree-id314 . -204) (undo-tree-id315 . -204) (undo-tree-id316 . -204) (undo-tree-id317 . -204) (undo-tree-id318 . -171) (undo-tree-id319 . -171) (undo-tree-id320 . -171) (undo-tree-id321 . -171) (undo-tree-id322 . -171) (undo-tree-id323 . -171) (undo-tree-id324 . -171) (undo-tree-id325 . -155) (undo-tree-id326 . -155) (undo-tree-id327 . -155) (undo-tree-id328 . -155) (undo-tree-id329 . -155) (undo-tree-id330 . -155) (undo-tree-id331 . -155) (undo-tree-id332 . -50) (undo-tree-id333 . -50) (undo-tree-id334 . -50) (undo-tree-id335 . -50) (undo-tree-id336 . -50) (undo-tree-id337 . -50) (undo-tree-id338 . -50) (undo-tree-id339 . -50) (undo-tree-id340 . -50) (undo-tree-id341 . -50) (undo-tree-id342 . -50) (undo-tree-id343 . -50) (undo-tree-id344 . -50) (undo-tree-id345 . -50) (undo-tree-id346 . -50) (undo-tree-id347 . -50) (undo-tree-id348 . -50) (undo-tree-id349 . -50) (undo-tree-id350 . -50) (undo-tree-id351 . -50) (undo-tree-id352 . -50) (undo-tree-id353 . 812) (undo-tree-id354 . -1) (undo-tree-id355 . 2) (undo-tree-id356 . -811) (undo-tree-id357 . -812)) nil (25987 3065 844416 0) 0 nil])
([nil nil ((249 . 250) (237 . 249) (#("S" 0 1 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . -237) (undo-tree-id0 . -1) 238 (237 . 238) (230 . 237) (229 . 230) (t 25987 3065 884249 906000) 229) nil (26012 5636 298105 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 286 . 287) (nil fontified nil 250 . 287) (250 . 287)) nil (26012 5636 298076 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31073) (undo-tree-id0 . -1) (t 26012 5636 332899 398000)) nil (26017 13491 49587 0) 0 nil])
([nil nil ((31130 . 31140) (31118 . 31141) (#("<s" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -31118) (undo-tree-id1 . -2) 31120 (31118 . 31120) (31117 . 31118) (31116 . 31117) (31107 . 31116) (31103 . 31107) (t 26017 13491 91459 135000)) nil (26017 13504 24329 0) 0 nil])
([nil nil ((31147 . 31152) (#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -31147) (undo-tree-id65 . -1) 31148 (31142 . 31148) (31141 . 31143) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -31141) (31141 . 31142) (t 26017 13504 62191 457000)) nil (26017 13671 114679 0) 0 nil])
([nil nil ((31152 . 31167) 31141) nil (26017 13671 114677 0) 0 nil])
([nil nil ((31178 . 31187) (31167 . 31178) (31166 . 31168) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -31166) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (31166 . 31167) (#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -31166) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("v" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -31167) (undo-tree-id61 . -1) (#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -31168) (undo-tree-id62 . -1) 31169 (31166 . 31169) (#("\"" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -31166) (undo-tree-id63 . -1) 31167 (#("\"" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . -31166) (undo-tree-id64 . -1) 31167 (31166 . 31168) (#("\"" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -31166) (31166 . 31167)) nil (26017 13671 114675 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block))) . -31198) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 31199 (31193 . 31198) (31192 . 31193) (#("S" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-string-face org-block))) . -31192) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 31193 (31192 . 31193) (31191 . 31193) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -31191) (31191 . 31192) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -31191) (undo-tree-id47 . -1) (31191 . 31192) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . -31191) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (31191 . 31192) (31190 . 31192) (#("\"" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -31190) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (31179 . 31191) (31169 . 31179) (31168 . 31170) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -31168) (31158 . 31169) (31142 . 31158) (31141 . 31143) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line)) . -31141) (31141 . 31142) (31141 . 31142) 31186) nil (26017 13671 114657 0) 0 nil])
([nil nil ((31257 . 31266) (31256 . 31258) (#("\"" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31256) (31255 . 31257) (31239 . 31255) (#("d" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31239) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31240) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31241) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31242) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31243) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("t" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31244) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31245) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31246) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("y" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -31247) (undo-tree-id82 . -1) 31248 (t 26017 13671 155472 659000)) nil (26017 13683 178405 0) 0 nil])
([nil nil ((31198 . 31199) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -31198) (undo-tree-id83 . -1) (31198 . 31199) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -31198) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (31198 . 31199) (t 26017 13683 216573 959000)) nil (26017 13688 294185 0) 0 nil])
([nil nil ((31272 . 31273) (31271 . 31272) (t 26017 13688 332391 574000) 31270) nil (26017 13816 823628 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 31405 . 31406) (nil fontified nil 31370 . 31406) (nil fontified nil 31301 . 31370) (nil fontified nil 31273 . 31301) (31273 . 31406)) nil (26017 13816 823625 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 31406) (undo-tree-id87 . 1) (t 26017 13816 861697 317000)) nil (26017 13835 121988 0) 0 nil])
([nil nil ((#("\"" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 31342)) nil (26017 13835 121986 0) 0 nil])
([nil nil ((#("~" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121986 0) 0 nil])
([nil nil ((#("/" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121986 0) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121985 0) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121984 0) 0 nil])
([nil nil ((#("g" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121984 0) 0 nil])
([nil nil ((#("/" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121983 0) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121983 0) 0 nil])
([nil nil ((#("g" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121982 0) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121982 0) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121982 0) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121981 0) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121980 0) 0 nil])
([nil nil ((#("." 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121980 0) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121979 0) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121979 0) 0 nil])
([nil nil ((#("g" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31342)) nil (26017 13835 121978 0) 0 nil])
([nil nil ((#("\"" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 31342)) nil (26017 13835 121978 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -31342) (undo-tree-id86 . -1) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 31343) (31342 . 31344) (#("(" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -31342) (31342 . 31343)) nil (26017 13835 122484 0) 0 nil])
([nil nil ((31203 . 31204)) nil (26017 13842 160351 0) 0 nil] [nil nil ((nil rear-nonsticky nil 31342 . 31343) (nil fontified nil 31342 . 31343) (31342 . 31343) 31341) ((#("\"" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . 31342) (nil rear-nonsticky t 31342 . 31343)) (26017 13835 121965 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31203) (undo-tree-id88 . 1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1)) nil (26017 13842 160348 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 31382 . 31383) (nil fontified nil 31342 . 31383) (31342 . 31383) 31341 (t 26017 13842 198615 151000)) nil (26017 13850 691905 0) 0 nil])
([nil nil ((14326 . 14331) (#("emacs" 0 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . 14326) (undo-tree-id131 . -4) (undo-tree-id132 . -5) (undo-tree-id133 . -5) (t 26017 13850 730236 783000)) nil (26017 13965 246782 0) 0 nil])
([nil nil ((14542 . 14543) (t 26017 13965 287317 482000) 14541) nil (26017 13994 494985 0) 0 nil])
([nil nil ((14573 . 14581) (14570 . 14573) (14569 . 14571) (#("\"" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -14569) (14553 . 14570) (14552 . 14554) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -14552) (14552 . 14553) (14550 . 14552) (14548 . 14549) (14547 . 14549) (#("\"" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -14547) (14543 . 14548)) nil (26017 13994 494981 0) 0 nil])
([nil nil ((#("c" 0 1 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384) (t 26017 13994 533793 552000)) nil (26017 14760 408048 0) 0 nil])
([nil nil ((#("o" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408047 0) 0 nil])
([nil nil ((#("n" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408046 0) 0 nil])
([nil nil ((#("c" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408045 0) 0 nil])
([nil nil ((#("a" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408045 0) 0 nil])
([nil nil ((#("t" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408044 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408043 0) 0 nil])
([nil nil ((#("o" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408043 0) 0 nil])
([nil nil ((#("r" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408042 0) 0 nil])
([nil nil ((#("g" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408042 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408041 0) 0 nil])
([nil nil ((#("a" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408041 0) 0 nil])
([nil nil ((#("g" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408040 0) 0 nil])
([nil nil ((#("e" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408040 0) 0 nil])
([nil nil ((#("n" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31384)) nil (26017 14760 408039 0) 0 nil])
([nil nil ((#("(" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383) (undo-tree-id62 . 1) (undo-tree-id63 . -1)) nil (26017 14760 408039 0) 0 nil])
([nil nil ((#("d" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383)) nil (26017 14760 408036 0) 0 nil])
([nil nil ((#("a" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383) (undo-tree-id60 . -1) (undo-tree-id61 . -1)) nil (26017 14760 408035 0) 0 nil])
([nil nil ((#("-" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383) (undo-tree-id58 . -1) (undo-tree-id59 . -1)) nil (26017 14760 408033 0) 0 nil])
([nil nil ((#("d" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383) (undo-tree-id56 . -1) (undo-tree-id57 . -1)) nil (26017 14760 408030 0) 0 nil])
([nil nil ((#("i" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383) (undo-tree-id54 . -1) (undo-tree-id55 . -1)) nil (26017 14760 408028 0) 0 nil])
([nil nil ((#("r" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383) (undo-tree-id52 . -1) (undo-tree-id53 . -1)) nil (26017 14760 408025 0) 0 nil])
([nil nil ((#("e" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383) (undo-tree-id50 . -1) (undo-tree-id51 . -1)) nil (26017 14760 408020 0) 0 nil])
([nil nil ((#("c" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383) (undo-tree-id48 . -1) (undo-tree-id49 . -1)) nil (26017 14760 408018 0) 0 nil])
([nil nil ((#("t" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383) (undo-tree-id46 . -1) (undo-tree-id47 . -1)) nil (26017 14760 408015 0) 0 nil])
([nil nil ((#("o" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383) (undo-tree-id44 . -1) (undo-tree-id45 . -1)) nil (26017 14760 408013 0) 0 nil])
([nil nil ((#("r" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383) (undo-tree-id42 . -1) (undo-tree-id43 . -1)) nil (26017 14760 408010 0) 0 nil])
([nil nil ((#("y" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383) (undo-tree-id40 . -1) (undo-tree-id41 . -1)) nil (26017 14760 408008 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31383) (undo-tree-id38 . -1) (undo-tree-id39 . -1)) nil (26017 14760 408005 0) 0 nil])
([nil nil ((#(")" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 31394) (undo-tree-id34 . 1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1)) nil (26017 14760 408002 0) 0 nil])
([nil nil ((31396 . 31397) (#("~" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -31396) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 31397 (31390 . 31396) (31389 . 31390) (#(" " 0 1 (wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -31389) (31389 . 31390) (#("/" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -31389) (31385 . 31390) (#(" " 0 1 (wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -31385) (31385 . 31386) (#("/" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -31385) (31385 . 31386) (#("o" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -31385) (undo-tree-id28 . -1) (#("r" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -31386) (undo-tree-id29 . -1) (#("g" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -31387) (undo-tree-id30 . -1) 31388 (31385 . 31388) (31384 . 31386) (#("~" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . -31384) (31384 . 31385) (#("o" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -31384) (undo-tree-id31 . -1) (#("r" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -31385) (undo-tree-id32 . -1) (#("g" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -31386) (undo-tree-id33 . -1) 31387 (31384 . 31387)) nil (26017 14760 407993 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 31269) (undo-tree-id102 . 1) (undo-tree-id103 . -1) (t 26017 14760 456205 713000)) nil (26017 14934 594845 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594842 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594842 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594841 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594840 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594840 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594839 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594838 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594838 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594837 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594837 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594836 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594835 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594835 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594834 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594833 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594833 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594832 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594831 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269)) nil (26017 14934 594831 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269) (undo-tree-id100 . -1) (undo-tree-id101 . -1)) nil (26017 14934 594830 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269) (undo-tree-id98 . -1) (undo-tree-id99 . -1)) nil (26017 14934 594828 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269) (undo-tree-id96 . -1) (undo-tree-id97 . -1)) nil (26017 14934 594825 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269) (undo-tree-id94 . -1) (undo-tree-id95 . -1)) nil (26017 14934 594820 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269) (undo-tree-id92 . -1) (undo-tree-id93 . -1)) nil (26017 14934 594818 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269) (undo-tree-id90 . -1) (undo-tree-id91 . -1)) nil (26017 14934 594815 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269) (undo-tree-id88 . -1) (undo-tree-id89 . -1)) nil (26017 14934 594812 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269) (undo-tree-id86 . -1) (undo-tree-id87 . -1)) nil (26017 14934 594810 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31269) (undo-tree-id84 . -1) (undo-tree-id85 . -1)) nil (26017 14934 594808 0) 0 nil])
([nil nil ((#("~" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -31282) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("x" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -31283) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 31284 (31283 . 31284) (31281 . 31282) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -31281) (undo-tree-id80 . -1) (31281 . 31282) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -31281) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (31274 . 31282) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -31274) (31274 . 31275) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -31274) (31271 . 31275) (31270 . 31272) (#("~" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -31270) (31270 . 31271) (#("|" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -31270) (undo-tree-id83 . -1) 31271 (31270 . 31271)) nil (26017 14934 594803 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31292) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (26017 14934 594731 0) 0 nil])
([nil nil ((#("~" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 31270) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (t 26017 14934 637011 131000)) nil (26017 14964 795594 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 31270) (undo-tree-id115 . -1) (undo-tree-id116 . -1)) nil (26017 14964 795570 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 31270) (undo-tree-id113 . -1) (undo-tree-id114 . -1)) nil (26017 14964 795567 0) 0 nil])
([nil nil ((#("g" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 31270) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1)) nil (26017 14964 795563 0) 0 nil])
([nil nil ((#("~" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -31275) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 31276 (31271 . 31275) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -31271) (undo-tree-id167 . -1) (31271 . 31272) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . -31271) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (31271 . 31272) (31270 . 31272) (#("~" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -31270) (31270 . 31271) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -31270) (31270 . 31271) (#("~" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -31270) (31270 . 31271) (#("|" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -31270) (undo-tree-id170 . -1) (#("/" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . -31271) (undo-tree-id171 . -1) 31272 (31271 . 31272) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -31271) (31271 . 31272) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -31271) (31271 . 31272) (31270 . 31271) (t 26017 14964 834525 449000)) nil (26021 31116 697970 0) 0 nil])
([nil nil ((24205 . 24208)) nil (26021 31129 180392 0) 0 nil] [nil nil ((24304 . 24306) (24270 . 24272) (24256 . 24258) (24243 . 24245) (24229 . 24231) (24205 . 24207) 24294 (t 26017 14981 165498 861000)) ((#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 24205) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 24229) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 24243) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 24256) (#("# " 0 2 (src-block t help-echo nil face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 24270) (#("# " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 24304) (undo-tree-id0 . 2) (t 26021 31116 26247 124000)) (26021 31115 976204 0) 0 nil])
([nil nil (24232) nil (26021 31129 180392 0) 0 nil])
nil
([nil nil ((24265 . 24267) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . -24265) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -2) (24253 . 24255) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . -24253) (undo-tree-id4 . -2) (24242 . 24244) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . -24242) (undo-tree-id5 . -2) (24230 . 24232) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -24230) (undo-tree-id6 . -1) (undo-tree-id7 . -2) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) 24231) nil (26021 31129 180388 0) 0 nil])
([nil nil ((24232 . 24234) (t 26021 31129 219724 494000)) nil (26021 31137 938001 0) 0 nil])
([nil nil ((24246 . 24248)) nil (26021 31137 938000 0) 0 nil])
([nil nil ((24259 . 24261)) nil (26021 31137 938000 0) 0 nil])
([nil nil ((#("h" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -24274) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) 24275 (24274 . 24275)) nil (26021 31137 937998 0) 0 nil])
([nil nil ((24273 . 24275)) nil (26021 31137 937969 0) 0 nil])
([nil nil ((24346 . 24347) (24336 . 24346) (24324 . 24347) (#("<s" 0 2 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -24324) (undo-tree-id99 . -2) 24326 (24324 . 24326) (24323 . 24324) (24319 . 24323) (#("j" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -24319) (undo-tree-id100 . -1) (#("i" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -24320) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("n" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -24321) (undo-tree-id103 . -1) 24322 (24319 . 24322) (#("j" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -24319) (undo-tree-id104 . -1) (#("i" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -24320) (undo-tree-id105 . -1) (#("n" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -24321) (undo-tree-id106 . -1) (#("x" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . -24322) (undo-tree-id107 . -1) 24323 (24322 . 24323) (24319 . 24322) (24314 . 24319) (t 26021 31137 977649 973000)) nil (26021 31214 73892 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 24476 . 24477) (nil fontified nil 24440 . 24477) (nil fontified nil 24408 . 24440) (nil fontified nil 24365 . 24408) (nil fontified nil 24347 . 24365) (24347 . 24477)) nil (26021 31214 73883 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 24478) (undo-tree-id98 . -1)) nil (26021 31214 73880 0) 0 nil])
([nil nil ((#("  :bind ((\"M-$\" . jinx-correct)
" 0 2 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 2 7 (face (font-lock-builtin-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 7 10 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 10 15 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 15 32 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 24408) (undo-tree-id211 . -11) (undo-tree-id212 . -31) (undo-tree-id213 . -11) (undo-tree-id214 . -11) (undo-tree-id215 . -11) (undo-tree-id216 . -11) (undo-tree-id217 . -11) (undo-tree-id218 . -11) (undo-tree-id219 . -11) (undo-tree-id220 . -11) (undo-tree-id221 . -11) (undo-tree-id222 . -11) (undo-tree-id223 . -11) (undo-tree-id224 . -11) (undo-tree-id225 . -11) (undo-tree-id226 . -11) (undo-tree-id227 . -11) (undo-tree-id228 . -11) (undo-tree-id229 . -11) (undo-tree-id230 . -11) (undo-tree-id231 . -11) (undo-tree-id232 . -11) (undo-tree-id233 . -11) (undo-tree-id234 . -11) (undo-tree-id235 . -11) (undo-tree-id236 . -11) (undo-tree-id237 . -11) (undo-tree-id238 . -11) (undo-tree-id239 . -11) (undo-tree-id240 . -11) (undo-tree-id241 . -11) (undo-tree-id242 . -11) (undo-tree-id243 . -11) (undo-tree-id244 . -11) (undo-tree-id245 . -11) (undo-tree-id246 . -11) (undo-tree-id247 . -2) (undo-tree-id248 . -11) (undo-tree-id249 . -11) (undo-tree-id250 . -11) (undo-tree-id251 . -11) (undo-tree-id252 . -11) (undo-tree-id253 . -11) (undo-tree-id254 . -11) (undo-tree-id255 . -11) (undo-tree-id256 . -11) (undo-tree-id257 . -11) (undo-tree-id258 . -11) (undo-tree-id259 . -11) (undo-tree-id260 . -11) (undo-tree-id261 . -11) (undo-tree-id262 . -11) (undo-tree-id263 . -11) (undo-tree-id264 . -11) (undo-tree-id265 . -11) (undo-tree-id266 . -11) (undo-tree-id267 . -11) (undo-tree-id268 . -11) (undo-tree-id269 . -11) (undo-tree-id270 . -11) (undo-tree-id271 . -11) (undo-tree-id272 . -11) (undo-tree-id273 . -11) (undo-tree-id274 . -11) (undo-tree-id275 . -11) (undo-tree-id276 . -11) (undo-tree-id277 . -11) (undo-tree-id278 . -11) (undo-tree-id279 . -11) (undo-tree-id280 . -11) (undo-tree-id281 . -11) (undo-tree-id282 . -11) (undo-tree-id283 . -11) (undo-tree-id284 . -11) (undo-tree-id285 . -11) (undo-tree-id286 . -11) (undo-tree-id287 . -11) (undo-tree-id288 . -11) (undo-tree-id289 . -11) (undo-tree-id290 . -11) (undo-tree-id291 . -11) (undo-tree-id292 . -11) (undo-tree-id293 . -11) (undo-tree-id294 . -11) (undo-tree-id295 . -11) (undo-tree-id296 . -11) (undo-tree-id297 . -11) (undo-tree-id298 . -11) (undo-tree-id299 . -11) (undo-tree-id300 . -11) (undo-tree-id301 . -11) (undo-tree-id302 . -11) (undo-tree-id303 . -11) (undo-tree-id304 . -11) (undo-tree-id305 . -11) (undo-tree-id306 . -11) (undo-tree-id307 . -11) (undo-tree-id308 . -11) (undo-tree-id309 . -11) (undo-tree-id310 . -11) (undo-tree-id311 . -11) (undo-tree-id312 . -11) (undo-tree-id313 . -11) (undo-tree-id314 . -11) (undo-tree-id315 . -11) (undo-tree-id316 . -11) (undo-tree-id317 . -11) (undo-tree-id318 . -11) (undo-tree-id319 . -11) (undo-tree-id320 . -11) (undo-tree-id321 . -11) (undo-tree-id322 . -11) (undo-tree-id323 . -11) (undo-tree-id324 . -11) (undo-tree-id325 . -11) (undo-tree-id326 . -11) (undo-tree-id327 . -11) (undo-tree-id328 . -11) (undo-tree-id329 . -11) (undo-tree-id330 . -11) (undo-tree-id331 . -11) (undo-tree-id332 . -11) (undo-tree-id333 . -11) (undo-tree-id334 . -11) (undo-tree-id335 . -11) (undo-tree-id336 . -11) (undo-tree-id337 . -11) (undo-tree-id338 . -11) (undo-tree-id339 . -11) (undo-tree-id340 . -11) (undo-tree-id341 . -11) (undo-tree-id342 . -11) (undo-tree-id343 . -11) (undo-tree-id344 . -11) (undo-tree-id345 . -11) (undo-tree-id346 . -11) (undo-tree-id347 . -11) (undo-tree-id348 . -11) (undo-tree-id349 . -11) (undo-tree-id350 . -11) (undo-tree-id351 . -11) (undo-tree-id352 . -11) (undo-tree-id353 . -11) (undo-tree-id354 . -11) (undo-tree-id355 . -11) (undo-tree-id356 . -11) (undo-tree-id357 . -11) (undo-tree-id358 . -11) (undo-tree-id359 . -11) (undo-tree-id360 . -11) (undo-tree-id361 . -11) (undo-tree-id362 . -11) (undo-tree-id363 . -11) (undo-tree-id364 . -11) (undo-tree-id365 . -11) (undo-tree-id366 . -11) (undo-tree-id367 . -11) (undo-tree-id368 . -11) (undo-tree-id369 . -11) (undo-tree-id370 . -11) (undo-tree-id371 . -11) (undo-tree-id372 . -11) (undo-tree-id373 . -11) (undo-tree-id374 . -11) (undo-tree-id375 . -11) (undo-tree-id376 . -11) (undo-tree-id377 . -11) (undo-tree-id378 . -11) (undo-tree-id379 . -11) (undo-tree-id380 . -11) (undo-tree-id381 . -11) (undo-tree-id382 . -11) (undo-tree-id383 . -11) (undo-tree-id384 . -11) (undo-tree-id385 . -8) (undo-tree-id386 . -8) (undo-tree-id387 . -8) (undo-tree-id388 . -8) (undo-tree-id389 . -8) (undo-tree-id390 . -8) (undo-tree-id391 . -8) (undo-tree-id392 . -8) (undo-tree-id393 . -8) (undo-tree-id394 . -8) (undo-tree-id395 . -8) (undo-tree-id396 . -8) (undo-tree-id397 . -8) (undo-tree-id398 . -8) (undo-tree-id399 . -8) (undo-tree-id400 . -8) (undo-tree-id401 . -8) (undo-tree-id402 . -8) (undo-tree-id403 . -8) (undo-tree-id404 . -8) (undo-tree-id405 . -8) (undo-tree-id406 . -8) (undo-tree-id407 . -8) (undo-tree-id408 . -8) (undo-tree-id409 . -8) (undo-tree-id410 . -8) (undo-tree-id411 . -8) (undo-tree-id412 . -8) (undo-tree-id413 . -8) (undo-tree-id414 . -8) (undo-tree-id415 . -8) (undo-tree-id416 . -8) (undo-tree-id417 . -8) (undo-tree-id418 . -8) (undo-tree-id419 . -8) (undo-tree-id420 . -8) (undo-tree-id421 . -8) (undo-tree-id422 . -8) (undo-tree-id423 . -8) (undo-tree-id424 . -8) (undo-tree-id425 . -8) (undo-tree-id426 . -8) (undo-tree-id427 . -3) (undo-tree-id428 . -3) (undo-tree-id429 . -3) (undo-tree-id430 . -3) (undo-tree-id431 . -3) (undo-tree-id432 . -3) (undo-tree-id433 . -3) (undo-tree-id434 . -3) (undo-tree-id435 . -3) (undo-tree-id436 . -3) (undo-tree-id437 . -3) (undo-tree-id438 . -3) (undo-tree-id439 . -3) (undo-tree-id440 . -3) (undo-tree-id441 . -3) (undo-tree-id442 . -3) (undo-tree-id443 . -3) (undo-tree-id444 . -3) (undo-tree-id445 . -3) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -2) (undo-tree-id449 . -2) (undo-tree-id450 . -2) (undo-tree-id451 . -2) (undo-tree-id452 . -2) (undo-tree-id453 . -2) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -2) (undo-tree-id467 . -2) (undo-tree-id468 . -2) (undo-tree-id469 . -2) (undo-tree-id470 . -2) (undo-tree-id471 . -2) (undo-tree-id472 . -2) (undo-tree-id473 . -2) (undo-tree-id474 . -2) (undo-tree-id475 . -2) (undo-tree-id476 . -2) (undo-tree-id477 . -2) (undo-tree-id478 . -2) (undo-tree-id479 . -2) (undo-tree-id480 . -2) (undo-tree-id481 . -2) (undo-tree-id482 . -2) (undo-tree-id483 . -2) (undo-tree-id484 . -2) (undo-tree-id485 . -2) (undo-tree-id486 . -2) (undo-tree-id487 . -2) (undo-tree-id488 . -2) (undo-tree-id489 . -2) (undo-tree-id490 . -2) (undo-tree-id491 . -2) (undo-tree-id492 . -2) (undo-tree-id493 . -2) (undo-tree-id494 . -2) (undo-tree-id495 . -2) (undo-tree-id496 . -2) (undo-tree-id497 . -2) (undo-tree-id498 . -2) (undo-tree-id499 . -2) (undo-tree-id500 . -2) (undo-tree-id501 . -2) (undo-tree-id502 . -2) (undo-tree-id503 . -2) (undo-tree-id504 . -2) (undo-tree-id505 . -2) (undo-tree-id506 . -2) (undo-tree-id507 . -2) (undo-tree-id508 . -2) (undo-tree-id509 . -2) (undo-tree-id510 . -2) (undo-tree-id511 . -2) (undo-tree-id512 . -2) (undo-tree-id513 . -2) (undo-tree-id514 . -2) (undo-tree-id515 . -2) (undo-tree-id516 . -2) (undo-tree-id517 . -2) (undo-tree-id518 . -2) (undo-tree-id519 . -2) (undo-tree-id520 . -2) (undo-tree-id521 . -2) (undo-tree-id522 . -2) (undo-tree-id523 . -2) (undo-tree-id524 . -2) (undo-tree-id525 . -2) (undo-tree-id526 . -2) (undo-tree-id527 . -2) (undo-tree-id528 . -32) 24410 (t 26021 31214 113357 723000)) nil (26021 31254 691872 0) 0 nil])
([nil nil ((#("         (\"C-M-$\" . jinx-languages)))
" 0 10 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 10 17 (face (font-lock-string-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 17 36 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 36 37 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 37 38 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("               " 0 6 (face org-indent) 6 15 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 24408) (undo-tree-id108 . 1) (undo-tree-id109 . -37) (undo-tree-id110 . -2) (undo-tree-id111 . -11) (undo-tree-id112 . -11) (undo-tree-id113 . -11) (undo-tree-id114 . -11) (undo-tree-id115 . -11) (undo-tree-id116 . -11) (undo-tree-id117 . -11) (undo-tree-id118 . -11) (undo-tree-id119 . -11) (undo-tree-id120 . -11) (undo-tree-id121 . -11) (undo-tree-id122 . -11) (undo-tree-id123 . -11) (undo-tree-id124 . -11) (undo-tree-id125 . -11) (undo-tree-id126 . -11) (undo-tree-id127 . -11) (undo-tree-id128 . -11) (undo-tree-id129 . -11) (undo-tree-id130 . -11) (undo-tree-id131 . -11) (undo-tree-id132 . -11) (undo-tree-id133 . -11) (undo-tree-id134 . -11) (undo-tree-id135 . -11) (undo-tree-id136 . -11) (undo-tree-id137 . -11) (undo-tree-id138 . -11) (undo-tree-id139 . -11) (undo-tree-id140 . -11) (undo-tree-id141 . -11) (undo-tree-id142 . -11) (undo-tree-id143 . -11) (undo-tree-id144 . -11) (undo-tree-id145 . -11) (undo-tree-id146 . -11) (undo-tree-id147 . -11) (undo-tree-id148 . -11) (undo-tree-id149 . -11) (undo-tree-id150 . -11) (undo-tree-id151 . -11) (undo-tree-id152 . -11) (undo-tree-id153 . -11) (undo-tree-id154 . -11) (undo-tree-id155 . -11) (undo-tree-id156 . -11) (undo-tree-id157 . -11) (undo-tree-id158 . -11) (undo-tree-id159 . -11) (undo-tree-id160 . -37) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -38) 24410) nil (26021 31254 691586 0) 0 nil])
([nil nil ((24407 . 24408)) nil (26021 31254 691491 0) 0 nil])
([nil nil ((#(";;" 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t)) . 24263) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -2) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -2) (undo-tree-id90 . -1) (#(";;" 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t)) . 24251) (undo-tree-id91 . -2) (#(";;" 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t)) . 24240) (undo-tree-id92 . -2) (#(";;" 0 2 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t)) . 24228) (undo-tree-id93 . -2) (#(";;" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t)) . 24205) (undo-tree-id94 . -2) 24272 (t 26021 31254 731547 282000)) nil (26021 32176 782839 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24205) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (t 26021 32176 825816 63000)) nil (26021 32179 277559 0) 0 nil])
([nil nil ((24336 . 24339) (t 26021 32179 317546 939000)) nil (26021 32185 751516 0) 0 nil])
([nil nil ((24357 . 24359)) nil (26021 32187 934794 0) 0 nil] [nil nil ((24359 . 24362) (t 26021 32181 897356 912000)) ((#(";; " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 24359) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (t 26021 32183 615872 581000)) (26021 32183 576180 0) 0 nil])
([nil nil ((nil face org-link 287 . 288) (nil font-lock-multiline t 287 . 288) (nil fontified t 287 . 288) (nil line-prefix #("  " 0 2 (face org-indent)) 287 . 288) (nil wrap-prefix #("  " 0 2 (face org-indent)) 287 . 288) (287 . 288) (t 26021 32187 974972 93000) 275) nil (26021 32229 44255 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 311 . 312) (nil fontified nil 288 . 312) (288 . 312)) nil (26021 32229 44250 0) 0 nil])
([nil nil ((nil face org-link 312 . 313) (nil font-lock-multiline t 312 . 313) (nil fontified t 312 . 313) (nil line-prefix #("  " 0 2 (face org-indent)) 312 . 313) (nil wrap-prefix #("  " 0 2 (face org-indent)) 312 . 313) (312 . 313) (t 26021 32229 87104 350000) 309) nil (26021 32268 911854 0) 0 nil])
([nil nil ((#("p" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -24429) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 24430 (24429 . 24430) (24428 . 24429) (t 26021 32268 951559 181000) 24383) nil (26023 64716 36565 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 24429 . 24430) (#("
" 0 1 (wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -24591) (24429 . 24592)) nil (26023 64716 36509 0) 0 nil])
([nil nil ((24443 . 24447) (#("copilot" 0 7 (help-echo nil face (font-lock-constant-face org-block) font-lock-multiline t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24443) (undo-tree-id32 . -6) (undo-tree-id33 . -7) (undo-tree-id34 . -7) (t 26023 64716 94837 300000)) nil (26023 64739 474386 0) 0 nil])
([nil nil ((24487 . 24497) (#("c" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . -24487) (undo-tree-id19 . -1) (#("o" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . -24488) (undo-tree-id20 . -1) (#("p" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . -24489) (undo-tree-id21 . -1) (#("i" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . -24490) (undo-tree-id22 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . -24491) (undo-tree-id23 . -1) (#("o" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . -24492) (undo-tree-id24 . -1) (#("t" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . -24493) (undo-tree-id25 . -1) (#("." 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . -24494) (undo-tree-id26 . -1) (#("e" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . -24495) (undo-tree-id27 . -1) (#("l" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . -24496) (undo-tree-id28 . -1) 24497 (24479 . 24486) (#("zerolfx" 0 7 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24479) (undo-tree-id29 . -6) (undo-tree-id30 . -7) (undo-tree-id31 . -7)) nil (26023 64739 474380 0) 0 nil])
([nil nil ((#(":" 0 1 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24499) (t 26023 64739 514008 589000)) nil (26023 64749 704232 0) 0 nil])
([nil nil ((#("f" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24499)) nil (26023 64749 704231 0) 0 nil])
([nil nil ((#("i" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24499)) nil (26023 64749 704230 0) 0 nil])
([nil nil ((#("l" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24499)) nil (26023 64749 704230 0) 0 nil])
([nil nil ((#("e" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24499)) nil (26023 64749 704229 0) 0 nil])
([nil nil ((#("s" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24499)) nil (26023 64749 704228 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24499)) nil (26023 64749 704227 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498)) nil (26023 64749 704227 0) 0 nil])
([nil nil ((#("(" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498) (undo-tree-id44 . 1) (undo-tree-id45 . -1)) nil (26023 64749 704226 0) 0 nil])
([nil nil ((#("\"" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498) (undo-tree-id43 . 1)) nil (26023 64749 704223 0) 0 nil])
([nil nil ((#("d" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498) (undo-tree-id42 . 1)) nil (26023 64749 704222 0) 0 nil])
([nil nil ((#("i" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498) (undo-tree-id41 . 1)) nil (26023 64749 704221 0) 0 nil])
([nil nil ((#("s" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498) (undo-tree-id40 . 1)) nil (26023 64749 704219 0) 0 nil])
([nil nil ((#("t" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498) (undo-tree-id39 . 1)) nil (26023 64749 704218 0) 0 nil])
([nil nil ((#("\"" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498) (undo-tree-id38 . 1)) nil (26023 64749 704216 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498) (undo-tree-id37 . 1)) nil (26023 64749 704215 0) 0 nil])
([nil nil ((#("\"" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498) (undo-tree-id36 . 1)) nil (26023 64749 704213 0) 0 nil])
([nil nil ((#("*" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498) (undo-tree-id35 . 1)) nil (26023 64749 704212 0) 0 nil])
([nil nil ((#("." 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498)) nil (26023 64749 704205 0) 0 nil])
([nil nil ((#("e" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498)) nil (26023 64749 704204 0) 0 nil])
([nil nil ((#("l" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498)) nil (26023 64749 704203 0) 0 nil])
([nil nil ((#("\"" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24498)) nil (26023 64749 704199 0) 0 nil])
([nil nil ((#("  :config
" 0 2 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t) 2 9 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 10 (face (org-block) font-lock-multiline t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24513) (undo-tree-id216 . -2) (undo-tree-id217 . -9) (undo-tree-id218 . -8) (undo-tree-id219 . -8) (undo-tree-id220 . -8) (undo-tree-id221 . -8) (undo-tree-id222 . -8) (undo-tree-id223 . -8) (undo-tree-id224 . -8) (undo-tree-id225 . -3) (undo-tree-id226 . -3) (undo-tree-id227 . -3) (undo-tree-id228 . -3) (undo-tree-id229 . -3) (undo-tree-id230 . -3) (undo-tree-id231 . -3) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (undo-tree-id244 . -2) (undo-tree-id245 . -2) (undo-tree-id246 . -2) (undo-tree-id247 . -2) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -10) 24515 (t 26023 64749 747193 312000)) nil (26023 64756 582223 0) 0 nil])
([nil nil ((#("  (add-hook 'prog-mode-hook 'copilot-mode))
" 0 43 (face (org-block) font-lock-multiline t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t) 43 44 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 24513) (undo-tree-id168 . -2) (undo-tree-id169 . -43) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -3) (undo-tree-id173 . -3) (undo-tree-id174 . -3) (undo-tree-id175 . -3) (undo-tree-id176 . -3) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -43) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . 42) (undo-tree-id202 . -3) (undo-tree-id203 . 3) (undo-tree-id204 . -42) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -44) 24515) nil (26023 64756 582187 0) 0 nil])
([nil nil ((#("  :ensure t
" 0 2 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t) 2 9 (face (font-lock-builtin-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t) 9 12 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24501) (undo-tree-id46 . -2) (undo-tree-id47 . -11) (undo-tree-id48 . -10) (undo-tree-id49 . -10) (undo-tree-id50 . -10) (undo-tree-id51 . -10) (undo-tree-id52 . -10) (undo-tree-id53 . -10) (undo-tree-id54 . -10) (undo-tree-id55 . -10) (undo-tree-id56 . -10) (undo-tree-id57 . -10) (undo-tree-id58 . -10) (undo-tree-id59 . -10) (undo-tree-id60 . -10) (undo-tree-id61 . -10) (undo-tree-id62 . -10) (undo-tree-id63 . -10) (undo-tree-id64 . -12) (undo-tree-id65 . -12) (undo-tree-id66 . -12) (undo-tree-id67 . -12) (undo-tree-id68 . -12) (undo-tree-id69 . -12) (undo-tree-id70 . -12) (undo-tree-id71 . -12) (undo-tree-id72 . -12) (undo-tree-id73 . -12) (undo-tree-id74 . -12) (undo-tree-id75 . -12) (undo-tree-id76 . -12) (undo-tree-id77 . -12) (undo-tree-id78 . -12) (undo-tree-id79 . -12) (undo-tree-id80 . -12) (undo-tree-id81 . -12) (undo-tree-id82 . -12) (undo-tree-id83 . -12) (undo-tree-id84 . -12) (undo-tree-id85 . -12) (undo-tree-id86 . -12) (undo-tree-id87 . -12) (undo-tree-id88 . -12) (undo-tree-id89 . -12) (undo-tree-id90 . -12) (undo-tree-id91 . -12) (undo-tree-id92 . -12) (undo-tree-id93 . -12) (undo-tree-id94 . -12) (undo-tree-id95 . -12) (undo-tree-id96 . -12) (undo-tree-id97 . -12) (undo-tree-id98 . -12) (undo-tree-id99 . -12) (undo-tree-id100 . -12) (undo-tree-id101 . -12) (undo-tree-id102 . -12) (undo-tree-id103 . -12) (undo-tree-id104 . -12) (undo-tree-id105 . -12) (undo-tree-id106 . -12) (undo-tree-id107 . -12) (undo-tree-id108 . -12) (undo-tree-id109 . -12) (undo-tree-id110 . -12) (undo-tree-id111 . -12) (undo-tree-id112 . -12) (undo-tree-id113 . -12) (undo-tree-id114 . -12) (undo-tree-id115 . -12) (undo-tree-id116 . -12) (undo-tree-id117 . -12) (undo-tree-id118 . -12) (undo-tree-id119 . -12) (undo-tree-id120 . -12) (undo-tree-id121 . -12) (undo-tree-id122 . -12) (undo-tree-id123 . -12) (undo-tree-id124 . -12) (undo-tree-id125 . -12) (undo-tree-id126 . -12) (undo-tree-id127 . -12) (undo-tree-id128 . -12) (undo-tree-id129 . -12) (undo-tree-id130 . -12) (undo-tree-id131 . -12) (undo-tree-id132 . -12) (undo-tree-id133 . -12) (undo-tree-id134 . -12) (undo-tree-id135 . -12) (undo-tree-id136 . -12) (undo-tree-id137 . -12) (undo-tree-id138 . -12) (undo-tree-id139 . -12) (undo-tree-id140 . -12) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -12) 24503) nil (26023 64756 582147 0) 0 nil])
([nil nil ((24500 . 24501)) nil (26023 64756 582035 0) 0 nil])
([nil nil ((#(")" 0 1 (face (org-block) font-lock-multiline t help-echo nil wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 24500) (undo-tree-id257 . 1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (t 26023 64756 623180 974000)) nil (26023 64757 827598 0) 0 nil])
([nil nil ((#("(use-package nano
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 13 17 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil src-block t) 17 18 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 24430) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . 18) (undo-tree-id130 . -1) (undo-tree-id131 . -18) (undo-tree-id132 . -17) (t 26023 64757 867141 929000)) nil (26023 64852 54756 0) 0 nil])
([nil nil ((#("  :elpaca (:host github :repo \"rougier/nano-emacs\"))
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 11 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11 16 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 16 24 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24 29 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 29 30 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30 50 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 50 52 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 52 53 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 24430) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -52) (undo-tree-id102 . -52) (undo-tree-id103 . -53)) nil (26023 64852 54729 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24429) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (t 26023 64852 95033 671000)) nil (26023 64852 880974 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 663 . 664) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -734) (663 . 735) 594 (t 26023 64852 920046 136000)) nil (26023 64915 767425 0) 0 nil])
([nil nil ((729 . 736) (726 . 729) (#("mu4e" 0 4 (help-echo nil face (font-lock-string-face org-block) font-lock-multiline t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 726) (undo-tree-id0 . -3) (undo-tree-id1 . -4) (undo-tree-id2 . -4) (undo-tree-id3 . -4) (undo-tree-id4 . -4) (undo-tree-id5 . -4) (undo-tree-id6 . -4) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (undo-tree-id9 . -4)) nil (26023 64915 767420 0) 0 nil])
([nil nil ((#("emacs" 0 5 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 726) (undo-tree-id10 . -4) (undo-tree-id11 . -5) (t 26023 64915 818668 615000)) nil (26023 64923 184026 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 735 . 736) (nil fontified nil 731 . 736) (731 . 736) 730) nil (26023 64926 807955 0) 0 nil] [nil nil ((nil rear-nonsticky nil 732 . 733) (nil fontified nil 728 . 733) (728 . 733) 727) ((#("emacs" 0 4 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 4 5 (src-block t help-echo nil face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky nil fontified nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 728) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (nil rear-nonsticky t 732 . 733)) (26023 64923 182827 0) 0 nil])
([nil nil ((#("-" 0 1 (face (font-lock-string-face org-block) font-lock-multiline t help-echo nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t)) . 726) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1)) nil (26023 64926 807953 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 730 . 731) (nil fontified nil 730 . 731) (730 . 731) 729) nil (26023 65074 323015 0) 0 nil])
([nil nil ((3199 . 3202)) ((#(";; " 0 3 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 3199) (t 26023 65074 83346 321000)) (26023 65076 509320 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 312 . 313) (#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . -337) (313 . 338) (nil face org-link 312 . 313) (nil font-lock-multiline t 312 . 313) (nil fontified t 312 . 313) (nil line-prefix #("  " 0 2 (face org-indent)) 312 . 313) (nil wrap-prefix #("  " 0 2 (face org-indent)) 312 . 313) (312 . 313) 304 (t 26023 65074 83346 321000)) nil (26023 65086 509909 0) 0 nil] [nil nil ((4159 . 4162) 3275 (t 26023 64972 723816 510000)) ((#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 4159)) (26023 65071 391702 0) 0 nil] [nil nil ((4159 . 4162) 3275 (t 26023 64961 194279 706000)) ((#(";; " 0 3 (src-block t help-echo nil face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 4159) (t 26023 64970 571265 645000)) (26023 64970 531675 0) 0 nil])
([nil nil ((332 . 339) (#("minad" 0 4 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link help-echo "LINK: https://github.com/minad" wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t htmlize-link (:uri "https://github.com/minad")) 4 5 (font-lock-multiline t keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link help-echo "LINK: https://github.com/minad" wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://github.com/minad"))) . 332) (undo-tree-id94 . -4) (undo-tree-id95 . -5) (undo-tree-id96 . -5) (t 26023 65086 887355 507000)) nil (26023 65093 119931 0) 0 nil] [nil nil ((#("minad" 0 4 (font-lock-multiline t help-echo "LINK: https://github.com/minad" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t htmlize-link (:uri "https://github.com/minad")) 4 5 (font-lock-multiline t help-echo "LINK: https://github.com/minad" keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face org-link wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) htmlize-link (:uri "https://github.com/minad"))) . 332) (undo-tree-id91 . -4) (undo-tree-id92 . -5) (undo-tree-id93 . -5)) ((332 . 337)) (26023 65086 509659 0) 0 nil])
([nil nil ((4205 . 4226) (t 26023 64983 481795 29000)) ((#(" ;; TODO turn this on" 0 4 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 4 8 (face ((:foreground "#cc9393") hl-todo font-lock-comment-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 8 19 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t) 19 21 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 4205) (undo-tree-id81 . -19) (undo-tree-id82 . -19) (undo-tree-id83 . -19) (undo-tree-id84 . -19) (undo-tree-id85 . -19) (undo-tree-id86 . -19) (undo-tree-id87 . -19) (undo-tree-id88 . -19) (undo-tree-id89 . -19) (undo-tree-id90 . -19)) (26023 65070 970070 0) 0 nil])
nil
([nil nil ((2590 . 2593) (#("A" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -2590) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 2591 (2586 . 2591) (2586 . 2587) (t 26023 65093 160084 488000)) nil (26024 919 733992 0) 0 nil])
nil
([nil nil ((4232 . 4245) (#("t" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . -4232) (undo-tree-id34 . -1) 4233 (4224 . 4233) (#("on" 0 2 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 4224) (undo-tree-id35 . -1) (undo-tree-id37 . -1) (undo-tree-id39 . -1) (undo-tree-id41 . -1) (undo-tree-id43 . -1) (undo-tree-id45 . -2) (t 26023 64992 344313 752000)) ((4224 . 4226) (#("if nano t" 0 8 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil) 8 9 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 4224) (4232 . 4233) (#("does not work" 0 13 (face (font-lock-comment-face org-block) font-lock-multiline t help-echo nil src-block t font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 4232)) (26023 65069 538114 0) 0 nil])
([nil nil ((2614 . 2615) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -2614) (undo-tree-id24 . -1) 2615 (2606 . 2615) (2594 . 2617) (#("<s" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -2594) (undo-tree-id25 . -2) 2596 (2594 . 2596) (2593 . 2594) (t 26024 919 777061 852000) 2589) nil (26024 927 865433 0) 0 nil])
([nil nil ((3240 . 3244) (t 26023 64997 469565 407000)) ((#("TDOD" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 1 2 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 2 3 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 3 4 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 3240) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -4) (undo-tree-id71 . 4) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4)) (26023 65069 145740 0) 0 nil])
([nil nil ((2614 . 2615)) nil (26024 1031 522801 0) 0 nil])
([nil nil ((3244 . 3245)) ((#(" " 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 3244)) (26023 65068 895139 0) 0 nil])
([nil nil ((2627 . 2638) (2626 . 2628) (#("\"" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 2626) (2618 . 2627) (2617 . 2619) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2617) (2617 . 2618)) ((#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2617) (2617 . 2618) (#("()" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 2617) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("message \"" 0 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 8 9 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 2618) (undo-tree-id360 . -8) (undo-tree-id361 . -8) (undo-tree-id362 . -8) (undo-tree-id363 . -8) (undo-tree-id364 . -8) (2626 . 2627) (#("\"\"" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 2626) (undo-tree-id365 . -2) (undo-tree-id366 . -2) (undo-tree-id367 . -2) (undo-tree-id368 . -2) (undo-tree-id369 . -2) (#("before nano" 0 11 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 2627)) (26024 1032 217491 0) 0 nil])
([nil nil ((#("D" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 3241) (undo-tree-id48 . -1) (t 26023 65007 125574 713000)) ((3241 . 3242)) (26023 65068 573129 0) 0 nil])
([nil nil ((4251 . 4254)) ((#(";; " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 4251)) (26024 1034 118358 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3242 . 3243) (nil fontified nil 3242 . 3243) (3242 . 3243) 3241) ((#("D" 0 1 (face org-level-3 rear-nonsticky nil fontified nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)))) . 3242) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (nil rear-nonsticky t 3242 . 3243)) (26023 65068 267362 0) 0 nil])
([nil nil ((9165 . 9166) (t 26024 1036 595523 757000)) nil (26024 1040 44768 0) 0 nil] [nil nil ((9135 . 9138)) ((#(";; " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 9135)) (26024 1032 975994 0) 0 nil])
([nil nil ((3243 . 3244)) ((#("O" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 3243) (undo-tree-id53 . -1) (undo-tree-id54 . -1)) (26023 65060 390384 0) 0 nil])
([nil nil ((9135 . 9137) (t 26024 1040 87328 189000)) nil (26024 1048 549444 0) 0 nil])
([nil nil ((9170 . 9173) (#(")" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -9170) (undo-tree-id28 . -1) (undo-tree-id29 . 1) (undo-tree-id30 . -1) 9171 (9170 . 9171) (9169 . 9170) 9137) ((#("
" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 9169) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . 1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#(")" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9170) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (9170 . 9171) (#("  )" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9170) (undo-tree-id294 . -2) (undo-tree-id295 . -3) (undo-tree-id296 . -3) (undo-tree-id297 . -3) (undo-tree-id298 . -3) (undo-tree-id299 . -3) (undo-tree-id300 . -3) (undo-tree-id301 . -3) (undo-tree-id302 . -3) (undo-tree-id303 . -3) (undo-tree-id304 . -3) (undo-tree-id305 . -3) (undo-tree-id306 . -3) (undo-tree-id307 . -3) (undo-tree-id308 . -3) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (undo-tree-id311 . 1) (undo-tree-id312 . -3) (undo-tree-id313 . -3) (undo-tree-id314 . -3) (undo-tree-id315 . -3) (undo-tree-id316 . -3) (undo-tree-id317 . -3) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) (undo-tree-id321 . -2) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (undo-tree-id324 . -2) (undo-tree-id325 . -2) (undo-tree-id326 . -2) (undo-tree-id327 . -2) (undo-tree-id328 . -2) (undo-tree-id329 . -2) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (undo-tree-id335 . -2) (undo-tree-id336 . -2) (undo-tree-id337 . -2)) (26024 1030 194081 0) 0 nil])
([nil nil ((#("D" 0 1 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 3244) (undo-tree-id49 . 1) (undo-tree-id50 . -1) (undo-tree-id52 . -1) (t 26023 65011 135812 951000)) ((3244 . 3245) (t 26023 65060 19839 724000)) (26023 65059 215933 0) 0 nil])
([nil nil ((9125 . 9128)) nil (26024 1048 549440 0) 0 nil])
([nil nil ((9173 . 9174) (t 26024 997 917352 742000)) ((#(")" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9173) (undo-tree-id246 . 1) (undo-tree-id247 . -1)) (26024 1029 853571 0) 0 nil])
([nil nil ((8396 . 8399) (8419 . 8422) (8431 . 8434) (8439 . 8441) (8441 . 8442) (8486 . 8488) (8488 . 8489) (8525 . 8528) (8561 . 8564) (8618 . 8621) (8697 . 8700) (8809 . 8811) (8811 . 8812) (8845 . 8848) (8885 . 8888) (8926 . 8928) (8952 . 8953) (8955 . 8957) (8957 . 8958) (8965 . 8968) (9025 . 9028) (9076 . 9079) (9086 . 9089) 8396 (t 26023 65012 49013 593000)) ((#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 9086) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 9076) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 9025) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8965) (#(" " 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8957) (#(";;" 0 2 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8955) (#(" " 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("                                 " 0 6 (face org-indent) 6 33 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8952) (#(";;" 0 2 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8926) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8885) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8845) (#(" " 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8811) (#(";;" 0 2 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8809) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8697) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8618) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8561) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8525) (#(" " 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8488) (#(";;" 0 2 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8486) (#(" " 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8441) (#(";;" 0 2 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8439) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8431) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified nil)) . 8419) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) fontified t)) . 8396)) (26023 65055 786065 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 9127) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (t 26024 1048 590671 334000)) nil (26024 1049 137147 0) 0 nil])
([nil nil ((#("  ))
" 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 4 5 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 9170) (undo-tree-id100 . 1) (undo-tree-id101 . -3) (undo-tree-id102 . 2) (undo-tree-id103 . -4) (undo-tree-id104 . -4) 9173 (t 26024 1002 136846 12000)) ((9170 . 9175)) (26024 1029 586705 0) 0 nil])
([nil nil ((8363 . 8368) (t 26023 65043 413678 814000)) ((#("TODO " 0 4 (face (org-todo org-todo org-level-3) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 4 5 (face org-level-3 wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 8363) (t 26023 65048 634650 787000)) (26023 65048 595096 0) 0 nil])
([nil nil ((9555 . 9558) (t 26024 1049 178713 992000)) nil (26024 1060 956181 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 9134 . 9135) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -9137) (9132 . 9138) 9123) ((#("
  ))
" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2 3 (src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) rear-nonsticky nil help-echo nil font-lock-multiline t face (org-block)) 3 5 (src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 5 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 9132) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -5) (undo-tree-id200 . -5) (undo-tree-id201 . -5) (undo-tree-id202 . -5) (undo-tree-id203 . -5) (undo-tree-id204 . -5) (undo-tree-id205 . -5) (undo-tree-id206 . -5) (undo-tree-id207 . -5) (undo-tree-id208 . -5) (undo-tree-id209 . -5) (undo-tree-id210 . -5) (undo-tree-id211 . -5) (undo-tree-id212 . -5) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -5) (undo-tree-id216 . -5) (undo-tree-id217 . -5) (undo-tree-id218 . -5) (undo-tree-id219 . -5) (undo-tree-id220 . -5) (undo-tree-id221 . -5) (undo-tree-id222 . -5) (undo-tree-id223 . -5) (undo-tree-id224 . -5) (undo-tree-id225 . -5) (undo-tree-id226 . -5) (undo-tree-id227 . -5) (undo-tree-id228 . -5) (undo-tree-id229 . -5) (undo-tree-id230 . -5) (undo-tree-id231 . -3) (undo-tree-id232 . -3) (undo-tree-id233 . -3) (undo-tree-id234 . -3) (undo-tree-id235 . -3) (undo-tree-id236 . -3) (undo-tree-id237 . -3) (undo-tree-id238 . -3) (undo-tree-id239 . -3) (undo-tree-id240 . -3) (undo-tree-id241 . -3) (undo-tree-id242 . -3) (undo-tree-id243 . -3) (undo-tree-id244 . -3) (undo-tree-id245 . -3) (9137 . 9138) (nil rear-nonsticky t 9134 . 9135)) (26024 1029 272920 0) 0 nil])
nil
([nil nil ((9942 . 9945) (t 26024 1061 1250 204000)) nil (26024 1093 834543 0) 0 nil])
([nil nil ((#("  :config
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 10 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 9123) (undo-tree-id31 . -2) (undo-tree-id32 . -9) (undo-tree-id34 . -2) (undo-tree-id36 . -2) (undo-tree-id38 . -2) (undo-tree-id40 . -2) (undo-tree-id42 . -2) (undo-tree-id44 . -2) (undo-tree-id46 . -2) (undo-tree-id48 . -2) (undo-tree-id50 . -2) (undo-tree-id52 . -2) (undo-tree-id54 . -2) (undo-tree-id56 . -2) (undo-tree-id58 . -2) (undo-tree-id60 . -2) (undo-tree-id62 . -2) (undo-tree-id64 . -2) (undo-tree-id66 . -2) (undo-tree-id68 . -2) (undo-tree-id70 . -2) (undo-tree-id72 . -2) (undo-tree-id74 . -2) (undo-tree-id76 . -2) (undo-tree-id78 . -2) (undo-tree-id80 . -2) (undo-tree-id82 . -2) (undo-tree-id84 . -2) (undo-tree-id86 . -2) (undo-tree-id88 . -2) (undo-tree-id90 . -2) (undo-tree-id92 . -2) (undo-tree-id94 . -2) (undo-tree-id96 . -2) (undo-tree-id98 . -2) 9125) ((9123 . 9133)) (26024 1028 987972 0) 0 nil])
([nil nil ((22079 . 22080)) nil (26024 1098 504030 0) 0 nil] [nil nil ((22056 . 22059) (t 26024 1068 351386 178000)) ((#(";; " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 22056)) (26024 1093 424644 0) 0 nil])
([nil nil ((9127 . 9128) 9125) ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9127) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1)) (26024 1028 760565 0) 0 nil])
([nil nil ((22056 . 22058)) nil (26024 1098 504026 0) 0 nil])
([nil nil ((22084 . 22085) (t 26024 1089 75736 319000)) ((#(")" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22084) (undo-tree-id377 . -1) (undo-tree-id378 . 1) (undo-tree-id379 . -1) (t 26024 1091 407061 656000)) (26024 1092 960437 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 9130 . 9131) (#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -9138) (9128 . 9139)) ((#("
  :config
" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2 3 (src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) rear-nonsticky nil help-echo nil font-lock-multiline t face (org-block)) 3 10 (src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block)) 10 11 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 9128) (undo-tree-id132 . -3) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (undo-tree-id148 . -3) (9138 . 9139) (nil rear-nonsticky t 9130 . 9131)) (26024 1028 427014 0) 0 nil])
([nil nil ((22293 . 22294) (t 26024 1098 546384 587000)) nil (26024 1118 726729 0) 0 nil])
([nil nil ((#(")
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22084) (undo-tree-id372 . 1) (undo-tree-id373 . -1) (undo-tree-id374 . 2) (undo-tree-id375 . -1) (undo-tree-id376 . -2) (t 26024 1091 407061 656000)) ((22084 . 22086)) (26024 1092 959922 0) 0 nil])
([nil nil ((9131 . 9134)) ((#(";; " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 9131)) (26024 1028 74249 0) 0 nil])
([nil nil ((22269 . 22271) (t 26024 1118 769170 304000)) nil (26024 1200 570873 0) 0 nil])
nil
([nil nil ((#("  ))
" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1 2 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) rear-nonsticky t help-echo nil font-lock-multiline t face (org-block)) 2 4 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 4 5 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9123) (undo-tree-id106 . -3) (undo-tree-id107 . -4) (undo-tree-id108 . 2) (undo-tree-id109 . -4) 9126 (t 26024 1011 243167 856000)) ((9123 . 9128)) (26024 1027 847734 0) 0 nil])
([nil nil ((22685 . 22686)) nil (26024 1204 139962 0) 0 nil] [nil nil ((22675 . 22678) (t 26024 1119 970215 721000)) ((#(";; " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 22675) (undo-tree-id380 . -2) (undo-tree-id381 . -2) (undo-tree-id382 . -2) (undo-tree-id383 . -2) (undo-tree-id384 . -2) (undo-tree-id385 . -2) (undo-tree-id386 . -2) (undo-tree-id387 . -2) (undo-tree-id388 . -2) (undo-tree-id389 . -2) (undo-tree-id390 . -2) (undo-tree-id391 . -2) (undo-tree-id392 . -2) (undo-tree-id393 . -2) (undo-tree-id394 . -2) (undo-tree-id395 . -2) (undo-tree-id396 . -2) (undo-tree-id397 . -2) (undo-tree-id398 . -2) (undo-tree-id399 . -2) (undo-tree-id400 . -2) (undo-tree-id401 . -2) (undo-tree-id402 . -2) (undo-tree-id403 . -2) (undo-tree-id404 . -2) (undo-tree-id405 . -2) (undo-tree-id406 . -2) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) (undo-tree-id412 . -2) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) (undo-tree-id424 . -2) (undo-tree-id425 . -2) (t 26024 1199 696895 585000)) (26024 1199 655384 0) 0 nil])
([nil nil ((#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -9178) (9173 . 9179) 9137) ((#("
  ))
" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1 2 (font-lock-fontified t src-block t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 2 3 (rear-nonsticky t font-lock-fontified t src-block t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 3 4 (font-lock-fontified t src-block t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 4 5 (font-lock-fontified t src-block t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 5 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . 9173) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (9178 . 9179)) (26024 1027 477189 0) 0 nil])
([nil nil ((22675 . 22677)) nil (26024 1204 139959 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 9123)) ((9123 . 9124) (t 26024 1014 893274 176000)) (26024 1027 387240 0) 0 nil])
([nil nil ((22691 . 22693) (t 26024 1204 181231 706000)) nil (26024 1214 991325 0) 0 nil])
([nil nil ((#(")" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block))) . 9175) (undo-tree-id110 . 1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (t 26024 1014 893274 176000)) ((9175 . 9176)) (26024 1027 386729 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . -22754) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (#("f" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . -22755) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (#("s" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . -22756) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) 22757 (22752 . 22757) (t 26024 1215 32943 818000)) nil (26024 1219 255387 0) 0 nil])
nil
([nil nil ((22923 . 22924) (t 26024 1219 299847 624000)) nil (26024 1226 631843 0) 0 nil])
([nil nil ((22886 . 22888)) nil (26024 1226 631839 0) 0 nil])
([nil nil ((22978 . 22980) (t 26024 1226 673748 657000)) nil (26024 1232 106758 0) 0 nil])
([nil nil ((23413 . 23414) (t 26024 1232 149312 518000)) nil (26024 1243 117273 0) 0 nil])
([nil nil ((23393 . 23395) (t 26024 1243 159451 122000)) nil (26024 1245 714880 0) 0 nil])
([nil nil ((23893 . 23895) (t 26024 1245 756972 630000)) nil (26024 1253 635949 0) 0 nil])
([nil nil ((36382 . 36386) (nil fontified t 36381 . 36382) (nil line-prefix "" 36381 . 36382) (nil wrap-prefix #("* " 0 2 (face org-indent)) 36381 . 36382) (nil keymap (keymap) 36381 . 36382) (nil face org-level-1 36381 . 36382) (nil fontified t 36380 . 36381) (nil line-prefix "" 36380 . 36381) (nil wrap-prefix #("* " 0 2 (face org-indent)) 36380 . 36381) (nil composition (0 1 [9673]) 36380 . 36381) (nil keymap (keymap) 36380 . 36381) (nil face org-level-1 36380 . 36381) (#("* " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (0 1 [9673]) keymap (keymap) face org-level-1) 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 36379) (36381 . 36384) (#("C" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -36381) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) 36382 (36379 . 36382) (36378 . 36379) (36366 . 36378) (nil fontified nil 36364 . 36366) (nil line-prefix #("*" 0 1 (face org-indent)) 36364 . 36366) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 36364 . 36366) (#("** " 0 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 36364) (36367 . 36369) (nil fontified t 36366 . 36367) (nil line-prefix #("**" 0 2 (face org-indent)) 36366 . 36367) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 36366 . 36367) (nil keymap (keymap) 36366 . 36367) (nil face org-level-3 36366 . 36367) (nil fontified t 36365 . 36366) (nil line-prefix #("**" 0 2 (face org-indent)) 36365 . 36366) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 36365 . 36366) (nil composition (2 1 [9632]) 36365 . 36366) (nil keymap (keymap) 36365 . 36366) (nil face org-level-3 36365 . 36366) (nil fontified t 36364 . 36365) (nil line-prefix #("**" 0 2 (face org-indent)) 36364 . 36365) (nil wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) 36364 . 36365) (nil face org-hide 36364 . 36365) (nil keymap (keymap) 36364 . 36365) (#("*** " 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3)) . 36364) (36368 . 36371) (nil fontified t 36367 . 36368) (nil line-prefix #("*" 0 1 (face org-indent)) 36367 . 36368) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 36367 . 36368) (nil keymap (keymap) 36367 . 36368) (nil face org-level-2 36367 . 36368) (nil fontified t 36366 . 36367) (nil line-prefix #("*" 0 1 (face org-indent)) 36366 . 36367) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 36366 . 36367) (nil composition (1 1 [9675]) 36366 . 36367) (nil keymap (keymap) 36366 . 36367) (nil face org-level-2 36366 . 36367) (nil fontified t 36365 . 36366) (nil line-prefix #("*" 0 1 (face org-indent)) 36365 . 36366) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 36365 . 36366) (nil face org-hide 36365 . 36366) (nil keymap (keymap) 36365 . 36366) (#("** " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . 36364) (36367 . 36371) (36363 . 36367) (t 26024 1253 677539 162000)) nil (26024 3072 536903 0) 0 nil])
([nil nil ((36391 . 36395) (#("r" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -36391) (undo-tree-id574 . -1) 36392 (36390 . 36392) (#("V" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -36390) (undo-tree-id575 . -1) (#("C" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -36391) (undo-tree-id576 . -1) 36392 (36390 . 36392) (36386 . 36390) (t 26024 3072 583076 484000)) nil (26024 3076 697735 0) 0 nil])
([nil nil ((36409 . 36410) (36400 . 36409) (#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -36400) (undo-tree-id577 . -1) 36401 (36399 . 36401) (36387 . 36410) (#("<s" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36387) (undo-tree-id578 . -2) 36389 (36387 . 36389) (36386 . 36387) (t 26024 3076 740886 130000) 36385) nil (26024 3213 425021 0) 0 nil])
([nil nil ((36453 . 36454) (36443 . 36453) (36431 . 36454) (#("<s" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36431) (undo-tree-id586 . -2) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (undo-tree-id604 . -2) (undo-tree-id605 . -2) (undo-tree-id606 . -2) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (undo-tree-id609 . -2) (undo-tree-id610 . -2) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (undo-tree-id613 . -2) (undo-tree-id614 . -2) (undo-tree-id615 . -2) (undo-tree-id616 . -2) (undo-tree-id617 . -2) (undo-tree-id618 . -2) (undo-tree-id619 . -2) (undo-tree-id620 . -2) (undo-tree-id621 . -2) (undo-tree-id622 . -2) (undo-tree-id623 . -2) (undo-tree-id624 . -2) (undo-tree-id625 . -2) (undo-tree-id626 . -2) (undo-tree-id627 . -2) (undo-tree-id628 . -2) (undo-tree-id629 . -2) (undo-tree-id630 . -2) (undo-tree-id631 . -2) (undo-tree-id632 . -2) (undo-tree-id633 . -2) (undo-tree-id634 . -2) (undo-tree-id635 . -2) (undo-tree-id636 . -2) (undo-tree-id637 . -2) (undo-tree-id638 . -2) (undo-tree-id639 . -2) (undo-tree-id640 . -2) (undo-tree-id641 . -2) (undo-tree-id642 . -2) (undo-tree-id643 . -2) (undo-tree-id644 . -2) (undo-tree-id645 . -2) (undo-tree-id646 . -2) (undo-tree-id647 . -2) (undo-tree-id648 . -2) (undo-tree-id649 . -2) (undo-tree-id650 . -2) (undo-tree-id651 . -2) (undo-tree-id652 . -2) (undo-tree-id653 . -2) (undo-tree-id654 . -2) (undo-tree-id655 . -2) (undo-tree-id656 . -2) (undo-tree-id657 . -2) (undo-tree-id658 . -2) (undo-tree-id659 . -2) (undo-tree-id660 . -2) (undo-tree-id661 . -2) (undo-tree-id662 . -2) (undo-tree-id663 . -2) (undo-tree-id664 . -2) (undo-tree-id665 . -2) (undo-tree-id666 . -2) (undo-tree-id667 . -2) (undo-tree-id668 . -2) (undo-tree-id669 . -2) (undo-tree-id670 . -2) 36433 (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36433) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) 36434 (36431 . 36434) (36430 . 36431) 36425) nil (26024 3219 764784 0) 0 nil] [nil nil ((nil rear-nonsticky nil 37479 . 37480) (nil fontified nil 37458 . 37480) (nil fontified nil 37450 . 37458) (nil fontified nil 37398 . 37450) (nil fontified nil 37332 . 37398) (nil fontified nil 37252 . 37332) (nil fontified nil 37251 . 37252) (nil fontified nil 37211 . 37251) (nil fontified nil 37173 . 37211) (nil fontified nil 37136 . 37173) (nil fontified nil 37094 . 37136) (nil fontified nil 37093 . 37094) (nil fontified nil 37036 . 37093) (nil fontified nil 36961 . 37036) (nil fontified nil 36901 . 36961) (nil fontified nil 36828 . 36901) (nil fontified nil 36751 . 36828) (nil fontified nil 36678 . 36751) (nil fontified nil 36613 . 36678) (nil fontified nil 36551 . 36613) (nil fontified nil 36471 . 36551) (nil fontified nil 36458 . 36471) (nil fontified nil 36429 . 36458) (nil fontified nil 36410 . 36429) (36410 . 37480)) ((#("(use-package corfu
  ;; Optional customizations
  ;; :custom
  ;; (corfu-cycle t)                ;; Enable cycling for `corfu-next/previous'
  ;; (corfu-auto t)                 ;; Enable auto completion
  ;; (corfu-separator ?\\s)          ;; Orderless field separator
  ;; (corfu-quit-at-boundary nil)   ;; Never quit at completion boundary
  ;; (corfu-quit-no-match nil)      ;; Never quit, even if there is no match
  ;; (corfu-preview-current nil)    ;; Disable current candidate preview
  ;; (corfu-preselect 'prompt)      ;; Preselect the prompt
  ;; (corfu-on-exact-match nil)     ;; Configure handling of exact matches
  ;; (corfu-scroll-margin 5)        ;; Use scroll margin

  ;; Enable Corfu only for certain modes.
  ;; :hook ((prog-mode . corfu-mode)
  ;;        (shell-mode . corfu-mode)
  ;;        (eshell-mode . corfu-mode))

  ;; Recommended: Enable Corfu globally.  This is recommended since Dabbrev can
  ;; be used globally (M-/).  See also the customization variable
  ;; `global-corfu-modes' to exclude certain modes.
  :init
  (global-corfu-mode))" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 13 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil src-block t) 18 19 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 19 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 21 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 24 48 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 48 50 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 50 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 53 61 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 61 63 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 63 66 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 66 120 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 120 139 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block) help-echo nil src-block t) 139 141 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 141 143 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 143 146 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 146 203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 203 205 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 205 208 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 208 268 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 268 270 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 270 273 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 273 341 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 341 343 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 343 346 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 346 418 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 418 420 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 420 423 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 423 491 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 491 493 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 493 496 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 496 551 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 551 553 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 553 556 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 556 626 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 626 628 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 628 631 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 631 683 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 683 684 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 684 686 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 686 689 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 689 726 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 726 728 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 728 731 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 731 763 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 763 765 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 765 775 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 775 801 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 801 803 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 803 813 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 813 841 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 841 842 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 842 844 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 844 847 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 847 922 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 922 924 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 924 927 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 927 988 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 988 990 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 990 993 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 993 994 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 994 1012 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block) help-echo nil src-block t) 1012 1040 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 1040 1042 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1042 1047 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-builtin-face org-block) help-echo nil src-block t) 1047 1048 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 1048 1069 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t) 1069 1070 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 36410) (undo-tree-id579 . -1069) (undo-tree-id580 . -1069) (undo-tree-id581 . 1) (undo-tree-id582 . -1070) (undo-tree-id583 . 1070) (undo-tree-id584 . -1) (undo-tree-id585 . -1069) (nil rear-nonsticky t 37479 . 37480)) (26024 3213 424501 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 37523 . 37524) (nil fontified nil 37502 . 37524) (nil fontified nil 37494 . 37502) (nil fontified nil 37442 . 37494) (nil fontified nil 37376 . 37442) (nil fontified nil 37296 . 37376) (nil fontified nil 37295 . 37296) (nil fontified nil 37255 . 37295) (nil fontified nil 37217 . 37255) (nil fontified nil 37180 . 37217) (nil fontified nil 37138 . 37180) (nil fontified nil 37137 . 37138) (nil fontified nil 37080 . 37137) (nil fontified nil 37005 . 37080) (nil fontified nil 36945 . 37005) (nil fontified nil 36872 . 36945) (nil fontified nil 36795 . 36872) (nil fontified nil 36722 . 36795) (nil fontified nil 36657 . 36722) (nil fontified nil 36595 . 36657) (nil fontified nil 36515 . 36595) (nil fontified nil 36502 . 36515) (nil fontified nil 36473 . 36502) (nil fontified nil 36454 . 36473) (36454 . 37524)) nil (26024 3219 764666 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 38244 . 38245) (nil fontified nil 38244 . 38245) (nil fontified nil 38183 . 38244) (nil fontified nil 38114 . 38183) (nil fontified nil 38053 . 38114) (nil fontified nil 37990 . 38053) (nil fontified nil 37926 . 37990) (nil fontified nil 37865 . 37926) (nil fontified nil 37805 . 37865) (nil fontified nil 37741 . 37805) (nil fontified nil 37677 . 37741) (nil fontified nil 37611 . 37677) (nil fontified nil 37552 . 37611) (nil fontified nil 37490 . 37552) (nil fontified nil 37425 . 37490) (nil fontified nil 37344 . 37425) (nil fontified nil 37267 . 37344) (nil fontified nil 37186 . 37267) (nil fontified nil 37178 . 37186) (nil fontified nil 37141 . 37178) (nil fontified nil 37108 . 37141) (nil fontified nil 37076 . 37108) (nil fontified nil 37044 . 37076) (nil fontified nil 37011 . 37044) (nil fontified nil 36977 . 37011) (nil fontified nil 36944 . 36977) (nil fontified nil 36911 . 36944) (nil fontified nil 36876 . 36911) (nil fontified nil 36836 . 36876) (nil fontified nil 36795 . 36836) (nil fontified nil 36759 . 36795) (nil fontified nil 36726 . 36759) (nil fontified nil 36690 . 36726) (nil fontified nil 36622 . 36690) (nil fontified nil 36570 . 36622) (nil fontified nil 36519 . 36570) (nil fontified nil 36468 . 36519) (nil fontified nil 36428 . 36468) (nil fontified nil 36410 . 36428) (36410 . 38245) (t 26024 3219 810069 553000)) nil (26024 3267 644639 0) 0 nil])
([nil nil ((37141 . 37143) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -37141) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -2) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -2) (37108 . 37110) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -37108) (undo-tree-id774 . -2) (37076 . 37078) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -37076) (undo-tree-id775 . -2) (37044 . 37046) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -37044) (undo-tree-id776 . -2) (37011 . 37013) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -37011) (undo-tree-id777 . -2) (36977 . 36979) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -36977) (undo-tree-id778 . -2) (36944 . 36946) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -36944) (undo-tree-id779 . -2) (36911 . 36913) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -36911) (undo-tree-id780 . -2) (36876 . 36878) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -36876) (undo-tree-id781 . -2) (36836 . 36838) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -36836) (undo-tree-id782 . -2) (36795 . 36797) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -36795) (undo-tree-id783 . -2) (36759 . 36761) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -36759) (undo-tree-id784 . -2) (36726 . 36728) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -36726) (undo-tree-id785 . -2) (36690 . 36692) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -36690) (undo-tree-id786 . -2) (36622 . 36624) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -36622) (undo-tree-id787 . -2) (36570 . 36572) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -36570) (undo-tree-id788 . -2) (36519 . 36521) (#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -36519) (undo-tree-id789 . -2) 37142 (t 26024 3267 688697 546000)) nil (26024 3309 691886 0) 0 nil])
([nil nil ((36519 . 36521) (t 26024 3309 736030 545000)) nil (26024 3317 879983 0) 0 nil])
([nil nil ((36572 . 36574)) nil (26024 3318 848467 0) 0 nil])
([nil nil ((36626 . 36628)) nil (26024 3323 805402 0) 0 nil] [nil nil ((36626 . 36628)) ((#("  " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36626) (undo-tree-id1402 . 1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1)) (26024 3318 694784 0) 0 nil])
([nil nil ((36696 . 36698)) nil (26024 3323 805402 0) 0 nil])
([nil nil ((36627 . 36629)) ((#("  " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36627) (undo-tree-id1303 . 1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1)) (26024 3318 663837 0) 0 nil])
([nil nil ((36734 . 36736)) nil (26024 3323 805401 0) 0 nil])
([nil nil ((36628 . 36630)) ((#("  " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("          " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36628) (undo-tree-id1212 . 1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1)) (26024 3318 628848 0) 0 nil])
([nil nil ((36769 . 36771)) nil (26024 3323 805401 0) 0 nil])
([nil nil ((36629 . 36631)) ((#("  " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36629) (undo-tree-id1129 . 1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1)) (26024 3318 595512 0) 0 nil])
([nil nil ((36807 . 36809)) nil (26024 3323 805400 0) 0 nil])
([nil nil ((36630 . 36632)) ((#("  " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36630) (undo-tree-id1054 . 1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1)) (26024 3318 562362 0) 0 nil])
([nil nil ((36850 . 36852)) nil (26024 3323 805400 0) 0 nil])
([nil nil ((36631 . 36633)) ((#("  " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36631) (undo-tree-id987 . 1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1)) (26024 3318 528427 0) 0 nil])
([nil nil ((36892 . 36894)) nil (26024 3323 805399 0) 0 nil])
([nil nil ((36632 . 36634)) ((#("  " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                  " 0 4 (face org-indent) 4 18 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                  " 0 4 (face org-indent) 4 18 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36632) (undo-tree-id928 . 1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1)) (26024 3318 497029 0) 0 nil])
([nil nil ((36929 . 36931)) nil (26024 3323 805399 0) 0 nil])
([nil nil ((36633 . 36635)) ((#("  " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36633) (undo-tree-id877 . 1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1)) (26024 3318 462497 0) 0 nil])
([nil nil ((36964 . 36966)) nil (26024 3323 805398 0) 0 nil])
([nil nil ((36634 . 36636)) ((#("  " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                      " 0 4 (face org-indent) 4 22 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36634) (undo-tree-id834 . 1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1)) (26024 3318 210675 0) 0 nil])
([nil nil ((36999 . 37001)) nil (26024 3323 805398 0) 0 nil])
([nil nil ((36635 . 36637)) ((#("  " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                        " 0 4 (face org-indent) 4 24 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36635) (undo-tree-id806 . 1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1)) (26024 3318 480 0) 0 nil])
([nil nil ((37035 . 37037)) nil (26024 3323 805398 0) 0 nil])
([nil nil ((36636 . 36638)) ((#("  " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                          " 0 4 (face org-indent) 4 26 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36636) (undo-tree-id793 . 1) (undo-tree-id794 . -1) (undo-tree-id795 . -2) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1)) (26024 3317 880321 0) 0 nil])
([nil nil ((37070 . 37072)) nil (26024 3323 805397 0) 0 nil])
([nil nil ((36637 . 36639)) ((#("  " 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("                            " 0 4 (face org-indent) 4 28 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36637) (undo-tree-id790 . -1) (undo-tree-id791 . -2) (undo-tree-id792 . -1)) (26024 3317 879972 0) 0 nil])
([nil nil ((37104 . 37106)) nil (26024 3323 805396 0) 0 nil])
nil
([nil nil ((37138 . 37140)) nil (26024 3323 805395 0) 0 nil])
([nil nil ((37173 . 37175)) nil (26024 3323 805392 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36387) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (#("j" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36388) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (#("j" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36389) (undo-tree-id1535 . -1) (#("j" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36390) (undo-tree-id1536 . -1) (#("j" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36391) (undo-tree-id1537 . -1) (#("j" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36392) (undo-tree-id1538 . -1) 36393 (36387 . 36393) (#("C" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36387) (undo-tree-id1539 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36388) (undo-tree-id1540 . -1) (#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36389) (undo-tree-id1541 . -1) 36390 (36388 . 36390) (36387 . 36388) (#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36387) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36388) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) 36389 (36387 . 36389) (36387 . 36388) (t 26024 3323 850329 441000)) nil (26024 3441 875758 0) 0 nil])
([nil nil ((36397 . 36405) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36397) (36398 . 36399) (#("u" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36398) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (36398 . 36399) (#("u" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36398) (undo-tree-id1548 . -1) 36399 (36398 . 36399) (#("_" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t)) . -36398) (undo-tree-id1549 . -1) 36399 (36397 . 36398) (#("
#+begin" 0 1 (fontified t) 1 8 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 36397) (36393 . 36397) (36392 . 36392) (36392 . 36393) (#("g" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36392) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36393) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36394) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) 36395 (36393 . 36395) (#("." 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36393) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) 36394 (36393 . 36394) (36391 . 36391) (36391 . 36393) (36387 . 36391) (t 26024 3441 922478 699000)) nil (26024 3509 591303 0) 0 nil])
([nil nil ((#("configured" 0 10 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36387) (undo-tree-id1559 . -9) (undo-tree-id1560 . -5) (undo-tree-id1561 . -10) (undo-tree-id1562 . -9) (undo-tree-id1563 . -9) (undo-tree-id1564 . -9) (undo-tree-id1565 . -9) (undo-tree-id1566 . -9) (undo-tree-id1567 . -9) (undo-tree-id1568 . -9) (undo-tree-id1569 . -9) (undo-tree-id1570 . -9) (undo-tree-id1571 . -9) (undo-tree-id1572 . -9) (undo-tree-id1573 . -9) (undo-tree-id1574 . -9) (undo-tree-id1575 . -9) (undo-tree-id1576 . -9) (undo-tree-id1577 . -9) (undo-tree-id1578 . -9) (undo-tree-id1579 . -9) (undo-tree-id1580 . -9) (undo-tree-id1581 . -9) (undo-tree-id1582 . -9) (undo-tree-id1583 . -9) (undo-tree-id1584 . -9) (undo-tree-id1585 . -10) (t 26024 3509 636384 25000)) nil (26024 3510 977765 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36387) (undo-tree-id1586 . 1) (undo-tree-id1587 . -1) (t 26024 3511 24341 526000)) nil (26024 3512 122316 0) 0 nil])
([nil nil ((1215 . 1216) (t 26024 3512 165733 416000)) nil (26024 4029 192750 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1395 . 1396) (nil fontified nil 1322 . 1396) (nil fontified nil 1248 . 1322) (nil fontified nil 1215 . 1248) (1215 . 1396)) nil (26024 4029 192746 0) 0 nil])
([nil nil ((36569 . 36570) (36568 . 36569) (36564 . 36568) (nil fontified t 36563 . 36564) (nil line-prefix "" 36563 . 36564) (nil wrap-prefix #("* " 0 2 (face org-indent)) 36563 . 36564) (nil keymap (keymap) 36563 . 36564) (nil face org-level-1 36563 . 36564) (nil fontified t 36562 . 36563) (nil line-prefix "" 36562 . 36563) (nil wrap-prefix #("* " 0 2 (face org-indent)) 36562 . 36563) (nil composition (0 1 [9673]) 36562 . 36563) (nil keymap (keymap) 36562 . 36563) (nil face org-level-1 36562 . 36563) (#("* " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) composition (0 1 [9673]) keymap (keymap) face org-level-1) 1 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) keymap (keymap) face org-level-1)) . 36561) (36563 . 36566) (36561 . 36563) (36561 . 36562) 36567 (t 26024 4029 240826 217000)) nil (26024 4137 872483 0) 0 nil])
([nil nil ((#("<
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36569) (undo-tree-id1694 . 1) (undo-tree-id1695 . -1) (undo-tree-id1696 . 2) (undo-tree-id1697 . -1)) nil (26024 4137 872481 0) 0 nil])
([nil nil ((#("*** Jinx
#+begin_src emacs-lisp
;; (use-package jinx
;;  :hook (emacs-startup . global-jinx-mode))
#+end_src
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 8 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 8 9 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 9 31 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 31 32 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil) 32 35 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 35 53 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 53 57 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 57 99 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 99 108 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 108 109 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line)) . 24721) (undo-tree-id1676 . -108) (undo-tree-id1677 . -8) (undo-tree-id1678 . -108) (undo-tree-id1679 . -109) (undo-tree-id1680 . -109) (undo-tree-id1681 . -109) (undo-tree-id1682 . -109) (undo-tree-id1683 . -109) (undo-tree-id1684 . -109) (undo-tree-id1685 . -109) (undo-tree-id1686 . -109) (undo-tree-id1687 . -109) (undo-tree-id1688 . -109) (undo-tree-id1689 . -109) (undo-tree-id1690 . -109) (undo-tree-id1691 . -109) (undo-tree-id1692 . -109) (undo-tree-id1693 . -109)) nil (26024 4137 872476 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 36459 . 36460) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -36568) (36459 . 36569) 36452) nil (26024 4137 872461 0) 0 nil])
([nil nil ((#("*** Jinx
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 8 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 8 9 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 36460) (undo-tree-id1588 . -8) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -9) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -9) 36461) nil (26024 4137 872456 0) 0 nil])
([nil nil ((#(";" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 36483) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (t 26024 4137 918469 111000)) nil (26024 4142 999383 0) 0 nil])
([nil nil ((#(";" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 36483) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1)) nil (26024 4142 999381 0) 0 nil])
([nil nil ((#(";" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 36502) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1)) nil (26024 4142 999378 0) 0 nil])
([nil nil ((#(";" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 36502) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1)) nil (26024 4142 999373 0) 0 nil])
([nil nil ((#(" " 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 36483) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (t 26024 4143 44402 521000)) nil (26024 4160 320401 0) 0 nil])
([nil nil ((36460 . 36467) (36460 . 36461) 36468 (t 26024 4144 260008 15000)) nil (26024 4227 19760 0) 0 nil] [nil nil ((36482 . 36483) (t 26024 4144 260008 15000) 36468) ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line help-echo nil)) . 36482) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1)) (26024 4160 319868 0) 0 nil])
([nil nil ((#("Walkin " 0 7 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36460) (undo-tree-id273 . -6) (undo-tree-id274 . -7)) nil (26024 4227 19759 0) 0 nil])
nil
([nil nil ((36469 . 36472) (36467 . 36469) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36467) (undo-tree-id260 . -1) (#("*" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36468) (undo-tree-id261 . -1) (#("*" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36469) (undo-tree-id262 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2)) . -36470) (undo-tree-id263 . -1) 36471 (36467 . 36471) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . -36467) (undo-tree-id264 . -1) (#("f" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . -36468) (undo-tree-id265 . -1) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . -36469) (undo-tree-id266 . -1) 36470 (36468 . 36470) (36467 . 36468) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . -36467) (undo-tree-id267 . -1) (#("f" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . -36468) (undo-tree-id268 . -1) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . -36469) (undo-tree-id269 . -1) 36470 (36468 . 36470) (36467 . 36468) (36466 . 36467) (#("g" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36466) (undo-tree-id270 . -1) 36467 (36463 . 36467) (#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -36463) (undo-tree-id271 . -1) (undo-tree-id272 . -1) 36464 (36460 . 36464)) nil (26024 4227 19756 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36470) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1)) nil (26024 4227 19745 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . 36470) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1)) nil (26024 4227 19734 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . 36470) (undo-tree-id186 . 1) (undo-tree-id187 . -1)) nil (26024 4227 19694 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36468) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1)) nil (26024 4227 19692 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36468) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1)) nil (26024 4227 19671 0) 0 nil])
([nil nil ((36467 . 36468) (t 26024 4227 63895 802000)) nil (26024 4242 30421 0) 0 nil])
([nil nil ((#("Walkink" 0 7 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36460) (undo-tree-id275 . 7) (36467 . 36474)) nil (26024 4308 441889 0) 0 nil])
([nil nil ((#("Walking 
" 0 7 (jinx--prefix #("1 " 0 2 (face jinx-key)) jinx--group "Suggestions from dictionary ‘en_GB’ - aspell" fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 7 8 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 8 9 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36460) (undo-tree-id446 . 1) (undo-tree-id447 . -8) (undo-tree-id448 . -9) (undo-tree-id449 . -9) (undo-tree-id450 . -9) (undo-tree-id451 . -9) (undo-tree-id452 . -9) (undo-tree-id453 . -9) (undo-tree-id454 . -9) (undo-tree-id455 . -9) (undo-tree-id456 . -9) (undo-tree-id457 . -9) (undo-tree-id458 . -9) (undo-tree-id459 . -9) (undo-tree-id460 . -9) (undo-tree-id461 . -9) (undo-tree-id462 . -9) (undo-tree-id463 . -9) (undo-tree-id464 . -9) (undo-tree-id465 . -9) (undo-tree-id466 . -9) (undo-tree-id467 . -9) (undo-tree-id468 . -9) (undo-tree-id469 . -9) (undo-tree-id470 . -9) (undo-tree-id471 . -9) (undo-tree-id472 . -9) (undo-tree-id473 . -9) (undo-tree-id474 . -9) (undo-tree-id475 . -9) (undo-tree-id476 . -9) (undo-tree-id477 . -9) (undo-tree-id478 . -9) (undo-tree-id479 . -9) (undo-tree-id480 . -9) (undo-tree-id481 . -9) (undo-tree-id482 . -9) (undo-tree-id483 . -9) (undo-tree-id484 . -9) (undo-tree-id485 . -9) (undo-tree-id486 . -9) (undo-tree-id487 . -9) (undo-tree-id488 . -9) (undo-tree-id489 . -9) (undo-tree-id490 . -9) (undo-tree-id491 . -9) (undo-tree-id492 . -9) (undo-tree-id493 . -9) (undo-tree-id494 . -9) (undo-tree-id495 . -9) (undo-tree-id496 . -9) (undo-tree-id497 . -9) (undo-tree-id498 . -9) (undo-tree-id499 . -9) (undo-tree-id500 . -9) (undo-tree-id501 . -9) (undo-tree-id502 . -9) (undo-tree-id503 . -9) (undo-tree-id504 . -9) (undo-tree-id505 . -9) (undo-tree-id506 . -9) (undo-tree-id507 . -9) (undo-tree-id508 . -9) (undo-tree-id509 . -9) (undo-tree-id510 . -9) (undo-tree-id511 . -9) (undo-tree-id512 . -9) (undo-tree-id513 . -9) (undo-tree-id514 . -9) (undo-tree-id515 . -9) (undo-tree-id516 . -9) (undo-tree-id517 . -9) (undo-tree-id518 . -9) (undo-tree-id519 . -9) (undo-tree-id520 . -9) (undo-tree-id521 . -9) (undo-tree-id522 . -9) (undo-tree-id523 . -9) (undo-tree-id524 . -9) (undo-tree-id525 . -9) (undo-tree-id526 . -9) (undo-tree-id527 . -9) (undo-tree-id528 . -9) (undo-tree-id529 . -9) (undo-tree-id530 . -9) (undo-tree-id531 . -9) (undo-tree-id532 . -9) (undo-tree-id533 . -9) (undo-tree-id534 . -9) (undo-tree-id535 . -9) (undo-tree-id536 . -9) (undo-tree-id537 . -9) (undo-tree-id538 . -8) (undo-tree-id539 . -8) (undo-tree-id540 . -7) (undo-tree-id541 . -8) (undo-tree-id542 . -7) (undo-tree-id543 . -7) (undo-tree-id544 . -7) (undo-tree-id545 . -7) (undo-tree-id546 . -7) (undo-tree-id547 . -7) (undo-tree-id548 . -7) (undo-tree-id549 . -7) (undo-tree-id550 . -7) (undo-tree-id551 . -7) (undo-tree-id552 . -7) (undo-tree-id553 . -7) (undo-tree-id554 . -7) (undo-tree-id555 . -7) (undo-tree-id556 . -7) (undo-tree-id557 . -7) (undo-tree-id558 . -7) (undo-tree-id559 . -7) (undo-tree-id560 . -7) (undo-tree-id561 . -7) (undo-tree-id562 . -7) (undo-tree-id563 . -7) (undo-tree-id564 . -7) (undo-tree-id565 . -7) (undo-tree-id566 . -7) (undo-tree-id567 . -7) (undo-tree-id568 . -7) (undo-tree-id569 . -7) (undo-tree-id570 . -7) (undo-tree-id571 . -7) (undo-tree-id572 . -7) (undo-tree-id573 . -7) (undo-tree-id574 . -7) (undo-tree-id575 . -7) (undo-tree-id576 . -7) (undo-tree-id577 . -7) (undo-tree-id578 . -7) (undo-tree-id579 . -7) (undo-tree-id580 . -7) (undo-tree-id581 . -7) (undo-tree-id582 . -7) (undo-tree-id583 . -7) (undo-tree-id584 . -7) (undo-tree-id585 . -7) (undo-tree-id586 . -7) (undo-tree-id587 . -7) (undo-tree-id588 . -7) (undo-tree-id589 . -7) (undo-tree-id590 . -7) (undo-tree-id591 . -7) (undo-tree-id592 . -7) (undo-tree-id593 . -8) (undo-tree-id594 . -8) (undo-tree-id595 . -8) (undo-tree-id596 . -8) (undo-tree-id597 . -8) (undo-tree-id598 . -8) (undo-tree-id599 . -8) (undo-tree-id600 . -8) (undo-tree-id601 . -8) (undo-tree-id602 . -8) (undo-tree-id603 . -8) (undo-tree-id604 . -8) (undo-tree-id605 . -8) (undo-tree-id606 . -8) (undo-tree-id607 . -8) (undo-tree-id608 . -8) (undo-tree-id609 . -8) (undo-tree-id610 . -8) (undo-tree-id611 . -8) (undo-tree-id612 . -8) (undo-tree-id613 . -8) (undo-tree-id614 . -8) (undo-tree-id615 . -8) (undo-tree-id616 . -8) (undo-tree-id617 . -8) (undo-tree-id618 . -8) (undo-tree-id619 . -8) (undo-tree-id620 . -8) (undo-tree-id621 . -8) (undo-tree-id622 . -8) (undo-tree-id623 . -8) (undo-tree-id624 . -8) (undo-tree-id625 . -8) (undo-tree-id626 . -8) (undo-tree-id627 . -8) (undo-tree-id628 . -8) (undo-tree-id629 . -8) (undo-tree-id630 . -8) (undo-tree-id631 . -7) (undo-tree-id632 . -7) (undo-tree-id633 . -7) (undo-tree-id634 . -7) (undo-tree-id635 . -7) (undo-tree-id636 . -7) (undo-tree-id637 . -7) (undo-tree-id638 . -7) (undo-tree-id639 . -7) (undo-tree-id640 . -7) (undo-tree-id641 . -7) (undo-tree-id642 . -7) (undo-tree-id643 . -7) (undo-tree-id644 . -7) (undo-tree-id645 . -7) (undo-tree-id646 . -7) (undo-tree-id647 . -7) (undo-tree-id648 . -7) (undo-tree-id649 . -7) (undo-tree-id650 . -7) (undo-tree-id651 . -7) (undo-tree-id652 . -7) (undo-tree-id653 . -7) (undo-tree-id654 . -7) (undo-tree-id655 . -7) (undo-tree-id656 . -7) (undo-tree-id657 . -7) (undo-tree-id658 . -7) (undo-tree-id659 . -7) (undo-tree-id660 . -7) (undo-tree-id661 . -7) (undo-tree-id662 . -7) (undo-tree-id663 . -7) (undo-tree-id664 . -7) (undo-tree-id665 . -7) (undo-tree-id666 . -7) (undo-tree-id667 . -7) (undo-tree-id668 . -7) (undo-tree-id669 . -7) (undo-tree-id670 . -7) (undo-tree-id671 . -7) (undo-tree-id672 . -7) (undo-tree-id673 . -7) (undo-tree-id674 . -7) (undo-tree-id675 . -7) (undo-tree-id676 . -7) (undo-tree-id677 . -7) (undo-tree-id678 . -7) (undo-tree-id679 . -7) (undo-tree-id680 . -7) (undo-tree-id681 . -7) (undo-tree-id682 . -7) (undo-tree-id683 . -7) (undo-tree-id684 . -7) (undo-tree-id685 . -7) (undo-tree-id686 . -7) (undo-tree-id687 . -7) (undo-tree-id688 . -7) (undo-tree-id689 . -7) (undo-tree-id690 . -7) (undo-tree-id691 . -7) (undo-tree-id692 . -7) (undo-tree-id693 . -7) (undo-tree-id694 . -7) (undo-tree-id695 . -7) (undo-tree-id696 . -7) (undo-tree-id697 . -7) (undo-tree-id698 . -7) (undo-tree-id699 . -7) (undo-tree-id700 . -7) (undo-tree-id701 . -7) (undo-tree-id702 . -7) (undo-tree-id703 . -7) (undo-tree-id704 . -7) (undo-tree-id705 . -7) (undo-tree-id706 . -7) (undo-tree-id707 . -7) (undo-tree-id708 . -7) (undo-tree-id709 . -7) (undo-tree-id710 . -7) (undo-tree-id711 . -7) (undo-tree-id712 . -7) (undo-tree-id713 . -7) (undo-tree-id714 . -7) (undo-tree-id715 . -7) (undo-tree-id716 . -7) (undo-tree-id717 . -7) (undo-tree-id718 . -7) (undo-tree-id719 . -7) (undo-tree-id720 . -9) 36467 (t 26024 4242 74442 156000)) nil (26024 4309 969591 0) 0 nil] [nil nil ((36529 . 36535) (#("
#+begin_src emacs-lisp
(use-package jinx
  :hook (emacs-startup . global-jinx-mode))
#+end_src" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1 23 (font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-begin-line) 23 24 (font-lock-fontified t fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-begin-line) 24 25 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 25 36 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block)) 36 37 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 37 41 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-constant-face org-block)) 41 42 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 42 44 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 44 49 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-builtin-face org-block)) 49 86 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 86 95 (font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-end-line)) . 36529) (undo-tree-id181 . 95) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (36499 . 36529) (#("k" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . 36499) (36488 . 36500) (#("frien" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36488) (undo-tree-id274 . -5) (36485 . 36493) (#("a" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . 36485) (36468 . 36486) (#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36468) (36468 . 36469) (t 26024 4242 74442 156000)) ((#(" " 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36468) (36468 . 36469) (#("in the park with a" 0 10 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 10 11 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 11 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 12 17 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 17 18 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . 36468) (undo-tree-id275 . -17) (undo-tree-id276 . -17) (undo-tree-id277 . -17) (undo-tree-id278 . -17) (undo-tree-id279 . -17) (undo-tree-id280 . -17) (undo-tree-id281 . -17) (undo-tree-id282 . -17) (undo-tree-id283 . -17) (undo-tree-id284 . -17) (undo-tree-id285 . -17) (undo-tree-id286 . -17) (undo-tree-id287 . -17) (undo-tree-id288 . -17) (undo-tree-id289 . -17) (undo-tree-id290 . -17) (undo-tree-id291 . -17) (undo-tree-id292 . -17) (undo-tree-id293 . -17) (undo-tree-id294 . -17) (undo-tree-id295 . -17) (undo-tree-id296 . -17) (undo-tree-id297 . -17) (undo-tree-id298 . -17) (undo-tree-id299 . -17) (undo-tree-id300 . -17) (undo-tree-id301 . -17) (undo-tree-id302 . -17) (undo-tree-id303 . -17) (undo-tree-id304 . -17) (undo-tree-id305 . -17) (undo-tree-id306 . -17) (undo-tree-id307 . -17) (undo-tree-id308 . -17) (undo-tree-id309 . -17) (undo-tree-id310 . -17) (undo-tree-id311 . -17) (undo-tree-id312 . -17) (undo-tree-id313 . -17) (undo-tree-id314 . -17) (undo-tree-id315 . -17) (36485 . 36486) (#("my frien" 0 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t) 5 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t) 6 7 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 7 8 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36485) (undo-tree-id316 . -3) (undo-tree-id317 . -8) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) (undo-tree-id321 . -3) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) (undo-tree-id325 . -3) (undo-tree-id326 . -3) (undo-tree-id327 . -3) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) (undo-tree-id333 . -3) (undo-tree-id334 . -3) (undo-tree-id335 . -3) (undo-tree-id336 . -3) (undo-tree-id337 . -3) (undo-tree-id338 . -3) (undo-tree-id339 . -3) (undo-tree-id340 . -3) (undo-tree-id341 . -3) (undo-tree-id342 . -3) (undo-tree-id343 . -3) (undo-tree-id344 . -3) (undo-tree-id345 . -3) (undo-tree-id346 . -3) (undo-tree-id347 . -3) (undo-tree-id348 . -3) (undo-tree-id349 . -3) (undo-tree-id350 . -3) (undo-tree-id351 . -3) (undo-tree-id352 . -3) (undo-tree-id353 . -3) (undo-tree-id354 . -3) (undo-tree-id355 . -3) (undo-tree-id356 . -3) (36488 . 36493) (#("parenthesisk" 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 2 11 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 11 12 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . 36488) (undo-tree-id357 . -11) (undo-tree-id358 . -11) (undo-tree-id359 . -11) (undo-tree-id360 . -11) (undo-tree-id361 . -11) (undo-tree-id362 . -11) (undo-tree-id363 . -11) (undo-tree-id364 . -11) (undo-tree-id365 . -11) (undo-tree-id366 . -11) (undo-tree-id367 . -11) (undo-tree-id368 . -11) (undo-tree-id369 . -11) (undo-tree-id370 . -11) (undo-tree-id371 . -11) (undo-tree-id372 . -11) (undo-tree-id373 . -11) (undo-tree-id374 . -11) (undo-tree-id375 . -11) (undo-tree-id376 . -11) (undo-tree-id377 . -11) (undo-tree-id378 . -11) (undo-tree-id379 . -11) (undo-tree-id380 . -11) (undo-tree-id381 . -11) (undo-tree-id382 . -11) (undo-tree-id383 . -11) (undo-tree-id384 . -11) (undo-tree-id385 . -11) (undo-tree-id386 . -11) (undo-tree-id387 . -11) (undo-tree-id388 . -11) (undo-tree-id389 . -11) (undo-tree-id390 . -11) (undo-tree-id391 . -11) (undo-tree-id392 . -11) (undo-tree-id393 . -11) (undo-tree-id394 . -11) (undo-tree-id395 . -11) (undo-tree-id396 . -11) (undo-tree-id397 . -11) (36499 . 36500) (#(" lkasjdf
lakeside lambda lkjf
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1 8 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 8 9 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 9 10 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 10 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 12 17 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 17 20 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 20 24 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 24 25 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 25 29 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 29 30 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36499) (undo-tree-id398 . -18) (undo-tree-id399 . -30) (undo-tree-id400 . -30) (undo-tree-id401 . 5) (undo-tree-id402 . -29) (undo-tree-id403 . 29) (undo-tree-id404 . -8) (undo-tree-id405 . -30) (undo-tree-id406 . -30) (undo-tree-id407 . -30) (undo-tree-id408 . -30) (undo-tree-id409 . -30) (undo-tree-id410 . -30) (undo-tree-id411 . -30) (undo-tree-id412 . -30) (undo-tree-id413 . -30) (undo-tree-id414 . -30) (undo-tree-id415 . -30) (undo-tree-id416 . -30) (undo-tree-id417 . -30) (undo-tree-id418 . -30) (undo-tree-id419 . -30) (undo-tree-id420 . -30) (undo-tree-id421 . -30) (undo-tree-id422 . -30) (undo-tree-id423 . -30) (undo-tree-id424 . -30) (undo-tree-id425 . -30) (undo-tree-id426 . -30) (undo-tree-id427 . -30) (undo-tree-id428 . -30) (undo-tree-id429 . -30) (undo-tree-id430 . -30) (undo-tree-id431 . -30) (undo-tree-id432 . -30) (undo-tree-id433 . -30) (undo-tree-id434 . -30) (undo-tree-id435 . -30) (undo-tree-id436 . -30) (undo-tree-id437 . -30) (undo-tree-id438 . -30) (undo-tree-id439 . -30) (undo-tree-id440 . -30) (undo-tree-id441 . -30) (undo-tree-id442 . -30) (36529 . 36624) (#("jlasdf" 0 6 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36529) (undo-tree-id443 . -6) (undo-tree-id444 . 6) (undo-tree-id445 . -6)) (26024 4308 23720 0) 0 nil])
([nil nil ((36460 . 36462) (36460 . 36461) 36467 (t 26024 4310 20420 64000)) nil (26024 4312 465618 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36461) (undo-tree-id723 . -1) (t 26024 4312 511646 768000)) nil (26024 4313 551275 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . 36461) (undo-tree-id721 . 1) (undo-tree-id722 . -1)) nil (26024 4313 551271 0) 0 nil])
([nil nil ((36460 . 36464) (t 26024 4313 596727 648000)) nil (26024 4373 123796 0) 0 nil])
([nil nil ((36460 . 36463) (#("Ital" 0 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36460) (undo-tree-id740 . -3)) nil (26024 4373 123795 0) 0 nil])
([nil nil ((#("ita
" 0 3 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 3 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 36460) (undo-tree-id724 . 1) (undo-tree-id725 . -3) (undo-tree-id726 . 4) (undo-tree-id727 . -3) (undo-tree-id728 . -3) (undo-tree-id729 . -3) (undo-tree-id730 . -3) (undo-tree-id731 . -3) (undo-tree-id732 . -3) (undo-tree-id733 . -3) (undo-tree-id734 . -3) (undo-tree-id735 . -3) (undo-tree-id736 . -3) (undo-tree-id737 . -3) (undo-tree-id738 . -3) (undo-tree-id739 . -4)) nil (26024 4373 123790 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 38642) (t 26024 4373 169733 379000)) nil (26024 4457 318769 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 38642) (undo-tree-id747 . -1) (undo-tree-id748 . -1)) nil (26024 4457 318768 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 38549) (undo-tree-id745 . -1) (undo-tree-id746 . -1)) nil (26024 4457 318766 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 38549) (undo-tree-id743 . -1) (undo-tree-id744 . -1)) nil (26024 4457 318763 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) font-lock-multiline t face (org-block))) . 38549) (undo-tree-id741 . -1) (undo-tree-id742 . -1)) nil (26024 4457 318759 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) font-lock-multiline t face (org-block))) . 38639) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (t 26024 4457 364516 241000)) nil (26024 4459 382241 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39586) (undo-tree-id751 . -1) (39585 . 39586) (#(")" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39584) (39585 . 39586) 39586 (#(")" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39586) (undo-tree-id752 . -1) (undo-tree-id753 . 1) (undo-tree-id754 . -1) (39585 . 39586) (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39584) (39585 . 39586) 39586 (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39586) (undo-tree-id755 . -1) (39585 . 39586) (#(")" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39584) (39585 . 39586) 39586 (#(")" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39586) (undo-tree-id756 . -1) (undo-tree-id757 . 1) (undo-tree-id758 . -1) (39585 . 39586) (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39584) (39585 . 39586) 39586 (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39586) (undo-tree-id759 . -1) (39585 . 39586) (#(")" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39584) (39585 . 39586) 39586 (#(")" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39586) (39585 . 39586) (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39584) (39585 . 39586) (39584 . 39585) (39578 . 39578) (39578 . 39584) (39575 . 39578) (39574 . 39575) (39569 . 39574) (39566 . 39566) (39566 . 39569) (39565 . 39567) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -39565) (39565 . 39566) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -39565) (undo-tree-id760 . -1) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -39566) (undo-tree-id761 . -1) (#("d" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -39567) (undo-tree-id762 . -1) 39568 (#("f" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -39568) (undo-tree-id763 . -1) 39569 (39565 . 39565) (39565 . 39569) (39564 . 39565) (t 26024 4459 429632 720000) 39564) nil (26024 4526 748826 0) 0 nil])
([nil nil ((#("(user-uid 
" 0 11 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39565) (undo-tree-id1088 . -10) (undo-tree-id1089 . -11) (undo-tree-id1090 . -11) (undo-tree-id1091 . -11) (undo-tree-id1092 . -11) (undo-tree-id1093 . -11) (undo-tree-id1094 . -11) (undo-tree-id1095 . -11) (undo-tree-id1096 . -11) (undo-tree-id1097 . -11) (undo-tree-id1098 . -11) (undo-tree-id1099 . -11) (undo-tree-id1100 . -11) (undo-tree-id1101 . -11) (undo-tree-id1102 . -11) (undo-tree-id1103 . 11) (undo-tree-id1104 . -1) (undo-tree-id1105 . -11) (t 26024 4526 796089 103000)) nil (26024 4534 296060 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . 39565) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1)) nil (26024 4534 296046 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . 39565) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1)) nil (26024 4534 296034 0) 0 nil])
([nil nil ((#("kalsdj
" 0 6 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block)) 6 7 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . 39565) (undo-tree-id1012 . -6) (undo-tree-id1013 . -7) (undo-tree-id1014 . -7) (undo-tree-id1015 . -7) (undo-tree-id1016 . -7) (undo-tree-id1017 . -7) (undo-tree-id1018 . -7) (undo-tree-id1019 . -7) (undo-tree-id1020 . -7) (undo-tree-id1021 . -7) (undo-tree-id1022 . -7) (undo-tree-id1023 . -7) (undo-tree-id1024 . -7) (undo-tree-id1025 . -7) (undo-tree-id1026 . -7) (undo-tree-id1027 . -7) (undo-tree-id1028 . -7) (undo-tree-id1029 . -7) (undo-tree-id1030 . -7) (undo-tree-id1031 . -7) (undo-tree-id1032 . -7) (undo-tree-id1033 . -7) (undo-tree-id1034 . -7) (undo-tree-id1035 . -7) (undo-tree-id1036 . -7) (undo-tree-id1037 . -7) (undo-tree-id1038 . -7) (undo-tree-id1039 . -7) (undo-tree-id1040 . -7) (undo-tree-id1041 . -7) (undo-tree-id1042 . -7) (undo-tree-id1043 . -7) (undo-tree-id1044 . -7) (undo-tree-id1045 . -7) (undo-tree-id1046 . -7) (undo-tree-id1047 . -7) (undo-tree-id1048 . -7) (undo-tree-id1049 . -7) (undo-tree-id1050 . -7) (undo-tree-id1051 . -7) (undo-tree-id1052 . -7) (undo-tree-id1053 . -7) (undo-tree-id1054 . -7) (undo-tree-id1055 . -7) (undo-tree-id1056 . -6) (undo-tree-id1057 . -7)) nil (26024 4534 296020 0) 0 nil])
([nil nil ((#(")
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t font-lock-fontified t src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block))) . 39565) (undo-tree-id1006 . 1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . 2) (undo-tree-id1010 . -1) (undo-tree-id1011 . -2)) nil (26024 4534 295984 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 39564) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1)) nil (26024 4534 295972 0) 0 nil])
([nil nil ((39532 . 39533) (t 26024 4534 342637 253000) 39483) nil (26024 4636 178417 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block))) . 39533) (undo-tree-id1106 . 1)) nil (26024 4636 178416 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 39560 . 39561) (nil fontified nil 39488 . 39561) (nil fontified nil 39461 . 39488) (nil fontified nil 39451 . 39461) (nil fontified nil 39450 . 39451) (nil fontified nil 39373 . 39450) (nil fontified nil 39335 . 39373) (nil fontified nil 39334 . 39335) (39334 . 39561)) nil (26024 4636 178409 0) 0 nil])
([nil nil ((39335 . 39347) (39373 . 39375) (39451 . 39453) (39461 . 39463) (39488 . 39490) 38499) nil (26024 4636 178405 0) 0 nil])
([nil nil ((39334 . 39339) 38499 (t 26024 4636 219865 564000)) nil (26024 4647 90672 0) 0 nil])
([nil nil ((#("jjkjj
" 0 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 5 6 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 39334) (undo-tree-id1107 . -5) (undo-tree-id1108 . -6) (undo-tree-id1109 . -4) (undo-tree-id1110 . -4) (undo-tree-id1111 . -4) (undo-tree-id1112 . -4) (undo-tree-id1113 . -4) (undo-tree-id1114 . -4) (undo-tree-id1115 . -4) (undo-tree-id1116 . -4) (undo-tree-id1117 . -4) (undo-tree-id1118 . -4) (undo-tree-id1119 . -4) (undo-tree-id1120 . -4) (undo-tree-id1121 . -4) (undo-tree-id1122 . -4) (undo-tree-id1123 . -4) (undo-tree-id1124 . -4) (undo-tree-id1125 . -4) (undo-tree-id1126 . -4) (undo-tree-id1127 . -4) (undo-tree-id1128 . -4) (undo-tree-id1129 . -4) (undo-tree-id1130 . -4) (undo-tree-id1131 . -4) (undo-tree-id1132 . -4) (undo-tree-id1133 . -4) (undo-tree-id1134 . -4) (undo-tree-id1135 . -4) (undo-tree-id1136 . -4) (undo-tree-id1137 . -4) (undo-tree-id1138 . -4) (undo-tree-id1139 . -4) (undo-tree-id1140 . -4) (undo-tree-id1141 . -4) (undo-tree-id1142 . -4) (undo-tree-id1143 . -4) (undo-tree-id1144 . -4) (undo-tree-id1145 . -4) (undo-tree-id1146 . -4) (undo-tree-id1147 . -4) (undo-tree-id1148 . -4) (undo-tree-id1149 . -4) (undo-tree-id1150 . -4) (undo-tree-id1151 . -4) (undo-tree-id1152 . -4) (undo-tree-id1153 . -4) (undo-tree-id1154 . -4) (undo-tree-id1155 . -4) (undo-tree-id1156 . -4) (undo-tree-id1157 . -4) (undo-tree-id1158 . -4) (undo-tree-id1159 . -4) (undo-tree-id1160 . -4) (undo-tree-id1161 . -4) (undo-tree-id1162 . -4) (undo-tree-id1163 . -4) (undo-tree-id1164 . -4) (undo-tree-id1165 . -4) (undo-tree-id1166 . -4) (undo-tree-id1167 . -4) (undo-tree-id1168 . -4) (undo-tree-id1169 . -4) (undo-tree-id1170 . -6) 39338 (t 26024 4647 137496 75000)) nil (26024 4702 810676 0) 0 nil])
([nil nil ((#("  (defvar my-override-keymap-alist '())
" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 2 3 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 3 9 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block)) 9 10 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 10 34 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-variable-name-face org-block)) 34 40 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block))) . 39344) (undo-tree-id1519 . -39) (undo-tree-id1520 . -39) (undo-tree-id1521 . -8) (undo-tree-id1522 . -8) (undo-tree-id1523 . -8) (undo-tree-id1524 . -8) (undo-tree-id1525 . -8) (undo-tree-id1526 . -8) (undo-tree-id1527 . -8) (undo-tree-id1528 . -8) (undo-tree-id1529 . -8) (undo-tree-id1530 . -8) (undo-tree-id1531 . -8) (undo-tree-id1532 . -8) (undo-tree-id1533 . -8) (undo-tree-id1534 . -8) (undo-tree-id1535 . -8) (undo-tree-id1536 . -8) (undo-tree-id1537 . -8) (undo-tree-id1538 . -8) (undo-tree-id1539 . -8) (undo-tree-id1540 . -8) (undo-tree-id1541 . -8) (undo-tree-id1542 . -8) (undo-tree-id1543 . -8) (undo-tree-id1544 . -8) (undo-tree-id1545 . -8) (undo-tree-id1546 . -8) (undo-tree-id1547 . -8) (undo-tree-id1548 . -8) (undo-tree-id1549 . -8) (undo-tree-id1550 . -8) (undo-tree-id1551 . -8) (undo-tree-id1552 . -8) (undo-tree-id1553 . -8) (undo-tree-id1554 . -8) (undo-tree-id1555 . -8) (undo-tree-id1556 . -8) (undo-tree-id1557 . -8) (undo-tree-id1558 . -8) (undo-tree-id1559 . -8) (undo-tree-id1560 . -8) (undo-tree-id1561 . -8) (undo-tree-id1562 . -8) (undo-tree-id1563 . -8) (undo-tree-id1564 . -8) (undo-tree-id1565 . -8) (undo-tree-id1566 . -8) (undo-tree-id1567 . -8) (undo-tree-id1568 . -8) (undo-tree-id1569 . -8) (undo-tree-id1570 . -8) (undo-tree-id1571 . -8) (undo-tree-id1572 . -8) (undo-tree-id1573 . -8) (undo-tree-id1574 . -40) 39352 (t 26024 4648 122514 374000)) nil (26024 4712 475654 0) 0 nil] [nil nil ((39829 . 39831) (39828 . 39829) (39827 . 39827) (39827 . 39828) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . -39827) (undo-tree-id1195 . -1) 39828 (39827 . 39827) (39827 . 39828) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -39827) (undo-tree-id1196 . -1) 39828 (39827 . 39828) (39826 . 39827) (39821 . 39821) (39821 . 39826) (#("l" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -39821) (undo-tree-id1197 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . -39822) (undo-tree-id1198 . -1) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . -39823) (undo-tree-id1199 . -1) (#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . -39824) (undo-tree-id1200 . -1) (#("d" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -39825) (undo-tree-id1201 . -1) (#("j" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . -39826) (undo-tree-id1202 . -1) 39827 (39821 . 39827) (39820 . 39821) (39819 . 39820) (t 26024 4648 122514 374000) 39818) ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) face org-block-end-line)) . 39819) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 39820) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (#("laskdj" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t) 2 3 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t) 3 4 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t) 4 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 5 6 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . 39821) (undo-tree-id1209 . -6) (39821 . 39827) (#(":conf" 0 5 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 39821) (undo-tree-id1210 . -5) (undo-tree-id1211 . -5) (undo-tree-id1212 . 4) (undo-tree-id1213 . -5) (undo-tree-id1214 . -5) (#("i" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 39826) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 39827) (undo-tree-id1219 . -1) (39827 . 39828) (#("a" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . 39827) (undo-tree-id1220 . -1) (39827 . 39828) (#("g" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 39827) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 39828) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (#("kj" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 39829) (undo-tree-id1228 . -2) (undo-tree-id1229 . -1) (undo-tree-id1230 . 2) (undo-tree-id1231 . -2) (undo-tree-id1232 . -1)) (26024 4702 808196 0) 0 nil] [nil nil ((39344 . 39345) (39343 . 39344) (t 26024 4648 122514 374000) 39342) ((#("
" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 39343) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 39344) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1)) (26024 4682 384872 0) 0 nil] [nil nil ((39351 . 39351) (39351 . 39359) (39346 . 39346) (39346 . 39351) (#("

  (add-hook
   'my-override-keymap-alist
   `(completion-in-region-mode . ,(define-keymap \"<escape>\" #'corfu-quit)))
  ;; Recommended: Enable Corfu globally." 0 1 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 4 14 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 14 16 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 16 43 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 43 45 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 45 92 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 92 102 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-string-face org-block)) 102 117 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 117 118 (fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 118 119 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 119 121 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 121 124 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 124 159 (fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 39346) (undo-tree-id1171 . -117) (undo-tree-id1172 . 40) (undo-tree-id1173 . -117) (39345 . 39346) (#("
  :config
  (defvar my-override-keymap-alist '())
  (add-to-ordered-list 'emulation-mode-map-alists 'my-override-keymap-alist 0)" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 10 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 10 11 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11 13 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 14 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 14 20 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 20 21 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 21 45 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face org-block)) 45 51 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 51 53 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 129 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 39345) (undo-tree-id1174 . -50) (39344 . 39345) (39342 . 39344) (39341 . 39342) (39339 . 39339) (39339 . 39341) (39334 . 39334) (39334 . 39339) (39334 . 39335) 39338 (t 26024 4648 122514 374000)) ((#("
" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block) line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 39334) (#(":conf" 0 5 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-builtin-face org-block))) . 39334) (undo-tree-id1175 . -5) (undo-tree-id1176 . -5) (undo-tree-id1177 . -5) (#("ig" 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-builtin-face org-block))) . 39339) (undo-tree-id1178 . -2) (undo-tree-id1179 . -2) (undo-tree-id1180 . -2) (#("
" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block))) . 39341) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (#("kj" 0 2 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block))) . 39342) (undo-tree-id1184 . -2) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (#("
" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block))) . 39344) (undo-tree-id1187 . -1) (39345 . 39474) (#("j" 0 1 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block))) . 39345) (undo-tree-id1188 . -1) (39346 . 39505) (#("jkjkj" 0 5 (fontified nil font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block))) . 39346) (undo-tree-id1189 . -5) (#("kjkjkjkj" 0 8 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block))) . 39351) (undo-tree-id1190 . -8)) (26024 4671 173563 0) 0 nil])
([nil nil ((#("  (add-to-ordered-list 'emulation-mode-map-alists 'my-override-keymap-alist 0)
" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 2 78 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 78 79 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block))) . 39344) (undo-tree-id1442 . -78) (undo-tree-id1443 . -8) (undo-tree-id1444 . -79) (undo-tree-id1445 . -79) (undo-tree-id1446 . -79) (undo-tree-id1447 . -79) (undo-tree-id1448 . -79) (undo-tree-id1449 . -79) (undo-tree-id1450 . -79) (undo-tree-id1451 . -8) (undo-tree-id1452 . -8) (undo-tree-id1453 . -8) (undo-tree-id1454 . -8) (undo-tree-id1455 . -8) (undo-tree-id1456 . -8) (undo-tree-id1457 . -8) (undo-tree-id1458 . -8) (undo-tree-id1459 . -8) (undo-tree-id1460 . -8) (undo-tree-id1461 . -8) (undo-tree-id1462 . -8) (undo-tree-id1463 . -8) (undo-tree-id1464 . -8) (undo-tree-id1465 . -8) (undo-tree-id1466 . -8) (undo-tree-id1467 . -8) (undo-tree-id1468 . -8) (undo-tree-id1469 . -8) (undo-tree-id1470 . -8) (undo-tree-id1471 . -8) (undo-tree-id1472 . -8) (undo-tree-id1473 . -8) (undo-tree-id1474 . -8) (undo-tree-id1475 . -8) (undo-tree-id1476 . -8) (undo-tree-id1477 . -8) (undo-tree-id1478 . -8) (undo-tree-id1479 . -78) (undo-tree-id1480 . -8) (undo-tree-id1481 . -8) (undo-tree-id1482 . -8) (undo-tree-id1483 . -8) (undo-tree-id1484 . -8) (undo-tree-id1485 . -8) (undo-tree-id1486 . -8) (undo-tree-id1487 . -8) (undo-tree-id1488 . -8) (undo-tree-id1489 . -8) (undo-tree-id1490 . -8) (undo-tree-id1491 . -8) (undo-tree-id1492 . -8) (undo-tree-id1493 . -8) (undo-tree-id1494 . -8) (undo-tree-id1495 . -8) (undo-tree-id1496 . -8) (undo-tree-id1497 . -8) (undo-tree-id1498 . -8) (undo-tree-id1499 . -8) (undo-tree-id1500 . -8) (undo-tree-id1501 . -8) (undo-tree-id1502 . -8) (undo-tree-id1503 . -8) (undo-tree-id1504 . -8) (undo-tree-id1505 . -8) (undo-tree-id1506 . -8) (undo-tree-id1507 . -8) (undo-tree-id1508 . -8) (undo-tree-id1509 . -8) (undo-tree-id1510 . -8) (undo-tree-id1511 . -8) (undo-tree-id1512 . -8) (undo-tree-id1513 . -8) (undo-tree-id1514 . -8) (undo-tree-id1515 . -8) (undo-tree-id1516 . -8) (undo-tree-id1517 . -8) (undo-tree-id1518 . -79) 39352) nil (26024 4712 475596 0) 0 nil])
nil
nil
nil
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block))) . 39344) (undo-tree-id1441 . -1)) nil (26024 4712 475529 0) 0 nil])
([nil nil ((#("  (add-hook
" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 2 11 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 11 12 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block))) . 39344) (undo-tree-id1431 . -11) (undo-tree-id1432 . -8) (undo-tree-id1433 . -8) (undo-tree-id1434 . -8) (undo-tree-id1435 . -8) (undo-tree-id1436 . -8) (undo-tree-id1437 . -8) (undo-tree-id1438 . -8) (undo-tree-id1439 . -11) (undo-tree-id1440 . -12)) nil (26024 4712 475528 0) 0 nil])
([nil nil ((#("   'my-override-keymap-alist
" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) font-lock-multiline t face (org-block)) 2 28 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) font-lock-multiline t face (org-block)) 28 29 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) jinx--pending t font-lock-multiline t face (org-block))) . 39344) (undo-tree-id1421 . -28) (undo-tree-id1422 . -8) (undo-tree-id1423 . -8) (undo-tree-id1424 . -8) (undo-tree-id1425 . -8) (undo-tree-id1426 . -8) (undo-tree-id1427 . -8) (undo-tree-id1428 . -8) (undo-tree-id1429 . -28) (undo-tree-id1430 . -29)) nil (26024 4712 475517 0) 0 nil])
([nil nil ((#("   `(completion-in-region-mode . ,(define-keymap \"<escape>\" #'corfu-quit)))
" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) jinx--pending t font-lock-multiline t face (org-block)) 2 49 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) jinx--pending t font-lock-multiline t face (org-block)) 49 59 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) jinx--pending t font-lock-multiline t face (font-lock-string-face org-block)) 59 74 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) jinx--pending t font-lock-multiline t face (org-block)) 74 75 (fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) jinx--pending t font-lock-multiline t face (org-block)) 75 76 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) jinx--pending t font-lock-multiline t face (org-block))) . 39344) (undo-tree-id1416 . -75) (undo-tree-id1417 . -74) (undo-tree-id1418 . -74) (undo-tree-id1419 . -75) (undo-tree-id1420 . -76)) nil (26024 4712 475508 0) 0 nil])
([nil nil ((#("  :config
" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 2 9 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-builtin-face org-block)) 9 10 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block))) . 39334) (undo-tree-id1233 . -9) (undo-tree-id1234 . -10) (undo-tree-id1235 . -10) (undo-tree-id1236 . -10) (undo-tree-id1237 . -10) (undo-tree-id1238 . -10) (undo-tree-id1239 . -10) (undo-tree-id1240 . -10) (undo-tree-id1241 . -10) (undo-tree-id1242 . -10) (undo-tree-id1243 . -10) (undo-tree-id1244 . -10) (undo-tree-id1245 . -10) (undo-tree-id1246 . -10) (undo-tree-id1247 . -10) (undo-tree-id1248 . -10) (undo-tree-id1249 . -10) (undo-tree-id1250 . -10) (undo-tree-id1251 . -10) (undo-tree-id1252 . -10) (undo-tree-id1253 . -10) (undo-tree-id1254 . -10) (undo-tree-id1255 . -10) (undo-tree-id1256 . -10) (undo-tree-id1257 . -10) (undo-tree-id1258 . -10) (undo-tree-id1259 . -10) (undo-tree-id1260 . -10) (undo-tree-id1261 . -10) (undo-tree-id1262 . -10) (undo-tree-id1263 . -10) (undo-tree-id1264 . -10) (undo-tree-id1265 . -10) (undo-tree-id1266 . -10) (undo-tree-id1267 . -10) (undo-tree-id1268 . -10) (undo-tree-id1269 . -10) (undo-tree-id1270 . -10) (undo-tree-id1271 . -10) (undo-tree-id1272 . -10) (undo-tree-id1273 . -10) (undo-tree-id1274 . -10) (undo-tree-id1275 . -10) (undo-tree-id1276 . -10) (undo-tree-id1277 . -10) (undo-tree-id1278 . -10) (undo-tree-id1279 . -10) (undo-tree-id1280 . -10) (undo-tree-id1281 . -10) (undo-tree-id1282 . -10) (undo-tree-id1283 . -10) (undo-tree-id1284 . -10) (undo-tree-id1285 . -10) (undo-tree-id1286 . -10) (undo-tree-id1287 . -10) (undo-tree-id1288 . -10) (undo-tree-id1289 . -10) (undo-tree-id1290 . -10) (undo-tree-id1291 . -10) (undo-tree-id1292 . -10) (undo-tree-id1293 . -10) (undo-tree-id1294 . -10) (undo-tree-id1295 . -10) (undo-tree-id1296 . -10) (undo-tree-id1297 . -10) (undo-tree-id1298 . -10) (undo-tree-id1299 . -10) (undo-tree-id1300 . -10) (undo-tree-id1301 . -10) (undo-tree-id1302 . -10) (undo-tree-id1303 . -10) (undo-tree-id1304 . -10) (undo-tree-id1305 . -10) (undo-tree-id1306 . -10) (undo-tree-id1307 . -10) (undo-tree-id1308 . -10) (undo-tree-id1309 . -10) (undo-tree-id1310 . -10) (undo-tree-id1311 . -10) (undo-tree-id1312 . -10) (undo-tree-id1313 . -10) (undo-tree-id1314 . -10) (undo-tree-id1315 . -10) (undo-tree-id1316 . -10) (undo-tree-id1317 . -10) (undo-tree-id1318 . -10) (undo-tree-id1319 . -10) (undo-tree-id1320 . -10) (undo-tree-id1321 . -10) (undo-tree-id1322 . -10) (undo-tree-id1323 . -10) (undo-tree-id1324 . -10) (undo-tree-id1325 . -10) (undo-tree-id1326 . -10) (undo-tree-id1327 . -10) (undo-tree-id1328 . -10) (undo-tree-id1329 . -10) (undo-tree-id1330 . -10) (undo-tree-id1331 . -10) (undo-tree-id1332 . -10) (undo-tree-id1333 . -10) (undo-tree-id1334 . -10) (undo-tree-id1335 . -10) (undo-tree-id1336 . -10) (undo-tree-id1337 . -10) (undo-tree-id1338 . -10) (undo-tree-id1339 . -10) (undo-tree-id1340 . -10) (undo-tree-id1341 . -10) (undo-tree-id1342 . -10) (undo-tree-id1343 . -10) (undo-tree-id1344 . -10) (undo-tree-id1345 . -10) (undo-tree-id1346 . -10) (undo-tree-id1347 . -10) (undo-tree-id1348 . -10) (undo-tree-id1349 . -10) (undo-tree-id1350 . -10) (undo-tree-id1351 . -10) (undo-tree-id1352 . -10) (undo-tree-id1353 . -10) (undo-tree-id1354 . -10) (undo-tree-id1355 . -10) (undo-tree-id1356 . -10) (undo-tree-id1357 . -10) (undo-tree-id1358 . -10) (undo-tree-id1359 . -10) (undo-tree-id1360 . -10) (undo-tree-id1361 . -10) (undo-tree-id1362 . -10) (undo-tree-id1363 . -10) (undo-tree-id1364 . -10) (undo-tree-id1365 . -10) (undo-tree-id1366 . -10) (undo-tree-id1367 . -10) (undo-tree-id1368 . -10) (undo-tree-id1369 . -10) (undo-tree-id1370 . -10) (undo-tree-id1371 . -10) (undo-tree-id1372 . -10) (undo-tree-id1373 . -10) (undo-tree-id1374 . -10) (undo-tree-id1375 . -10) (undo-tree-id1376 . -10) (undo-tree-id1377 . -10) (undo-tree-id1378 . -10) (undo-tree-id1379 . -10) (undo-tree-id1380 . -10) (undo-tree-id1381 . -10) (undo-tree-id1382 . -10) (undo-tree-id1383 . -10) (undo-tree-id1384 . -10) (undo-tree-id1385 . -10) (undo-tree-id1386 . -10) (undo-tree-id1387 . -10) (undo-tree-id1388 . -10) (undo-tree-id1389 . -10) (undo-tree-id1390 . -10) (undo-tree-id1391 . -10) (undo-tree-id1392 . -10) (undo-tree-id1393 . -10) (undo-tree-id1394 . -10) (undo-tree-id1395 . -10) (undo-tree-id1396 . -10) (undo-tree-id1397 . -10) (undo-tree-id1398 . -10) (undo-tree-id1399 . -10) (undo-tree-id1400 . -10) (undo-tree-id1401 . -10) (undo-tree-id1402 . -10) (undo-tree-id1403 . -10) (undo-tree-id1404 . -10) (undo-tree-id1405 . -10) (undo-tree-id1406 . -10) (undo-tree-id1407 . -10) (undo-tree-id1408 . -10) (undo-tree-id1409 . -10) (undo-tree-id1410 . -10) (undo-tree-id1411 . -10) (undo-tree-id1412 . -10) (undo-tree-id1413 . -10) (undo-tree-id1414 . -10) (undo-tree-id1415 . -10)) nil (26024 4712 475496 0) 0 nil])
([nil nil ((38639 . 38642) (t 26024 4712 525396 306000)) nil (26024 4855 457207 0) 0 nil])
([nil nil ((38549 . 38552) (t 26024 4855 506427 556000)) nil (26024 4881 113995 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -36463) (undo-tree-id1575 . -1) (#("s" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -36464) (undo-tree-id1576 . -1) (#("o" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -36465) (undo-tree-id1577 . -1) 36466 (36462 . 36466) (36458 . 36458) (36458 . 36462) (36452 . 36452) (36452 . 36458) (36452 . 36453) 36455 (t 26024 4881 160451 622000)) nil (26024 4908 291076 0) 0 nil])
([nil nil ((36480 . 36486) (36476 . 36480) (36464 . 36487) (#("<s" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . -36464) (undo-tree-id1578 . -2) 36466 (36464 . 36466) (36463 . 36464) (t 26024 4908 337649 21000) 36455) nil (26024 4912 870197 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -36487) (undo-tree-id1618 . -1) (#(")" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 36488) (36487 . 36489) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -36487) (36487 . 36488) (t 26024 4912 917508 489000)) nil (26024 4999 230145 0) 0 nil])
([nil nil ((36488 . 36507) (#("i" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -36488) (undo-tree-id1614 . -1) (#("u" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -36489) (undo-tree-id1615 . -1) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -36490) (undo-tree-id1616 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -36491) (undo-tree-id1617 . -1) 36492 (36488 . 36492) (36487 . 36489) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -36487) (36487 . 36488)) nil (26024 4999 230143 0) 0 nil])
([nil nil ((36508 . 36509) 36506) nil (26024 4999 230138 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 36856 . 36857) (nil fontified nil 36854 . 36857) (nil fontified nil 36826 . 36854) (nil fontified nil 36752 . 36826) (nil fontified nil 36751 . 36752) (nil fontified nil 36722 . 36751) (nil fontified nil 36678 . 36722) (nil fontified nil 36677 . 36678) (nil fontified nil 36648 . 36677) (nil fontified nil 36622 . 36648) (nil fontified nil 36621 . 36622) (nil fontified nil 36585 . 36621) (nil fontified nil 36556 . 36585) (nil fontified nil 36555 . 36556) (nil fontified nil 36538 . 36555) (nil fontified nil 36530 . 36538) (nil fontified nil 36509 . 36530) (36509 . 36857)) nil (26024 4999 230137 0) 0 nil])
([nil nil ((#("(use-package vertico)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 1 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 13 20 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 20 21 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block) help-echo nil) 21 22 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block) help-echo nil)) . 36487) (undo-tree-id1579 . -21) (undo-tree-id1580 . -22) (undo-tree-id1581 . -2) (undo-tree-id1582 . -2) (undo-tree-id1583 . -2) (undo-tree-id1584 . -2) (undo-tree-id1585 . -2) (undo-tree-id1586 . -2) (undo-tree-id1587 . -2) (undo-tree-id1588 . -2) (undo-tree-id1589 . -2) (undo-tree-id1590 . -2) (undo-tree-id1591 . -2) (undo-tree-id1592 . -2) (undo-tree-id1593 . -2) (undo-tree-id1594 . -2) (undo-tree-id1595 . -2) (undo-tree-id1596 . -2) (undo-tree-id1597 . -2) (undo-tree-id1598 . -2) (undo-tree-id1599 . -2) (undo-tree-id1600 . -2) (undo-tree-id1601 . -2) (undo-tree-id1602 . -2) (undo-tree-id1603 . -2) (undo-tree-id1604 . -2) (undo-tree-id1605 . -2) (undo-tree-id1606 . -2) (undo-tree-id1607 . -2) (undo-tree-id1608 . -2) (undo-tree-id1609 . -2) (undo-tree-id1610 . -2) (undo-tree-id1611 . -2) (undo-tree-id1612 . -2) (undo-tree-id1613 . -22) 36489) nil (26024 4999 230132 0) 0 nil])
([nil nil ((36835 . 36836) (t 26024 4999 277563 32000) 36834) nil (26024 5007 243995 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 36958 . 36959) (nil fontified nil 36941 . 36959) (nil fontified nil 36933 . 36941) (nil fontified nil 36911 . 36933) (nil fontified nil 36836 . 36911) (36836 . 36959)) nil (26024 5007 243990 0) 0 nil])
([nil nil ((36836 . 36837) 36853 (t 26024 5007 294087 242000)) nil (26024 5009 241546 0) 0 nil])
([nil nil ((#("(use-package savehist
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 21 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36912) (undo-tree-id1907 . -21) (undo-tree-id1908 . -3) (undo-tree-id1909 . -3) (undo-tree-id1910 . -3) (undo-tree-id1911 . -3) (undo-tree-id1912 . -3) (undo-tree-id1913 . -3) (undo-tree-id1914 . -3) (undo-tree-id1915 . -3) (undo-tree-id1916 . -3) (undo-tree-id1917 . -3) (undo-tree-id1918 . -3) (undo-tree-id1919 . -3) (undo-tree-id1920 . -3) (undo-tree-id1921 . -3) (undo-tree-id1922 . -3) (undo-tree-id1923 . -3) (undo-tree-id1924 . -3) (undo-tree-id1925 . -3) (undo-tree-id1926 . -3) (undo-tree-id1927 . -3) (undo-tree-id1928 . -3) (undo-tree-id1929 . -3) (undo-tree-id1930 . -3) (undo-tree-id1931 . -3) (undo-tree-id1932 . -3) (undo-tree-id1933 . -3) (undo-tree-id1934 . -3) (undo-tree-id1935 . -3) (undo-tree-id1936 . -3) (undo-tree-id1937 . -3) (undo-tree-id1938 . -3) (undo-tree-id1939 . -3) (undo-tree-id1940 . -3) (undo-tree-id1941 . -3) (undo-tree-id1942 . -3) (undo-tree-id1943 . -3) (undo-tree-id1944 . -3) (undo-tree-id1945 . -3) (undo-tree-id1946 . -3) (undo-tree-id1947 . -22) 36915 (t 26024 5009 290899 218000)) nil (26024 5080 41283 0) 0 nil])
([nil nil ((#("  :init
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 7 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . 36912) (undo-tree-id1879 . -7) (undo-tree-id1880 . -3) (undo-tree-id1881 . -7) (undo-tree-id1882 . -3) (undo-tree-id1883 . -3) (undo-tree-id1884 . -3) (undo-tree-id1885 . -3) (undo-tree-id1886 . -3) (undo-tree-id1887 . -3) (undo-tree-id1888 . -3) (undo-tree-id1889 . -3) (undo-tree-id1890 . -3) (undo-tree-id1891 . -3) (undo-tree-id1892 . -3) (undo-tree-id1893 . -3) (undo-tree-id1894 . -3) (undo-tree-id1895 . -3) (undo-tree-id1896 . -3) (undo-tree-id1897 . -3) (undo-tree-id1898 . -3) (undo-tree-id1899 . -3) (undo-tree-id1900 . -3) (undo-tree-id1901 . -3) (undo-tree-id1902 . -3) (undo-tree-id1903 . -3) (undo-tree-id1904 . -3) (undo-tree-id1905 . -3) (undo-tree-id1906 . -8) 36915) nil (26024 5080 41250 0) 0 nil])
([nil nil ((#("  (savehist-mode))
" 0 17 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block)) 17 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block)) 18 19 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . 36912) (undo-tree-id1858 . -18) (undo-tree-id1859 . -3) (undo-tree-id1860 . -18) (undo-tree-id1861 . -3) (undo-tree-id1862 . -3) (undo-tree-id1863 . -3) (undo-tree-id1864 . -3) (undo-tree-id1865 . -3) (undo-tree-id1866 . -3) (undo-tree-id1867 . -3) (undo-tree-id1868 . -3) (undo-tree-id1869 . -3) (undo-tree-id1870 . -3) (undo-tree-id1871 . -3) (undo-tree-id1872 . -3) (undo-tree-id1873 . -3) (undo-tree-id1874 . -3) (undo-tree-id1875 . -3) (undo-tree-id1876 . -3) (undo-tree-id1877 . -3) (undo-tree-id1878 . -19) 36915) nil (26024 5080 41228 0) 0 nil])
([nil nil ((#(";; Persist history over Emacs restarts. Vertico sorts by history position.
" 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3 75 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 36837) (undo-tree-id1738 . -74) (undo-tree-id1739 . -3) (undo-tree-id1740 . -3) (undo-tree-id1741 . -3) (undo-tree-id1742 . -3) (undo-tree-id1743 . -3) (undo-tree-id1744 . -3) (undo-tree-id1745 . -3) (undo-tree-id1746 . -3) (undo-tree-id1747 . -75) (undo-tree-id1748 . -75) (undo-tree-id1749 . -75) (undo-tree-id1750 . -75) (undo-tree-id1751 . -75) (undo-tree-id1752 . -75) (undo-tree-id1753 . -75) (undo-tree-id1754 . -75) (undo-tree-id1755 . -75) (undo-tree-id1756 . -75) (undo-tree-id1757 . -75) (undo-tree-id1758 . -75) (undo-tree-id1759 . -75) (undo-tree-id1760 . -75) (undo-tree-id1761 . -75) (undo-tree-id1762 . -75) (undo-tree-id1763 . -75) (undo-tree-id1764 . -75) (undo-tree-id1765 . -75) (undo-tree-id1766 . -75) (undo-tree-id1767 . -75) (undo-tree-id1768 . -75) (undo-tree-id1769 . -75) (undo-tree-id1770 . -75) (undo-tree-id1771 . -75) (undo-tree-id1772 . -75) (undo-tree-id1773 . -75) (undo-tree-id1774 . -75) (undo-tree-id1775 . -75) (undo-tree-id1776 . -75) (undo-tree-id1777 . -75) (undo-tree-id1778 . -75) (undo-tree-id1779 . -75) (undo-tree-id1780 . -75) (undo-tree-id1781 . -75) (undo-tree-id1782 . -75) (undo-tree-id1783 . -75) (undo-tree-id1784 . -75) (undo-tree-id1785 . -75) (undo-tree-id1786 . -75) (undo-tree-id1787 . -75) (undo-tree-id1788 . -75) (undo-tree-id1789 . -75) (undo-tree-id1790 . -75) (undo-tree-id1791 . -75) (undo-tree-id1792 . -75) (undo-tree-id1793 . -75) (undo-tree-id1794 . -75) (undo-tree-id1795 . -75) (undo-tree-id1796 . -75) (undo-tree-id1797 . -75) (undo-tree-id1798 . -75) (undo-tree-id1799 . -75) (undo-tree-id1800 . -75) (undo-tree-id1801 . -75) (undo-tree-id1802 . -75) (undo-tree-id1803 . -75) (undo-tree-id1804 . -75) (undo-tree-id1805 . -75) (undo-tree-id1806 . -75) (undo-tree-id1807 . -75) (undo-tree-id1808 . -75) (undo-tree-id1809 . -75) (undo-tree-id1810 . -75) (undo-tree-id1811 . -75) (undo-tree-id1812 . -75) (undo-tree-id1813 . -75) (undo-tree-id1814 . -75) (undo-tree-id1815 . -75) (undo-tree-id1816 . -75) (undo-tree-id1817 . -75) (undo-tree-id1818 . -75) (undo-tree-id1819 . -75) (undo-tree-id1820 . -75) (undo-tree-id1821 . -75) (undo-tree-id1822 . -75) (undo-tree-id1823 . -75) (undo-tree-id1824 . -75) (undo-tree-id1825 . -75) (undo-tree-id1826 . -3) (undo-tree-id1827 . -3) (undo-tree-id1828 . -3) (undo-tree-id1829 . -3) (undo-tree-id1830 . -3) (undo-tree-id1831 . -3) (undo-tree-id1832 . -3) (undo-tree-id1833 . -3) (undo-tree-id1834 . -3) (undo-tree-id1835 . -3) (undo-tree-id1836 . -3) (undo-tree-id1837 . -3) (undo-tree-id1838 . -3) (undo-tree-id1839 . -3) (undo-tree-id1840 . -3) (undo-tree-id1841 . -3) (undo-tree-id1842 . -3) (undo-tree-id1843 . -3) (undo-tree-id1844 . -3) (undo-tree-id1845 . -3) (undo-tree-id1846 . -3) (undo-tree-id1847 . -3) (undo-tree-id1848 . -3) (undo-tree-id1849 . -3) (undo-tree-id1850 . -3) (undo-tree-id1851 . -3) (undo-tree-id1852 . -3) (undo-tree-id1853 . -3) (undo-tree-id1854 . -3) (undo-tree-id1855 . -3) (undo-tree-id1856 . -3) (undo-tree-id1857 . -75) 36840) nil (26024 5080 41209 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36836) (undo-tree-id1619 . 1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1)) nil (26024 5080 41116 0) 0 nil])
([nil nil ((36835 . 36836) (t 26024 5080 89941 202000) 36833) nil (26024 5127 965485 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 37267 . 37268) (nil fontified nil 37191 . 37268) (nil fontified nil 37150 . 37191) (nil fontified nil 37105 . 37150) (nil fontified nil 37026 . 37105) (nil fontified nil 36931 . 37026) (nil fontified nil 36867 . 36931) (nil fontified nil 36859 . 36867) (nil fontified nil 36836 . 36859) (36836 . 37268)) nil (26024 5127 965481 0) 0 nil])
([nil nil ((36836 . 36837) 36857 (t 26024 5128 16332 438000)) nil (26024 5130 294916 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . -36837) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . -36838) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) 36839 (36837 . 36839) (36836 . 36837) (36836 . 36837) (t 26024 5130 343033 218000)) nil (26024 5380 859261 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 37396 . 37397) (nil fontified nil 37377 . 37397) (nil fontified nil 37363 . 37377) (nil fontified nil 37290 . 37363) (nil fontified nil 37210 . 37290) (nil fontified nil 37209 . 37210) (nil fontified nil 37201 . 37209) (nil fontified nil 37158 . 37201) (nil fontified nil 37157 . 37158) (nil fontified nil 37120 . 37157) (nil fontified nil 37085 . 37120) (nil fontified nil 37052 . 37085) (nil fontified nil 36994 . 37052) (nil fontified nil 36917 . 36994) (nil fontified nil 36893 . 36917) (nil fontified nil 36837 . 36893) (36837 . 37397)) nil (26024 5380 859194 0) 0 nil])
([nil nil ((36836 . 36837) (36836 . 36837) (t 26024 5380 910612 292000)) nil (26024 5384 14102 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 42672 . 42673) (nil fontified nil 42672 . 42673) (nil fontified nil 42631 . 42672) (nil fontified nil 42602 . 42631) (nil fontified nil 42526 . 42602) (nil fontified nil 42472 . 42526) (nil fontified nil 42422 . 42472) (nil fontified nil 42336 . 42422) (nil fontified nil 42303 . 42336) (nil fontified nil 42239 . 42303) (nil fontified nil 42209 . 42239) (nil fontified nil 42135 . 42209) (nil fontified nil 42100 . 42135) (nil fontified nil 42039 . 42100) (nil fontified nil 41959 . 42039) (nil fontified nil 41958 . 41959) (nil fontified nil 41866 . 41958) (nil fontified nil 41790 . 41866) (nil fontified nil 41725 . 41790) (nil fontified nil 41724 . 41725) (nil fontified nil 41683 . 41724) (nil fontified nil 41641 . 41683) (nil fontified nil 41596 . 41641) (nil fontified nil 41595 . 41596) (nil fontified nil 41557 . 41595) (nil fontified nil 41532 . 41557) (nil fontified nil 41465 . 41532) (nil fontified nil 41407 . 41465) (nil fontified nil 41354 . 41407) (nil fontified nil 41305 . 41354) (nil fontified nil 41254 . 41305) (nil fontified nil 41233 . 41254) (nil fontified nil 41155 . 41233) (nil fontified nil 41083 . 41155) (nil fontified nil 41028 . 41083) (nil fontified nil 40990 . 41028) (nil fontified nil 40953 . 40990) (nil fontified nil 40899 . 40953) (nil fontified nil 40846 . 40899) (nil fontified nil 40845 . 40846) (nil fontified nil 40835 . 40845) (nil fontified nil 40796 . 40835) (nil fontified nil 40731 . 40796) (nil fontified nil 40730 . 40731) (nil fontified nil 40675 . 40730) (nil fontified nil 40627 . 40675) (nil fontified nil 40572 . 40627) (nil fontified nil 40571 . 40572) (nil fontified nil 40501 . 40571) (nil fontified nil 40427 . 40501) (nil fontified nil 40376 . 40427) (nil fontified nil 40375 . 40376) (nil fontified nil 40314 . 40375) (nil fontified nil 40279 . 40314) (nil fontified nil 40224 . 40279) (nil fontified nil 40162 . 40224) (nil fontified nil 40084 . 40162) (nil fontified nil 40083 . 40084) (nil fontified nil 40075 . 40083) (nil fontified nil 40016 . 40075) (nil fontified nil 40015 . 40016) (nil fontified nil 39952 . 40015) (nil fontified nil 39898 . 39952) (nil fontified nil 39822 . 39898) (nil fontified nil 39821 . 39822) (nil fontified nil 39727 . 39821) (nil fontified nil 39637 . 39727) (nil fontified nil 39602 . 39637) (nil fontified nil 39571 . 39602) (nil fontified nil 39476 . 39571) (nil fontified nil 39381 . 39476) (nil fontified nil 39301 . 39381) (nil fontified nil 39221 . 39301) (nil fontified nil 39190 . 39221) (nil fontified nil 39145 . 39190) (nil fontified nil 39113 . 39145) (nil fontified nil 39072 . 39113) (nil fontified nil 39032 . 39072) (nil fontified nil 38992 . 39032) (nil fontified nil 38958 . 38992) (nil fontified nil 38921 . 38958) (nil fontified nil 38883 . 38921) (nil fontified nil 38849 . 38883) (nil fontified nil 38813 . 38849) (nil fontified nil 38735 . 38813) (nil fontified nil 38694 . 38735) (nil fontified nil 38653 . 38694) (nil fontified nil 38618 . 38653) (nil fontified nil 38577 . 38618) (nil fontified nil 38543 . 38577) (nil fontified nil 38456 . 38543) (nil fontified nil 38386 . 38456) (nil fontified nil 38316 . 38386) (nil fontified nil 38232 . 38316) (nil fontified nil 38189 . 38232) (nil fontified nil 38150 . 38189) (nil fontified nil 38081 . 38150) (nil fontified nil 38047 . 38081) (nil fontified nil 38009 . 38047) (nil fontified nil 37918 . 38009) (nil fontified nil 37877 . 37918) (nil fontified nil 37820 . 37877) (nil fontified nil 37735 . 37820) (nil fontified nil 37661 . 37735) (nil fontified nil 37574 . 37661) (nil fontified nil 37485 . 37574) (nil fontified nil 37395 . 37485) (nil fontified nil 37318 . 37395) (nil fontified nil 37235 . 37318) (nil fontified nil 37195 . 37235) (nil fontified nil 37149 . 37195) (nil fontified nil 37115 . 37149) (nil fontified nil 37082 . 37115) (nil fontified nil 37046 . 37082) (nil fontified nil 37009 . 37046) (nil fontified nil 36965 . 37009) (nil fontified nil 36917 . 36965) (nil fontified nil 36858 . 36917) (nil fontified nil 36837 . 36858) (36837 . 42673) (t 26024 5384 64184 166000)) nil (26024 5440 905914 0) 0 nil])
([nil nil ((36919 . 36922) (36966 . 36969) (37011 . 37013) (37018 . 37019) (37046 . 37047) (37047 . 37049) (37082 . 37083) (37083 . 37085) (37117 . 37120) (37151 . 37153) (37158 . 37159) (37197 . 37199) (37204 . 37205) (37235 . 37236) (37236 . 37238) (37318 . 37319) (37319 . 37321) (37397 . 37400) (37487 . 37489) (37494 . 37495) (37574 . 37575) (37575 . 37577) (37663 . 37666) (37736 . 37739) (37822 . 37824) (37829 . 37830) (37877 . 37878) (37878 . 37880) (37918 . 37919) (37919 . 37921) (38011 . 38014) (38049 . 38051) (38056 . 38057) (38083 . 38085) (38090 . 38091) (38150 . 38151) (38151 . 38153) (38189 . 38190) (38190 . 38192) (38234 . 38237) (38318 . 38320) (38325 . 38326) (38386 . 38387) (38387 . 38389) (38458 . 38461) (38544 . 38547) (38579 . 38581) (38586 . 38587) (38618 . 38619) (38619 . 38621) (38653 . 38654) (38654 . 38656) (38696 . 38699) (38737 . 38739) (38744 . 38745) (38815 . 38817) (38822 . 38823) (38849 . 38850) (38850 . 38852) (38883 . 38884) (38884 . 38886) (38923 . 38926) (38960 . 38962) (38967 . 38968) (38992 . 38993) (38993 . 38995) (39034 . 39037) (39073 . 39076) (39115 . 39117) (39122 . 39123) (39145 . 39146) (39146 . 39148) (39190 . 39191) (39191 . 39193) (39223 . 39226) (39303 . 39305) (39310 . 39311) (39383 . 39385) (39390 . 39391) (39476 . 39477) (39477 . 39479) (39571 . 39572) (39572 . 39574) (39604 . 39607) (39639 . 39641) (39646 . 39647) (39727 . 39728) (39728 . 39730) 36487 (t 26024 5440 958947 460000)) nil (26024 5475 362551 0) 0 nil])
([nil nil ((#("  ;; :bind (;; C-c bindings in `mode-specific-map'
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 5 10 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 10 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 12 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 15 32 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 32 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 49 51 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2668 . -50) (undo-tree-id2669 . -12) (undo-tree-id2670 . -12) (undo-tree-id2671 . -12) (undo-tree-id2672 . -29) (undo-tree-id2673 . -29) (undo-tree-id2674 . -29) (undo-tree-id2675 . -29) (undo-tree-id2676 . -29) (undo-tree-id2677 . -29) (undo-tree-id2678 . -29) (undo-tree-id2679 . -29) (undo-tree-id2680 . -29) (undo-tree-id2681 . -29) (undo-tree-id2682 . -29) (undo-tree-id2683 . -29) (undo-tree-id2684 . -29) (undo-tree-id2685 . -29) (undo-tree-id2686 . -29) (undo-tree-id2687 . -29) (undo-tree-id2688 . -29) (undo-tree-id2689 . -29) (undo-tree-id2690 . -29) (undo-tree-id2691 . -29) (undo-tree-id2692 . -29) (undo-tree-id2693 . -29) (undo-tree-id2694 . -29) (undo-tree-id2695 . -29) (undo-tree-id2696 . -29) (undo-tree-id2697 . -29) (undo-tree-id2698 . -29) (undo-tree-id2699 . -29) (undo-tree-id2700 . -29) (undo-tree-id2701 . -29) (undo-tree-id2702 . -29) (undo-tree-id2703 . -29) (undo-tree-id2704 . -29) (undo-tree-id2705 . -29) (undo-tree-id2706 . -29) (undo-tree-id2707 . -29) (undo-tree-id2708 . -29) (undo-tree-id2709 . -29) (undo-tree-id2710 . -29) (undo-tree-id2711 . -51) 36946 (t 26024 5475 411136 281000)) nil (26024 5507 973259 0) 0 nil])
([nil nil ((#("  ;;        (\"C-c M-x\" . consult-mode-command)
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 22 47 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2633 . -46) (undo-tree-id2634 . 47) (undo-tree-id2635 . -29) (undo-tree-id2636 . -29) (undo-tree-id2637 . -29) (undo-tree-id2638 . -29) (undo-tree-id2639 . -29) (undo-tree-id2640 . -29) (undo-tree-id2641 . -29) (undo-tree-id2642 . -29) (undo-tree-id2643 . -29) (undo-tree-id2644 . -29) (undo-tree-id2645 . -29) (undo-tree-id2646 . -29) (undo-tree-id2647 . -29) (undo-tree-id2648 . -29) (undo-tree-id2649 . -29) (undo-tree-id2650 . -29) (undo-tree-id2651 . -29) (undo-tree-id2652 . -29) (undo-tree-id2653 . -29) (undo-tree-id2654 . -29) (undo-tree-id2655 . -29) (undo-tree-id2656 . -29) (undo-tree-id2657 . -29) (undo-tree-id2658 . -29) (undo-tree-id2659 . -29) (undo-tree-id2660 . -29) (undo-tree-id2661 . -29) (undo-tree-id2662 . -29) (undo-tree-id2663 . -29) (undo-tree-id2664 . -29) (undo-tree-id2665 . -29) (undo-tree-id2666 . -29) (undo-tree-id2667 . -47) 36946) nil (26024 5507 973221 0) 0 nil])
([nil nil ((#("  ;;        (\"C-c h\" . consult-history)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 20 40 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2605 . -39) (undo-tree-id2606 . 40) (undo-tree-id2607 . -29) (undo-tree-id2608 . -29) (undo-tree-id2609 . -29) (undo-tree-id2610 . -29) (undo-tree-id2611 . -29) (undo-tree-id2612 . -29) (undo-tree-id2613 . -29) (undo-tree-id2614 . -29) (undo-tree-id2615 . -29) (undo-tree-id2616 . -29) (undo-tree-id2617 . -29) (undo-tree-id2618 . -29) (undo-tree-id2619 . -29) (undo-tree-id2620 . -29) (undo-tree-id2621 . -29) (undo-tree-id2622 . -29) (undo-tree-id2623 . -29) (undo-tree-id2624 . -29) (undo-tree-id2625 . -29) (undo-tree-id2626 . -29) (undo-tree-id2627 . -29) (undo-tree-id2628 . -29) (undo-tree-id2629 . -29) (undo-tree-id2630 . -29) (undo-tree-id2631 . -29) (undo-tree-id2632 . -40) 36946) nil (26024 5507 973190 0) 0 nil])
([nil nil ((#("  ;;        (\"C-c k\" . consult-kmacro)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2601 . -38) (undo-tree-id2602 . 39) (undo-tree-id2603 . -29) (undo-tree-id2604 . -39) 36946) nil (26024 5507 973168 0) 0 nil])
([nil nil ((#("  ;;        (\"C-c m\" . consult-man)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 36 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2597 . -35) (undo-tree-id2598 . 36) (undo-tree-id2599 . -29) (undo-tree-id2600 . -36) 36946) nil (26024 5507 973163 0) 0 nil])
([nil nil ((#("  ;;        (\"C-c i\" . consult-info)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2593 . -36) (undo-tree-id2594 . 37) (undo-tree-id2595 . -29) (undo-tree-id2596 . -37) 36946) nil (26024 5507 973160 0) 0 nil])
([nil nil ((#("  ;;        ([remap Info-search] . consult-info)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2589 . -48) (undo-tree-id2590 . 49) (undo-tree-id2591 . -29) (undo-tree-id2592 . -49) 36946) nil (26024 5507 973155 0) 0 nil])
([nil nil ((#("  ;;        ;; C-x bindings in `ctl-x-map'
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 15 32 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 32 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 41 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2585 . -42) (undo-tree-id2586 . 43) (undo-tree-id2587 . -29) (undo-tree-id2588 . -43) 36946) nil (26024 5507 973151 0) 0 nil])
([nil nil ((#("  ;;        (\"C-x M-:\" . consult-complex-command)     ;; orig. repeat-complex-command
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 22 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 86 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2571 . -85) (undo-tree-id2572 . 86) (undo-tree-id2573 . -29) (undo-tree-id2574 . -29) (undo-tree-id2575 . -29) (undo-tree-id2576 . -29) (undo-tree-id2577 . -29) (undo-tree-id2578 . -29) (undo-tree-id2579 . -29) (undo-tree-id2580 . -29) (undo-tree-id2581 . -29) (undo-tree-id2582 . -29) (undo-tree-id2583 . -29) (undo-tree-id2584 . -86) 36946) nil (26024 5507 973147 0) 0 nil])
([nil nil ((#("  ;;        (\"C-x b\" . consult-buffer)                ;; orig. switch-to-buffer
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 80 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2567 . -79) (undo-tree-id2568 . 80) (undo-tree-id2569 . -29) (undo-tree-id2570 . -80) 36946) nil (26024 5507 973133 0) 0 nil])
([nil nil ((#("  ;;        (\"C-x 4 b\" . consult-buffer-other-window) ;; orig. switch-to-buffer-other-window
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 22 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 93 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2553 . -92) (undo-tree-id2554 . 93) (undo-tree-id2555 . -29) (undo-tree-id2556 . -29) (undo-tree-id2557 . -29) (undo-tree-id2558 . -29) (undo-tree-id2559 . -29) (undo-tree-id2560 . -29) (undo-tree-id2561 . -29) (undo-tree-id2562 . -29) (undo-tree-id2563 . -29) (undo-tree-id2564 . -29) (undo-tree-id2565 . -29) (undo-tree-id2566 . -93) 36946) nil (26024 5507 973129 0) 0 nil])
([nil nil ((#("  ;;        (\"C-x 5 b\" . consult-buffer-other-frame)  ;; orig. switch-to-buffer-other-frame
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 22 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 92 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2549 . -91) (undo-tree-id2550 . 92) (undo-tree-id2551 . -29) (undo-tree-id2552 . -92) 36946) nil (26024 5507 973117 0) 0 nil])
([nil nil ((#("  ;;        (\"C-x t b\" . consult-buffer-other-tab)    ;; orig. switch-to-buffer-other-tab
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 22 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 90 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2535 . -89) (undo-tree-id2536 . 90) (undo-tree-id2537 . -29) (undo-tree-id2538 . -29) (undo-tree-id2539 . -29) (undo-tree-id2540 . -29) (undo-tree-id2541 . -29) (undo-tree-id2542 . -29) (undo-tree-id2543 . -29) (undo-tree-id2544 . -29) (undo-tree-id2545 . -29) (undo-tree-id2546 . -29) (undo-tree-id2547 . -29) (undo-tree-id2548 . -90) 36946) nil (26024 5507 973112 0) 0 nil])
([nil nil ((#("  ;;        (\"C-x r b\" . consult-bookmark)            ;; orig. bookmark-jump
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 22 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 77 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2521 . -76) (undo-tree-id2522 . 77) (undo-tree-id2523 . -29) (undo-tree-id2524 . -29) (undo-tree-id2525 . -29) (undo-tree-id2526 . -29) (undo-tree-id2527 . -29) (undo-tree-id2528 . -29) (undo-tree-id2529 . -29) (undo-tree-id2530 . -29) (undo-tree-id2531 . -29) (undo-tree-id2532 . -29) (undo-tree-id2533 . -29) (undo-tree-id2534 . -77) 36946) nil (26024 5507 973101 0) 0 nil])
([nil nil ((#("  ;;        (\"C-x p b\" . consult-project-buffer)      ;; orig. project-switch-to-buffer
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 22 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2517 . -87) (undo-tree-id2518 . 88) (undo-tree-id2519 . -29) (undo-tree-id2520 . -88) 36946) nil (26024 5507 973089 0) 0 nil])
([nil nil ((#("  ;;        ;; Custom M-# bindings for fast register access
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 15 60 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2513 . -59) (undo-tree-id2514 . 60) (undo-tree-id2515 . -29) (undo-tree-id2516 . -60) 36946) nil (26024 5507 973085 0) 0 nil])
([nil nil ((#("  ;;        (\"M-#\" . consult-register-load)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 18 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2509 . -43) (undo-tree-id2510 . 44) (undo-tree-id2511 . -29) (undo-tree-id2512 . -44) 36946) nil (26024 5507 973081 0) 0 nil])
([nil nil ((#("  ;;        (\"M-'\" . consult-register-store)          ;; orig. abbrev-prefix-mark (unrelated)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 18 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 72 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 72 94 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2495 . -93) (undo-tree-id2496 . 94) (undo-tree-id2497 . -29) (undo-tree-id2498 . -29) (undo-tree-id2499 . -29) (undo-tree-id2500 . -29) (undo-tree-id2501 . -29) (undo-tree-id2502 . -29) (undo-tree-id2503 . -29) (undo-tree-id2504 . -29) (undo-tree-id2505 . -29) (undo-tree-id2506 . -29) (undo-tree-id2507 . -29) (undo-tree-id2508 . -94) 36946) nil (26024 5507 973076 0) 0 nil])
([nil nil ((#("  ;;        (\"C-M-#\" . consult-register)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2481 . -40) (undo-tree-id2482 . 41) (undo-tree-id2483 . -29) (undo-tree-id2484 . -29) (undo-tree-id2485 . -29) (undo-tree-id2486 . -29) (undo-tree-id2487 . -29) (undo-tree-id2488 . -29) (undo-tree-id2489 . -29) (undo-tree-id2490 . -29) (undo-tree-id2491 . -29) (undo-tree-id2492 . -29) (undo-tree-id2493 . -29) (undo-tree-id2494 . -41) 36946) nil (26024 5507 973064 0) 0 nil])
([nil nil ((#("  ;;        ;; Other custom bindings
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 15 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 22 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2467 . -36) (undo-tree-id2468 . 37) (undo-tree-id2469 . -29) (undo-tree-id2470 . -29) (undo-tree-id2471 . -29) (undo-tree-id2472 . -29) (undo-tree-id2473 . -29) (undo-tree-id2474 . -29) (undo-tree-id2475 . -29) (undo-tree-id2476 . -29) (undo-tree-id2477 . -29) (undo-tree-id2478 . -29) (undo-tree-id2479 . -29) (undo-tree-id2480 . -37) 36946) nil (26024 5507 973052 0) 0 nil])
([nil nil ((#("  ;;        (\"M-y\" . consult-yank-pop)                ;; orig. yank-pop
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 18 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 56 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 72 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2463 . -71) (undo-tree-id2464 . 72) (undo-tree-id2465 . -29) (undo-tree-id2466 . -72) 36946) nil (26024 5507 973040 0) 0 nil])
([nil nil ((#("  ;;        ;; M-g bindings in `goto-map'
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 15 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 24 32 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 32 40 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 40 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2449 . -41) (undo-tree-id2450 . 42) (undo-tree-id2451 . -29) (undo-tree-id2452 . -29) (undo-tree-id2453 . -29) (undo-tree-id2454 . -29) (undo-tree-id2455 . -29) (undo-tree-id2456 . -29) (undo-tree-id2457 . -29) (undo-tree-id2458 . -29) (undo-tree-id2459 . -29) (undo-tree-id2460 . -29) (undo-tree-id2461 . -29) (undo-tree-id2462 . -42) 36946) nil (26024 5507 973036 0) 0 nil])
([nil nil ((#("  ;;        (\"M-g e\" . consult-compile-error)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 21 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2435 . -45) (undo-tree-id2436 . 46) (undo-tree-id2437 . -29) (undo-tree-id2438 . -29) (undo-tree-id2439 . -29) (undo-tree-id2440 . -29) (undo-tree-id2441 . -29) (undo-tree-id2442 . -29) (undo-tree-id2443 . -29) (undo-tree-id2444 . -29) (undo-tree-id2445 . -29) (undo-tree-id2446 . -29) (undo-tree-id2447 . -29) (undo-tree-id2448 . -46) 36946) nil (26024 5507 973025 0) 0 nil])
([nil nil ((#("  ;;        (\"M-g f\" . consult-flymake)               ;; Alternative: consult-flycheck
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 48 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 48 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 87 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2421 . -86) (undo-tree-id2422 . 87) (undo-tree-id2423 . -29) (undo-tree-id2424 . -29) (undo-tree-id2425 . -29) (undo-tree-id2426 . -29) (undo-tree-id2427 . -29) (undo-tree-id2428 . -29) (undo-tree-id2429 . -29) (undo-tree-id2430 . -29) (undo-tree-id2431 . -29) (undo-tree-id2432 . -29) (undo-tree-id2433 . -29) (undo-tree-id2434 . -87) 36946) nil (26024 5507 973013 0) 0 nil])
([nil nil ((#("  ;;        (\"M-g g\" . consult-goto-line)             ;; orig. goto-line
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 10 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 10 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 53 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 53 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 73 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2407 . -72) (undo-tree-id2408 . 73) (undo-tree-id2409 . -29) (undo-tree-id2410 . -29) (undo-tree-id2411 . -29) (undo-tree-id2412 . -29) (undo-tree-id2413 . -29) (undo-tree-id2414 . -29) (undo-tree-id2415 . -29) (undo-tree-id2416 . -29) (undo-tree-id2417 . -29) (undo-tree-id2418 . -29) (undo-tree-id2419 . -29) (undo-tree-id2420 . -73) 36946) nil (26024 5507 973000 0) 0 nil])
([nil nil ((#("  ;;        (\"M-g M-g\" . consult-goto-line)           ;; orig. goto-line
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 22 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 22 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 66 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 66 73 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2393 . -72) (undo-tree-id2394 . 73) (undo-tree-id2395 . -29) (undo-tree-id2396 . -29) (undo-tree-id2397 . -29) (undo-tree-id2398 . -29) (undo-tree-id2399 . -29) (undo-tree-id2400 . -29) (undo-tree-id2401 . -29) (undo-tree-id2402 . -29) (undo-tree-id2403 . -29) (undo-tree-id2404 . -29) (undo-tree-id2405 . -29) (undo-tree-id2406 . -73) 36946) nil (26024 5507 972989 0) 0 nil])
([nil nil ((#("  ;;        (\"M-g o\" . consult-outline)               ;; Alternative: consult-org-heading
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 73 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 73 90 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2379 . -89) (undo-tree-id2380 . 90) (undo-tree-id2381 . -29) (undo-tree-id2382 . -29) (undo-tree-id2383 . -29) (undo-tree-id2384 . -29) (undo-tree-id2385 . -29) (undo-tree-id2386 . -29) (undo-tree-id2387 . -29) (undo-tree-id2388 . -29) (undo-tree-id2389 . -29) (undo-tree-id2390 . -29) (undo-tree-id2391 . -29) (undo-tree-id2392 . -90) 36946) nil (26024 5507 972977 0) 0 nil])
([nil nil ((#("  ;;        (\"M-g m\" . consult-mark)
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2365 . -36) (undo-tree-id2366 . 37) (undo-tree-id2367 . -29) (undo-tree-id2368 . -29) (undo-tree-id2369 . -29) (undo-tree-id2370 . -29) (undo-tree-id2371 . -29) (undo-tree-id2372 . -29) (undo-tree-id2373 . -29) (undo-tree-id2374 . -29) (undo-tree-id2375 . -29) (undo-tree-id2376 . -29) (undo-tree-id2377 . -29) (undo-tree-id2378 . -37) 36946) nil (26024 5507 972965 0) 0 nil])
([nil nil ((#("  ;;        (\"M-g k\" . consult-global-mark)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 39 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2351 . -43) (undo-tree-id2352 . 44) (undo-tree-id2353 . -29) (undo-tree-id2354 . -29) (undo-tree-id2355 . -29) (undo-tree-id2356 . -29) (undo-tree-id2357 . -29) (undo-tree-id2358 . -29) (undo-tree-id2359 . -29) (undo-tree-id2360 . -29) (undo-tree-id2361 . -29) (undo-tree-id2362 . -29) (undo-tree-id2363 . -29) (undo-tree-id2364 . -44) 36946) nil (26024 5507 972953 0) 0 nil])
([nil nil ((#("  ;;        (\"M-g i\" . consult-imenu)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2337 . -37) (undo-tree-id2338 . 38) (undo-tree-id2339 . -29) (undo-tree-id2340 . -29) (undo-tree-id2341 . -29) (undo-tree-id2342 . -29) (undo-tree-id2343 . -29) (undo-tree-id2344 . -29) (undo-tree-id2345 . -29) (undo-tree-id2346 . -29) (undo-tree-id2347 . -29) (undo-tree-id2348 . -29) (undo-tree-id2349 . -29) (undo-tree-id2350 . -38) 36946) nil (26024 5507 972940 0) 0 nil])
([nil nil ((#("  ;;        (\"M-g I\" . consult-imenu-multi)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2332 . -43) (undo-tree-id2333 . 44) (undo-tree-id2334 . -29) (undo-tree-id2335 . -29) (undo-tree-id2336 . -44) 36946) nil (26024 5507 972928 0) 0 nil])
([nil nil ((#("  ;;        ;; M-s bindings in `search-map'
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 15 32 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 32 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 42 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2328 . -43) (undo-tree-id2329 . 44) (undo-tree-id2330 . -29) (undo-tree-id2331 . -44) 36946) nil (26024 5507 972923 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s d\" . consult-find)                  ;; Alternative: consult-fd
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 51 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 51 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 81 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2324 . -80) (undo-tree-id2325 . 81) (undo-tree-id2326 . -29) (undo-tree-id2327 . -81) 36946) nil (26024 5507 972919 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s c\" . consult-locate)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 39 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2320 . -38) (undo-tree-id2321 . 39) (undo-tree-id2322 . -29) (undo-tree-id2323 . -39) 36946) nil (26024 5507 972915 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s g\" . consult-grep)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 8 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2306 . -36) (undo-tree-id2307 . 37) (undo-tree-id2308 . -29) (undo-tree-id2309 . -29) (undo-tree-id2310 . -29) (undo-tree-id2311 . -29) (undo-tree-id2312 . -29) (undo-tree-id2313 . -29) (undo-tree-id2314 . -29) (undo-tree-id2315 . -29) (undo-tree-id2316 . -29) (undo-tree-id2317 . -29) (undo-tree-id2318 . -29) (undo-tree-id2319 . -37) 36946) nil (26024 5507 972911 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s G\" . consult-git-grep)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2292 . -40) (undo-tree-id2293 . 41) (undo-tree-id2294 . -29) (undo-tree-id2295 . -29) (undo-tree-id2296 . -29) (undo-tree-id2297 . -29) (undo-tree-id2298 . -29) (undo-tree-id2299 . -29) (undo-tree-id2300 . -29) (undo-tree-id2301 . -29) (undo-tree-id2302 . -29) (undo-tree-id2303 . -29) (undo-tree-id2304 . -29) (undo-tree-id2305 . -41) 36946) nil (26024 5507 972899 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s r\" . consult-ripgrep)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 18 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 40 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2278 . -39) (undo-tree-id2279 . 40) (undo-tree-id2280 . -29) (undo-tree-id2281 . -29) (undo-tree-id2282 . -29) (undo-tree-id2283 . -29) (undo-tree-id2284 . -29) (undo-tree-id2285 . -29) (undo-tree-id2286 . -29) (undo-tree-id2287 . -29) (undo-tree-id2288 . -29) (undo-tree-id2289 . -29) (undo-tree-id2290 . -29) (undo-tree-id2291 . -40) 36946) nil (26024 5507 972886 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s l\" . consult-line)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 37 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2264 . -36) (undo-tree-id2265 . 37) (undo-tree-id2266 . -29) (undo-tree-id2267 . -29) (undo-tree-id2268 . -29) (undo-tree-id2269 . -29) (undo-tree-id2270 . -29) (undo-tree-id2271 . -29) (undo-tree-id2272 . -29) (undo-tree-id2273 . -29) (undo-tree-id2274 . -29) (undo-tree-id2275 . -29) (undo-tree-id2276 . -29) (undo-tree-id2277 . -37) 36946) nil (26024 5507 972873 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s L\" . consult-line-multi)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2250 . -42) (undo-tree-id2251 . 43) (undo-tree-id2252 . -29) (undo-tree-id2253 . -29) (undo-tree-id2254 . -29) (undo-tree-id2255 . -29) (undo-tree-id2256 . -29) (undo-tree-id2257 . -29) (undo-tree-id2258 . -29) (undo-tree-id2259 . -29) (undo-tree-id2260 . -29) (undo-tree-id2261 . -29) (undo-tree-id2262 . -29) (undo-tree-id2263 . -43) 36946) nil (26024 5507 972862 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s k\" . consult-keep-lines)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 43 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2236 . -42) (undo-tree-id2237 . 43) (undo-tree-id2238 . -29) (undo-tree-id2239 . -29) (undo-tree-id2240 . -29) (undo-tree-id2241 . -29) (undo-tree-id2242 . -29) (undo-tree-id2243 . -29) (undo-tree-id2244 . -29) (undo-tree-id2245 . -29) (undo-tree-id2246 . -29) (undo-tree-id2247 . -29) (undo-tree-id2248 . -29) (undo-tree-id2249 . -43) 36946) nil (26024 5507 972848 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s u\" . consult-focus-lines)
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2222 . -43) (undo-tree-id2223 . 44) (undo-tree-id2224 . -29) (undo-tree-id2225 . -29) (undo-tree-id2226 . -29) (undo-tree-id2227 . -29) (undo-tree-id2228 . -29) (undo-tree-id2229 . -29) (undo-tree-id2230 . -29) (undo-tree-id2231 . -29) (undo-tree-id2232 . -29) (undo-tree-id2233 . -29) (undo-tree-id2234 . -29) (undo-tree-id2235 . -44) 36946) nil (26024 5507 972835 0) 0 nil])
([nil nil ((#("  ;;        ;; Isearch integration
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 9 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 9 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 15 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2208 . -34) (undo-tree-id2209 . 35) (undo-tree-id2210 . -29) (undo-tree-id2211 . -29) (undo-tree-id2212 . -29) (undo-tree-id2213 . -29) (undo-tree-id2214 . -29) (undo-tree-id2215 . -29) (undo-tree-id2216 . -29) (undo-tree-id2217 . -29) (undo-tree-id2218 . -29) (undo-tree-id2219 . -29) (undo-tree-id2220 . -29) (undo-tree-id2221 . -35) 36946) nil (26024 5507 972824 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s e\" . consult-isearch-history)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 15 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 48 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2194 . -47) (undo-tree-id2195 . 48) (undo-tree-id2196 . -29) (undo-tree-id2197 . -29) (undo-tree-id2198 . -29) (undo-tree-id2199 . -29) (undo-tree-id2200 . -29) (undo-tree-id2201 . -29) (undo-tree-id2202 . -29) (undo-tree-id2203 . -29) (undo-tree-id2204 . -29) (undo-tree-id2205 . -29) (undo-tree-id2206 . -29) (undo-tree-id2207 . -48) 36946) nil (26024 5507 972811 0) 0 nil])
([nil nil ((#("  ;;        :map isearch-mode-map
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 16 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 16 34 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2180 . -33) (undo-tree-id2181 . 34) (undo-tree-id2182 . -29) (undo-tree-id2183 . -29) (undo-tree-id2184 . -29) (undo-tree-id2185 . -29) (undo-tree-id2186 . -29) (undo-tree-id2187 . -29) (undo-tree-id2188 . -29) (undo-tree-id2189 . -29) (undo-tree-id2190 . -29) (undo-tree-id2191 . -29) (undo-tree-id2192 . -29) (undo-tree-id2193 . -34) 36946) nil (26024 5507 972798 0) 0 nil])
([nil nil ((#("  ;;        (\"M-e\" . consult-isearch-history)         ;; orig. isearch-edit-string
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 18 42 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 42 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 83 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2166 . -82) (undo-tree-id2167 . 83) (undo-tree-id2168 . -29) (undo-tree-id2169 . -29) (undo-tree-id2170 . -29) (undo-tree-id2171 . -29) (undo-tree-id2172 . -29) (undo-tree-id2173 . -29) (undo-tree-id2174 . -29) (undo-tree-id2175 . -29) (undo-tree-id2176 . -29) (undo-tree-id2177 . -29) (undo-tree-id2178 . -29) (undo-tree-id2179 . -83) 36946) nil (26024 5507 972786 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s e\" . consult-isearch-history)       ;; orig. isearch-edit-string
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 47 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 47 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 83 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2152 . -82) (undo-tree-id2153 . 83) (undo-tree-id2154 . -29) (undo-tree-id2155 . -29) (undo-tree-id2156 . -29) (undo-tree-id2157 . -29) (undo-tree-id2158 . -29) (undo-tree-id2159 . -29) (undo-tree-id2160 . -29) (undo-tree-id2161 . -29) (undo-tree-id2162 . -29) (undo-tree-id2163 . -29) (undo-tree-id2164 . -29) (undo-tree-id2165 . -83) 36946) nil (26024 5507 972773 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s l\" . consult-line)                  ;; needed by consult-line to detect isearch
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 51 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 51 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 98 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2138 . -97) (undo-tree-id2139 . 98) (undo-tree-id2140 . -29) (undo-tree-id2141 . -29) (undo-tree-id2142 . -29) (undo-tree-id2143 . -29) (undo-tree-id2144 . -29) (undo-tree-id2145 . -29) (undo-tree-id2146 . -29) (undo-tree-id2147 . -29) (undo-tree-id2148 . -29) (undo-tree-id2149 . -29) (undo-tree-id2150 . -29) (undo-tree-id2151 . -98) 36946) nil (26024 5507 972759 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s L\" . consult-line-multi)            ;; needed by consult-line to detect isearch
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 20 26 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 26 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 98 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2124 . -97) (undo-tree-id2125 . 98) (undo-tree-id2126 . -29) (undo-tree-id2127 . -29) (undo-tree-id2128 . -29) (undo-tree-id2129 . -29) (undo-tree-id2130 . -29) (undo-tree-id2131 . -29) (undo-tree-id2132 . -29) (undo-tree-id2133 . -29) (undo-tree-id2134 . -29) (undo-tree-id2135 . -29) (undo-tree-id2136 . -29) (undo-tree-id2137 . -98) 36946) nil (26024 5507 972747 0) 0 nil])
([nil nil ((#("  ;;        ;; Minibuffer history
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 15 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 15 34 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2110 . -33) (undo-tree-id2111 . 34) (undo-tree-id2112 . -29) (undo-tree-id2113 . -29) (undo-tree-id2114 . -29) (undo-tree-id2115 . -29) (undo-tree-id2116 . -29) (undo-tree-id2117 . -29) (undo-tree-id2118 . -29) (undo-tree-id2119 . -29) (undo-tree-id2120 . -29) (undo-tree-id2121 . -29) (undo-tree-id2122 . -29) (undo-tree-id2123 . -34) 36946) nil (26024 5507 972734 0) 0 nil])
([nil nil ((#("  ;;        :map minibuffer-local-map
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 16 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 16 38 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2075 . -37) (undo-tree-id2076 . 38) (undo-tree-id2077 . -29) (undo-tree-id2078 . -29) (undo-tree-id2079 . -29) (undo-tree-id2080 . -29) (undo-tree-id2081 . -29) (undo-tree-id2082 . -29) (undo-tree-id2083 . -29) (undo-tree-id2084 . -29) (undo-tree-id2085 . -29) (undo-tree-id2086 . -29) (undo-tree-id2087 . -29) (undo-tree-id2088 . -29) (undo-tree-id2089 . -29) (undo-tree-id2090 . -29) (undo-tree-id2091 . -29) (undo-tree-id2092 . -29) (undo-tree-id2093 . -29) (undo-tree-id2094 . -29) (undo-tree-id2095 . -29) (undo-tree-id2096 . -29) (undo-tree-id2097 . -29) (undo-tree-id2098 . -29) (undo-tree-id2099 . -29) (undo-tree-id2100 . -29) (undo-tree-id2101 . -29) (undo-tree-id2102 . -29) (undo-tree-id2103 . -29) (undo-tree-id2104 . -29) (undo-tree-id2105 . -29) (undo-tree-id2106 . -29) (undo-tree-id2107 . -29) (undo-tree-id2108 . -29) (undo-tree-id2109 . -38) 36946) nil (26024 5507 972720 0) 0 nil])
([nil nil ((#("  ;;        (\"M-s\" . consult-history)                 ;; orig. next-matching-history-element
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 11 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 18 19 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 19 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 56 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 93 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2054 . -92) (undo-tree-id2055 . 93) (undo-tree-id2056 . -29) (undo-tree-id2057 . -29) (undo-tree-id2058 . -29) (undo-tree-id2059 . -29) (undo-tree-id2060 . -29) (undo-tree-id2061 . -29) (undo-tree-id2062 . -29) (undo-tree-id2063 . -29) (undo-tree-id2064 . -29) (undo-tree-id2065 . -29) (undo-tree-id2066 . -29) (undo-tree-id2067 . -29) (undo-tree-id2068 . -29) (undo-tree-id2069 . -29) (undo-tree-id2070 . -29) (undo-tree-id2071 . -29) (undo-tree-id2072 . -29) (undo-tree-id2073 . -29) (undo-tree-id2074 . -93) 36946) nil (26024 5507 972689 0) 0 nil])
([nil nil ((#("  ;;        (\"M-r\" . consult-history))                ;; orig. previous-matching-history-element
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 7 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 13 18 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 18 45 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 45 54 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 54 57 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 57 89 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 89 97 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 36917) (undo-tree-id2032 . -96) (undo-tree-id2033 . 97) (undo-tree-id2034 . -75) (undo-tree-id2035 . -29) (undo-tree-id2036 . -29) (undo-tree-id2037 . -29) (undo-tree-id2038 . -29) (undo-tree-id2039 . -29) (undo-tree-id2040 . -29) (undo-tree-id2041 . -29) (undo-tree-id2042 . -29) (undo-tree-id2043 . -29) (undo-tree-id2044 . -29) (undo-tree-id2045 . -29) (undo-tree-id2046 . -29) (undo-tree-id2047 . -29) (undo-tree-id2048 . -29) (undo-tree-id2049 . -29) (undo-tree-id2050 . -29) (undo-tree-id2051 . -29) (undo-tree-id2052 . -29) (undo-tree-id2053 . -97) 36946) nil (26024 5507 972669 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 36917) (undo-tree-id2030 . 1) (undo-tree-id2031 . -1)) nil (26024 5507 973742 0) 0 nil])
([nil nil ((#("  ;; Replace bindings. Lazily loaded due by `use-package'.
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 45 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 45 56 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 56 59 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 36858) (undo-tree-id2712 . -58) (undo-tree-id2713 . -59) (undo-tree-id2714 . -59) (undo-tree-id2715 . -59) (undo-tree-id2716 . -59) (undo-tree-id2717 . -59) (undo-tree-id2718 . -59) (undo-tree-id2719 . -59) (undo-tree-id2720 . -59) (undo-tree-id2721 . -59) (undo-tree-id2722 . -59) (undo-tree-id2723 . -59) (undo-tree-id2724 . -59) (undo-tree-id2725 . -59) (undo-tree-id2726 . -59) (undo-tree-id2727 . -59) (undo-tree-id2728 . -59) (undo-tree-id2729 . -59) (undo-tree-id2730 . -59) (undo-tree-id2731 . -59) (undo-tree-id2732 . -59) (undo-tree-id2733 . -59) (undo-tree-id2734 . -59) (undo-tree-id2735 . -59) (undo-tree-id2736 . -59) (undo-tree-id2737 . -59) (undo-tree-id2738 . -59) (undo-tree-id2739 . -59) (undo-tree-id2740 . -59) (undo-tree-id2741 . -59) (undo-tree-id2742 . -59) (undo-tree-id2743 . -59) (undo-tree-id2744 . -59) (undo-tree-id2745 . -59) (undo-tree-id2746 . -59) (undo-tree-id2747 . -59) (undo-tree-id2748 . -59) (undo-tree-id2749 . -59) (undo-tree-id2750 . -59) (undo-tree-id2751 . -59) (undo-tree-id2752 . -59) (undo-tree-id2753 . -59) (undo-tree-id2754 . -59) (undo-tree-id2755 . -59) (undo-tree-id2756 . -59) (undo-tree-id2757 . -59) (undo-tree-id2758 . -59) (undo-tree-id2759 . -59) (undo-tree-id2760 . -59) (undo-tree-id2761 . -59) (undo-tree-id2762 . -59) (undo-tree-id2763 . -59) (undo-tree-id2764 . -59) (undo-tree-id2765 . -59) (undo-tree-id2766 . -59) (undo-tree-id2767 . -59) (undo-tree-id2768 . -59) (undo-tree-id2769 . -59) (undo-tree-id2770 . -59) (undo-tree-id2771 . -59) (undo-tree-id2772 . -59) (undo-tree-id2773 . -59) (undo-tree-id2774 . -59) (undo-tree-id2775 . -59) (undo-tree-id2776 . -59) (undo-tree-id2777 . -59) (undo-tree-id2778 . -59) (undo-tree-id2779 . -59) (undo-tree-id2780 . -59) (undo-tree-id2781 . -59) (undo-tree-id2782 . -59) (undo-tree-id2783 . -59) (undo-tree-id2784 . -59) (undo-tree-id2785 . -59) (undo-tree-id2786 . -59) (undo-tree-id2787 . -59) (undo-tree-id2788 . -59) (undo-tree-id2789 . -59) (undo-tree-id2790 . -59) (undo-tree-id2791 . -59) (undo-tree-id2792 . -59) (undo-tree-id2793 . -59) (undo-tree-id2794 . -59) (undo-tree-id2795 . -59) (undo-tree-id2796 . -59) (undo-tree-id2797 . -59) (undo-tree-id2798 . -59) (undo-tree-id2799 . -59) (undo-tree-id2800 . -59) (undo-tree-id2801 . -59) (undo-tree-id2802 . -59) (undo-tree-id2803 . -59) (undo-tree-id2804 . -59) (undo-tree-id2805 . -59) (undo-tree-id2806 . -59) (undo-tree-id2807 . -59) (undo-tree-id2808 . -59) (undo-tree-id2809 . -59) (undo-tree-id2810 . -59) (undo-tree-id2811 . -59) (undo-tree-id2812 . -59) (undo-tree-id2813 . -59) (undo-tree-id2814 . -59) (undo-tree-id2815 . -59) (undo-tree-id2816 . -59) (undo-tree-id2817 . -59) (undo-tree-id2818 . -59) (undo-tree-id2819 . -59) (undo-tree-id2820 . -59) (undo-tree-id2821 . -59) (undo-tree-id2822 . -59) (undo-tree-id2823 . -59) (undo-tree-id2824 . -59) (undo-tree-id2825 . -59) (undo-tree-id2826 . -59) (undo-tree-id2827 . -59) (undo-tree-id2828 . -59) (undo-tree-id2829 . -59) (undo-tree-id2830 . -59) (undo-tree-id2831 . -59) (undo-tree-id2832 . -59) (undo-tree-id2833 . -59) (undo-tree-id2834 . -59) (undo-tree-id2835 . -59) (undo-tree-id2836 . -59) (undo-tree-id2837 . -59) (undo-tree-id2838 . -59) (undo-tree-id2839 . -59) (undo-tree-id2840 . -59) (undo-tree-id2841 . -59) (undo-tree-id2842 . -59) (undo-tree-id2843 . -59) (undo-tree-id2844 . -59) (undo-tree-id2845 . -59) (undo-tree-id2846 . -59) (undo-tree-id2847 . -59) (undo-tree-id2848 . -59) (undo-tree-id2849 . -59) (undo-tree-id2850 . -59) (undo-tree-id2851 . -59) (undo-tree-id2852 . -59) (undo-tree-id2853 . -59) (undo-tree-id2854 . -59) (undo-tree-id2855 . -59) (undo-tree-id2856 . -59) (undo-tree-id2857 . -59) (undo-tree-id2858 . -59) (undo-tree-id2859 . -59) (undo-tree-id2860 . -59) (undo-tree-id2861 . -59) (undo-tree-id2862 . -59) (undo-tree-id2863 . -59) (undo-tree-id2864 . -59) (undo-tree-id2865 . -59) (undo-tree-id2866 . -59) (undo-tree-id2867 . -59) (undo-tree-id2868 . -59) (undo-tree-id2869 . -59) (undo-tree-id2870 . -59) (undo-tree-id2871 . -59) (undo-tree-id2872 . -59) (undo-tree-id2873 . -59) (undo-tree-id2874 . -59) (undo-tree-id2875 . -59) (undo-tree-id2876 . -59) (undo-tree-id2877 . -59) (undo-tree-id2878 . -59) (undo-tree-id2879 . -59) (undo-tree-id2880 . -59) (undo-tree-id2881 . -59) (undo-tree-id2882 . -59) (undo-tree-id2883 . -59) (undo-tree-id2884 . -59) (undo-tree-id2885 . -59) (undo-tree-id2886 . -59) (undo-tree-id2887 . -59) (undo-tree-id2888 . -59) (undo-tree-id2889 . -59) (undo-tree-id2890 . -59) (undo-tree-id2891 . -59) (undo-tree-id2892 . -59) (undo-tree-id2893 . -59) (undo-tree-id2894 . -59) (undo-tree-id2895 . -59) (undo-tree-id2896 . -59) (undo-tree-id2897 . -59) (undo-tree-id2898 . -59) (undo-tree-id2899 . -59) (undo-tree-id2900 . -59) (undo-tree-id2901 . -59) (undo-tree-id2902 . -59) (undo-tree-id2903 . -59) (undo-tree-id2904 . -59) (undo-tree-id2905 . -59) (undo-tree-id2906 . -59) (undo-tree-id2907 . -59) (undo-tree-id2908 . -59) (undo-tree-id2909 . -59) (undo-tree-id2910 . -59) (undo-tree-id2911 . -59) (undo-tree-id2912 . -59) (undo-tree-id2913 . -59) (undo-tree-id2914 . -59) (undo-tree-id2915 . -59) (undo-tree-id2916 . -59) (undo-tree-id2917 . -59) (undo-tree-id2918 . -59) (undo-tree-id2919 . -59) (undo-tree-id2920 . -59) (undo-tree-id2921 . -59) (undo-tree-id2922 . -59) (undo-tree-id2923 . -59) (undo-tree-id2924 . -59) (undo-tree-id2925 . -59) (undo-tree-id2926 . -59) (undo-tree-id2927 . -59) (undo-tree-id2928 . -59) (undo-tree-id2929 . -59) (undo-tree-id2930 . -59) (undo-tree-id2931 . -59) (undo-tree-id2932 . -59) (undo-tree-id2933 . -59) (undo-tree-id2934 . -59) (undo-tree-id2935 . -59) (undo-tree-id2936 . -59) (undo-tree-id2937 . -59) (undo-tree-id2938 . -59) (undo-tree-id2939 . -59) (undo-tree-id2940 . -59) (undo-tree-id2941 . -59) (undo-tree-id2942 . -59) (undo-tree-id2943 . -59) (undo-tree-id2944 . -59) (undo-tree-id2945 . -59) (undo-tree-id2946 . -59) (undo-tree-id2947 . -59) (undo-tree-id2948 . -59) (undo-tree-id2949 . -59) (undo-tree-id2950 . -59) (undo-tree-id2951 . -59) (undo-tree-id2952 . -59) (undo-tree-id2953 . -59) (undo-tree-id2954 . -59) (undo-tree-id2955 . -59) (undo-tree-id2956 . -59) (undo-tree-id2957 . -59) (undo-tree-id2958 . -59) (undo-tree-id2959 . -59) (undo-tree-id2960 . -59) (undo-tree-id2961 . -59) (undo-tree-id2962 . -59) (undo-tree-id2963 . -59) (undo-tree-id2964 . -59) (undo-tree-id2965 . -59) (undo-tree-id2966 . -59) (undo-tree-id2967 . -59) (undo-tree-id2968 . -59) (undo-tree-id2969 . -59) (undo-tree-id2970 . -59) (undo-tree-id2971 . -59) (undo-tree-id2972 . -59) (undo-tree-id2973 . -59) (undo-tree-id2974 . -59) (undo-tree-id2975 . -59) (undo-tree-id2976 . -59) (undo-tree-id2977 . -59) (undo-tree-id2978 . -59) (undo-tree-id2979 . -59) (undo-tree-id2980 . -59) (undo-tree-id2981 . -59) (undo-tree-id2982 . -59) (undo-tree-id2983 . -59) (undo-tree-id2984 . -59) (undo-tree-id2985 . -59) (undo-tree-id2986 . -59) (undo-tree-id2987 . -59) (undo-tree-id2988 . -59) (undo-tree-id2989 . -59) (undo-tree-id2990 . -59) (undo-tree-id2991 . -59) (undo-tree-id2992 . -59) (undo-tree-id2993 . -59) (undo-tree-id2994 . -59) (undo-tree-id2995 . -59) (undo-tree-id2996 . -59) (undo-tree-id2997 . -59) (undo-tree-id2998 . -59) (undo-tree-id2999 . -59) (undo-tree-id3000 . -59) (undo-tree-id3001 . -59) (undo-tree-id3002 . -59) (undo-tree-id3003 . -59) (undo-tree-id3004 . -59) (undo-tree-id3005 . -59) (undo-tree-id3006 . -59) (undo-tree-id3007 . -59) (undo-tree-id3008 . -59) (undo-tree-id3009 . -59) (undo-tree-id3010 . -59) (undo-tree-id3011 . -59) (undo-tree-id3012 . -59) (undo-tree-id3013 . -59) (undo-tree-id3014 . -59) (undo-tree-id3015 . -59) (undo-tree-id3016 . -59) (undo-tree-id3017 . -59) (undo-tree-id3018 . -59) (undo-tree-id3019 . -59) (undo-tree-id3020 . -59) (undo-tree-id3021 . -59) (undo-tree-id3022 . -59) (undo-tree-id3023 . -59) (undo-tree-id3024 . -59) (undo-tree-id3025 . -59) (undo-tree-id3026 . -59) (undo-tree-id3027 . -59) (undo-tree-id3028 . -59) (undo-tree-id3029 . -59) (undo-tree-id3030 . -59) (undo-tree-id3031 . -59) (undo-tree-id3032 . -59) (undo-tree-id3033 . -59) (undo-tree-id3034 . -59) (undo-tree-id3035 . -59) (undo-tree-id3036 . -59) (undo-tree-id3037 . -59) (undo-tree-id3038 . -59) (undo-tree-id3039 . -59) (undo-tree-id3040 . -59) (undo-tree-id3041 . -59) (undo-tree-id3042 . -59) (undo-tree-id3043 . -59) (undo-tree-id3044 . -59) (undo-tree-id3045 . -59) (undo-tree-id3046 . -59) (undo-tree-id3047 . -59) (undo-tree-id3048 . -59) (undo-tree-id3049 . -59) (undo-tree-id3050 . -59) (undo-tree-id3051 . -59) (undo-tree-id3052 . -59) (undo-tree-id3053 . -59) (undo-tree-id3054 . -59) (undo-tree-id3055 . -59) (undo-tree-id3056 . -59) (undo-tree-id3057 . -59) (undo-tree-id3058 . -59) (undo-tree-id3059 . -59) (undo-tree-id3060 . -59) (undo-tree-id3061 . -59) (undo-tree-id3062 . -59) (undo-tree-id3063 . -59) (undo-tree-id3064 . -59) (undo-tree-id3065 . -59) (undo-tree-id3066 . -59) (undo-tree-id3067 . -59) (undo-tree-id3068 . -59) (undo-tree-id3069 . -59) (undo-tree-id3070 . -59) (undo-tree-id3071 . -59) (undo-tree-id3072 . -59) (undo-tree-id3073 . -59) (undo-tree-id3074 . -59) (undo-tree-id3075 . -59) (undo-tree-id3076 . -59) (undo-tree-id3077 . -59) (undo-tree-id3078 . -59) (undo-tree-id3079 . -59) (undo-tree-id3080 . -59) (undo-tree-id3081 . -59) (undo-tree-id3082 . -59) (undo-tree-id3083 . -59) (undo-tree-id3084 . -59) (undo-tree-id3085 . -59) (undo-tree-id3086 . -59) (undo-tree-id3087 . -59) (undo-tree-id3088 . -59) (undo-tree-id3089 . -59) (undo-tree-id3090 . -59) (undo-tree-id3091 . -59) (undo-tree-id3092 . -59) (undo-tree-id3093 . -59) (undo-tree-id3094 . -59) (undo-tree-id3095 . -59) (undo-tree-id3096 . -59) (undo-tree-id3097 . -59) (undo-tree-id3098 . -59) (undo-tree-id3099 . -59) (undo-tree-id3100 . -59) (undo-tree-id3101 . -59) (undo-tree-id3102 . -59) (undo-tree-id3103 . -59) (undo-tree-id3104 . -59) (undo-tree-id3105 . -59) (undo-tree-id3106 . -59) (undo-tree-id3107 . -59) (undo-tree-id3108 . -59) (undo-tree-id3109 . -59) (undo-tree-id3110 . -59) (undo-tree-id3111 . -59) (undo-tree-id3112 . -59) (undo-tree-id3113 . -59) (undo-tree-id3114 . -59) (undo-tree-id3115 . -59) (undo-tree-id3116 . -59) (undo-tree-id3117 . -59) (undo-tree-id3118 . -59) (undo-tree-id3119 . -59) (undo-tree-id3120 . -59) (undo-tree-id3121 . -59) (undo-tree-id3122 . -59) (undo-tree-id3123 . -59) (undo-tree-id3124 . -59) (undo-tree-id3125 . -59) (undo-tree-id3126 . -59) (undo-tree-id3127 . -59) (undo-tree-id3128 . -59) (undo-tree-id3129 . -59) (undo-tree-id3130 . -59) (undo-tree-id3131 . -59) (undo-tree-id3132 . -59) (undo-tree-id3133 . -59) (undo-tree-id3134 . -59) (undo-tree-id3135 . -59) (undo-tree-id3136 . -59) (undo-tree-id3137 . -59) (undo-tree-id3138 . -59) (undo-tree-id3139 . -59) (undo-tree-id3140 . -59) (undo-tree-id3141 . -59) (undo-tree-id3142 . -59) (undo-tree-id3143 . -59) (undo-tree-id3144 . -59) (undo-tree-id3145 . -59) (undo-tree-id3146 . -59) (undo-tree-id3147 . -59) (undo-tree-id3148 . -59) (undo-tree-id3149 . -59)) nil (26024 5510 91881 0) 0 nil] [nil nil ((#("(use-package consult
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 20 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 20 21 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 36837) (undo-tree-id2019 . -20) (undo-tree-id2020 . -21) (undo-tree-id2021 . -21) (undo-tree-id2022 . -21) (undo-tree-id2023 . -21) (undo-tree-id2024 . -21) (undo-tree-id2025 . -21) (undo-tree-id2026 . -21) (undo-tree-id2027 . 21) (undo-tree-id2028 . -1) (undo-tree-id2029 . -21)) ((36837 . 36858)) (26024 5507 972642 0) 0 nil])
([nil nil ((#(";; " 0 3 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 39510) 36487 (t 26024 5510 146093 463000)) nil (26024 5572 359631 0) 0 nil])
nil
([nil nil ((#(";" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 39561) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1)) nil (26024 5572 359631 0) 0 nil])
([nil nil ((#(";" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 39561) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1)) nil (26024 5572 359628 0) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 39561) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1)) nil (26024 5572 359624 0) 0 nil])
([nil nil ((39955 . 39958) (t 26024 5572 413578 586000)) nil (26024 5622 794414 0) 0 nil])
([nil nil ((39996 . 39997) (#("f" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 39996) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (39997 . 39998) (#("s" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 39997) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) 39998 (#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 39997) (39998 . 39999) 39997 (#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 39996) (39997 . 39998) 39996 (#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 39995) (39996 . 39997) 39995 (#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 39994) (39995 . 39996) 39994 (#(" " 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("             " 0 4 (face org-indent) 4 13 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 39993) (39994 . 39995) 39993) nil (26024 5622 794409 0) 0 nil])
([nil nil ((39996 . 39998) (t 26024 5622 848617 157000)) nil (26024 5625 99120 0) 0 nil])
([nil nil ((#("(use-package counsel
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 20 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 20 21 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3450 . -20) (undo-tree-id3451 . -20) (undo-tree-id3452 . -4) (undo-tree-id3453 . -13) (undo-tree-id3454 . -13) (undo-tree-id3455 . -13) (undo-tree-id3456 . -13) (undo-tree-id3457 . -13) (undo-tree-id3458 . -5) (undo-tree-id3459 . -5) (undo-tree-id3460 . -5) (undo-tree-id3461 . -5) (undo-tree-id3462 . -5) (undo-tree-id3463 . -5) (undo-tree-id3464 . -5) (undo-tree-id3465 . -5) (undo-tree-id3466 . -5) (undo-tree-id3467 . -5) (undo-tree-id3468 . -5) (undo-tree-id3469 . -5) (undo-tree-id3470 . -5) (undo-tree-id3471 . -5) (undo-tree-id3472 . -5) (undo-tree-id3473 . -5) (undo-tree-id3474 . -5) (undo-tree-id3475 . -5) (undo-tree-id3476 . -5) (undo-tree-id3477 . -5) (undo-tree-id3478 . -5) (undo-tree-id3479 . -5) (undo-tree-id3480 . -5) (undo-tree-id3481 . -5) (undo-tree-id3482 . -5) (undo-tree-id3483 . -5) (undo-tree-id3484 . -5) (undo-tree-id3485 . -5) (undo-tree-id3486 . -4) (undo-tree-id3487 . -4) (undo-tree-id3488 . -4) (undo-tree-id3489 . -4) (undo-tree-id3490 . -4) (undo-tree-id3491 . -4) (undo-tree-id3492 . -4) (undo-tree-id3493 . -4) (undo-tree-id3494 . -4) (undo-tree-id3495 . -4) (undo-tree-id3496 . -4) (undo-tree-id3497 . -4) (undo-tree-id3498 . -4) (undo-tree-id3499 . -4) (undo-tree-id3500 . -4) (undo-tree-id3501 . -4) (undo-tree-id3502 . -4) (undo-tree-id3503 . -4) (undo-tree-id3504 . -4) (undo-tree-id3505 . -4) (undo-tree-id3506 . -4) (undo-tree-id3507 . -4) (undo-tree-id3508 . -4) (undo-tree-id3509 . -4) (undo-tree-id3510 . -4) (undo-tree-id3511 . -4) (undo-tree-id3512 . -4) (undo-tree-id3513 . -4) (undo-tree-id3514 . -4) (undo-tree-id3515 . -4) (undo-tree-id3516 . -4) (undo-tree-id3517 . -4) (undo-tree-id3518 . -4) (undo-tree-id3519 . -4) (undo-tree-id3520 . -4) (undo-tree-id3521 . -4) (undo-tree-id3522 . -4) (undo-tree-id3523 . -4) (undo-tree-id3524 . -4) (undo-tree-id3525 . -4) (undo-tree-id3526 . -4) (undo-tree-id3527 . -4) (undo-tree-id3528 . -4) (undo-tree-id3529 . -4) (undo-tree-id3530 . -4) (undo-tree-id3531 . -4) (undo-tree-id3532 . -4) (undo-tree-id3533 . -4) (undo-tree-id3534 . -4) (undo-tree-id3535 . -4) (undo-tree-id3536 . -4) (undo-tree-id3537 . -4) (undo-tree-id3538 . -4) (undo-tree-id3539 . -4) (undo-tree-id3540 . -4) (undo-tree-id3541 . -4) (undo-tree-id3542 . -4) (undo-tree-id3543 . -4) (undo-tree-id3544 . -4) (undo-tree-id3545 . -4) (undo-tree-id3546 . -4) (undo-tree-id3547 . -4) (undo-tree-id3548 . -4) (undo-tree-id3549 . -4) (undo-tree-id3550 . -4) (undo-tree-id3551 . -4) (undo-tree-id3552 . -4) (undo-tree-id3553 . -4) (undo-tree-id3554 . -4) (undo-tree-id3555 . -4) (undo-tree-id3556 . -4) (undo-tree-id3557 . -4) (undo-tree-id3558 . -4) (undo-tree-id3559 . -4) (undo-tree-id3560 . -4) (undo-tree-id3561 . -4) (undo-tree-id3562 . -4) (undo-tree-id3563 . -4) (undo-tree-id3564 . -4) (undo-tree-id3565 . -4) (undo-tree-id3566 . -4) (undo-tree-id3567 . -4) (undo-tree-id3568 . -4) (undo-tree-id3569 . -4) (undo-tree-id3570 . -4) (undo-tree-id3571 . -4) (undo-tree-id3572 . -4) (undo-tree-id3573 . -4) (undo-tree-id3574 . -4) (undo-tree-id3575 . -4) (undo-tree-id3576 . -4) (undo-tree-id3577 . -4) (undo-tree-id3578 . -4) (undo-tree-id3579 . -4) (undo-tree-id3580 . -4) (undo-tree-id3581 . -4) (undo-tree-id3582 . -4) (undo-tree-id3583 . -4) (undo-tree-id3584 . -4) (undo-tree-id3585 . -4) (undo-tree-id3586 . -4) (undo-tree-id3587 . -4) (undo-tree-id3588 . -4) (undo-tree-id3589 . -4) (undo-tree-id3590 . -4) (undo-tree-id3591 . -4) (undo-tree-id3592 . -4) (undo-tree-id3593 . -4) (undo-tree-id3594 . -4) (undo-tree-id3595 . -4) (undo-tree-id3596 . -4) (undo-tree-id3597 . -4) (undo-tree-id3598 . -4) (undo-tree-id3599 . -4) (undo-tree-id3600 . -4) (undo-tree-id3601 . -4) (undo-tree-id3602 . -4) (undo-tree-id3603 . -4) (undo-tree-id3604 . -4) (undo-tree-id3605 . -4) (undo-tree-id3606 . -4) (undo-tree-id3607 . -4) (undo-tree-id3608 . -4) (undo-tree-id3609 . -4) (undo-tree-id3610 . -4) (undo-tree-id3611 . -4) (undo-tree-id3612 . -4) (undo-tree-id3613 . -4) (undo-tree-id3614 . -4) (undo-tree-id3615 . -4) (undo-tree-id3616 . -4) (undo-tree-id3617 . -4) (undo-tree-id3618 . -4) (undo-tree-id3619 . -4) (undo-tree-id3620 . -4) (undo-tree-id3621 . -4) (undo-tree-id3622 . -4) (undo-tree-id3623 . -4) (undo-tree-id3624 . -4) (undo-tree-id3625 . -4) (undo-tree-id3626 . -4) (undo-tree-id3627 . -4) (undo-tree-id3628 . -4) (undo-tree-id3629 . -4) (undo-tree-id3630 . -4) (undo-tree-id3631 . -4) (undo-tree-id3632 . -4) (undo-tree-id3633 . -4) (undo-tree-id3634 . -4) (undo-tree-id3635 . -4) (undo-tree-id3636 . -4) (undo-tree-id3637 . -4) (undo-tree-id3638 . -4) (undo-tree-id3639 . -4) (undo-tree-id3640 . -4) (undo-tree-id3641 . -4) (undo-tree-id3642 . -4) (undo-tree-id3643 . -4) (undo-tree-id3644 . -4) (undo-tree-id3645 . -4) (undo-tree-id3646 . -4) (undo-tree-id3647 . -4) (undo-tree-id3648 . -4) (undo-tree-id3649 . -4) (undo-tree-id3650 . -4) (undo-tree-id3651 . -4) (undo-tree-id3652 . -4) (undo-tree-id3653 . -4) (undo-tree-id3654 . -4) (undo-tree-id3655 . -4) (undo-tree-id3656 . -4) (undo-tree-id3657 . -4) (undo-tree-id3658 . -4) (undo-tree-id3659 . -4) (undo-tree-id3660 . -4) (undo-tree-id3661 . -4) (undo-tree-id3662 . -4) (undo-tree-id3663 . -4) (undo-tree-id3664 . -4) (undo-tree-id3665 . -4) (undo-tree-id3666 . -4) (undo-tree-id3667 . -4) (undo-tree-id3668 . -4) (undo-tree-id3669 . -4) (undo-tree-id3670 . -4) (undo-tree-id3671 . -4) (undo-tree-id3672 . -4) (undo-tree-id3673 . -4) (undo-tree-id3674 . -4) (undo-tree-id3675 . -4) (undo-tree-id3676 . -4) (undo-tree-id3677 . -4) (undo-tree-id3678 . -4) (undo-tree-id3679 . -4) (undo-tree-id3680 . -4) (undo-tree-id3681 . -4) (undo-tree-id3682 . -4) (undo-tree-id3683 . -4) (undo-tree-id3684 . -4) (undo-tree-id3685 . -4) (undo-tree-id3686 . -4) (undo-tree-id3687 . -4) (undo-tree-id3688 . -4) (undo-tree-id3689 . -4) (undo-tree-id3690 . -4) (undo-tree-id3691 . -4) (undo-tree-id3692 . -4) (undo-tree-id3693 . -4) (undo-tree-id3694 . -4) (undo-tree-id3695 . -4) (undo-tree-id3696 . -4) (undo-tree-id3697 . -4) (undo-tree-id3698 . -4) (undo-tree-id3699 . -4) (undo-tree-id3700 . -4) (undo-tree-id3701 . -4) (undo-tree-id3702 . -4) (undo-tree-id3703 . -4) (undo-tree-id3704 . -4) (undo-tree-id3705 . -4) (undo-tree-id3706 . -4) (undo-tree-id3707 . -4) (undo-tree-id3708 . -4) (undo-tree-id3709 . -4) (undo-tree-id3710 . -4) (undo-tree-id3711 . -4) (undo-tree-id3712 . -4) (undo-tree-id3713 . -4) (undo-tree-id3714 . -4) (undo-tree-id3715 . -4) (undo-tree-id3716 . -4) (undo-tree-id3717 . -4) (undo-tree-id3718 . -4) (undo-tree-id3719 . -4) (undo-tree-id3720 . -4) (undo-tree-id3721 . -4) (undo-tree-id3722 . -4) (undo-tree-id3723 . -4) (undo-tree-id3724 . -4) (undo-tree-id3725 . -4) (undo-tree-id3726 . -4) (undo-tree-id3727 . -4) (undo-tree-id3728 . -4) (undo-tree-id3729 . -4) (undo-tree-id3730 . -4) (undo-tree-id3731 . -4) (undo-tree-id3732 . -4) (undo-tree-id3733 . -4) (undo-tree-id3734 . -4) (undo-tree-id3735 . -4) (undo-tree-id3736 . -4) (undo-tree-id3737 . -4) (undo-tree-id3738 . -4) (undo-tree-id3739 . -4) (undo-tree-id3740 . -4) (undo-tree-id3741 . -4) (undo-tree-id3742 . -4) (undo-tree-id3743 . -4) (undo-tree-id3744 . -4) (undo-tree-id3745 . -4) (undo-tree-id3746 . -4) (undo-tree-id3747 . -4) (undo-tree-id3748 . -4) (undo-tree-id3749 . -4) (undo-tree-id3750 . -4) (undo-tree-id3751 . -4) (undo-tree-id3752 . -4) (undo-tree-id3753 . -4) (undo-tree-id3754 . -4) (undo-tree-id3755 . -4) (undo-tree-id3756 . -4) (undo-tree-id3757 . -4) (undo-tree-id3758 . -4) (undo-tree-id3759 . -4) (undo-tree-id3760 . -4) (undo-tree-id3761 . -4) (undo-tree-id3762 . -4) (undo-tree-id3763 . -4) (undo-tree-id3764 . -4) (undo-tree-id3765 . -4) (undo-tree-id3766 . -4) (undo-tree-id3767 . -4) (undo-tree-id3768 . -4) (undo-tree-id3769 . -4) (undo-tree-id3770 . -4) (undo-tree-id3771 . -4) (undo-tree-id3772 . -4) (undo-tree-id3773 . -4) (undo-tree-id3774 . -4) (undo-tree-id3775 . -4) (undo-tree-id3776 . -4) (undo-tree-id3777 . -4) (undo-tree-id3778 . -4) (undo-tree-id3779 . -4) (undo-tree-id3780 . -4) (undo-tree-id3781 . -4) (undo-tree-id3782 . -4) (undo-tree-id3783 . -4) (undo-tree-id3784 . -4) (undo-tree-id3785 . -4) (undo-tree-id3786 . -4) (undo-tree-id3787 . -4) (undo-tree-id3788 . -4) (undo-tree-id3789 . -4) (undo-tree-id3790 . -4) (undo-tree-id3791 . -4) (undo-tree-id3792 . -4) (undo-tree-id3793 . -4) (undo-tree-id3794 . -4) (undo-tree-id3795 . -4) (undo-tree-id3796 . -4) (undo-tree-id3797 . -4) (undo-tree-id3798 . -4) (undo-tree-id3799 . -4) (undo-tree-id3800 . -4) (undo-tree-id3801 . -4) (undo-tree-id3802 . -4) (undo-tree-id3803 . -4) (undo-tree-id3804 . -4) (undo-tree-id3805 . -4) (undo-tree-id3806 . -4) (undo-tree-id3807 . -4) (undo-tree-id3808 . -4) (undo-tree-id3809 . -4) (undo-tree-id3810 . -4) (undo-tree-id3811 . -4) (undo-tree-id3812 . -4) (undo-tree-id3813 . -4) (undo-tree-id3814 . -4) (undo-tree-id3815 . -4) (undo-tree-id3816 . -4) (undo-tree-id3817 . -4) (undo-tree-id3818 . -4) (undo-tree-id3819 . -4) (undo-tree-id3820 . -4) (undo-tree-id3821 . -4) (undo-tree-id3822 . -4) (undo-tree-id3823 . -4) (undo-tree-id3824 . -4) (undo-tree-id3825 . -4) (undo-tree-id3826 . -4) (undo-tree-id3827 . -4) (undo-tree-id3828 . -4) (undo-tree-id3829 . -4) (undo-tree-id3830 . -4) (undo-tree-id3831 . -4) (undo-tree-id3832 . -4) (undo-tree-id3833 . -4) (undo-tree-id3834 . -4) (undo-tree-id3835 . -4) (undo-tree-id3836 . -4) (undo-tree-id3837 . -4) (undo-tree-id3838 . -4) (undo-tree-id3839 . -4) (undo-tree-id3840 . -4) (undo-tree-id3841 . -4) (undo-tree-id3842 . -4) (undo-tree-id3843 . -4) (undo-tree-id3844 . -4) (undo-tree-id3845 . -4) (undo-tree-id3846 . -4) (undo-tree-id3847 . -4) (undo-tree-id3848 . -4) (undo-tree-id3849 . -4) (undo-tree-id3850 . -4) (undo-tree-id3851 . -4) (undo-tree-id3852 . -4) (undo-tree-id3853 . -4) (undo-tree-id3854 . -4) (undo-tree-id3855 . -4) (undo-tree-id3856 . -4) (undo-tree-id3857 . -4) (undo-tree-id3858 . -4) (undo-tree-id3859 . -4) (undo-tree-id3860 . -4) (undo-tree-id3861 . -4) (undo-tree-id3862 . -4) (undo-tree-id3863 . -4) (undo-tree-id3864 . -4) (undo-tree-id3865 . -4) (undo-tree-id3866 . -4) (undo-tree-id3867 . -4) (undo-tree-id3868 . -4) (undo-tree-id3869 . -4) (undo-tree-id3870 . -4) (undo-tree-id3871 . -4) (undo-tree-id3872 . -4) (undo-tree-id3873 . -4) (undo-tree-id3874 . -21) 22409 (t 26024 5625 152181 714000)) nil (26024 5864 50876 0) 0 nil])
([nil nil ((#("  :after ivy
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 8 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 8 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3338 . -12) (undo-tree-id3339 . -4) (undo-tree-id3340 . -4) (undo-tree-id3341 . -4) (undo-tree-id3342 . -4) (undo-tree-id3343 . -4) (undo-tree-id3344 . -4) (undo-tree-id3345 . -4) (undo-tree-id3346 . -4) (undo-tree-id3347 . -4) (undo-tree-id3348 . -4) (undo-tree-id3349 . -4) (undo-tree-id3350 . -4) (undo-tree-id3351 . -4) (undo-tree-id3352 . -4) (undo-tree-id3353 . -4) (undo-tree-id3354 . -4) (undo-tree-id3355 . -4) (undo-tree-id3356 . -4) (undo-tree-id3357 . -4) (undo-tree-id3358 . -4) (undo-tree-id3359 . -4) (undo-tree-id3360 . -4) (undo-tree-id3361 . -4) (undo-tree-id3362 . -4) (undo-tree-id3363 . -4) (undo-tree-id3364 . -4) (undo-tree-id3365 . -4) (undo-tree-id3366 . -4) (undo-tree-id3367 . -4) (undo-tree-id3368 . -4) (undo-tree-id3369 . -4) (undo-tree-id3370 . -4) (undo-tree-id3371 . -4) (undo-tree-id3372 . -4) (undo-tree-id3373 . -4) (undo-tree-id3374 . -4) (undo-tree-id3375 . -4) (undo-tree-id3376 . -4) (undo-tree-id3377 . -4) (undo-tree-id3378 . -4) (undo-tree-id3379 . -4) (undo-tree-id3380 . -4) (undo-tree-id3381 . -4) (undo-tree-id3382 . -4) (undo-tree-id3383 . -4) (undo-tree-id3384 . -4) (undo-tree-id3385 . -4) (undo-tree-id3386 . -4) (undo-tree-id3387 . -4) (undo-tree-id3388 . -4) (undo-tree-id3389 . -4) (undo-tree-id3390 . -4) (undo-tree-id3391 . -4) (undo-tree-id3392 . -4) (undo-tree-id3393 . -4) (undo-tree-id3394 . -4) (undo-tree-id3395 . -4) (undo-tree-id3396 . -4) (undo-tree-id3397 . -4) (undo-tree-id3398 . -4) (undo-tree-id3399 . -4) (undo-tree-id3400 . -4) (undo-tree-id3401 . -4) (undo-tree-id3402 . -4) (undo-tree-id3403 . -4) (undo-tree-id3404 . -4) (undo-tree-id3405 . -4) (undo-tree-id3406 . -4) (undo-tree-id3407 . -4) (undo-tree-id3408 . -4) (undo-tree-id3409 . -4) (undo-tree-id3410 . -12) (undo-tree-id3411 . -4) (undo-tree-id3412 . -4) (undo-tree-id3413 . -4) (undo-tree-id3414 . -4) (undo-tree-id3415 . -4) (undo-tree-id3416 . -4) (undo-tree-id3417 . -4) (undo-tree-id3418 . -4) (undo-tree-id3419 . -4) (undo-tree-id3420 . -4) (undo-tree-id3421 . -4) (undo-tree-id3422 . -4) (undo-tree-id3423 . -4) (undo-tree-id3424 . -4) (undo-tree-id3425 . -4) (undo-tree-id3426 . -4) (undo-tree-id3427 . -4) (undo-tree-id3428 . -4) (undo-tree-id3429 . -4) (undo-tree-id3430 . -4) (undo-tree-id3431 . -4) (undo-tree-id3432 . -4) (undo-tree-id3433 . -4) (undo-tree-id3434 . -4) (undo-tree-id3435 . -4) (undo-tree-id3436 . -4) (undo-tree-id3437 . -4) (undo-tree-id3438 . -4) (undo-tree-id3439 . -4) (undo-tree-id3440 . -4) (undo-tree-id3441 . -4) (undo-tree-id3442 . -4) (undo-tree-id3443 . -4) (undo-tree-id3444 . -4) (undo-tree-id3445 . -4) (undo-tree-id3446 . -4) (undo-tree-id3447 . -4) (undo-tree-id3448 . -4) (undo-tree-id3449 . -13) 22409) nil (26024 5864 50535 0) 0 nil])
([nil nil ((#("  :diminish
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 11 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 11 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3310 . -11) (undo-tree-id3311 . -4) (undo-tree-id3312 . -11) (undo-tree-id3313 . -4) (undo-tree-id3314 . -4) (undo-tree-id3315 . -4) (undo-tree-id3316 . -4) (undo-tree-id3317 . -4) (undo-tree-id3318 . -4) (undo-tree-id3319 . -4) (undo-tree-id3320 . -4) (undo-tree-id3321 . -4) (undo-tree-id3322 . -4) (undo-tree-id3323 . -4) (undo-tree-id3324 . -4) (undo-tree-id3325 . -4) (undo-tree-id3326 . -4) (undo-tree-id3327 . -4) (undo-tree-id3328 . -4) (undo-tree-id3329 . -4) (undo-tree-id3330 . -4) (undo-tree-id3331 . -4) (undo-tree-id3332 . -4) (undo-tree-id3333 . -4) (undo-tree-id3334 . -4) (undo-tree-id3335 . -4) (undo-tree-id3336 . -4) (undo-tree-id3337 . -12) 22409) nil (26024 5864 50444 0) 0 nil])
([nil nil ((#(";;  :config (counsel-mode)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 11 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 11 26 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 26 27 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 22405) (undo-tree-id3282 . -26) (undo-tree-id3283 . -4) (undo-tree-id3284 . -26) (undo-tree-id3285 . -4) (undo-tree-id3286 . -4) (undo-tree-id3287 . -4) (undo-tree-id3288 . -4) (undo-tree-id3289 . -4) (undo-tree-id3290 . -4) (undo-tree-id3291 . -4) (undo-tree-id3292 . -4) (undo-tree-id3293 . -4) (undo-tree-id3294 . -4) (undo-tree-id3295 . -4) (undo-tree-id3296 . -4) (undo-tree-id3297 . -4) (undo-tree-id3298 . -4) (undo-tree-id3299 . -4) (undo-tree-id3300 . -4) (undo-tree-id3301 . -4) (undo-tree-id3302 . -4) (undo-tree-id3303 . -4) (undo-tree-id3304 . -4) (undo-tree-id3305 . -4) (undo-tree-id3306 . -4) (undo-tree-id3307 . -4) (undo-tree-id3308 . -4) (undo-tree-id3309 . -27) 22409) nil (26024 5864 50421 0) 0 nil])
([nil nil ((#(")
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . 2) (undo-tree-id3280 . -1) (undo-tree-id3281 . -2)) nil (26024 5864 50396 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3276 . -1)) nil (26024 5864 50392 0) 0 nil])
([nil nil ((#("(use-package ivy
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 16 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 16 17 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3271 . -16) (undo-tree-id3272 . -16) (undo-tree-id3273 . 17) (undo-tree-id3274 . -1) (undo-tree-id3275 . -17)) nil (26024 5864 50391 0) 0 nil])
([nil nil ((#("  :bind
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 7 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 7 8 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3268 . -7) (undo-tree-id3269 . -7) (undo-tree-id3270 . -8)) nil (26024 5864 50387 0) 0 nil])
([nil nil ((#("  ;; ivy-resume resumes the last Ivy-based completion.
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 54 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 54 55 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 22405) (undo-tree-id3265 . -54) (undo-tree-id3266 . -54) (undo-tree-id3267 . -55)) nil (26024 5864 50384 0) 0 nil])
([nil nil ((#("  ((\"C-c C-r\" . ivy-resume)
" 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 4 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-string-face org-block)) 13 27 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 27 28 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3262 . -27) (undo-tree-id3263 . -27) (undo-tree-id3264 . -28)) nil (26024 5864 50379 0) 0 nil])
([nil nil ((#("   (\"C-x B\" . ivy-switch-buffer-other-window))
" 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 4 11 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-string-face org-block)) 11 46 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 46 47 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3259 . -46) (undo-tree-id3260 . -46) (undo-tree-id3261 . -47)) nil (26024 5864 50376 0) 0 nil])
([nil nil ((#("  :diminish
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 11 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 11 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3256 . -11) (undo-tree-id3257 . -11) (undo-tree-id3258 . -12)) nil (26024 5864 50372 0) 0 nil])
([nil nil ((#("  :custom
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 10 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3253 . -9) (undo-tree-id3254 . -9) (undo-tree-id3255 . -10)) nil (26024 5864 50370 0) 0 nil])
([nil nil ((#("  (setq ivy-use-virtual-buffers t)
" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3 7 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 34 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 34 35 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3250 . -34) (undo-tree-id3251 . -34) (undo-tree-id3252 . -35)) nil (26024 5864 50366 0) 0 nil])
([nil nil ((#("  (setq ivy-use-selectable-prompt t)
" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3 7 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 36 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 36 37 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3247 . -36) (undo-tree-id3248 . -36) (undo-tree-id3249 . -37)) nil (26024 5864 50363 0) 0 nil])
([nil nil ((#("  (setq ivy-count-format \"(%d/%d) \")
" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3 7 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 25 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 25 35 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-string-face org-block)) 35 36 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 36 37 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3244 . -36) (undo-tree-id3245 . -36) (undo-tree-id3246 . -37)) nil (26024 5864 50360 0) 0 nil])
([nil nil ((#("  (setq enable-recursive-minibuffers t)
" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 7 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 39 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39 40 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3241 . -39) (undo-tree-id3242 . -39) (undo-tree-id3243 . -40)) nil (26024 5864 622723 0) 0 nil])
([nil nil ((#("  :config
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 10 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id4253 . -9) (undo-tree-id4254 . -9) (undo-tree-id4255 . -10)) nil (26024 5885 140910 0) 0 nil] [nil nil ((#("  :config
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 10 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3238 . -9) (undo-tree-id3239 . -9) (undo-tree-id3240 . -10)) ((22405 . 22415)) (26024 5864 447139 0) 0 nil])
([nil nil ((#("  (setq ivy-initial-inputs-alist nil)
" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 7 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 37 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 37 38 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id4249 . -37) (undo-tree-id4250 . -37) (undo-tree-id4251 . -37) (undo-tree-id4252 . -38)) nil (26024 5885 140907 0) 0 nil])
([nil nil ((#("  (setq ivy-initial-inputs-alist nil)
" 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3 7 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-keyword-face org-block)) 7 37 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 37 38 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3235 . -37) (undo-tree-id3236 . -37) (undo-tree-id3237 . -38)) ((22405 . 22443)) (26024 5864 246447 0) 0 nil])
([nil nil ((#("  ;;(ivy-mode)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 14 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 14 15 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 22405) (undo-tree-id4245 . -14) (undo-tree-id4246 . -14) (undo-tree-id4247 . -14) (undo-tree-id4248 . -15)) nil (26024 5885 140903 0) 0 nil])
([nil nil ((#("  ;;(ivy-mode)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 14 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 14 15 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 22405) (undo-tree-id3232 . -14) (undo-tree-id3233 . -14) (undo-tree-id3234 . -15)) ((22405 . 22420)) (26024 5864 70355 0) 0 nil])
([nil nil ((#(")
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . 2) (undo-tree-id4243 . -1) (undo-tree-id4244 . -2)) nil (26024 5885 140899 0) 0 nil])
([nil nil ((#(")
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . 2) (undo-tree-id3230 . -1) (undo-tree-id3231 . -2)) ((22405 . 22407)) (26024 5864 51263 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22405) (undo-tree-id4238 . -1)) nil (26024 5885 140893 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22405)) ((22405 . 22406)) (26024 5864 50328 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4237 . -1)) nil (26024 5885 140892 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4236 . -1)) nil (26024 5885 140891 0) 0 nil])
([nil nil ((#("(use-package all-the-icons-ivy-rich
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 35 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 35 36 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4231 . -35) (undo-tree-id4232 . -35) (undo-tree-id4233 . 36) (undo-tree-id4234 . -1) (undo-tree-id4235 . -36)) nil (26024 5885 140889 0) 0 nil])
([nil nil ((#("  :demand t
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 11 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4228 . -11) (undo-tree-id4229 . -11) (undo-tree-id4230 . -12)) nil (26024 5885 140883 0) 0 nil])
([nil nil ((#("  ;;:init (all-the-icons-ivy-rich-mode 1)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 9 24 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 24 41 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 41 42 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 22548) (undo-tree-id4225 . -41) (undo-tree-id4226 . -41) (undo-tree-id4227 . -42)) nil (26024 5885 140880 0) 0 nil])
([nil nil ((#(")
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4222 . -1) (undo-tree-id4223 . 2) (undo-tree-id4224 . -1)) nil (26024 5885 140877 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4221 . -1)) nil (26024 5885 140873 0) 0 nil])
([nil nil ((#("(use-package ivy-rich
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 21 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 21 22 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4216 . -21) (undo-tree-id4217 . -21) (undo-tree-id4218 . 22) (undo-tree-id4219 . -1) (undo-tree-id4220 . -22)) nil (26024 5885 140872 0) 0 nil])
([nil nil ((#("  :after ivy
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 8 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 8 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4213 . -12) (undo-tree-id4214 . -12) (undo-tree-id4215 . -13)) nil (26024 5885 140867 0) 0 nil])
([nil nil ((#("  :demand t
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 11 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 11 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4210 . -11) (undo-tree-id4211 . -11) (undo-tree-id4212 . -12)) nil (26024 5885 140864 0) 0 nil])
([nil nil ((#("  ;;:init (ivy-rich-mode 1) ;; this gets us descriptions in M-x.
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 4 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 9 28 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 28 31 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 31 64 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 64 65 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 22548) (undo-tree-id4207 . -64) (undo-tree-id4208 . -64) (undo-tree-id4209 . -65)) nil (26024 5885 140861 0) 0 nil])
([nil nil ((#("  :custom
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 10 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4204 . -9) (undo-tree-id4205 . -9) (undo-tree-id4206 . -10)) nil (26024 5885 140858 0) 0 nil])
([nil nil ((#("  (ivy-virtual-abbreviate 'full
" 0 31 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 31 32 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4201 . -31) (undo-tree-id4202 . -31) (undo-tree-id4203 . -32)) nil (26024 5885 140855 0) 0 nil])
([nil nil ((#("   ivy-rich-switch-buffer-align-virtual-buffer t
" 0 48 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 48 49 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4198 . -48) (undo-tree-id4199 . -48) (undo-tree-id4200 . -49)) nil (26024 5885 140852 0) 0 nil])
([nil nil ((#("   ivy-rich-path-style 'abbrev))
" 0 31 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 31 32 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 32 33 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4195 . -32) (undo-tree-id4196 . -32) (undo-tree-id4197 . -33)) nil (26024 5885 140849 0) 0 nil])
([nil nil ((#("  ;; :config
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 22548) (undo-tree-id4192 . -12) (undo-tree-id4193 . -12) (undo-tree-id4194 . -13)) nil (26024 5885 140846 0) 0 nil])
([nil nil ((#("  ;; (ivy-set-display-transformer 'ivy-switch-buffer
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 52 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 52 53 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 22548) (undo-tree-id4189 . -52) (undo-tree-id4190 . -52) (undo-tree-id4191 . -53)) nil (26024 5885 140843 0) 0 nil])
([nil nil ((#("  ;;                              'ivy-rich-switch-buffer-transformer))
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 34 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 34 71 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 71 72 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 22548) (undo-tree-id4186 . -71) (undo-tree-id4187 . -71) (undo-tree-id4188 . -72)) nil (26024 5885 140838 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . 22548) (undo-tree-id4185 . -1)) nil (26024 5885 140835 0) 0 nil])
([nil nil ((#(";;(elpaca nil (global-set-key \"\\C-s\" 'swiper)) ;; Use swiper
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 9 30 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 30 36 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 36 47 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 47 50 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 50 60 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 60 61 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 22405) (undo-tree-id4162 . -60) (undo-tree-id4163 . -61) (undo-tree-id4164 . -61) (undo-tree-id4165 . -61) (undo-tree-id4166 . -61) (undo-tree-id4167 . -61) (undo-tree-id4168 . -61) (undo-tree-id4169 . -61) (undo-tree-id4170 . -61) (undo-tree-id4171 . -61) (undo-tree-id4172 . -61) (undo-tree-id4173 . -61) (undo-tree-id4174 . -61) (undo-tree-id4175 . -61) (undo-tree-id4176 . -61) (undo-tree-id4177 . -61) (undo-tree-id4178 . -61) (undo-tree-id4179 . -61) (undo-tree-id4180 . -61) (undo-tree-id4181 . -61) (undo-tree-id4182 . -61) (undo-tree-id4183 . -61) (undo-tree-id4184 . -61)) nil (26024 5885 140834 0) 0 nil])
([nil nil ((#(";;(elpaca nil (define-key evil-insert-state-map (kbd \" \") 'org-roam-node-insert))
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 9 53 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 53 56 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 56 81 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 81 82 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 22405) (undo-tree-id4147 . -81) (undo-tree-id4148 . -82) (undo-tree-id4149 . -82) (undo-tree-id4150 . -82) (undo-tree-id4151 . -82) (undo-tree-id4152 . -82) (undo-tree-id4153 . -82) (undo-tree-id4154 . -82) (undo-tree-id4155 . -82) (undo-tree-id4156 . -82) (undo-tree-id4157 . -82) (undo-tree-id4158 . -82) (undo-tree-id4159 . -82) (undo-tree-id4160 . -82) (undo-tree-id4161 . -82)) nil (26024 5885 140813 0) 0 nil])
([nil nil ((#("*** Ivy
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 7 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 7 8 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 22374) (undo-tree-id4113 . -7) (undo-tree-id4114 . -3) (undo-tree-id4115 . -8) (undo-tree-id4116 . -8) (undo-tree-id4117 . -8) (undo-tree-id4118 . -8) (undo-tree-id4119 . -8) (undo-tree-id4120 . -8) (undo-tree-id4121 . -8) (undo-tree-id4122 . -8) (undo-tree-id4123 . -8) (undo-tree-id4124 . -8) (undo-tree-id4125 . -8) (undo-tree-id4126 . -8) (undo-tree-id4127 . -8) (undo-tree-id4128 . -8) (undo-tree-id4129 . -8) (undo-tree-id4130 . -8) (undo-tree-id4131 . -3) (undo-tree-id4132 . -3) (undo-tree-id4133 . -3) (undo-tree-id4134 . -3) (undo-tree-id4135 . -3) (undo-tree-id4136 . -3) (undo-tree-id4137 . -3) (undo-tree-id4138 . -3) (undo-tree-id4139 . -3) (undo-tree-id4140 . -3) (undo-tree-id4141 . -3) (undo-tree-id4142 . -3) (undo-tree-id4143 . -3) (undo-tree-id4144 . -3) (undo-tree-id4145 . -3) (undo-tree-id4146 . -8) 22377) nil (26024 5885 140798 0) 0 nil])
([nil nil ((#("#+begin_src emacs-lisp
" 0 22 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 22 23 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line)) . 22374) (undo-tree-id4042 . -22) (undo-tree-id4043 . -23) (undo-tree-id4044 . -3) (undo-tree-id4045 . -23) (undo-tree-id4046 . -23) (undo-tree-id4047 . -23) (undo-tree-id4048 . -23) (undo-tree-id4049 . -23) (undo-tree-id4050 . -23) (undo-tree-id4051 . -23) (undo-tree-id4052 . -23) (undo-tree-id4053 . -23) (undo-tree-id4054 . -23) (undo-tree-id4055 . -23) (undo-tree-id4056 . -23) (undo-tree-id4057 . -23) (undo-tree-id4058 . -23) (undo-tree-id4059 . -23) (undo-tree-id4060 . -23) (undo-tree-id4061 . -23) (undo-tree-id4062 . -23) (undo-tree-id4063 . -23) (undo-tree-id4064 . -23) (undo-tree-id4065 . -23) (undo-tree-id4066 . -23) (undo-tree-id4067 . -23) (undo-tree-id4068 . -23) (undo-tree-id4069 . -23) (undo-tree-id4070 . -23) (undo-tree-id4071 . -23) (undo-tree-id4072 . -23) (undo-tree-id4073 . -23) (undo-tree-id4074 . -23) (undo-tree-id4075 . -23) (undo-tree-id4076 . -23) (undo-tree-id4077 . -23) (undo-tree-id4078 . -23) (undo-tree-id4079 . -23) (undo-tree-id4080 . -23) (undo-tree-id4081 . -23) (undo-tree-id4082 . -23) (undo-tree-id4083 . -23) (undo-tree-id4084 . -23) (undo-tree-id4085 . -23) (undo-tree-id4086 . -23) (undo-tree-id4087 . -22) (undo-tree-id4088 . -3) (undo-tree-id4089 . -3) (undo-tree-id4090 . -3) (undo-tree-id4091 . -3) (undo-tree-id4092 . -3) (undo-tree-id4093 . -3) (undo-tree-id4094 . -3) (undo-tree-id4095 . -3) (undo-tree-id4096 . -3) (undo-tree-id4097 . -3) (undo-tree-id4098 . -3) (undo-tree-id4099 . -3) (undo-tree-id4100 . -3) (undo-tree-id4101 . -3) (undo-tree-id4102 . -3) (undo-tree-id4103 . -3) (undo-tree-id4104 . -3) (undo-tree-id4105 . -3) (undo-tree-id4106 . -3) (undo-tree-id4107 . -3) (undo-tree-id4108 . -3) (undo-tree-id4109 . -3) (undo-tree-id4110 . -3) (undo-tree-id4111 . -3) (undo-tree-id4112 . -23) 22377) nil (26024 5885 140766 0) 0 nil])
([nil nil ((#("#+end_src
" 0 5 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t face org-meta-line) 5 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t face org-meta-line) 9 10 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 22374) (undo-tree-id4007 . -9) (undo-tree-id4008 . -3) (undo-tree-id4009 . -9) (undo-tree-id4010 . -3) (undo-tree-id4011 . -3) (undo-tree-id4012 . -3) (undo-tree-id4013 . -3) (undo-tree-id4014 . -3) (undo-tree-id4015 . -3) (undo-tree-id4016 . -3) (undo-tree-id4017 . -3) (undo-tree-id4018 . -3) (undo-tree-id4019 . -3) (undo-tree-id4020 . -3) (undo-tree-id4021 . -3) (undo-tree-id4022 . -3) (undo-tree-id4023 . -3) (undo-tree-id4024 . -3) (undo-tree-id4025 . -3) (undo-tree-id4026 . -3) (undo-tree-id4027 . -3) (undo-tree-id4028 . -3) (undo-tree-id4029 . -3) (undo-tree-id4030 . -3) (undo-tree-id4031 . -3) (undo-tree-id4032 . -3) (undo-tree-id4033 . -3) (undo-tree-id4034 . -3) (undo-tree-id4035 . -3) (undo-tree-id4036 . -3) (undo-tree-id4037 . -3) (undo-tree-id4038 . -3) (undo-tree-id4039 . -3) (undo-tree-id4040 . -3) (undo-tree-id4041 . -10) 22377) nil (26024 5885 140700 0) 0 nil])
([nil nil ((#("*** Ivy-precient
#+begin_src emacs-lisp
(use-package ivy-prescient
  :config
  ;;(ivy-prescient-mode)
)
#+end_src
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 16 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 16 17 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 17 39 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 39 40 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 40 41 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 41 52 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 52 53 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 66 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 66 67 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 67 69 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 69 76 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 76 77 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 77 79 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 79 81 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 81 102 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 102 104 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 104 110 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 110 113 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 113 114 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line)) . 22374) (undo-tree-id4005 . -113) (undo-tree-id4006 . -3) 22377) nil (26024 5885 140668 0) 0 nil])
([nil nil ((#("*** Company
#+begin_src emacs-lisp
(use-package company
  :defer 2
  :diminish
  :custom
  (company-begin-commands '(self-insert-command))
  (company-idle-delay .1)
  (company-minimum-prefix-length 2)
  (company-show-numbers t)
  (company-tooltip-align-annotations 't)

  ;; Auto complete with C-SPC
  ;; (evil-define-key 'insert dired-mode-map (kbd \"C-SPC\") 'company-complete-common)

  ;;(global-company-mode t)
)

(use-package company-box
  :after company
  :diminish
  :hook (company-mode . company-box-mode))
#+end_src
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 11 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 11 12 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 12 34 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 34 35 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 35 36 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 36 47 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 47 48 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 48 55 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 55 56 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 56 58 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 58 64 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 64 67 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 67 69 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 69 78 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 78 79 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 79 81 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 81 88 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 88 89 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 89 139 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 139 165 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 165 201 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 201 228 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 228 269 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 269 270 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 270 272 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 272 275 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 275 300 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 300 302 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 302 305 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 305 385 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 385 386 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 386 388 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 388 390 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 390 414 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 414 416 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 416 417 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 417 418 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 418 429 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 429 430 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 430 441 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 441 442 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 442 444 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 444 450 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 450 459 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 459 461 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 461 470 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 470 471 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 471 473 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 473 478 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 478 514 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 514 523 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 523 524 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line)) . 21850) (undo-tree-id3875 . -523) (undo-tree-id3876 . -524) (undo-tree-id3877 . -3) (undo-tree-id3878 . -524) (undo-tree-id3879 . -524) (undo-tree-id3880 . -524) (undo-tree-id3881 . -524) (undo-tree-id3882 . -524) (undo-tree-id3883 . -524) (undo-tree-id3884 . -524) (undo-tree-id3885 . -524) (undo-tree-id3886 . -524) (undo-tree-id3887 . -524) (undo-tree-id3888 . -524) (undo-tree-id3889 . -524) (undo-tree-id3890 . -524) (undo-tree-id3891 . -524) (undo-tree-id3892 . -524) (undo-tree-id3893 . -524) (undo-tree-id3894 . -524) (undo-tree-id3895 . -524) (undo-tree-id3896 . -524) (undo-tree-id3897 . -524) (undo-tree-id3898 . -524) (undo-tree-id3899 . -524) (undo-tree-id3900 . -524) (undo-tree-id3901 . -524) (undo-tree-id3902 . -524) (undo-tree-id3903 . -524) (undo-tree-id3904 . -524) (undo-tree-id3905 . -524) (undo-tree-id3906 . -524) (undo-tree-id3907 . -524) (undo-tree-id3908 . -524) (undo-tree-id3909 . -524) (undo-tree-id3910 . -524) (undo-tree-id3911 . -524) (undo-tree-id3912 . -524) (undo-tree-id3913 . -524) (undo-tree-id3914 . -524) (undo-tree-id3915 . -524) (undo-tree-id3916 . -524) (undo-tree-id3917 . -524) (undo-tree-id3918 . -524) (undo-tree-id3919 . -524) (undo-tree-id3920 . -524) (undo-tree-id3921 . -524) (undo-tree-id3922 . -524) (undo-tree-id3923 . -524) (undo-tree-id3924 . -524) (undo-tree-id3925 . -524) (undo-tree-id3926 . -524) (undo-tree-id3927 . -524) (undo-tree-id3928 . -524) (undo-tree-id3929 . -524) (undo-tree-id3930 . -524) (undo-tree-id3931 . -524) (undo-tree-id3932 . -524) (undo-tree-id3933 . -524) (undo-tree-id3934 . -524) (undo-tree-id3935 . -524) (undo-tree-id3936 . -524) (undo-tree-id3937 . -524) (undo-tree-id3938 . -524) (undo-tree-id3939 . -524) (undo-tree-id3940 . -524) (undo-tree-id3941 . -524) (undo-tree-id3942 . -524) (undo-tree-id3943 . -524) (undo-tree-id3944 . -524) (undo-tree-id3945 . -524) (undo-tree-id3946 . -524) (undo-tree-id3947 . -524) (undo-tree-id3948 . -524) (undo-tree-id3949 . -524) (undo-tree-id3950 . -524) (undo-tree-id3951 . -524) (undo-tree-id3952 . -524) (undo-tree-id3953 . -524) (undo-tree-id3954 . -524) (undo-tree-id3955 . -524) (undo-tree-id3956 . -524) (undo-tree-id3957 . -524) (undo-tree-id3958 . -524) (undo-tree-id3959 . -524) (undo-tree-id3960 . -524) (undo-tree-id3961 . -524) (undo-tree-id3962 . -524) (undo-tree-id3963 . -524) (undo-tree-id3964 . -524) (undo-tree-id3965 . -524) (undo-tree-id3966 . -524) (undo-tree-id3967 . -524) (undo-tree-id3968 . -524) (undo-tree-id3969 . -524) (undo-tree-id3970 . -524) (undo-tree-id3971 . -524) (undo-tree-id3972 . -524) (undo-tree-id3973 . -524) (undo-tree-id3974 . -524) (undo-tree-id3975 . -524) (undo-tree-id3976 . -524) (undo-tree-id3977 . -524) (undo-tree-id3978 . -524) (undo-tree-id3979 . -524) (undo-tree-id3980 . -524) (undo-tree-id3981 . -524) (undo-tree-id3982 . -524) (undo-tree-id3983 . -524) (undo-tree-id3984 . -524) (undo-tree-id3985 . -524) (undo-tree-id3986 . -524) (undo-tree-id3987 . -524) (undo-tree-id3988 . -524) (undo-tree-id3989 . -524) (undo-tree-id3990 . -524) (undo-tree-id3991 . -524) (undo-tree-id3992 . -524) (undo-tree-id3993 . -524) (undo-tree-id3994 . -524) (undo-tree-id3995 . -524) (undo-tree-id3996 . -524) (undo-tree-id3997 . -524) (undo-tree-id3998 . -524) (undo-tree-id3999 . -524) (undo-tree-id4000 . -524) (undo-tree-id4001 . -524) (undo-tree-id4002 . -524) (undo-tree-id4003 . -524) (undo-tree-id4004 . -524) 21853) nil (26024 5892 516124 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -34703) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) 34704 (34703 . 34704) (t 26024 5885 203127 191000)) nil (26024 6141 221015 0) 0 nil] [nil nil ((#("C" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 21831) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (t 26024 5885 203127 191000)) ((21831 . 21832)) (26024 5892 515609 0) 0 nil])
([nil nil ((#("  ;;;; 1. project.el (the default)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 7 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 37376) (undo-tree-id4365 . -34) (undo-tree-id4366 . -35) (undo-tree-id4367 . -35) (undo-tree-id4368 . -35) (undo-tree-id4369 . -35) (undo-tree-id4370 . -35) (undo-tree-id4371 . -35) (undo-tree-id4372 . -35) (undo-tree-id4373 . -35) (undo-tree-id4374 . -35) (undo-tree-id4375 . -35) (undo-tree-id4376 . -35) (undo-tree-id4377 . -35) (undo-tree-id4378 . -35) (undo-tree-id4379 . -35) (undo-tree-id4380 . -35) (t 26024 6141 279913 339000)) nil (26024 6150 122235 0) 0 nil])
nil
([nil nil ((#("  ;; (setq consult-project-function #'consult--default-project--function)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 74 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 37376) (undo-tree-id4342 . -73) (undo-tree-id4343 . -74) (undo-tree-id4344 . -74) (undo-tree-id4345 . -74) (undo-tree-id4346 . -74) (undo-tree-id4347 . -74) (undo-tree-id4348 . -74) (undo-tree-id4349 . -74) (undo-tree-id4350 . -74) (undo-tree-id4351 . -74) (undo-tree-id4352 . -74) (undo-tree-id4353 . -74) (undo-tree-id4354 . -74) (undo-tree-id4355 . -74) (undo-tree-id4356 . -74) (undo-tree-id4357 . -74) (undo-tree-id4358 . -74) (undo-tree-id4359 . -74) (undo-tree-id4360 . -74) (undo-tree-id4361 . -74) (undo-tree-id4362 . -74) (undo-tree-id4363 . -74) (undo-tree-id4364 . -74)) nil (26024 6150 122220 0) 0 nil])
([nil nil ((#("  ;;;; 2. vc.el (vc-root-dir)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 7 30 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 37376) (undo-tree-id4333 . -29) (undo-tree-id4334 . -30) (undo-tree-id4335 . -30) (undo-tree-id4336 . -30) (undo-tree-id4337 . -30) (undo-tree-id4338 . -30) (undo-tree-id4339 . -30) (undo-tree-id4340 . -30) (undo-tree-id4341 . -30)) nil (26024 6150 122198 0) 0 nil])
([nil nil ((#("  ;; (setq consult-project-function (lambda (_) (vc-root-dir)))
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 64 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 37376) (undo-tree-id4324 . -63) (undo-tree-id4325 . -64) (undo-tree-id4326 . -64) (undo-tree-id4327 . -64) (undo-tree-id4328 . -64) (undo-tree-id4329 . -64) (undo-tree-id4330 . -64) (undo-tree-id4331 . -64) (undo-tree-id4332 . -64)) nil (26024 6150 122188 0) 0 nil])
([nil nil ((#("  ;;;; 3. locate-dominating-file
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 7 33 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 37376) (undo-tree-id4315 . -32) (undo-tree-id4316 . -33) (undo-tree-id4317 . -33) (undo-tree-id4318 . -33) (undo-tree-id4319 . -33) (undo-tree-id4320 . -33) (undo-tree-id4321 . -33) (undo-tree-id4322 . -33) (undo-tree-id4323 . -33)) nil (26024 6150 122180 0) 0 nil])
([nil nil ((#("  ;; (setq consult-project-function (lambda (_) (locate-dominating-file \".\" \".git\")))
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 44 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 44 86 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 37376) (undo-tree-id4306 . -85) (undo-tree-id4307 . -86) (undo-tree-id4308 . -86) (undo-tree-id4309 . -86) (undo-tree-id4310 . -86) (undo-tree-id4311 . -86) (undo-tree-id4312 . -86) (undo-tree-id4313 . -86) (undo-tree-id4314 . -86)) nil (26024 6150 122172 0) 0 nil])
([nil nil ((#("  ;;;; 4. projectile.el (projectile-project-root)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 7 32 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block)) 32 50 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 37376) (undo-tree-id4290 . -49) (undo-tree-id4291 . -50) (undo-tree-id4292 . -50) (undo-tree-id4293 . -50) (undo-tree-id4294 . -50) (undo-tree-id4295 . -50) (undo-tree-id4296 . -50) (undo-tree-id4297 . -50) (undo-tree-id4298 . -50) (undo-tree-id4299 . -50) (undo-tree-id4300 . -50) (undo-tree-id4301 . -50) (undo-tree-id4302 . -50) (undo-tree-id4303 . -50) (undo-tree-id4304 . -50) (undo-tree-id4305 . -50)) nil (26024 6150 122161 0) 0 nil])
([nil nil ((#("  ;;;; 5. No project support
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 7 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 7 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 37500) (undo-tree-id4383 . -28) (undo-tree-id4384 . -29) (undo-tree-id4385 . -29) (undo-tree-id4386 . -29) (undo-tree-id4387 . -29) (undo-tree-id4388 . -29) (undo-tree-id4389 . -29) (undo-tree-id4390 . -29) (undo-tree-id4391 . -29) (undo-tree-id4392 . -29) (undo-tree-id4393 . -29) (undo-tree-id4394 . -29) (undo-tree-id4395 . -29) (undo-tree-id4396 . -29) (undo-tree-id4397 . -29) (undo-tree-id4398 . -29) (undo-tree-id4399 . -29) (undo-tree-id4400 . -29) (undo-tree-id4401 . -29) (undo-tree-id4402 . -29) (undo-tree-id4403 . -29) (undo-tree-id4404 . -29) (undo-tree-id4405 . -29) (undo-tree-id4406 . -29) (undo-tree-id4407 . -29) (undo-tree-id4408 . -29) (undo-tree-id4409 . -29) (undo-tree-id4410 . -29) (undo-tree-id4411 . -29) (undo-tree-id4412 . -29) (t 26024 6150 178641 206000)) nil (26024 6164 281349 0) 0 nil])
([nil nil ((#("  ;; (setq consult-project-function nil)
" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 41 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 37500) (undo-tree-id4413 . -40)) ((37500 . 37541) (t 26024 6153 972131 856000)) (26024 6165 635270 0) 0 nil])
([nil nil ((34724 . 34725) (#("o" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -34724) (undo-tree-id4414 . -1) 34725 (34707 . 34725) (34696 . 34707) (#("B" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -34696) (undo-tree-id4415 . -1) (#("e" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -34697) (undo-tree-id4416 . -1) 34698 (34695 . 34698) (#("M" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -34695) (undo-tree-id4417 . -1) 34696 (34695 . 34696) (#("U" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -34695) (undo-tree-id4418 . -1) (#("I" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -34696) (undo-tree-id4419 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -34697) (undo-tree-id4420 . -1) (#("c" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -34698) (undo-tree-id4421 . -1) 34699 (34695 . 34699) (#("M" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -34695) (undo-tree-id4422 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -34696) (undo-tree-id4423 . -1) (#("n" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -34697) (undo-tree-id4424 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -34698) (undo-tree-id4425 . -1) 34699 (34695 . 34699) (#("Vertico" 0 7 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 34695) (undo-tree-id4426 . -6) (t 26024 6153 972131 856000)) nil (26024 6203 979623 0) 0 nil])
([nil nil ((#("** Vertico consult and marginalia 
#+begin_src emacs-lisp
(use-package vertico
  :init
  (vertico-mode)

  ;; Different scroll margin
  ;; (setq vertico-scroll-margin 0)

  ;; Show more candidates
  ;; (setq vertico-count 20)

  ;; Grow and shrink the Vertico minibuffer
  ;; (setq vertico-resize t)

  ;; Optionally enable cycling for `vertico-next' and `vertico-previous'.
  ;; (setq vertico-cycle t)
  )

(use-package consult
  ;; Enable automatic preview at point in the *Completions* buffer. This is
  ;; relevant when you use the default completion UI.
  :hook (completion-list-mode . consult-preview-at-point-mode)

  ;; The :init configuration is always executed (Not lazy)
  :init

  ;; Optionally configure the register formatting. This improves the register
  ;; preview for `consult-register', `consult-register-load',
  ;; `consult-register-store' and the Emacs built-ins.
  (setq register-preview-delay 0.5
        register-preview-function #'consult-register-format)

  ;; Optionally tweak the register preview window.
  ;; This adds thin lines, sorting and hides the mode line of the window.
  (advice-add #'register-preview :override #'consult-register-window)

  ;; Use Consult to select xref locations with preview
  (setq xref-show-xrefs-function #'consult-xref
        xref-show-definitions-function #'consult-xref)

  ;; Configure other variables and modes in the :config section,
  ;; after lazily loading the package.
  :config

  ;; Optionally configure preview. The default value
  ;; is 'any, such that any key triggers the preview.
  ;; (setq consult-preview-key 'any)
  ;; (setq consult-preview-key \"M-.\")
  ;; (setq consult-preview-key '(\"S-<down>\" \"S-<up>\"))
  ;; For some commands and buffer sources it is useful to configure the
  ;; :preview-key on a per-command basis using the `consult-customize' macro.
  (consult-customize
   consult-theme :preview-key '(:debounce 0.2 any)
   consult-ripgrep consult-git-grep consult-grep
   consult-bookmark consult-recent-file consult-xref
   consult--source-bookmark consult--source-file-register
   consult--source-recent-file consult--source-project-recent-file
   ;; :preview-key \"M-.\"
   :preview-key '(:debounce 0.4 any))

  ;; Optionally configure the narrowing key.
  ;; Both < and C-+ work reasonably well.
  (setq consult-narrow-key \"<\") ;; \"C-+\"

  ;; Optionally make narrowing help available in the minibuffer.
  ;; You may want to use `embark-prefix-help-command' or which-key instead.
  ;; (define-key consult-narrow-map (vconcat consult-narrow-key \"?\") #'consult-narrow-help)

  ;; By default `consult-project-function' uses `project-root' from project.el.
  ;; Optionally configure a different project root function.
  (autoload 'projectile-project-root \"projectile\")
  (setq consult-project-function (lambda (_) (projectile-project-root)))
)

;; Enable rich annotations using the Marginalia package
(use-package marginalia
  ;; Bind `marginalia-cycle' locally in the minibuffer.  To make the binding
  ;; available in the *Completions* buffer, add it to the
  ;; `completion-list-mode-map'.
  ;; :bind (:map minibuffer-local-map
  ;;       (\"M-A\" . marginalia-cycle))

  ;; The :init section is always executed.
  :init

  ;; Marginalia must be activated in the :init section of use-package such that
  ;; the mode gets enabled right away. Note that this forces loading the
  ;; package.
  (marginalia-mode))

(use-package orderless
  :init
  ;; Configure a custom style dispatcher (see the Consult wiki)
  ;; (setq orderless-style-dispatchers '(+orderless-consult-dispatch orderless-affix-dispatch)
  ;;       orderless-component-separator #'orderless-escapable-split-on-space)
  (setq completion-styles '(orderless basic)
        completion-category-defaults nil
        completion-category-overrides '((file (styles partial-completion)))))
#+end_src
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 3 33 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 33 34 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 34 35 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 35 57 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 57 58 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 58 59 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 59 70 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 70 71 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 71 78 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 78 79 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 79 81 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 81 86 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 86 87 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 87 104 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 104 105 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 105 107 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 107 110 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 110 134 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 134 136 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 136 139 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 139 170 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 170 171 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 171 173 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 173 176 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 176 197 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 197 199 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 199 202 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 202 226 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 226 227 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 227 229 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 229 232 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 232 271 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 271 273 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 273 276 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 276 300 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 300 301 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 301 303 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 303 306 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 306 337 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 337 349 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 349 356 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 356 372 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 372 375 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 375 377 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 377 380 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 380 403 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 403 405 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 405 406 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 406 407 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 407 408 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 408 409 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 409 420 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 420 421 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 421 428 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 428 429 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 429 431 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 431 434 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 434 464 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 464 475 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 475 476 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 476 487 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 487 488 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 488 505 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 505 507 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 507 510 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 510 545 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 545 559 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 559 561 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 561 566 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 566 584 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 584 621 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 621 622 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 622 623 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 623 625 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 625 628 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 628 662 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 662 682 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 682 684 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 684 689 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 689 690 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 690 691 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 691 693 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 693 696 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 696 702 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 702 739 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 739 769 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 769 771 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 771 774 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 774 782 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 782 787 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 787 803 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 803 807 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 807 825 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 825 828 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 828 831 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 831 833 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 833 836 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 836 837 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 837 859 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 859 869 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 869 886 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 886 889 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 889 893 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 893 904 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 904 921 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 921 952 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 952 982 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 982 983 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 983 985 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 985 986 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 986 988 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 988 1034 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1034 1036 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1036 1039 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1039 1069 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1069 1108 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1108 1141 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1141 1150 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1150 1152 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1152 1178 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1178 1179 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1179 1181 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1181 1184 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1184 1234 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1234 1237 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1237 1241 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 1241 1250 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1250 1282 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1282 1337 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1337 1338 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1338 1340 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1340 1343 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1343 1348 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1348 1382 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1382 1403 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1403 1405 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1405 1408 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1408 1420 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1420 1442 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1442 1444 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1444 1451 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1451 1452 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1452 1453 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1453 1455 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1455 1458 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1458 1506 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1506 1508 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1508 1511 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1511 1513 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1513 1560 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1560 1562 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1562 1565 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1565 1597 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1597 1599 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1599 1602 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1602 1610 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1610 1611 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1611 1632 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1632 1635 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1635 1637 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1637 1640 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1640 1670 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1670 1690 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1690 1692 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1692 1695 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1695 1727 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1727 1762 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1762 1764 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1764 1767 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1767 1814 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1814 1831 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 1831 1840 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 1840 1861 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1861 1878 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1878 1890 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1890 1893 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1893 1902 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 1902 1912 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1912 1961 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1961 2014 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2014 2072 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2072 2139 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2139 2142 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2142 2145 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2145 2164 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2164 2167 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2167 2179 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 2179 2182 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2182 2191 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 2191 2202 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2202 2203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2203 2205 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2205 2208 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2208 2248 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2248 2250 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2250 2253 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2253 2290 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2290 2293 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2293 2297 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2297 2317 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2317 2320 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2320 2322 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2322 2325 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2325 2331 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2331 2332 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2332 2334 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2334 2337 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2337 2397 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2397 2399 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2399 2402 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2402 2423 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2423 2449 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 2449 2473 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2473 2475 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2475 2478 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2478 2565 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2565 2566 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2566 2568 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2568 2571 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2571 2583 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2583 2607 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 2607 2615 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2615 2627 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 2627 2646 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2646 2648 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2648 2651 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2651 2707 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2707 2709 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2709 2719 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2719 2744 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2744 2756 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 2756 2758 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2758 2760 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2760 2761 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2761 2765 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2765 2783 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2783 2792 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2792 2798 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2798 2815 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2815 2816 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2816 2817 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2817 2818 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2818 2831 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2831 2832 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2832 2833 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2833 2834 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 2834 2837 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2837 2882 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2882 2890 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2890 2891 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2891 2902 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 2902 2903 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2903 2911 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 2911 2913 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 2913 2914 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2914 2916 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2916 2919 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2919 2925 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2925 2941 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 2941 2952 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2952 2991 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 2991 2993 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2993 2996 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2996 3013 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3013 3014 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 3014 3025 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 3025 3026 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 3026 3049 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3049 3051 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3051 3054 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3054 3055 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3055 3079 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 3079 3082 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3082 3084 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3084 3087 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3087 3092 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3092 3094 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3094 3098 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3098 3120 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3120 3122 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3122 3127 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3127 3128 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3128 3129 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3129 3131 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3131 3132 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3132 3137 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3137 3159 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3159 3160 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3160 3162 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3162 3165 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3165 3190 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3190 3203 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3203 3205 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3205 3210 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3210 3211 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3211 3212 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3212 3214 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3214 3217 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3217 3292 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3292 3294 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3294 3297 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3297 3365 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3365 3367 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3367 3370 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3370 3379 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3379 3389 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3389 3390 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3390 3391 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3391 3392 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3392 3393 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3393 3398 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3398 3399 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3399 3400 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3400 3401 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3401 3402 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3402 3413 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3413 3414 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3414 3423 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 3423 3424 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3424 3426 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3426 3431 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 3431 3432 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3432 3434 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3434 3437 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3437 3496 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3496 3498 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3498 3501 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3501 3591 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3591 3593 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3593 3602 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3602 3670 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 3670 3673 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3673 3677 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3677 3715 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 3715 3756 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 3756 3832 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 3832 3833 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 3833 3834 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 3834 3843 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 3843 3844 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) face org-block-end-line)) . 34692) (undo-tree-id4427 . 3811) (undo-tree-id4428 . -3843) (undo-tree-id4429 . -3385) (undo-tree-id4430 . -429) (undo-tree-id4431 . 3415) (undo-tree-id4432 . -429) (undo-tree-id4433 . -429) (undo-tree-id4434 . -35) (undo-tree-id4435 . -47) (undo-tree-id4436 . -3843) (undo-tree-id4437 . -58) (undo-tree-id4438 . -3834) (undo-tree-id4439 . -407) (undo-tree-id4440 . -407) (undo-tree-id4441 . -407) (undo-tree-id4442 . -407) (undo-tree-id4443 . -3489) (undo-tree-id4444 . -3489) (undo-tree-id4445 . -3548) (undo-tree-id4446 . -3548) (undo-tree-id4447 . -3482) (undo-tree-id4448 . -3482) (undo-tree-id4449 . -3548) (undo-tree-id4450 . -3548) (undo-tree-id4451 . -2834) (undo-tree-id4452 . -429) (undo-tree-id4453 . -3385) (undo-tree-id4454 . -32) (undo-tree-id4455 . -3385) (undo-tree-id4456 . -2831) (undo-tree-id4457 . -2831) (undo-tree-id4458 . -2831) (undo-tree-id4459 . -2831) (undo-tree-id4460 . -2831) (undo-tree-id4461 . -2831) (undo-tree-id4462 . -2831) (undo-tree-id4463 . -2831) (undo-tree-id4464 . -2831) (undo-tree-id4465 . -2831) (undo-tree-id4466 . -2831) (undo-tree-id4467 . -2831) (undo-tree-id4468 . -2831) (undo-tree-id4469 . -2831) (undo-tree-id4470 . -2831) (undo-tree-id4471 . -2831) (undo-tree-id4472 . -2831) (undo-tree-id4473 . -2831) (undo-tree-id4474 . -2831) (undo-tree-id4475 . -2831) (undo-tree-id4476 . -2831) (undo-tree-id4477 . -2831) (undo-tree-id4478 . -2831) (undo-tree-id4479 . -2831) (undo-tree-id4480 . -2831) (undo-tree-id4481 . -2831) (undo-tree-id4482 . -2831) (undo-tree-id4483 . -2831) 34724 (t 26024 6204 38228 949000)) nil (26024 6212 779476 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 22630 . 22631) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -26474) (22630 . 26475) 21852) nil (26024 6212 779421 0) 0 nil])
([nil nil ((22633 . 22634)) nil (26024 6212 779417 0) 0 nil])
([nil nil ((#("*** Vertico consult and marginalia 
#+begin_src emacs-lisp
(use-package vertico
  :init
  (vertico-mode)

  ;; Different scroll margin
  ;; (setq vertico-scroll-margin 0)

  ;; Show more candidates
  ;; (setq vertico-count 20)

  ;; Grow and shrink the Vertico minibuffer
  ;; (setq vertico-resize t)

  ;; Optionally enable cycling for `vertico-next' and `vertico-previous'.
  ;; (setq vertico-cycle t)
  )

(use-package consult
  ;; Enable automatic preview at point in the *Completions* buffer. This is
  ;; relevant when you use the default completion UI.
  :hook (completion-list-mode . consult-preview-at-point-mode)

  ;; The :init configuration is always executed (Not lazy)
  :init

  ;; Optionally configure the register formatting. This improves the register
  ;; preview for `consult-register', `consult-register-load',
  ;; `consult-register-store' and the Emacs built-ins.
  (setq register-preview-delay 0.5
        register-preview-function #'consult-register-format)

  ;; Optionally tweak the register preview window.
  ;; This adds thin lines, sorting and hides the mode line of the window.
  (advice-add #'register-preview :override #'consult-register-window)

  ;; Use Consult to select xref locations with preview
  (setq xref-show-xrefs-function #'consult-xref
        xref-show-definitions-function #'consult-xref)

  ;; Configure other variables and modes in the :config section,
  ;; after lazily loading the package.
  :config

  ;; Optionally configure preview. The default value
  ;; is 'any, such that any key triggers the preview.
  ;; (setq consult-preview-key 'any)
  ;; (setq consult-preview-key \"M-.\")
  ;; (setq consult-preview-key '(\"S-<down>\" \"S-<up>\"))
  ;; For some commands and buffer sources it is useful to configure the
  ;; :preview-key on a per-command basis using the `consult-customize' macro.
  (consult-customize
   consult-theme :preview-key '(:debounce 0.2 any)
   consult-ripgrep consult-git-grep consult-grep
   consult-bookmark consult-recent-file consult-xref
   consult--source-bookmark consult--source-file-register
   consult--source-recent-file consult--source-project-recent-file
   ;; :preview-key \"M-.\"
   :preview-key '(:debounce 0.4 any))

  ;; Optionally configure the narrowing key.
  ;; Both < and C-+ work reasonably well.
  (setq consult-narrow-key \"<\") ;; \"C-+\"

  ;; Optionally make narrowing help available in the minibuffer.
  ;; You may want to use `embark-prefix-help-command' or which-key instead.
  ;; (define-key consult-narrow-map (vconcat consult-narrow-key \"?\") #'consult-narrow-help)

  ;; By default `consult-project-function' uses `project-root' from project.el.
  ;; Optionally configure a different project root function.
  (autoload 'projectile-project-root \"projectile\")
  (setq consult-project-function (lambda (_) (projectile-project-root)))
)

;; Enable rich annotations using the Marginalia package
(use-package marginalia
  ;; Bind `marginalia-cycle' locally in the minibuffer.  To make the binding
  ;; available in the *Completions* buffer, add it to the
  ;; `completion-list-mode-map'.
  ;; :bind (:map minibuffer-local-map
  ;;       (\"M-A\" . marginalia-cycle))

  ;; The :init section is always executed.
  :init

  ;; Marginalia must be activated in the :init section of use-package such that
  ;; the mode gets enabled right away. Note that this forces loading the
  ;; package.
  (marginalia-mode))

(use-package orderless
  :init
  ;; Configure a custom style dispatcher (see the Consult wiki)
  ;; (setq orderless-style-dispatchers '(+orderless-consult-dispatch orderless-affix-dispatch)
  ;;       orderless-component-separator #'orderless-escapable-split-on-space)
  (setq completion-styles '(orderless basic)
        completion-category-defaults nil
        completion-category-overrides '((file (styles partial-completion)))))
#+end_src
*** ya-snippets
#+begin_src emacs-lisp
(use-package yasnippet
  :demand t
  :config
  (yas-global-mode 1)
  (yas-minor-mode-on))
(use-package yasnippet-snippets
  :demand t)
#+end_src
" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 34 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 34 35 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 35 36 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) jinx--pending t) 36 58 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-begin-line) 58 59 (font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face org-block-begin-line) 59 60 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 60 71 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 71 72 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 72 79 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 79 80 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 80 82 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 82 87 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block)) 87 88 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 88 105 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 105 106 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 106 108 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 108 111 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 111 135 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 135 137 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 137 140 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 140 171 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 171 172 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 172 174 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 174 177 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 177 198 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 198 200 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 200 203 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 203 227 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 227 228 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 228 230 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 230 233 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 233 272 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 272 274 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 274 277 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 277 301 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 301 302 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 302 304 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 304 307 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 307 338 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 338 350 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 350 357 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 357 373 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 373 376 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 376 378 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 378 381 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 381 404 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 404 406 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 406 407 (src-block t font-lock-fontified t rear-nonsticky t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 407 408 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 408 409 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 409 410 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 410 421 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 421 422 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 422 429 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 429 430 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 430 432 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 432 435 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 435 465 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 465 476 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 476 477 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 477 488 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 488 489 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 489 506 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 506 508 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 508 511 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 511 546 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 546 560 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 560 562 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 562 567 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block)) 567 585 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 585 622 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 622 623 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 623 624 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 624 626 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 626 629 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 629 663 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 663 683 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 683 685 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 685 690 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block)) 690 691 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 691 692 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 692 694 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 694 697 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 697 703 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 703 740 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 740 770 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 770 772 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 772 775 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 775 783 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 783 788 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 788 804 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 804 808 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 808 826 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 826 829 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 829 832 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 832 834 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 834 837 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 837 838 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 838 860 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 860 870 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 870 887 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 887 890 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 890 894 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 894 905 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 905 922 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 922 953 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 953 983 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 983 984 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 984 986 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 986 987 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 987 989 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 989 1035 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1035 1037 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1037 1040 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1040 1070 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1070 1109 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1109 1142 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1142 1151 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block)) 1151 1153 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1153 1179 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1179 1180 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1180 1182 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1182 1185 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1185 1235 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1235 1238 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1238 1242 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 1242 1251 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1251 1283 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1283 1338 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1338 1339 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1339 1341 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1341 1344 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1344 1349 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1349 1383 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1383 1404 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1404 1406 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1406 1409 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1409 1421 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1421 1443 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1443 1445 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1445 1452 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block)) 1452 1453 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1453 1454 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1454 1456 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (org-block)) 1456 1459 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1459 1500 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) jinx--pending t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1500 1507 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1507 1509 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1509 1512 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1512 1514 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1514 1561 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1561 1563 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1563 1566 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1566 1598 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1598 1600 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1600 1603 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1603 1611 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1611 1612 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1612 1633 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1633 1636 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1636 1638 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1638 1641 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1641 1671 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1671 1691 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1691 1693 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1693 1696 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1696 1728 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1728 1763 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1763 1765 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1765 1768 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1768 1815 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1815 1832 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 1832 1841 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 1841 1862 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1862 1879 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1879 1891 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block)) 1891 1894 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1894 1903 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block)) 1903 1913 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1913 1962 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1962 2015 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2015 2073 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2073 2140 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2140 2143 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2143 2146 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2146 2165 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2165 2168 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2168 2180 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block)) 2180 2183 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2183 2192 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block)) 2192 2203 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2203 2204 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2204 2206 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2206 2209 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2209 2249 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2249 2251 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2251 2254 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2254 2291 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2291 2294 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2294 2298 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 2298 2318 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2318 2321 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block)) 2321 2323 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2323 2326 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2326 2332 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2332 2333 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2333 2335 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2335 2338 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2338 2398 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2398 2400 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2400 2403 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2403 2424 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2424 2450 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 2450 2474 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2474 2476 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2476 2479 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2479 2566 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2566 2567 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2567 2569 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2569 2572 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2572 2584 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2584 2608 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 2608 2616 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2616 2628 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 2628 2647 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2647 2649 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2649 2652 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2652 2708 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2708 2710 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2710 2720 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2720 2745 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2745 2757 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-string-face org-block)) 2757 2759 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2759 2761 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2761 2762 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2762 2766 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 2766 2784 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2784 2793 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2793 2799 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 2799 2816 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2816 2817 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2817 2818 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2818 2819 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2819 2832 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2832 2833 (src-block t font-lock-fontified t rear-nonsticky t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2833 2834 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2834 2835 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2835 2838 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2838 2883 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2883 2891 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2891 2892 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2892 2903 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 2903 2904 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2904 2912 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 2912 2914 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 2914 2915 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2915 2917 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2917 2920 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2920 2926 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2926 2942 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 2942 2953 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2953 2992 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 2992 2994 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2994 2997 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 2997 3014 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3014 3015 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 3015 3026 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 3026 3027 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t org-emphasis t face (font-lock-comment-face org-block)) 3027 3050 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3050 3052 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3052 3055 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3055 3056 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3056 3080 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 3080 3083 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3083 3085 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3085 3088 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3088 3093 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3093 3095 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3095 3099 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3099 3121 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3121 3123 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3123 3128 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3128 3129 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3129 3130 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3130 3132 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3132 3133 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3133 3138 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3138 3160 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3160 3161 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3161 3163 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3163 3166 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3166 3191 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3191 3204 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3204 3206 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3206 3211 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block)) 3211 3212 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3212 3213 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3213 3215 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3215 3218 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3218 3293 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3293 3295 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3295 3298 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3298 3366 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3366 3368 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3368 3371 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3371 3380 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3380 3390 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3390 3391 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3391 3392 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3392 3393 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3393 3394 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3394 3399 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3399 3400 (src-block t font-lock-fontified t rear-nonsticky t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3400 3401 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3401 3402 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3402 3403 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3403 3414 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 3414 3415 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3415 3424 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 3424 3425 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3425 3427 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3427 3432 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-builtin-face org-block)) 3432 3433 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3433 3435 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3435 3438 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3438 3497 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3497 3499 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3499 3502 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3502 3592 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3592 3594 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3594 3603 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 3603 3671 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 3671 3674 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3674 3678 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 3678 3716 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-multiline t face (org-block)) 3716 3757 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-multiline t face (org-block)) 3757 3833 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-multiline t face (org-block)) 3833 3834 (src-block t font-lock-fontified t rear-nonsticky t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-multiline t face (org-block)) 3834 3835 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)) font-lock-multiline t face (org-block)) 3835 3844 (font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face org-block-end-line) 3844 3845 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line) 3845 3847 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 3847 3848 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 3848 3849 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 3849 3860 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 3860 3861 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent))) 3861 3883 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 3883 3884 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 3884 3885 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3885 3888 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 3888 3896 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-keyword-face org-block)) 3896 3897 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3897 3906 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block)) 3906 3907 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3907 3909 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3909 3916 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 3916 3919 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3919 3921 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3921 3928 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 3928 3929 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3929 3951 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3951 3974 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3974 3975 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3975 3986 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-keyword-face org-block)) 3986 3987 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3987 4005 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block)) 4005 4006 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 4006 4008 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 4008 4015 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 4015 4019 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block)) 4019 4025 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t jinx--pending t font-lock-multiline t face org-block-end-line) 4025 4028 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 4028 4029 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) face org-block-end-line)) . 22631) (undo-tree-id4484 . 4026) (undo-tree-id4485 . -4028) (undo-tree-id4486 . -2) (undo-tree-id4487 . 3994) (undo-tree-id4488 . -4028) (undo-tree-id4489 . -2) (undo-tree-id4490 . -2) (undo-tree-id4491 . -2) (undo-tree-id4492 . -2) (undo-tree-id4493 . -2) (undo-tree-id4494 . -2) (undo-tree-id4495 . -2) (undo-tree-id4496 . -2) (undo-tree-id4497 . -2) (undo-tree-id4498 . -2) (undo-tree-id4499 . -2) (undo-tree-id4500 . -2) (undo-tree-id4501 . -2) (undo-tree-id4502 . -2) (undo-tree-id4503 . -2) (undo-tree-id4504 . -2) (undo-tree-id4505 . -2) (undo-tree-id4506 . -2) (undo-tree-id4507 . -2) (undo-tree-id4508 . -2) (undo-tree-id4509 . -2) (undo-tree-id4510 . -2) (undo-tree-id4511 . -2) (undo-tree-id4512 . -2) (undo-tree-id4513 . -2) (undo-tree-id4514 . -2) (undo-tree-id4515 . -2) (undo-tree-id4516 . -2) (undo-tree-id4517 . -2) (undo-tree-id4518 . -2) (undo-tree-id4519 . -2) (undo-tree-id4520 . -2) (undo-tree-id4521 . -2) (undo-tree-id4522 . -2) (undo-tree-id4523 . -2) (undo-tree-id4524 . -2) (undo-tree-id4525 . -2) (undo-tree-id4526 . -2) (undo-tree-id4527 . -2) (undo-tree-id4528 . -2) (undo-tree-id4529 . -2) (undo-tree-id4530 . -2) (undo-tree-id4531 . -2) (undo-tree-id4532 . -2) (undo-tree-id4533 . -2) (undo-tree-id4534 . -2) (undo-tree-id4535 . -2) (undo-tree-id4536 . -2) (undo-tree-id4537 . -2) (undo-tree-id4538 . -2) (undo-tree-id4539 . -2) (undo-tree-id4540 . -2) (undo-tree-id4541 . -2) (undo-tree-id4542 . -2) (undo-tree-id4543 . -4029) 22633 (t 26024 6212 842590 222000)) nil (26024 6214 576031 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 21849 . 21850) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -25878) (21849 . 25879) 21830) nil (26024 6214 575966 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 40634) (t 26024 6214 639348 883000)) nil (26024 6253 829402 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 40634)) nil (26024 6253 829401 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) font-lock-multiline t face (org-block))) . 40634)) nil (26024 6253 829400 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 40724) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1)) nil (26024 6253 829399 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 40724) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1)) nil (26024 6253 829396 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) font-lock-multiline t face (org-block))) . 40724) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1)) nil (26024 6253 829391 0) 0 nil])
([nil nil ((40736 . 40739) (#("t" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block))) . 40736) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (t 26024 6253 894559 493000)) nil (26024 6796 930915 0) 0 nil])
([nil nil ((40782 . 40783) (t 26024 6796 992623 795000) 40738) nil (26024 6821 565446 0) 0 nil])
([nil nil ((40804 . 40805) (40788 . 40804) (#("u" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . -40788) (undo-tree-id4555 . -1) (#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . -40789) (undo-tree-id4556 . -1) (#("f" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . -40790) (undo-tree-id4557 . -1) (#("u" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . -40791) (undo-tree-id4558 . -1) 40792 (40786 . 40792) (40785 . 40787) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . -40785) (40783 . 40786)) nil (26024 6821 565443 0) 0 nil])
([nil nil ((40828 . 40831) (40810 . 40828) (40809 . 40811) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . -40809) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (40807 . 40810) (40806 . 40807) (t 26024 6821 628068 91000)) nil (26024 6830 340213 0) 0 nil])
([nil nil ((40832 . 40833) (t 26024 6830 403188 948000) 40830) nil (26024 6988 606028 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 40861 . 40862) (nil fontified nil 40833 . 40862) (40833 . 40862)) nil (26024 6988 606024 0) 0 nil])
([nil nil ((40833 . 40837) 40861 (t 26024 6988 673584 551000)) nil (26024 6992 103378 0) 0 nil])
([nil nil (40861) nil (26024 6992 103377 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -40835) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("        " 0 4 (face org-indent) 4 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -40836) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) 40837) nil (26024 6992 103373 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 41925 . 41926) (nil fontified nil 41890 . 41926) (nil fontified nil 41806 . 41890) (nil fontified nil 41742 . 41806) (nil fontified nil 41681 . 41742) (nil fontified nil 41630 . 41681) (nil fontified nil 41563 . 41630) (nil fontified nil 41499 . 41563) (nil fontified nil 41419 . 41499) (nil fontified nil 41353 . 41419) (nil fontified nil 41345 . 41353) (41345 . 41926) (t 26024 6992 173207 584000)) nil (26024 7114 595858 0) 0 nil])
([nil nil ((41345 . 41347) (41353 . 41355) (41419 . 41421) (41499 . 41501) (41563 . 41565) (41630 . 41632) (41681 . 41683) (41742 . 41744) (41806 . 41808) (41890 . 41892) 40584) nil (26024 7114 595856 0) 0 nil])
([nil nil ((41946 . 41947) 41916) nil (26024 7114 595850 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) jinx--pending t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -41946) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) (undo-tree-id4685 . -1) (undo-tree-id4686 . -1) (undo-tree-id4687 . -1) (undo-tree-id4688 . -1) (undo-tree-id4689 . -1) (undo-tree-id4690 . -1) (undo-tree-id4691 . -1) (undo-tree-id4692 . -1) (undo-tree-id4693 . -1) (undo-tree-id4694 . -1) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) (undo-tree-id4698 . -1) (undo-tree-id4699 . -1) (undo-tree-id4700 . -1) (undo-tree-id4701 . -1) (undo-tree-id4702 . -1) (undo-tree-id4703 . -1) (undo-tree-id4704 . -1) (undo-tree-id4705 . -1) (undo-tree-id4706 . -1) (undo-tree-id4707 . -1) (undo-tree-id4708 . -1) (undo-tree-id4709 . -1) (undo-tree-id4710 . -1) (undo-tree-id4711 . -1) (undo-tree-id4712 . -1) (undo-tree-id4713 . -1) (undo-tree-id4714 . -1) (undo-tree-id4715 . -1) (undo-tree-id4716 . -1) (undo-tree-id4717 . -1) (undo-tree-id4718 . -1) (undo-tree-id4719 . -1) (undo-tree-id4720 . -1) (undo-tree-id4721 . -1) (undo-tree-id4722 . -1) (undo-tree-id4723 . -1) (undo-tree-id4724 . -1) (undo-tree-id4725 . -1) (undo-tree-id4726 . -1) (undo-tree-id4727 . -1) (undo-tree-id4728 . -1) (undo-tree-id4729 . -1) (undo-tree-id4730 . -1) (undo-tree-id4731 . -1) (undo-tree-id4732 . -1) (undo-tree-id4733 . -1) (undo-tree-id4734 . -1) (undo-tree-id4735 . -1) (undo-tree-id4736 . -1) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (#("f" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) jinx--pending t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -41947) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) (undo-tree-id4802 . -1) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (undo-tree-id4823 . -1) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) jinx--pending t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -41948) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) (undo-tree-id4853 . -1) (undo-tree-id4854 . -1) (undo-tree-id4855 . -1) (undo-tree-id4856 . -1) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) (undo-tree-id4860 . -1) (undo-tree-id4861 . -1) (undo-tree-id4862 . -1) (undo-tree-id4863 . -1) 41949 (41946 . 41949) (t 26024 7114 667873 243000)) nil (26024 7121 168651 0) 0 nil])
([nil nil ((40736 . 40737) (#("nil" 0 3 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block))) . 40736) (undo-tree-id4864 . -2) (undo-tree-id4865 . -3) (undo-tree-id4866 . -3) (undo-tree-id4867 . -3) (undo-tree-id4868 . -3) (undo-tree-id4869 . -3) (undo-tree-id4870 . -3) (undo-tree-id4871 . -3) (undo-tree-id4872 . -3) (undo-tree-id4873 . -3) (undo-tree-id4874 . -3) (undo-tree-id4875 . -3) (undo-tree-id4876 . -3) (undo-tree-id4877 . -3) (undo-tree-id4878 . -3) (undo-tree-id4879 . -3) (undo-tree-id4880 . -3) (undo-tree-id4881 . -3) (undo-tree-id4882 . -3) (undo-tree-id4883 . -3) (undo-tree-id4884 . -3) (undo-tree-id4885 . -3) (undo-tree-id4886 . -3) (undo-tree-id4887 . -3) (t 26024 7121 238328 145000)) nil (26024 7777 538066 0) 0 nil])
([nil nil ((40560 . 40573) (t 26024 7289 492239 81000)) nil (26024 7784 367457 0) 0 nil] [nil nil ((#("#" 0 1 (fontified t font-lock-fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-begin-line)) . 40561) (undo-tree-id4888 . -1) (undo-tree-id4889 . -1) (t 26024 7289 492239 81000)) ((40561 . 40562)) (26024 7777 537461 0) 0 nil])
([nil nil ((25729 . 25730) (25725 . 25729) (#("l" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t jinx--pending t font-lock-multiline t face org-block-begin-line)) . -25725) (undo-tree-id4890 . -1) (undo-tree-id4891 . -1) (undo-tree-id4892 . -1) (undo-tree-id4893 . -1) (undo-tree-id4894 . -1) (undo-tree-id4895 . -1) (undo-tree-id4896 . -1) (undo-tree-id4897 . -1) (undo-tree-id4898 . -1) (undo-tree-id4899 . -1) (undo-tree-id4900 . -1) (undo-tree-id4901 . -1) (undo-tree-id4902 . -1) (undo-tree-id4903 . -1) (undo-tree-id4904 . -1) (undo-tree-id4905 . -1) (undo-tree-id4906 . -1) (undo-tree-id4907 . -1) (undo-tree-id4908 . -1) (undo-tree-id4909 . -1) (undo-tree-id4910 . -1) (undo-tree-id4911 . -1) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) (#("s" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t jinx--pending t font-lock-multiline t face org-block-begin-line)) . -25726) (undo-tree-id4914 . -1) (undo-tree-id4915 . -1) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) (undo-tree-id4920 . -1) (undo-tree-id4921 . -1) (undo-tree-id4922 . -1) 25727 (25723 . 25727) (#("c" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -25723) (undo-tree-id4923 . -1) (#("s" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t jinx--pending t font-lock-multiline t face org-block-begin-line)) . -25724) (undo-tree-id4924 . -1) 25725 (25719 . 25725) (25707 . 25730) (#("<s" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) jinx--pending t)) . -25707) (undo-tree-id4925 . -2) 25709 (25707 . 25709) (25706 . 25707) (25695 . 25706) (25694 . 25695) (t 26024 7784 430404 22000) 21852) nil (26024 7857 238390 0) 0 nil])
nil
([nil nil ((#("c" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 25721) (undo-tree-id4926 . -1) (undo-tree-id4927 . -1) (t 26024 7857 300929 602000)) nil (26024 7860 383362 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 25722 . 25723) (nil fontified nil 25722 . 25723) (25722 . 25723) 25721) nil (26024 7860 383350 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 26396 . 26397) (nil fontified nil 26354 . 26397) (nil fontified nil 26341 . 26354) (nil fontified nil 26323 . 26341) (nil fontified nil 26297 . 26323) (nil fontified nil 26295 . 26297) (nil fontified nil 26265 . 26295) (nil fontified nil 26238 . 26265) (nil fontified nil 26210 . 26238) (nil fontified nil 26208 . 26210) (nil fontified nil 26171 . 26208) (nil fontified nil 26141 . 26171) (nil fontified nil 26055 . 26141) (nil fontified nil 26024 . 26055) (nil fontified nil 26022 . 26024) (nil fontified nil 26004 . 26022) (nil fontified nil 25995 . 26004) (nil fontified nil 25973 . 25995) (nil fontified nil 25931 . 25973) (nil fontified nil 25903 . 25931) (nil fontified nil 25866 . 25903) (nil fontified nil 25839 . 25866) (nil fontified nil 25788 . 25839) (nil fontified nil 25777 . 25788) (nil fontified nil 25764 . 25777) (nil fontified nil 25752 . 25764) (nil fontified nil 25730 . 25752) (25730 . 26397) (t 26024 7860 445453 652000)) nil (26024 7882 498656 0) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 26329) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 26317) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 26300) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 26275) (#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 26274) (#("+" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 26245) (#("+" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 26219) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 26192) (#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 26191) (#("+" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 26155) (#("+" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 26126) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 26041) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 26011) (#(" " 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 26010) (#("+" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 25993) (#("+" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 25985) (#("+" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 25964) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 25923) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 25896) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 25860) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 25834) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 25784) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 25774) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 25762) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block org-list-dt) help-echo nil src-block t)) . 25751) (#("-" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 25730) (undo-tree-id4939 . -1) (undo-tree-id4940 . -1) 26398) nil (26024 7882 498652 0) 0 nil])
([nil nil ((#("(use-package vertico
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 20 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 20 21 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25964) (undo-tree-id4935 . -20) (undo-tree-id4936 . 21) (undo-tree-id4937 . -1) (undo-tree-id4938 . -21)) nil (26024 7882 498647 0) 0 nil])
([nil nil ((#("  :init
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 7 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 7 8 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 25964) (undo-tree-id4932 . -7) (undo-tree-id4933 . -7) (undo-tree-id4934 . -8)) nil (26024 7882 498643 0) 0 nil])
([nil nil ((#("  (vertico-mode)
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 16 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16 17 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25964) (undo-tree-id4929 . -16) (undo-tree-id4930 . -16) (undo-tree-id4931 . -17)) nil (26024 7882 498640 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25964) (undo-tree-id4928 . -1)) nil (26024 7882 498634 0) 0 nil])
([nil nil ((#("  ;; Show more candidates
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 26 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 26172) (undo-tree-id5004 . -25) (undo-tree-id5005 . -2) (undo-tree-id5006 . -2) (undo-tree-id5007 . -2) (undo-tree-id5008 . -2) (undo-tree-id5009 . -2) (undo-tree-id5010 . -2) (undo-tree-id5011 . -2) (undo-tree-id5012 . -2) (undo-tree-id5013 . -2) (undo-tree-id5014 . -2) (undo-tree-id5015 . -2) (undo-tree-id5016 . -2) (undo-tree-id5017 . -2) (undo-tree-id5018 . -2) (undo-tree-id5019 . -2) (undo-tree-id5020 . -2) (undo-tree-id5021 . -2) (undo-tree-id5022 . -2) (undo-tree-id5023 . -2) (undo-tree-id5024 . -2) (undo-tree-id5025 . -2) (undo-tree-id5026 . -2) (undo-tree-id5027 . -2) (undo-tree-id5028 . -2) (undo-tree-id5029 . -2) (undo-tree-id5030 . -2) (undo-tree-id5031 . -2) (undo-tree-id5032 . -2) (undo-tree-id5033 . -2) (undo-tree-id5034 . -2) (undo-tree-id5035 . -2) (undo-tree-id5036 . -2) (undo-tree-id5037 . -2) (undo-tree-id5038 . -2) (undo-tree-id5039 . -2) (undo-tree-id5040 . -2) (undo-tree-id5041 . -2) (undo-tree-id5042 . -2) (undo-tree-id5043 . -2) (undo-tree-id5044 . -2) (undo-tree-id5045 . -2) (undo-tree-id5046 . -2) (undo-tree-id5047 . -2) (undo-tree-id5048 . -2) (undo-tree-id5049 . -2) (undo-tree-id5050 . -2) (undo-tree-id5051 . -2) (undo-tree-id5052 . -2) (undo-tree-id5053 . -2) (undo-tree-id5054 . -2) (undo-tree-id5055 . -2) (undo-tree-id5056 . -2) (undo-tree-id5057 . -2) (undo-tree-id5058 . -2) (undo-tree-id5059 . -2) (undo-tree-id5060 . -2) (undo-tree-id5061 . -2) (undo-tree-id5062 . -2) (undo-tree-id5063 . -2) (undo-tree-id5064 . -2) (undo-tree-id5065 . -26) 26174 (t 26024 7882 561409 765000)) nil (26024 7892 161206 0) 0 nil])
([nil nil ((#("  ;; (setq vertico-count 20)
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 28 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 28 29 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block))) . 26172) (undo-tree-id4941 . -28) (undo-tree-id4942 . -2) (undo-tree-id4943 . -2) (undo-tree-id4944 . -2) (undo-tree-id4945 . -2) (undo-tree-id4946 . -2) (undo-tree-id4947 . -2) (undo-tree-id4948 . -2) (undo-tree-id4949 . -2) (undo-tree-id4950 . -2) (undo-tree-id4951 . -2) (undo-tree-id4952 . -2) (undo-tree-id4953 . -2) (undo-tree-id4954 . -2) (undo-tree-id4955 . -2) (undo-tree-id4956 . -2) (undo-tree-id4957 . -2) (undo-tree-id4958 . -2) (undo-tree-id4959 . -2) (undo-tree-id4960 . -2) (undo-tree-id4961 . -2) (undo-tree-id4962 . -2) (undo-tree-id4963 . -2) (undo-tree-id4964 . -28) (undo-tree-id4965 . -2) (undo-tree-id4966 . -2) (undo-tree-id4967 . -2) (undo-tree-id4968 . -2) (undo-tree-id4969 . -2) (undo-tree-id4970 . -2) (undo-tree-id4971 . -2) (undo-tree-id4972 . -2) (undo-tree-id4973 . -2) (undo-tree-id4974 . -2) (undo-tree-id4975 . -2) (undo-tree-id4976 . -2) (undo-tree-id4977 . -2) (undo-tree-id4978 . -2) (undo-tree-id4979 . -2) (undo-tree-id4980 . -2) (undo-tree-id4981 . -2) (undo-tree-id4982 . -2) (undo-tree-id4983 . -2) (undo-tree-id4984 . -2) (undo-tree-id4985 . -2) (undo-tree-id4986 . -2) (undo-tree-id4987 . -2) (undo-tree-id4988 . -2) (undo-tree-id4989 . -2) (undo-tree-id4990 . -2) (undo-tree-id4991 . -2) (undo-tree-id4992 . -2) (undo-tree-id4993 . -2) (undo-tree-id4994 . -2) (undo-tree-id4995 . -2) (undo-tree-id4996 . -2) (undo-tree-id4997 . -2) (undo-tree-id4998 . -2) (undo-tree-id4999 . -2) (undo-tree-id5000 . -2) (undo-tree-id5001 . -2) (undo-tree-id5002 . -2) (undo-tree-id5003 . -29) 26174) nil (26024 8014 743463 0) 0 nil])
([nil nil ((#("emacs-lisp" 0 10 (fontified t font-lock-fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-begin-line)) . 41172) (undo-tree-id5112 . -9) (undo-tree-id5113 . -5) (undo-tree-id5114 . -5) (undo-tree-id5115 . -5) (undo-tree-id5116 . -5) (undo-tree-id5117 . -5) (undo-tree-id5118 . -5) (undo-tree-id5119 . -5) (undo-tree-id5120 . -6) (undo-tree-id5121 . -6) (undo-tree-id5122 . -6) (undo-tree-id5123 . -6) (undo-tree-id5124 . -6) (undo-tree-id5125 . -6) (undo-tree-id5126 . -6) (undo-tree-id5127 . -6) (undo-tree-id5128 . -6) (undo-tree-id5129 . -6) (undo-tree-id5130 . -6) (undo-tree-id5131 . -6) (undo-tree-id5132 . -6) (undo-tree-id5133 . -6) (undo-tree-id5134 . -6) (undo-tree-id5135 . -6) (undo-tree-id5136 . -6) (undo-tree-id5137 . -6) (undo-tree-id5138 . -6) (undo-tree-id5139 . -6) (undo-tree-id5140 . -6) (undo-tree-id5141 . -6) (undo-tree-id5142 . -6) (undo-tree-id5143 . -6) (undo-tree-id5144 . -6) (undo-tree-id5145 . -6) (undo-tree-id5146 . -6) (undo-tree-id5147 . -6) (undo-tree-id5148 . -5) (undo-tree-id5149 . -5) (undo-tree-id5150 . -5) (undo-tree-id5151 . -5) (undo-tree-id5152 . -5) (undo-tree-id5153 . -5) (undo-tree-id5154 . -5) (undo-tree-id5155 . -5) (undo-tree-id5156 . -5) (undo-tree-id5157 . -5) (undo-tree-id5158 . -5) (undo-tree-id5159 . -5) (undo-tree-id5160 . -5) (undo-tree-id5161 . -5) (undo-tree-id5162 . -5) (undo-tree-id5163 . -5) (undo-tree-id5164 . -5) (undo-tree-id5165 . -5) (undo-tree-id5166 . -5) (undo-tree-id5167 . -5) (undo-tree-id5168 . -5) (undo-tree-id5169 . -10) (undo-tree-id5170 . -10) (t 26024 8015 668358 62000)) nil (26024 8021 760402 0) 0 nil] [nil nil ((#("#" 0 1 (fontified t font-lock-fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-begin-line)) . 41160) (undo-tree-id5068 . -1) (undo-tree-id5069 . -1) (undo-tree-id5070 . -1) (undo-tree-id5071 . -1) (undo-tree-id5072 . -1) (undo-tree-id5073 . -1) (undo-tree-id5074 . -1) (undo-tree-id5075 . -1) (undo-tree-id5076 . -1) (undo-tree-id5077 . -1) (undo-tree-id5078 . -1) (undo-tree-id5079 . -1) (undo-tree-id5080 . -1) (undo-tree-id5081 . -1) (undo-tree-id5082 . -1) (undo-tree-id5083 . -1) (undo-tree-id5084 . -1) (undo-tree-id5085 . -1) (undo-tree-id5086 . -1) (undo-tree-id5087 . -1) (undo-tree-id5088 . -1) (undo-tree-id5089 . -1) (undo-tree-id5090 . -1) (undo-tree-id5091 . -1) (undo-tree-id5092 . -1) (undo-tree-id5093 . -1) (undo-tree-id5094 . -1) (undo-tree-id5095 . -1) (undo-tree-id5096 . -1) (undo-tree-id5097 . -1) (undo-tree-id5098 . -1) (undo-tree-id5099 . -1) (undo-tree-id5100 . -1) (undo-tree-id5101 . -1) (undo-tree-id5102 . -1) (undo-tree-id5103 . -1) (undo-tree-id5104 . -1) (undo-tree-id5105 . -1) (undo-tree-id5106 . -1) (undo-tree-id5107 . -1) (undo-tree-id5108 . -1) (undo-tree-id5109 . -1) (undo-tree-id5110 . -1) (undo-tree-id5111 . -1) (t 26024 7892 227354 207000)) ((41160 . 41161)) (26024 8013 927232 0) 0 nil])
([nil nil ((41172 . 41176)) nil (26024 8021 760342 0) 0 nil])
([nil nil ((#("#" 0 1 (fontified t font-lock-fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) face org-meta-line)) . 42930) (undo-tree-id5066 . -1) (undo-tree-id5067 . -1)) ((42930 . 42931) (t 26024 8013 665657 150000)) (26024 8013 609877 0) 0 nil])
([nil nil ((#("** Jinx
#+begin_src emacs-lisp
(use-package jinx
  :hook (emacs-startup . global-jinx-mode))
#+end_src
** Cape
#+begin_src emacs-lisp
(use-package cape
  ;; Bind dedicated completion commands
  ;; Alternative prefix keys: C-c p, M-p, M-+, ...
  ;;:bind ((\"C-c p p\" . completion-at-point) ;; capf
  ;;       (\"C-c p t\" . complete-tag)        ;; etags
  ;;       (\"C-c p d\" . cape-dabbrev)        ;; or dabbrev-completion
  ;;       (\"C-c p h\" . cape-history)
  ;;       (\"C-c p f\" . cape-file)
  ;;       (\"C-c p k\" . cape-keyword)
  ;;       (\"C-c p s\" . cape-elisp-symbol)
  ;;       (\"C-c p e\" . cape-elisp-block)
  ;;       (\"C-c p a\" . cape-abbrev)
  ;;       (\"C-c p l\" . cape-line)
  ;;       (\"C-c p w\" . cape-dict)
  ;;       (\"C-c p :\" . cape-emoji)
  ;;       (\"C-c p \\\\\" . cape-tex)
  ;;       (\"C-c p _\" . cape-tex)
  ;;       (\"C-c p ^\" . cape-tex)
  ;;       (\"C-c p &\" . cape-sgml)
  ;;       (\"C-c p r\" . cape-rfc1345))
  :init
  ;; Add to the global default value of `completion-at-point-functions' which is
  ;; used by `completion-at-point'.  The order of the functions matters, the
  ;; first function returning a result wins.  Note that the list of buffer-local
  ;; completion functions takes precedence over the global list.
  (add-to-list 'completion-at-point-functions #'cape-dabbrev)
  (add-to-list 'completion-at-point-functions #'cape-file)
  (add-to-list 'completion-at-point-functions #'cape-elisp-block)
  ;;(add-to-list 'completion-at-point-functions #'cape-history)
  ;;(add-to-list 'completion-at-point-functions #'cape-keyword)
  ;;(add-to-list 'completion-at-point-functions #'cape-tex)
  ;;(add-to-list 'completion-at-point-functions #'cape-sgml)
  ;;(add-to-list 'completion-at-point-functions #'cape-rfc1345)
  ;;(add-to-list 'completion-at-point-functions #'cape-abbrev)
  ;;(add-to-list 'completion-at-point-functions #'cape-dict)
  ;;(add-to-list 'completion-at-point-functions #'cape-elisp-symbol)
  ;;(add-to-list 'completion-at-point-functions #'cape-line)
)

#+end_src
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 3 7 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 7 8 (fontified t rear-nonsticky t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 8 30 (font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-begin-line) 30 31 (font-lock-fontified t fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-begin-line) 31 32 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 32 43 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block)) 43 44 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 44 48 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-constant-face org-block)) 48 49 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 49 51 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 51 56 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-builtin-face org-block)) 56 93 (src-block t font-lock-fontified t fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 93 99 (font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-end-line) 99 102 (font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-end-line) 102 103 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) face org-block-end-line) 103 104 (fontified t face org-hide keymap (keymap) line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 104 105 (fontified t composition (1 1 [9675]) keymap (keymap) face org-level-2 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 105 106 (fontified t keymap (keymap) face org-level-2 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 106 110 (fontified t face org-level-2 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 110 111 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 111 118 (fontified t font-lock-fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-begin-line) 118 119 (fontified t font-lock-fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-begin-line) 119 120 (fontified t font-lock-fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-begin-line) 120 133 (fontified t font-lock-fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-begin-line) 133 134 (fontified t font-lock-fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-begin-line) 134 135 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 135 146 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block)) 146 147 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 147 151 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-constant-face org-block)) 151 152 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 152 154 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 154 157 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 157 192 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 192 194 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 194 197 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 197 243 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 243 245 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 245 247 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 247 252 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 252 255 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 255 264 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 264 288 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 288 291 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 291 296 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 296 298 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 298 300 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 300 307 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 307 308 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 308 317 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 317 341 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 341 344 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 344 350 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 350 352 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 352 354 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 354 361 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 361 362 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 362 371 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 371 395 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 395 398 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 398 420 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 420 422 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 422 424 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 424 431 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 431 432 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 432 441 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 441 458 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 458 460 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 460 462 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 462 469 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 469 470 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 470 479 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 479 493 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 493 495 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 495 497 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 497 504 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 504 505 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 505 514 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 514 531 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 531 533 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 533 535 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 535 542 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 542 543 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 543 552 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 552 574 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 574 576 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 576 578 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 578 585 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 585 586 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 586 595 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 595 616 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 616 618 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 618 620 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 620 627 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 627 628 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 628 637 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 637 653 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 653 655 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 655 657 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 657 664 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 664 665 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 665 674 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 674 688 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 688 690 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 690 692 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 692 699 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 699 700 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 700 709 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 709 723 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 723 725 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 725 727 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 727 734 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 734 735 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 735 744 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 744 759 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 759 761 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 761 763 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 763 770 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 770 771 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 771 781 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 781 794 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 794 796 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 796 798 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 798 805 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 805 806 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 806 815 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 815 828 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 828 830 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 830 832 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 832 839 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 839 840 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 840 849 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 849 862 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 862 864 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 864 866 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 866 873 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 873 874 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 874 883 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 883 897 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 897 899 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 899 901 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 901 908 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 908 909 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 909 918 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 918 936 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 936 938 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 938 943 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-builtin-face org-block)) 943 944 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 944 946 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 946 949 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 949 985 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 985 1014 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 1014 1025 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1025 1027 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1027 1030 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1030 1039 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1039 1058 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-constant-face font-lock-comment-face org-block)) 1058 1102 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1102 1104 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1104 1107 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1107 1183 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1183 1185 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1185 1188 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1188 1248 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1248 1310 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1310 1369 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1369 1435 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1435 1437 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1437 1439 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1439 1472 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1472 1485 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1485 1499 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1499 1501 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1501 1503 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1503 1504 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1504 1563 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1563 1565 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1565 1567 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1567 1608 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1608 1610 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1610 1619 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1619 1621 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1621 1623 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1623 1625 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1625 1627 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1627 1629 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1629 1631 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1631 1633 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1633 1635 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1635 1637 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1637 1639 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1639 1641 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1641 1643 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1643 1644 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1644 1645 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1645 1684 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1684 1686 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1686 1688 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1688 1748 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1748 1750 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1750 1752 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1752 1811 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1811 1813 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1813 1815 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1815 1828 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1828 1869 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1869 1870 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1870 1871 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1871 1872 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1872 1873 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1873 1874 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1874 1875 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1875 1876 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1876 1877 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1877 1878 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1878 1879 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1879 1880 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1880 1941 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1941 1943 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (org-block)) 1943 1945 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 1945 1948 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1948 1984 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 1984 2002 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-face org-block)) 2002 2003 (fontified t rear-nonsticky t font-lock-fontified t src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 2003 2004 (fontified t font-lock-fontified t src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 2004 2005 (fontified t font-lock-fontified t src-block t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 2005 2014 (fontified t font-lock-fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face org-block-end-line) 2014 2015 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) face org-block-end-line)) . 39123) (undo-tree-id5171 . -2014) (undo-tree-id5172 . -106) (undo-tree-id5173 . -106) (undo-tree-id5174 . -3) (undo-tree-id5175 . -111) (undo-tree-id5176 . -1941) (undo-tree-id5177 . -3) (undo-tree-id5178 . -3) (undo-tree-id5179 . -106) 39126 (t 26024 8021 824395 486000)) nil (26024 8032 457896 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 21849 . 21850) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -23864) (21849 . 23865) 21830) nil (26024 8038 489878 0) 0 nil])
([nil nil ((21852 . 21853) (t 26024 8032 524331 316000)) nil (26024 8044 425311 0) 0 nil] [nil nil ((21852 . 21854) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) keymap (keymap) face org-level-2)) . -21852) (undo-tree-id5182 . -1) (undo-tree-id5183 . -1) (21852 . 21853) (t 26024 8032 524331 316000)) ((#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) keymap (keymap) face org-level-2)) . 21852) (undo-tree-id5184 . -1) (undo-tree-id5185 . -1) (undo-tree-id5186 . 1) (undo-tree-id5187 . 1) (21852 . 21853) (#("()" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent))) 1 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 21852) (undo-tree-id5188 . 1) (undo-tree-id5189 . 2) (undo-tree-id5190 . -1) (undo-tree-id5191 . 1) (undo-tree-id5192 . -2)) (26024 8038 489078 0) 0 nil] [nil nil ((21851 . 21853) (t 26024 8032 524331 316000)) ((#("( " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . 21851) (undo-tree-id5180 . -1) (undo-tree-id5181 . -1)) (26024 8035 877615 0) 0 nil])
([nil nil ((21956 . 21957)) nil (26024 10124 845790 0) 0 nil])
nil
nil
([nil nil ((13298 . 13299) (t 26024 8044 490505 228000) 13239) nil (26024 10131 73729 0) 0 nil] [nil nil ((nil rear-nonsticky nil 13379 . 13380) (nil fontified nil 13300 . 13380) (nil fontified nil 13240 . 13300) (13240 . 13380) 13239 (t 26024 8044 490505 228000)) ((#("-(elpaca nil (global-set-key \"\\C-s\" 'swiper)) ;; Use swiper
-(elpaca nil (define-key evil-insert-state-map (kbd \" \") 'org-roam-node-insert))" 0 2 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 2 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8 29 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 29 35 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 35 46 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 46 49 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t) 49 60 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 60 62 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 62 68 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 68 112 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 112 115 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t) 115 139 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 139 140 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 13240) (undo-tree-id5193 . -139) (undo-tree-id5194 . -139) (undo-tree-id5195 . 1) (undo-tree-id5196 . -140) (undo-tree-id5197 . 79) (undo-tree-id5198 . -62) (undo-tree-id5199 . -139) (nil rear-nonsticky t 13379 . 13380)) (26024 10124 844624 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13438 . 13439) (nil fontified nil 13359 . 13439) (nil fontified nil 13299 . 13359) (13299 . 13439)) nil (26024 10131 73728 0) 0 nil])
nil
([nil nil ((#("-" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 13299)) nil (26024 10131 73727 0) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 13358)) nil (26024 10131 73726 0) 0 nil])
([nil nil ((13299 . 13301) (13358 . 13360) 12894) nil (26024 10181 45172 0) 0 nil])
([nil nil ((12894 . 12895) 12898 (t 26024 10131 143589 67000)) nil (26024 10185 539569 0) 0 nil] [nil nil ((12914 . 12915) (t 26024 10131 143589 67000) 12898) ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 12914) (undo-tree-id5200 . -1) (undo-tree-id5201 . -1)) (26024 10181 43968 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12896 . 12897) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -13037) (12894 . 13038)) nil (26024 10185 539568 0) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 12894)) nil (26024 10185 539567 0) 0 nil])
([nil nil ((#("  " 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1 2 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) rear-nonsticky t help-echo nil font-lock-multiline t face (org-block))) . 12894) (#("  " 0 2 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 12955) 12894) nil (26024 10185 539562 0) 0 nil])
([nil nil ((41410 . 41420) (#("O" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -41410) (undo-tree-id5202 . -1) (#("e" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) jinx--pending t face org-level-2)) . -41411) (undo-tree-id5203 . -1) 41412 (41410 . 41412) (41406 . 41410) (t 26024 10185 615777 320000)) nil (26024 10244 790088 0) 0 nil])
([nil nil ((41456 . 41467) (41445 . 41456) (41444 . 41446) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -41444) (41444 . 41445) (41443 . 41444) (41433 . 41443) (41421 . 41444) (#("<s" 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t)) . -41421) (undo-tree-id5204 . -2) 41423 (41421 . 41423) (41420 . 41421) (t 26024 10244 867144 981000) 41419) nil (26024 10254 408913 0) 0 nil])
([nil nil ((41510 . 41516) (#("-" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -41510) (undo-tree-id5205 . -1) (undo-tree-id5206 . -1) (undo-tree-id5207 . -1) (undo-tree-id5208 . -1) (undo-tree-id5209 . -1) (undo-tree-id5210 . -1) (undo-tree-id5211 . -1) (undo-tree-id5212 . -1) (undo-tree-id5213 . -1) (undo-tree-id5214 . -1) (undo-tree-id5215 . -1) (undo-tree-id5216 . -1) (undo-tree-id5217 . -1) (undo-tree-id5218 . -1) (undo-tree-id5219 . -1) (undo-tree-id5220 . -1) (undo-tree-id5221 . -1) (undo-tree-id5222 . -1) (undo-tree-id5223 . -1) (undo-tree-id5224 . -1) (undo-tree-id5225 . -1) (undo-tree-id5226 . -1) (undo-tree-id5227 . -1) (undo-tree-id5228 . -1) (undo-tree-id5229 . -1) (undo-tree-id5230 . -1) (undo-tree-id5231 . -1) (undo-tree-id5232 . -1) (undo-tree-id5233 . -1) (undo-tree-id5234 . -1) (undo-tree-id5235 . -1) (undo-tree-id5236 . -1) (undo-tree-id5237 . -1) (undo-tree-id5238 . -1) (undo-tree-id5239 . -1) (undo-tree-id5240 . -1) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) (undo-tree-id5250 . -1) (undo-tree-id5251 . -1) (undo-tree-id5252 . -1) (undo-tree-id5253 . -1) (undo-tree-id5254 . -1) (undo-tree-id5255 . -1) (undo-tree-id5256 . -1) (undo-tree-id5257 . -1) (undo-tree-id5258 . -1) (#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -41511) (undo-tree-id5259 . -1) (undo-tree-id5260 . -1) (undo-tree-id5261 . -1) (undo-tree-id5262 . -1) (undo-tree-id5263 . -1) (undo-tree-id5264 . -1) (undo-tree-id5265 . -1) (undo-tree-id5266 . -1) (undo-tree-id5267 . -1) (undo-tree-id5268 . -1) (undo-tree-id5269 . -1) (undo-tree-id5270 . -1) (undo-tree-id5271 . -1) (undo-tree-id5272 . -1) (undo-tree-id5273 . -1) (undo-tree-id5274 . -1) (undo-tree-id5275 . -1) 41512 (41494 . 41512) (41493 . 41495) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . -41493) (41492 . 41494) (41491 . 41492) (41490 . 41491) (41484 . 41490) (#("c" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block))) . -41484) (undo-tree-id5276 . -1) 41485 (41481 . 41485) (41480 . 41481) (41468 . 41480) (41467 . 41468) (t 26024 10254 486266 814000)) nil (26024 10708 100691 0) 0 nil])
([nil nil ((41133 . 41135)) nil (26024 10717 319139 0) 0 nil] [nil nil ((41201 . 41203) (41141 . 41143) (41076 . 41078) (41062 . 41064) (41020 . 41022) (40993 . 40995) 41191 (t 26024 10287 903477 33000)) ((#("# " 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 40993) (#("# " 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 41020) (#("# " 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 41062) (#("# " 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 41076) (#("# " 0 2 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 41141) (#("# " 0 2 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 41201) (undo-tree-id5277 . 2) (t 26024 10707 847809 202000)) (26024 10707 774293 0) 0 nil])
([nil nil ((41070 . 41072)) nil (26024 10717 319138 0) 0 nil])
nil
([nil nil ((41058 . 41061)) nil (26024 10717 319138 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 41060) (undo-tree-id5278 . -1) (undo-tree-id5279 . -1) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) (undo-tree-id5287 . -1) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) (undo-tree-id5295 . -1) (undo-tree-id5296 . -1) (undo-tree-id5297 . -1) (undo-tree-id5298 . -1) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1)) nil (26024 10717 319136 0) 0 nil])
([nil nil ((41018 . 41020)) nil (26024 10717 319110 0) 0 nil])
([nil nil ((40993 . 40995)) nil (26024 10717 319106 0) 0 nil])
([nil nil ((#("." 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28155) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (t 26024 10717 393078 151000)) nil (26024 10825 691729 0) 0 nil])
([nil nil ((#("1" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 28155) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1)) nil (26024 10825 691725 0) 0 nil])
([nil nil ((28155 . 28156)) nil (26024 10825 691715 0) 0 nil])
([nil nil ((#("'ivy" 0 4 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6765) (undo-tree-id5323 . -3) (t 26024 10825 757772 337000)) nil (26024 11165 241683 0) 0 nil])
([nil nil ((6766 . 6773) (#("c" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . -6766) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) 6767 (6765 . 6767)) nil (26024 11165 241679 0) 0 nil])
([nil nil ((6716 . 6732) (#(":" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -6716) (undo-tree-id5324 . -1) 6717 (6716 . 6717) (6716 . 6717) 6718 (t 26024 11165 318008 820000)) nil (26024 11251 289261 0) 0 nil])
([nil nil ((#("    (setq projectile-completion-system 'vertico)
" 0 5 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 5 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 9 49 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("          " 0 6 (face org-indent) 6 10 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6743) (undo-tree-id5325 . -48) (undo-tree-id5326 . -20) (undo-tree-id5327 . -3) (undo-tree-id5328 . -4) (undo-tree-id5329 . -4) (undo-tree-id5330 . -4) (undo-tree-id5331 . -4) (undo-tree-id5332 . -4) (undo-tree-id5333 . -4) (undo-tree-id5334 . -4) (undo-tree-id5335 . -4) (undo-tree-id5336 . -4) (undo-tree-id5337 . -4) (undo-tree-id5338 . -4) (undo-tree-id5339 . -4) (undo-tree-id5340 . -4) (undo-tree-id5341 . -4) (undo-tree-id5342 . -4) (undo-tree-id5343 . -4) (undo-tree-id5344 . -4) (undo-tree-id5345 . -4) (undo-tree-id5346 . -4) (undo-tree-id5347 . -4) (undo-tree-id5348 . -4) (undo-tree-id5349 . -4) (undo-tree-id5350 . -4) (undo-tree-id5351 . -4) (undo-tree-id5352 . -4) (undo-tree-id5353 . -4) (undo-tree-id5354 . -4) (undo-tree-id5355 . -4) (undo-tree-id5356 . -4) (undo-tree-id5357 . -4) (undo-tree-id5358 . -4) (undo-tree-id5359 . -4) (undo-tree-id5360 . -4) (undo-tree-id5361 . -4) (undo-tree-id5362 . -4) (undo-tree-id5363 . -4) (undo-tree-id5364 . -4) (undo-tree-id5365 . -4) (undo-tree-id5366 . -4) (undo-tree-id5367 . -4) (undo-tree-id5368 . -4) (undo-tree-id5369 . -3) (undo-tree-id5370 . -3) (undo-tree-id5371 . -3) (undo-tree-id5372 . -3) (undo-tree-id5373 . -3) (undo-tree-id5374 . -3) (undo-tree-id5375 . -3) (undo-tree-id5376 . -3) (undo-tree-id5377 . -3) (undo-tree-id5378 . -3) (undo-tree-id5379 . -3) (undo-tree-id5380 . -3) (undo-tree-id5381 . -3) (undo-tree-id5382 . -3) (undo-tree-id5383 . -3) (undo-tree-id5384 . -3) (undo-tree-id5385 . -3) (undo-tree-id5386 . -3) (undo-tree-id5387 . -3) (undo-tree-id5388 . -3) (undo-tree-id5389 . -3) (undo-tree-id5390 . -3) (undo-tree-id5391 . -3) (undo-tree-id5392 . -3) (undo-tree-id5393 . -3) (undo-tree-id5394 . -3) (undo-tree-id5395 . -3) (undo-tree-id5396 . -3) (undo-tree-id5397 . -3) (undo-tree-id5398 . -3) (undo-tree-id5399 . -3) (undo-tree-id5400 . -3) (undo-tree-id5401 . -3) (undo-tree-id5402 . -3) (undo-tree-id5403 . -3) (undo-tree-id5404 . -3) (undo-tree-id5405 . -3) (undo-tree-id5406 . -3) (undo-tree-id5407 . -3) (undo-tree-id5408 . -3) (undo-tree-id5409 . -3) (undo-tree-id5410 . -3) (undo-tree-id5411 . -3) (undo-tree-id5412 . -3) (undo-tree-id5413 . -3) (undo-tree-id5414 . -49) 6746 (t 26024 11251 355248 446000)) nil (26024 11275 546712 0) 0 nil])
([nil nil ((#("  :after vertico
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 8 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 8 16 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 16 17 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 6716) (undo-tree-id5415 . 1) (undo-tree-id5416 . -16) (undo-tree-id5417 . -3) (undo-tree-id5418 . -3) (undo-tree-id5419 . -3) (undo-tree-id5420 . -3) (undo-tree-id5421 . -3) (undo-tree-id5422 . -3) (undo-tree-id5423 . -3) (undo-tree-id5424 . -3) (undo-tree-id5425 . -3) (undo-tree-id5426 . -3) (undo-tree-id5427 . -3) (undo-tree-id5428 . -3) (undo-tree-id5429 . -3) (undo-tree-id5430 . -3) (undo-tree-id5431 . -3) (undo-tree-id5432 . -3) (undo-tree-id5433 . -3) (undo-tree-id5434 . -3) (undo-tree-id5435 . -3) (undo-tree-id5436 . -3) (undo-tree-id5437 . -3) (undo-tree-id5438 . -3) (undo-tree-id5439 . -3) (undo-tree-id5440 . -3) (undo-tree-id5441 . -3) (undo-tree-id5442 . -3) (undo-tree-id5443 . -3) (undo-tree-id5444 . -3) (undo-tree-id5445 . -3) (undo-tree-id5446 . -3) (undo-tree-id5447 . -3) (undo-tree-id5448 . -3) (undo-tree-id5449 . -3) (undo-tree-id5450 . -3) (undo-tree-id5451 . -3) (undo-tree-id5452 . -3) (undo-tree-id5453 . -3) (undo-tree-id5454 . -3) (undo-tree-id5455 . -3) (undo-tree-id5456 . -17) 6719 (t 26024 11275 611745 599000)) nil (26024 11311 646413 0) 0 nil])
([nil nil ((28447 . 28450) (28427 . 28447) (28426 . 28428) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -28426) (28426 . 28427) (28425 . 28426) (28424 . 28425) (t 26024 11311 711963 331000) 28398) nil (26024 11741 80946 0) 0 nil])
([nil nil ((#("(use-package company-lsp)
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 24 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 24 25 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25 26 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28426) (undo-tree-id5459 . 2) (undo-tree-id5460 . -25) (undo-tree-id5461 . -26) (undo-tree-id5462 . -26) (undo-tree-id5463 . -26) (undo-tree-id5464 . -26) (undo-tree-id5465 . -26) (undo-tree-id5466 . -26) (undo-tree-id5467 . -26) (undo-tree-id5468 . -26) (undo-tree-id5469 . -26) (undo-tree-id5470 . -26) (undo-tree-id5471 . -26) (undo-tree-id5472 . -26) (undo-tree-id5473 . -26) (undo-tree-id5474 . -26) (undo-tree-id5475 . -26) (undo-tree-id5476 . -26) (undo-tree-id5477 . -26) (undo-tree-id5478 . -26) (undo-tree-id5479 . -26) (undo-tree-id5480 . -26) (undo-tree-id5481 . -26) (undo-tree-id5482 . -26) (undo-tree-id5483 . -26) (undo-tree-id5484 . -26) (undo-tree-id5485 . -26) (undo-tree-id5486 . -26) (undo-tree-id5487 . -26) (undo-tree-id5488 . -26) (undo-tree-id5489 . -26) (undo-tree-id5490 . -26) (undo-tree-id5491 . -26) (undo-tree-id5492 . -26) (undo-tree-id5493 . -26) (undo-tree-id5494 . -26) (undo-tree-id5495 . -26) (undo-tree-id5496 . -26) (undo-tree-id5497 . -26) (undo-tree-id5498 . -26) (undo-tree-id5499 . -26) (undo-tree-id5500 . -26) (undo-tree-id5501 . -26) (undo-tree-id5502 . -26) (undo-tree-id5503 . -26) (undo-tree-id5504 . -26) (undo-tree-id5505 . -26) (undo-tree-id5506 . -26) (undo-tree-id5507 . -26) (undo-tree-id5508 . -26) (undo-tree-id5509 . -26) (undo-tree-id5510 . -26) (undo-tree-id5511 . -26) (undo-tree-id5512 . -26) (undo-tree-id5513 . -26) (undo-tree-id5514 . -26) (undo-tree-id5515 . -26) (undo-tree-id5516 . -26) (undo-tree-id5517 . -26) (undo-tree-id5518 . -26) (undo-tree-id5519 . -23) (undo-tree-id5520 . -25) (undo-tree-id5521 . -24) (undo-tree-id5522 . -24) (undo-tree-id5523 . -24) (undo-tree-id5524 . -24) (undo-tree-id5525 . -24) (undo-tree-id5526 . -24) (undo-tree-id5527 . -24) (undo-tree-id5528 . -24) (undo-tree-id5529 . -24) (undo-tree-id5530 . -24) (undo-tree-id5531 . -24) (undo-tree-id5532 . -24) (undo-tree-id5533 . -24) (undo-tree-id5534 . -24) (undo-tree-id5535 . -24) (undo-tree-id5536 . -24) (undo-tree-id5537 . -24) (undo-tree-id5538 . -24) (undo-tree-id5539 . -24) (undo-tree-id5540 . -24) (undo-tree-id5541 . -24) (undo-tree-id5542 . -24) (undo-tree-id5543 . -24) (undo-tree-id5544 . -24) (undo-tree-id5545 . -24) (undo-tree-id5546 . -24) (undo-tree-id5547 . -24) (undo-tree-id5548 . -24) (undo-tree-id5549 . -24) (undo-tree-id5550 . -24) (undo-tree-id5551 . -24) (undo-tree-id5552 . -24) (undo-tree-id5553 . -24) (undo-tree-id5554 . -24) (undo-tree-id5555 . -24) (undo-tree-id5556 . -24) (undo-tree-id5557 . -24) (undo-tree-id5558 . -24) (undo-tree-id5559 . -24) (undo-tree-id5560 . -24) (undo-tree-id5561 . -24) (undo-tree-id5562 . -24) (undo-tree-id5563 . -24) (undo-tree-id5564 . -24) (undo-tree-id5565 . -24) (undo-tree-id5566 . -24) (undo-tree-id5567 . -24) (undo-tree-id5568 . -24) (undo-tree-id5569 . -24) (undo-tree-id5570 . -24) (undo-tree-id5571 . -24) (undo-tree-id5572 . -24) (undo-tree-id5573 . -24) (undo-tree-id5574 . -24) (undo-tree-id5575 . -24) (undo-tree-id5576 . -24) (undo-tree-id5577 . -24) (undo-tree-id5578 . -24) (undo-tree-id5579 . -24) (undo-tree-id5580 . -24) (undo-tree-id5581 . -24) (undo-tree-id5582 . -24) (undo-tree-id5583 . -24) (undo-tree-id5584 . -24) (undo-tree-id5585 . -24) (undo-tree-id5586 . -24) (undo-tree-id5587 . -24) (undo-tree-id5588 . -24) (undo-tree-id5589 . -24) (undo-tree-id5590 . -24) (undo-tree-id5591 . -24) (undo-tree-id5592 . -24) (undo-tree-id5593 . -24) (undo-tree-id5594 . -24) (undo-tree-id5595 . -24) (undo-tree-id5596 . -24) (undo-tree-id5597 . -24) (undo-tree-id5598 . -24) (undo-tree-id5599 . -23) (undo-tree-id5600 . -23) (undo-tree-id5601 . -23) (undo-tree-id5602 . -23) (undo-tree-id5603 . -23) (undo-tree-id5604 . -23) (undo-tree-id5605 . -23) (undo-tree-id5606 . -23) (undo-tree-id5607 . -23) (undo-tree-id5608 . -23) (undo-tree-id5609 . -23) (undo-tree-id5610 . -23) (undo-tree-id5611 . -23) (undo-tree-id5612 . -23) (undo-tree-id5613 . -23) (undo-tree-id5614 . -23) (undo-tree-id5615 . -23) (undo-tree-id5616 . -23) (undo-tree-id5617 . -23) (undo-tree-id5618 . -23) (undo-tree-id5619 . -23) (undo-tree-id5620 . -23) (undo-tree-id5621 . -23) (undo-tree-id5622 . -23) (undo-tree-id5623 . -23) (undo-tree-id5624 . -23) (undo-tree-id5625 . -23) (undo-tree-id5626 . -23) (undo-tree-id5627 . -23) (undo-tree-id5628 . -23) (undo-tree-id5629 . -23) (undo-tree-id5630 . -23) (undo-tree-id5631 . -23) (undo-tree-id5632 . -23) (undo-tree-id5633 . -23) (undo-tree-id5634 . -23) (undo-tree-id5635 . -23) (undo-tree-id5636 . -23) (undo-tree-id5637 . -23) (undo-tree-id5638 . -23) (undo-tree-id5639 . -26) 28449) nil (26024 11741 80941 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28426) (undo-tree-id5457 . 1) (undo-tree-id5458 . -1)) nil (26024 11741 80778 0) 0 nil])
([nil nil ((28450 . 28455) (28447 . 28450) (28427 . 28447) (28426 . 28428) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -28426) (28426 . 28427) (28425 . 28426) (28425 . 28426) (t 26024 11741 148816 867000)) nil (26024 11815 348036 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 28456 . 28457) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -28487) (28456 . 28488) 28454) nil (26024 11815 348035 0) 0 nil])
([nil nil ((#("org" 0 3 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil)) . 28478) (undo-tree-id5644 . -2) (undo-tree-id5645 . -3)) nil (26024 11815 348034 0) 0 nil])
([nil nil ((#("-" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block))) . 28478) (undo-tree-id5643 . -1)) nil (26024 11815 348031 0) 0 nil])
([nil nil ((28478 . 28488) (#("roam" 0 4 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block))) . 28478) (undo-tree-id5640 . -3) (undo-tree-id5641 . -4) (undo-tree-id5642 . -4)) nil (26024 11815 348027 0) 0 nil])
([nil nil ((#("s" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . 28487) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (t 26024 11815 416121 424000)) nil (26024 11815 978399 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 28760 . 28761) (nil fontified nil 28717 . 28761) (nil fontified nil 28643 . 28717) (nil fontified nil 28611 . 28643) (nil fontified nil 28542 . 28611) (nil fontified nil 28532 . 28542) (nil fontified nil 28520 . 28532) (nil fontified nil 28489 . 28520) (28489 . 28761) (t 26024 11816 45677 196000)) nil (26024 11888 783348 0) 0 nil])
([nil nil ((28489 . 28490) 28518) nil (26024 11888 783343 0) 0 nil])
([nil nil ((#("(use-package company-org-roam)
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 29 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 29 30 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30 31 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28426) (undo-tree-id5648 . -30) (undo-tree-id5649 . -29) (undo-tree-id5650 . -29) (undo-tree-id5651 . -28) (undo-tree-id5652 . -31) (undo-tree-id5653 . -31) (undo-tree-id5654 . -31) (undo-tree-id5655 . -31) (undo-tree-id5656 . -31) (undo-tree-id5657 . -31) (undo-tree-id5658 . -31) (undo-tree-id5659 . 31) (undo-tree-id5660 . -1) (undo-tree-id5661 . 2) (undo-tree-id5662 . -30) (undo-tree-id5663 . -31) (undo-tree-id5664 . -31) (undo-tree-id5665 . -31) (undo-tree-id5666 . -31) (undo-tree-id5667 . -31) (undo-tree-id5668 . -31) (undo-tree-id5669 . -31) (undo-tree-id5670 . -31) (undo-tree-id5671 . -31) (undo-tree-id5672 . -31) (undo-tree-id5673 . -31) (undo-tree-id5674 . -31) (undo-tree-id5675 . -31) (undo-tree-id5676 . -31) (undo-tree-id5677 . -31) (undo-tree-id5678 . -31) (undo-tree-id5679 . -31) (undo-tree-id5680 . -31) (undo-tree-id5681 . -31) (undo-tree-id5682 . -31) (undo-tree-id5683 . -31) (undo-tree-id5684 . -31) (undo-tree-id5685 . -31) (undo-tree-id5686 . -31) (undo-tree-id5687 . -31) (undo-tree-id5688 . -31) (undo-tree-id5689 . -31) (undo-tree-id5690 . -31) (undo-tree-id5691 . -31) (undo-tree-id5692 . -31) (undo-tree-id5693 . -31) (undo-tree-id5694 . -31) (undo-tree-id5695 . -31) (undo-tree-id5696 . -31) (undo-tree-id5697 . -31) (undo-tree-id5698 . -31) (undo-tree-id5699 . -31) (undo-tree-id5700 . -31) (undo-tree-id5701 . -31) (undo-tree-id5702 . -31) (undo-tree-id5703 . -31) (undo-tree-id5704 . -31) (undo-tree-id5705 . -31) (undo-tree-id5706 . -31) (undo-tree-id5707 . -31) (undo-tree-id5708 . -31) (undo-tree-id5709 . -31) (undo-tree-id5710 . -31) (undo-tree-id5711 . -31) (undo-tree-id5712 . -31) (undo-tree-id5713 . -31) (undo-tree-id5714 . -31) (undo-tree-id5715 . -31) (undo-tree-id5716 . -31) (t 26024 11888 856450 982000)) nil (26024 11955 406867 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28458) (undo-tree-id5717 . 1) (undo-tree-id5718 . -1) (t 26024 11955 479415 772000)) nil (26024 11956 166553 0) 0 nil])
([nil nil ((#("(use-package company-yasnippet)
" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1 12 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 13 30 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 30 31 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 31 32 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28426) (undo-tree-id5719 . -31) (undo-tree-id5720 . -32) (undo-tree-id5721 . -32) (undo-tree-id5722 . 32) (undo-tree-id5723 . -1) (undo-tree-id5724 . 2) (undo-tree-id5725 . -31) (undo-tree-id5726 . -32) (undo-tree-id5727 . -32) (undo-tree-id5728 . -32) (undo-tree-id5729 . -32) (undo-tree-id5730 . -32) (undo-tree-id5731 . -32) (undo-tree-id5732 . -32) (undo-tree-id5733 . -32) (undo-tree-id5734 . -32) (undo-tree-id5735 . -32) (undo-tree-id5736 . -32) (undo-tree-id5737 . -32) (undo-tree-id5738 . -32) (undo-tree-id5739 . -32) (undo-tree-id5740 . -32) (undo-tree-id5741 . -32) (undo-tree-id5742 . -32) (t 26024 11956 233900 72000)) nil (26024 12228 750628 0) 0 nil])
([nil nil ((28037 . 28038) (28028 . 28037) (28028 . 28029) 28030 (t 26024 11957 315698 371000)) nil (26024 12235 507388 0) 0 nil] [nil nil ((28396 . 28397) (t 26024 11957 315698 371000) 28363) ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t)) . 28396) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1)) (26024 12228 750071 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 28320 . 28321) (nil fontified nil 28296 . 28321) (nil fontified nil 28258 . 28296) (nil fontified nil 28236 . 28258) (nil fontified nil 28214 . 28236) (nil fontified nil 28189 . 28214) (nil fontified nil 28168 . 28189) (nil fontified nil 28144 . 28168) (nil fontified nil 28122 . 28144) (nil fontified nil 28061 . 28122) (nil fontified nil 28038 . 28061) (28038 . 28321)) nil (26024 12235 507387 0) 0 nil])
nil
([nil nil ((28063 . 28071) (#("	" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("              " 0 6 (face org-indent) 6 14 (face org-indent)))) . -28063) (undo-tree-id5745 . -1) (28038 . 28040) (28061 . 28062) (#("      " 0 6 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("            " 0 6 (face org-indent) 6 12 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 28061) (28122 . 28123) (28130 . 28131) (28144 . 28146) (28176 . 28178) (28189 . 28190) (28197 . 28198) (28214 . 28216) (28244 . 28246) (28258 . 28259) (28266 . 28267) (28296 . 28298) 27984) nil (26024 12235 507383 0) 0 nil])
([nil nil ((29088 . 29093) (t 26024 12235 574462 478000)) nil (26024 12520 824930 0) 0 nil])
([nil nil ((#("(use-package company-org-block
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 30 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 30 31 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28740) (undo-tree-id5890 . -30) (undo-tree-id5891 . -31) (undo-tree-id5892 . -21) (undo-tree-id5893 . -31) 28761 (t 26024 12520 900207 520000)) nil (26024 12646 63503 0) 0 nil])
([nil nil ((#("  :ensure t
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 12 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 28740) (undo-tree-id5883 . -11) (undo-tree-id5884 . -10) (undo-tree-id5885 . -10) (undo-tree-id5886 . -10) (undo-tree-id5887 . -10) (undo-tree-id5888 . -10) (undo-tree-id5889 . -12) 28750) nil (26024 12646 63499 0) 0 nil])
([nil nil ((#("  :custom
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 9 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 10 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 28740) (undo-tree-id5863 . -9) (undo-tree-id5864 . -8) (undo-tree-id5865 . -8) (undo-tree-id5866 . -8) (undo-tree-id5867 . -8) (undo-tree-id5868 . -8) (undo-tree-id5869 . -8) (undo-tree-id5870 . -8) (undo-tree-id5871 . -8) (undo-tree-id5872 . -8) (undo-tree-id5873 . -8) (undo-tree-id5874 . -8) (undo-tree-id5875 . -8) (undo-tree-id5876 . -8) (undo-tree-id5877 . -8) (undo-tree-id5878 . -8) (undo-tree-id5879 . -8) (undo-tree-id5880 . -8) (undo-tree-id5881 . -8) (undo-tree-id5882 . -10) 28748) nil (26024 12646 63492 0) 0 nil])
([nil nil ((#("  (company-org-block-edit-style 'auto) ;; 'auto, 'prompt, or 'inline
" 0 10 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 10 39 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 39 42 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 42 69 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . 28740) (undo-tree-id5850 . -68) (undo-tree-id5851 . -8) (undo-tree-id5852 . -8) (undo-tree-id5853 . -8) (undo-tree-id5854 . -8) (undo-tree-id5855 . -8) (undo-tree-id5856 . -8) (undo-tree-id5857 . -8) (undo-tree-id5858 . -8) (undo-tree-id5859 . -8) (undo-tree-id5860 . -8) (undo-tree-id5861 . -8) (undo-tree-id5862 . -69) 28748) nil (26024 12646 63474 0) 0 nil])
([nil nil ((#("  :hook ((org-mode . (lambda ()
" 0 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 7 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 7 22 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 22 28 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-keyword-face org-block)) 28 32 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 28740) (undo-tree-id5837 . -31) (undo-tree-id5838 . -8) (undo-tree-id5839 . -8) (undo-tree-id5840 . -8) (undo-tree-id5841 . -8) (undo-tree-id5842 . -8) (undo-tree-id5843 . -8) (undo-tree-id5844 . -8) (undo-tree-id5845 . -8) (undo-tree-id5846 . -8) (undo-tree-id5847 . -8) (undo-tree-id5848 . -8) (undo-tree-id5849 . -32) 28748) nil (26024 12646 63463 0) 0 nil])
([nil nil ((#("                       (setq-local company-backends '(company-org-block))
" 0 24 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 24 34 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-keyword-face org-block)) 34 74 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 28740) (undo-tree-id5824 . -73) (undo-tree-id5825 . -8) (undo-tree-id5826 . -8) (undo-tree-id5827 . -8) (undo-tree-id5828 . -8) (undo-tree-id5829 . -8) (undo-tree-id5830 . -8) (undo-tree-id5831 . -8) (undo-tree-id5832 . -8) (undo-tree-id5833 . -8) (undo-tree-id5834 . -8) (undo-tree-id5835 . -8) (undo-tree-id5836 . -74) 28748) nil (26024 12646 63450 0) 0 nil])
([nil nil ((#("                       (company-mode +1)))))
" 0 43 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 43 44 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 44 45 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("                             " 0 6 (face org-indent) 6 29 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 28740) (undo-tree-id5746 . -44) (undo-tree-id5747 . -45) (undo-tree-id5748 . -45) (undo-tree-id5749 . -45) (undo-tree-id5750 . -45) (undo-tree-id5751 . -45) (undo-tree-id5752 . -45) (undo-tree-id5753 . -45) (undo-tree-id5754 . -45) (undo-tree-id5755 . -45) (undo-tree-id5756 . -45) (undo-tree-id5757 . -45) (undo-tree-id5758 . -45) (undo-tree-id5759 . -45) (undo-tree-id5760 . -45) (undo-tree-id5761 . -45) (undo-tree-id5762 . -45) (undo-tree-id5763 . -45) (undo-tree-id5764 . -45) (undo-tree-id5765 . -45) (undo-tree-id5766 . -45) (undo-tree-id5767 . -45) (undo-tree-id5768 . -45) (undo-tree-id5769 . -45) (undo-tree-id5770 . -45) (undo-tree-id5771 . -45) (undo-tree-id5772 . -45) (undo-tree-id5773 . -45) (undo-tree-id5774 . -45) (undo-tree-id5775 . -45) (undo-tree-id5776 . -45) (undo-tree-id5777 . -45) (undo-tree-id5778 . -45) (undo-tree-id5779 . -45) (undo-tree-id5780 . -45) (undo-tree-id5781 . -45) (undo-tree-id5782 . -45) (undo-tree-id5783 . -45) (undo-tree-id5784 . -45) (undo-tree-id5785 . -45) (undo-tree-id5786 . -45) (undo-tree-id5787 . -45) (undo-tree-id5788 . -45) (undo-tree-id5789 . -45) (undo-tree-id5790 . -45) (undo-tree-id5791 . -45) (undo-tree-id5792 . -45) (undo-tree-id5793 . -45) (undo-tree-id5794 . -45) (undo-tree-id5795 . -45) (undo-tree-id5796 . -45) (undo-tree-id5797 . -45) (undo-tree-id5798 . -45) (undo-tree-id5799 . -45) (undo-tree-id5800 . -45) (undo-tree-id5801 . -45) (undo-tree-id5802 . -45) (undo-tree-id5803 . -45) (undo-tree-id5804 . -45) (undo-tree-id5805 . -8) (undo-tree-id5806 . -8) (undo-tree-id5807 . -8) (undo-tree-id5808 . -8) (undo-tree-id5809 . -8) (undo-tree-id5810 . -8) (undo-tree-id5811 . -8) (undo-tree-id5812 . -8) (undo-tree-id5813 . -8) (undo-tree-id5814 . -8) (undo-tree-id5815 . -8) (undo-tree-id5816 . -8) (undo-tree-id5817 . -8) (undo-tree-id5818 . -8) (undo-tree-id5819 . -8) (undo-tree-id5820 . -8) (undo-tree-id5821 . -8) (undo-tree-id5822 . -8) (undo-tree-id5823 . -45) 28748) nil (26024 12646 63435 0) 0 nil])
([nil nil ((#(";; " 0 3 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 28563) 27984 (t 26024 12646 132142 958000)) nil (26024 12856 963695 0) 0 nil])
([nil nil ((#("  ;; Auto complete with C-SPC
  (evil-define-key 'insert dired-mode-map (kbd \"C-SPC\") 'company-complete-common)
" 0 1 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 5 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 5 29 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 29 30 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 30 31 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 31 32 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 32 33 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 33 48 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 48 77 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 77 84 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 84 112 (line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 28531) (undo-tree-id5895 . 1) (undo-tree-id5896 . -111) (undo-tree-id5897 . -58) (undo-tree-id5898 . -28) (undo-tree-id5899 . -58) (undo-tree-id5900 . -28) (undo-tree-id5901 . -58) (undo-tree-id5902 . -28) (undo-tree-id5903 . -58) 28589 (t 26024 12857 37233 321000)) nil (26024 12874 93012 0) 0 nil])
([nil nil ((13392 . 13393) 13344) nil (26024 12874 93003 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13395 . 13396) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)))) . -13505) (13393 . 13506)) nil (26024 12874 93002 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 13393) (undo-tree-id5894 . -1)) nil (26024 12874 92999 0) 0 nil])
([nil nil ((#("i" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block))) . -13422) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) 13423 (13422 . 13423) (t 26024 12874 159863 939000)) nil (26024 12883 497573 0) 0 nil])
([nil nil ((#("define" 0 6 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block))) . 13431) (undo-tree-id6045 . -5) (undo-tree-id6046 . -6) (undo-tree-id6047 . -6) (undo-tree-id6048 . -6) (undo-tree-id6049 . -6) (undo-tree-id6050 . -6) (undo-tree-id6051 . -6) (undo-tree-id6052 . -6) (undo-tree-id6053 . -6) (undo-tree-id6054 . -6) (undo-tree-id6055 . -6) (undo-tree-id6056 . -6) (undo-tree-id6057 . -6) (undo-tree-id6058 . -6) (undo-tree-id6059 . -6) (undo-tree-id6060 . -6) (undo-tree-id6061 . -6) (undo-tree-id6062 . -6) (undo-tree-id6063 . -6) (undo-tree-id6064 . -6) (undo-tree-id6065 . -6) (undo-tree-id6066 . -6) (undo-tree-id6067 . -6) (undo-tree-id6068 . -6) (undo-tree-id6069 . -6) (undo-tree-id6070 . -6) (undo-tree-id6071 . -6) (undo-tree-id6072 . -6) (undo-tree-id6073 . -6) (undo-tree-id6074 . -6) (undo-tree-id6075 . -6) (undo-tree-id6076 . -6) (undo-tree-id6077 . -6) (undo-tree-id6078 . -6) (undo-tree-id6079 . -6) (undo-tree-id6080 . -6) (undo-tree-id6081 . -6) (undo-tree-id6082 . -6) (undo-tree-id6083 . -6) (undo-tree-id6084 . -6) (undo-tree-id6085 . -6) (undo-tree-id6086 . -6) (undo-tree-id6087 . -6) (undo-tree-id6088 . -6) (undo-tree-id6089 . -6) (undo-tree-id6090 . -6) (undo-tree-id6091 . -6) (undo-tree-id6092 . -6) (undo-tree-id6093 . -6) (undo-tree-id6094 . -6) (undo-tree-id6095 . -6) (undo-tree-id6096 . -6) (undo-tree-id6097 . -6) (undo-tree-id6098 . -6) (undo-tree-id6099 . -6) (undo-tree-id6100 . -6) (undo-tree-id6101 . -6) (undo-tree-id6102 . -6) (undo-tree-id6103 . -6) (undo-tree-id6104 . -6) (undo-tree-id6105 . -6) (undo-tree-id6106 . -6) (undo-tree-id6107 . -6) (undo-tree-id6108 . -6) (undo-tree-id6109 . -6) (undo-tree-id6110 . -6) (undo-tree-id6111 . -6) (undo-tree-id6112 . -6) (undo-tree-id6113 . -6) (undo-tree-id6114 . -6) (undo-tree-id6115 . -6) (undo-tree-id6116 . -6) (undo-tree-id6117 . -6) (undo-tree-id6118 . -6) (undo-tree-id6119 . -6) (undo-tree-id6120 . -6) (undo-tree-id6121 . -6) (undo-tree-id6122 . -6) (undo-tree-id6123 . -6) (undo-tree-id6124 . -6) (undo-tree-id6125 . -6) (undo-tree-id6126 . -6) (undo-tree-id6127 . -6) (undo-tree-id6128 . -6) (undo-tree-id6129 . -6) (undo-tree-id6130 . -6) (undo-tree-id6131 . -6) (undo-tree-id6132 . -6) (undo-tree-id6133 . -6) (undo-tree-id6134 . -6) (undo-tree-id6135 . -6) (undo-tree-id6136 . -6) (undo-tree-id6137 . -6) (undo-tree-id6138 . -6) (undo-tree-id6139 . -6) (undo-tree-id6140 . -6) (undo-tree-id6141 . -6) (undo-tree-id6142 . -6) (undo-tree-id6143 . -6) (undo-tree-id6144 . -6) (undo-tree-id6145 . -6) (undo-tree-id6146 . -6) (undo-tree-id6147 . -6) (undo-tree-id6148 . -6) (undo-tree-id6149 . -6) (undo-tree-id6150 . -6) (undo-tree-id6151 . -6) (undo-tree-id6152 . -6) (undo-tree-id6153 . -6) (undo-tree-id6154 . -6) (undo-tree-id6155 . -6) (undo-tree-id6156 . -6) (undo-tree-id6157 . -6) (undo-tree-id6158 . -6) (undo-tree-id6159 . -6) (undo-tree-id6160 . -6) (undo-tree-id6161 . -6) (undo-tree-id6162 . -6) (undo-tree-id6163 . -6) (undo-tree-id6164 . -6) (undo-tree-id6165 . -6) (undo-tree-id6166 . -6) (undo-tree-id6167 . -6) (undo-tree-id6168 . -6) (undo-tree-id6169 . -6) (undo-tree-id6170 . -6) (undo-tree-id6171 . -6) (undo-tree-id6172 . -6) (undo-tree-id6173 . -6) (undo-tree-id6174 . -6) (undo-tree-id6175 . -6) (undo-tree-id6176 . -6) (undo-tree-id6177 . -6) (undo-tree-id6178 . -6) (undo-tree-id6179 . -6) (undo-tree-id6180 . -6) (undo-tree-id6181 . -6) (undo-tree-id6182 . -6) (undo-tree-id6183 . -6) (undo-tree-id6184 . -6) (undo-tree-id6185 . -6) (undo-tree-id6186 . -6) (undo-tree-id6187 . -6) (undo-tree-id6188 . -6) (undo-tree-id6189 . -6) (undo-tree-id6190 . -6) (undo-tree-id6191 . -6) (undo-tree-id6192 . -6) (undo-tree-id6193 . -6) (undo-tree-id6194 . -6) (undo-tree-id6195 . -6) (undo-tree-id6196 . -6) (undo-tree-id6197 . -6) (undo-tree-id6198 . -6) (undo-tree-id6199 . -6) (undo-tree-id6200 . -6) (undo-tree-id6201 . -6) (undo-tree-id6202 . -6) (undo-tree-id6203 . -6) (undo-tree-id6204 . -6) (undo-tree-id6205 . -6) (undo-tree-id6206 . -6) (undo-tree-id6207 . -6) (undo-tree-id6208 . -6) (undo-tree-id6209 . -6) (undo-tree-id6210 . -6) (undo-tree-id6211 . -6) (undo-tree-id6212 . -6) (undo-tree-id6213 . -6) (undo-tree-id6214 . -6) (undo-tree-id6215 . -6) (undo-tree-id6216 . -6) (undo-tree-id6217 . -6) (undo-tree-id6218 . -6) (undo-tree-id6219 . -6) (undo-tree-id6220 . -6) (undo-tree-id6221 . -6) (undo-tree-id6222 . -6) (undo-tree-id6223 . -6) (undo-tree-id6224 . -6) (undo-tree-id6225 . -6) (undo-tree-id6226 . -6) (undo-tree-id6227 . -6) (undo-tree-id6228 . -6) (undo-tree-id6229 . -6) (undo-tree-id6230 . -6) (undo-tree-id6231 . -6) (undo-tree-id6232 . -6) (undo-tree-id6233 . -6) (undo-tree-id6234 . -6) (undo-tree-id6235 . -6) (undo-tree-id6236 . -6) (undo-tree-id6237 . -6) (undo-tree-id6238 . -6) (undo-tree-id6239 . -6) (undo-tree-id6240 . -6) (undo-tree-id6241 . -6) (undo-tree-id6242 . -6) (undo-tree-id6243 . -6) (undo-tree-id6244 . -6) (undo-tree-id6245 . -6) (undo-tree-id6246 . -6) (undo-tree-id6247 . -6) (undo-tree-id6248 . -6) (undo-tree-id6249 . -6) (undo-tree-id6250 . -6) (undo-tree-id6251 . -6) (undo-tree-id6252 . -6) (undo-tree-id6253 . -6) (undo-tree-id6254 . -6) (undo-tree-id6255 . -6) (undo-tree-id6256 . -6) (undo-tree-id6257 . -6) (undo-tree-id6258 . -6) (undo-tree-id6259 . -6) (undo-tree-id6260 . -6) (undo-tree-id6261 . -6) (undo-tree-id6262 . -6) (undo-tree-id6263 . -6) (undo-tree-id6264 . -6) (undo-tree-id6265 . -6) (undo-tree-id6266 . -6) (undo-tree-id6267 . -6) (undo-tree-id6268 . -6) (undo-tree-id6269 . -6) (undo-tree-id6270 . -6) (undo-tree-id6271 . -6) (undo-tree-id6272 . -6) (undo-tree-id6273 . -6) (undo-tree-id6274 . -6) (undo-tree-id6275 . -6) (undo-tree-id6276 . -6) (undo-tree-id6277 . -6) (undo-tree-id6278 . -6) (undo-tree-id6279 . -6) (undo-tree-id6280 . -6) (undo-tree-id6281 . -6) (undo-tree-id6282 . -6) (undo-tree-id6283 . -6) (undo-tree-id6284 . -6) (undo-tree-id6285 . -6) (undo-tree-id6286 . -6) (undo-tree-id6287 . -6) (undo-tree-id6288 . -6) (undo-tree-id6289 . -6) (undo-tree-id6290 . -6) (undo-tree-id6291 . -6) (undo-tree-id6292 . -6) (undo-tree-id6293 . -6) (undo-tree-id6294 . -6) (undo-tree-id6295 . -6) (undo-tree-id6296 . -6) (undo-tree-id6297 . -6) (undo-tree-id6298 . -6) (undo-tree-id6299 . -6) (undo-tree-id6300 . -6) (undo-tree-id6301 . -6) (undo-tree-id6302 . -6) (undo-tree-id6303 . -6) (undo-tree-id6304 . -6) (undo-tree-id6305 . -6) (undo-tree-id6306 . -6) (undo-tree-id6307 . -6) (undo-tree-id6308 . -6) (undo-tree-id6309 . -6) (undo-tree-id6310 . -6) (undo-tree-id6311 . -6) (undo-tree-id6312 . -6) (undo-tree-id6313 . -6) (undo-tree-id6314 . -6) (undo-tree-id6315 . -6) (undo-tree-id6316 . -6) (undo-tree-id6317 . -6) (undo-tree-id6318 . -6) (undo-tree-id6319 . -6) (undo-tree-id6320 . -6) (undo-tree-id6321 . -6) (undo-tree-id6322 . -6) (undo-tree-id6323 . -6) (undo-tree-id6324 . -6) (undo-tree-id6325 . -6) (undo-tree-id6326 . -6) (undo-tree-id6327 . -6) (undo-tree-id6328 . -6) (undo-tree-id6329 . -6) (undo-tree-id6330 . -6) (undo-tree-id6331 . -6) (undo-tree-id6332 . -6) (undo-tree-id6333 . -6) (undo-tree-id6334 . -6) (undo-tree-id6335 . -6) (undo-tree-id6336 . -6) (undo-tree-id6337 . -6) (undo-tree-id6338 . -6) (undo-tree-id6339 . -6) (undo-tree-id6340 . -6) (undo-tree-id6341 . -6) (undo-tree-id6342 . -6) (undo-tree-id6343 . -6) (undo-tree-id6344 . -6) (undo-tree-id6345 . -6) (undo-tree-id6346 . -6) (undo-tree-id6347 . -6) (undo-tree-id6348 . -6) (undo-tree-id6349 . -6) (undo-tree-id6350 . -6) (undo-tree-id6351 . -6) (undo-tree-id6352 . -6) (undo-tree-id6353 . -6) (undo-tree-id6354 . -6) (undo-tree-id6355 . -6) (undo-tree-id6356 . -6) (undo-tree-id6357 . -6) (undo-tree-id6358 . -6) (undo-tree-id6359 . -6) (undo-tree-id6360 . -6) (undo-tree-id6361 . -6) (undo-tree-id6362 . -6) (undo-tree-id6363 . -6) (undo-tree-id6364 . -6) (undo-tree-id6365 . -6) (undo-tree-id6366 . -6) (undo-tree-id6367 . -6) (undo-tree-id6368 . -6) (undo-tree-id6369 . -6) (undo-tree-id6370 . -6) (undo-tree-id6371 . -6) (undo-tree-id6372 . -6) (undo-tree-id6373 . -6) (undo-tree-id6374 . -6) (undo-tree-id6375 . -6) (undo-tree-id6376 . -6) (undo-tree-id6377 . -6) (undo-tree-id6378 . -6) (undo-tree-id6379 . -6) (undo-tree-id6380 . -6) (undo-tree-id6381 . -6) (undo-tree-id6382 . -6) (undo-tree-id6383 . -6) (undo-tree-id6384 . -6) (undo-tree-id6385 . -6) (undo-tree-id6386 . -6) (undo-tree-id6387 . -6) (undo-tree-id6388 . -6) (undo-tree-id6389 . -6) (undo-tree-id6390 . -6) (undo-tree-id6391 . -6) (undo-tree-id6392 . -6) (undo-tree-id6393 . -6) (undo-tree-id6394 . -6) (undo-tree-id6395 . -6) (undo-tree-id6396 . -6) (undo-tree-id6397 . -6) (undo-tree-id6398 . -6) (undo-tree-id6399 . -6) (undo-tree-id6400 . -6) (undo-tree-id6401 . -6) (undo-tree-id6402 . -6) (undo-tree-id6403 . -6) (undo-tree-id6404 . -6) (undo-tree-id6405 . -6) (undo-tree-id6406 . -6) (undo-tree-id6407 . -6) (undo-tree-id6408 . -6) (undo-tree-id6409 . -6) (undo-tree-id6410 . -6) (undo-tree-id6411 . -6) (undo-tree-id6412 . -6) (undo-tree-id6413 . -6) (undo-tree-id6414 . -6) (undo-tree-id6415 . -6) (undo-tree-id6416 . -6) (undo-tree-id6417 . -6) (undo-tree-id6418 . -6) (undo-tree-id6419 . -6) (undo-tree-id6420 . -6) (undo-tree-id6421 . -6) (undo-tree-id6422 . -6) (undo-tree-id6423 . -6) (undo-tree-id6424 . -6) (undo-tree-id6425 . -6) (undo-tree-id6426 . -6) (undo-tree-id6427 . -6) (undo-tree-id6428 . -6) (undo-tree-id6429 . -6) (undo-tree-id6430 . -6) (undo-tree-id6431 . -6) (undo-tree-id6432 . -6) (undo-tree-id6433 . -6) (undo-tree-id6434 . -6) (undo-tree-id6435 . -6) (undo-tree-id6436 . -6) (undo-tree-id6437 . -6) (undo-tree-id6438 . -6) (undo-tree-id6439 . -6) (undo-tree-id6440 . -6) (undo-tree-id6441 . -6) (undo-tree-id6442 . -6) (undo-tree-id6443 . -6) (undo-tree-id6444 . -6) (undo-tree-id6445 . -6) (undo-tree-id6446 . -6) (undo-tree-id6447 . -6) (undo-tree-id6448 . -6) (undo-tree-id6449 . -6) (undo-tree-id6450 . -6) (undo-tree-id6451 . -6) (undo-tree-id6452 . -6) (undo-tree-id6453 . -6) (undo-tree-id6454 . -6) (undo-tree-id6455 . -6) (undo-tree-id6456 . -6) (undo-tree-id6457 . -6) (undo-tree-id6458 . -6) (undo-tree-id6459 . -6) (undo-tree-id6460 . -6) (undo-tree-id6461 . -6) (undo-tree-id6462 . -6) (undo-tree-id6463 . -6) (undo-tree-id6464 . -6) (undo-tree-id6465 . -6) (undo-tree-id6466 . -6) (undo-tree-id6467 . -6) (undo-tree-id6468 . -6) (undo-tree-id6469 . -6) (undo-tree-id6470 . -6) (undo-tree-id6471 . -6) (undo-tree-id6472 . -6) (undo-tree-id6473 . -6) (undo-tree-id6474 . -6) (undo-tree-id6475 . -6) (undo-tree-id6476 . -6) (undo-tree-id6477 . -6) (undo-tree-id6478 . -6) (undo-tree-id6479 . -6) (undo-tree-id6480 . -6) (undo-tree-id6481 . -6) (t 26024 12883 567751 491000)) nil (26024 12929 639629 0) 0 nil])
([nil nil ((13431 . 13441) (#("f" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . -13431) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) 13432 (13431 . 13432)) nil (26024 12929 639243 0) 0 nil])
([nil nil ((#("d" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (t 26024 12929 715508 820000)) nil (26024 12938 799719 0) 0 nil])
([nil nil ((#("i" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6508 . -1) (undo-tree-id6509 . -1)) nil (26024 12938 799715 0) 0 nil])
([nil nil ((#("r" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1)) nil (26024 12938 799713 0) 0 nil])
([nil nil ((#("e" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6504 . -1) (undo-tree-id6505 . -1)) nil (26024 12938 799710 0) 0 nil])
([nil nil ((#("d" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1)) nil (26024 12938 799708 0) 0 nil])
([nil nil ((#("-" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6500 . -1) (undo-tree-id6501 . -1)) nil (26024 12938 799705 0) 0 nil])
([nil nil ((#("m" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6498 . -1) (undo-tree-id6499 . -1)) nil (26024 12938 799703 0) 0 nil])
([nil nil ((#("o" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6496 . -1) (undo-tree-id6497 . -1)) nil (26024 12938 799701 0) 0 nil])
([nil nil ((#("d" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6494 . -1) (undo-tree-id6495 . -1)) nil (26024 12938 799699 0) 0 nil])
([nil nil ((#("e" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6492 . -1) (undo-tree-id6493 . -1)) nil (26024 12938 799696 0) 0 nil])
([nil nil ((#("-" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6490 . -1) (undo-tree-id6491 . -1)) nil (26024 12938 799693 0) 0 nil])
([nil nil ((#("m" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6488 . -1) (undo-tree-id6489 . -1)) nil (26024 12938 799691 0) 0 nil])
([nil nil ((#("a" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6486 . -1) (undo-tree-id6487 . -1)) nil (26024 12938 799689 0) 0 nil])
([nil nil ((#("p" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6484 . -1) (undo-tree-id6485 . -1)) nil (26024 12938 799686 0) 0 nil])
([nil nil ((#(" " 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 13454) (undo-tree-id6482 . -1) (undo-tree-id6483 . -1)) nil (26024 12938 799682 0) 0 nil])
([nil nil ((13423 . 13436) (#("auto" 0 4 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -13423) (undo-tree-id7561 . -4) (undo-tree-id7562 . -4) (undo-tree-id7563 . -1) (undo-tree-id7564 . -1) (undo-tree-id7565 . -1) (undo-tree-id7566 . -1) (undo-tree-id7567 . -1) (undo-tree-id7568 . -1) (undo-tree-id7569 . -1) (undo-tree-id7570 . -1) (undo-tree-id7571 . -1) (undo-tree-id7572 . -1) (undo-tree-id7573 . -1) (undo-tree-id7574 . -1) (undo-tree-id7575 . -1) (undo-tree-id7576 . -1) (undo-tree-id7577 . -1) (undo-tree-id7578 . -2) (undo-tree-id7579 . -2) (undo-tree-id7580 . -2) (undo-tree-id7581 . -2) (undo-tree-id7582 . -2) (undo-tree-id7583 . -2) (undo-tree-id7584 . -2) (undo-tree-id7585 . -2) (undo-tree-id7586 . -2) (undo-tree-id7587 . -2) (undo-tree-id7588 . -2) (undo-tree-id7589 . -2) (undo-tree-id7590 . -2) (undo-tree-id7591 . -2) (undo-tree-id7592 . -2) (undo-tree-id7593 . -2) (undo-tree-id7594 . -2) (undo-tree-id7595 . -2) (undo-tree-id7596 . -2) (undo-tree-id7597 . -2) (undo-tree-id7598 . -2) (undo-tree-id7599 . -2) (undo-tree-id7600 . -2) (undo-tree-id7601 . -2) (undo-tree-id7602 . -2) (undo-tree-id7603 . -2) (undo-tree-id7604 . -2) (undo-tree-id7605 . -2) (undo-tree-id7606 . -2) (undo-tree-id7607 . -2) (undo-tree-id7608 . -2) (undo-tree-id7609 . -2) (undo-tree-id7610 . -2) (undo-tree-id7611 . -2) (undo-tree-id7612 . -2) (undo-tree-id7613 . -2) (undo-tree-id7614 . -2) (undo-tree-id7615 . -2) (undo-tree-id7616 . -2) (undo-tree-id7617 . -2) (undo-tree-id7618 . -2) (undo-tree-id7619 . -2) (undo-tree-id7620 . -2) (undo-tree-id7621 . -2) (undo-tree-id7622 . -2) (undo-tree-id7623 . -2) (undo-tree-id7624 . -2) (undo-tree-id7625 . -2) (undo-tree-id7626 . -2) (undo-tree-id7627 . -2) (undo-tree-id7628 . -2) (undo-tree-id7629 . -2) (undo-tree-id7630 . -2) (undo-tree-id7631 . -2) (undo-tree-id7632 . -2) (undo-tree-id7633 . -2) (undo-tree-id7634 . -2) (undo-tree-id7635 . -2) (undo-tree-id7636 . -2) (undo-tree-id7637 . -2) (undo-tree-id7638 . -2) (undo-tree-id7639 . -2) (undo-tree-id7640 . -2) (undo-tree-id7641 . -2) (undo-tree-id7642 . -2) (undo-tree-id7643 . -2) (undo-tree-id7644 . -2) (undo-tree-id7645 . -2) (undo-tree-id7646 . -2) (undo-tree-id7647 . -2) (undo-tree-id7648 . -2) (undo-tree-id7649 . -2) (undo-tree-id7650 . -2) (undo-tree-id7651 . -2) (undo-tree-id7652 . -2) (undo-tree-id7653 . -2) (undo-tree-id7654 . -2) (undo-tree-id7655 . -2) (undo-tree-id7656 . -2) (undo-tree-id7657 . -2) (undo-tree-id7658 . -2) (undo-tree-id7659 . -2) (undo-tree-id7660 . -2) (undo-tree-id7661 . -2) (undo-tree-id7662 . -2) (undo-tree-id7663 . -2) (undo-tree-id7664 . -2) (undo-tree-id7665 . -2) (undo-tree-id7666 . -2) (undo-tree-id7667 . -2) (undo-tree-id7668 . -2) (undo-tree-id7669 . -2) (undo-tree-id7670 . -2) (undo-tree-id7671 . -2) (undo-tree-id7672 . -2) (undo-tree-id7673 . -2) (undo-tree-id7674 . -2) (undo-tree-id7675 . -2) (undo-tree-id7676 . -2) (undo-tree-id7677 . -2) (undo-tree-id7678 . -2) (undo-tree-id7679 . -2) (undo-tree-id7680 . -2) (undo-tree-id7681 . -2) (undo-tree-id7682 . -2) (undo-tree-id7683 . -2) (undo-tree-id7684 . -2) (undo-tree-id7685 . -2) (undo-tree-id7686 . -2) (undo-tree-id7687 . -2) (undo-tree-id7688 . -3) (undo-tree-id7689 . -3) (undo-tree-id7690 . -3) (undo-tree-id7691 . -3) (undo-tree-id7692 . -3) (undo-tree-id7693 . -3) (undo-tree-id7694 . -3) (undo-tree-id7695 . -3) (undo-tree-id7696 . -3) (undo-tree-id7697 . -3) (undo-tree-id7698 . -3) (undo-tree-id7699 . -3) (undo-tree-id7700 . -3) (undo-tree-id7701 . -3) (undo-tree-id7702 . -3) (undo-tree-id7703 . -3) (undo-tree-id7704 . -4) (undo-tree-id7705 . -4) (undo-tree-id7706 . -4) (undo-tree-id7707 . -4) (undo-tree-id7708 . -4) (undo-tree-id7709 . -4) (undo-tree-id7710 . -4) (undo-tree-id7711 . -4) (undo-tree-id7712 . -4) (undo-tree-id7713 . -4) (undo-tree-id7714 . -4) (undo-tree-id7715 . -4) (undo-tree-id7716 . -4) (undo-tree-id7717 . -4) (undo-tree-id7718 . -4) (undo-tree-id7719 . -4) (undo-tree-id7720 . -4) (undo-tree-id7721 . -4) (undo-tree-id7722 . -4) (undo-tree-id7723 . -4) (undo-tree-id7724 . -4) (undo-tree-id7725 . -4) (undo-tree-id7726 . -4) (undo-tree-id7727 . -4) (undo-tree-id7728 . -4) (undo-tree-id7729 . -4) (undo-tree-id7730 . -4) (undo-tree-id7731 . -4) (undo-tree-id7732 . -4) (undo-tree-id7733 . -4) (undo-tree-id7734 . -4) (undo-tree-id7735 . -4) (undo-tree-id7736 . -4) (undo-tree-id7737 . -4) (undo-tree-id7738 . -4) (undo-tree-id7739 . -4) (undo-tree-id7740 . -4) (undo-tree-id7741 . -4) (undo-tree-id7742 . -4) (undo-tree-id7743 . -4) 13427 (13425 . 13427) (13422 . 13425) (#("a" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -13422) (undo-tree-id7744 . -1) (undo-tree-id7745 . -1) (undo-tree-id7746 . -1) (undo-tree-id7747 . -1) (undo-tree-id7748 . -1) (undo-tree-id7749 . -1) (undo-tree-id7750 . -1) (undo-tree-id7751 . -1) (undo-tree-id7752 . -1) (undo-tree-id7753 . -1) (undo-tree-id7754 . -1) (undo-tree-id7755 . -1) (undo-tree-id7756 . -1) (undo-tree-id7757 . -1) (undo-tree-id7758 . -1) (undo-tree-id7759 . -1) (undo-tree-id7760 . -1) (undo-tree-id7761 . -1) (undo-tree-id7762 . -1) (undo-tree-id7763 . -1) (undo-tree-id7764 . -1) (undo-tree-id7765 . -1) (undo-tree-id7766 . -1) (undo-tree-id7767 . -1) (undo-tree-id7768 . -1) (undo-tree-id7769 . -1) (undo-tree-id7770 . -1) (undo-tree-id7771 . -1) (undo-tree-id7772 . -1) (undo-tree-id7773 . -1) (undo-tree-id7774 . -1) (undo-tree-id7775 . -1) (undo-tree-id7776 . -1) (undo-tree-id7777 . -1) (undo-tree-id7778 . -1) (undo-tree-id7779 . -1) (undo-tree-id7780 . -1) (undo-tree-id7781 . -1) (undo-tree-id7782 . -1) (undo-tree-id7783 . -1) (undo-tree-id7784 . -1) (undo-tree-id7785 . -1) (undo-tree-id7786 . -1) (undo-tree-id7787 . -1) (undo-tree-id7788 . -1) (undo-tree-id7789 . -1) (undo-tree-id7790 . -1) (undo-tree-id7791 . -1) (undo-tree-id7792 . -1) (undo-tree-id7793 . -1) (undo-tree-id7794 . -1) (undo-tree-id7795 . -1) (undo-tree-id7796 . -1) (undo-tree-id7797 . -1) (undo-tree-id7798 . -1) (undo-tree-id7799 . -1) (undo-tree-id7800 . -1) (undo-tree-id7801 . -1) (undo-tree-id7802 . -1) (undo-tree-id7803 . -1) (undo-tree-id7804 . -1) (undo-tree-id7805 . -1) (undo-tree-id7806 . -1) (undo-tree-id7807 . -1) (undo-tree-id7808 . -1) (undo-tree-id7809 . -1) (undo-tree-id7810 . -1) (undo-tree-id7811 . -1) (undo-tree-id7812 . -1) (undo-tree-id7813 . -1) (undo-tree-id7814 . -1) (undo-tree-id7815 . -1) (undo-tree-id7816 . -1) (undo-tree-id7817 . -1) (undo-tree-id7818 . -1) (undo-tree-id7819 . -1) (undo-tree-id7820 . -1) (undo-tree-id7821 . -1) (undo-tree-id7822 . -1) (undo-tree-id7823 . -1) (undo-tree-id7824 . -1) (undo-tree-id7825 . -1) (undo-tree-id7826 . -1) (undo-tree-id7827 . -1) (undo-tree-id7828 . -1) (undo-tree-id7829 . -1) (undo-tree-id7830 . -1) (undo-tree-id7831 . -1) (undo-tree-id7832 . -1) (undo-tree-id7833 . -1) (undo-tree-id7834 . -1) (undo-tree-id7835 . -1) (#("s" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -13423) (undo-tree-id7836 . -1) (undo-tree-id7837 . -1) (undo-tree-id7838 . -1) (undo-tree-id7839 . -1) (undo-tree-id7840 . -1) (undo-tree-id7841 . -1) (undo-tree-id7842 . -1) (undo-tree-id7843 . -1) (undo-tree-id7844 . -1) (undo-tree-id7845 . -1) (undo-tree-id7846 . -1) (undo-tree-id7847 . -1) (undo-tree-id7848 . -1) (undo-tree-id7849 . -1) (undo-tree-id7850 . -1) (undo-tree-id7851 . -1) (undo-tree-id7852 . -1) (undo-tree-id7853 . -1) (undo-tree-id7854 . -1) (undo-tree-id7855 . -1) (undo-tree-id7856 . -1) (undo-tree-id7857 . -1) (undo-tree-id7858 . -1) (undo-tree-id7859 . -1) (undo-tree-id7860 . -1) (undo-tree-id7861 . -1) (undo-tree-id7862 . -1) (undo-tree-id7863 . -1) (undo-tree-id7864 . -1) (undo-tree-id7865 . -1) (undo-tree-id7866 . -1) (undo-tree-id7867 . -1) (undo-tree-id7868 . -1) (undo-tree-id7869 . -1) (undo-tree-id7870 . -1) (undo-tree-id7871 . -1) (undo-tree-id7872 . -1) (undo-tree-id7873 . -1) (undo-tree-id7874 . -1) (undo-tree-id7875 . -1) (undo-tree-id7876 . -1) (undo-tree-id7877 . -1) (undo-tree-id7878 . -1) (undo-tree-id7879 . -1) (undo-tree-id7880 . -1) (undo-tree-id7881 . -1) (undo-tree-id7882 . -1) (undo-tree-id7883 . -1) (undo-tree-id7884 . -1) (undo-tree-id7885 . -1) (undo-tree-id7886 . -1) (undo-tree-id7887 . -1) (undo-tree-id7888 . -1) (undo-tree-id7889 . -1) (undo-tree-id7890 . -1) (undo-tree-id7891 . -1) (undo-tree-id7892 . -1) (undo-tree-id7893 . -1) (undo-tree-id7894 . -1) (undo-tree-id7895 . -1) (undo-tree-id7896 . -1) (undo-tree-id7897 . -1) (undo-tree-id7898 . -1) (undo-tree-id7899 . -1) (undo-tree-id7900 . -1) (undo-tree-id7901 . -1) (undo-tree-id7902 . -1) (undo-tree-id7903 . -1) (undo-tree-id7904 . -1) (#("d" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -13424) (undo-tree-id7905 . -1) (undo-tree-id7906 . -1) (undo-tree-id7907 . -1) (undo-tree-id7908 . -1) (undo-tree-id7909 . -1) (undo-tree-id7910 . -1) (undo-tree-id7911 . -1) (undo-tree-id7912 . -1) (undo-tree-id7913 . -1) (undo-tree-id7914 . -1) (undo-tree-id7915 . -1) (undo-tree-id7916 . -1) (undo-tree-id7917 . -1) (undo-tree-id7918 . -1) (undo-tree-id7919 . -1) (undo-tree-id7920 . -1) (undo-tree-id7921 . -1) (undo-tree-id7922 . -1) (undo-tree-id7923 . -1) (undo-tree-id7924 . -1) (undo-tree-id7925 . -1) (undo-tree-id7926 . -1) (undo-tree-id7927 . -1) (undo-tree-id7928 . -1) (undo-tree-id7929 . -1) (undo-tree-id7930 . -1) (undo-tree-id7931 . -1) (undo-tree-id7932 . -1) (undo-tree-id7933 . -1) (undo-tree-id7934 . -1) (undo-tree-id7935 . -1) (undo-tree-id7936 . -1) (undo-tree-id7937 . -1) (undo-tree-id7938 . -1) (undo-tree-id7939 . -1) (undo-tree-id7940 . -1) (undo-tree-id7941 . -1) (undo-tree-id7942 . -1) (undo-tree-id7943 . -1) (undo-tree-id7944 . -1) (undo-tree-id7945 . -1) (undo-tree-id7946 . -1) (undo-tree-id7947 . -1) (undo-tree-id7948 . -1) (undo-tree-id7949 . -1) (undo-tree-id7950 . -1) (#("f" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -13425) (undo-tree-id7951 . -1) (undo-tree-id7952 . -1) (undo-tree-id7953 . -1) (undo-tree-id7954 . -1) (undo-tree-id7955 . -1) (undo-tree-id7956 . -1) (undo-tree-id7957 . -1) (undo-tree-id7958 . -1) (undo-tree-id7959 . -1) (undo-tree-id7960 . -1) (undo-tree-id7961 . -1) (undo-tree-id7962 . -1) (undo-tree-id7963 . -1) (undo-tree-id7964 . -1) (undo-tree-id7965 . -1) (undo-tree-id7966 . -1) (undo-tree-id7967 . -1) (undo-tree-id7968 . -1) (undo-tree-id7969 . -1) (undo-tree-id7970 . -1) (undo-tree-id7971 . -1) (undo-tree-id7972 . -1) (undo-tree-id7973 . -1) (undo-tree-id7974 . -1) (undo-tree-id7975 . -1) (undo-tree-id7976 . -1) (undo-tree-id7977 . -1) (undo-tree-id7978 . -1) (undo-tree-id7979 . -1) (undo-tree-id7980 . -1) (undo-tree-id7981 . -1) (undo-tree-id7982 . -1) (undo-tree-id7983 . -1) (undo-tree-id7984 . -1) (undo-tree-id7985 . -1) (undo-tree-id7986 . -1) (undo-tree-id7987 . -1) (undo-tree-id7988 . -1) 13426 (13422 . 13426) (t 26024 12938 876688 442000)) nil (26024 12957 629243 0) 0 nil])
([nil nil ((#("auto_resample" 0 13 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t)) . 13423) (undo-tree-id7475 . -12) (undo-tree-id7476 . -13) (undo-tree-id7477 . -13) (undo-tree-id7478 . -13) (undo-tree-id7479 . -13) (undo-tree-id7480 . -13) (undo-tree-id7481 . -13) (undo-tree-id7482 . -13) (undo-tree-id7483 . -13) (undo-tree-id7484 . -13) (undo-tree-id7485 . -13) (undo-tree-id7486 . -13) (undo-tree-id7487 . -13) (undo-tree-id7488 . -13) (undo-tree-id7489 . -13) (undo-tree-id7490 . -13) (undo-tree-id7491 . -13) (undo-tree-id7492 . -13) (undo-tree-id7493 . -13) (undo-tree-id7494 . -13) (undo-tree-id7495 . -13) (undo-tree-id7496 . -13) (undo-tree-id7497 . -13) (undo-tree-id7498 . -13) (undo-tree-id7499 . -13) (undo-tree-id7500 . -13) (undo-tree-id7501 . -13) (undo-tree-id7502 . -13) (undo-tree-id7503 . -13) (undo-tree-id7504 . -13) (undo-tree-id7505 . -13) (undo-tree-id7506 . -13) (undo-tree-id7507 . -13) (undo-tree-id7508 . -12) (undo-tree-id7509 . -12) (undo-tree-id7510 . -12) (undo-tree-id7511 . -12) (undo-tree-id7512 . -12) (undo-tree-id7513 . -12) (undo-tree-id7514 . -12) (undo-tree-id7515 . -12) (undo-tree-id7516 . -12) (undo-tree-id7517 . -5) (undo-tree-id7518 . -5) (undo-tree-id7519 . -5) (undo-tree-id7520 . -5) (undo-tree-id7521 . -5) (undo-tree-id7522 . -5) (undo-tree-id7523 . -5) (undo-tree-id7524 . -5) (undo-tree-id7525 . -5) (undo-tree-id7526 . -5) (undo-tree-id7527 . -5) (undo-tree-id7528 . -5) (undo-tree-id7529 . -5) (undo-tree-id7530 . -5) (undo-tree-id7531 . -5) (undo-tree-id7532 . -5) (undo-tree-id7533 . -5) (undo-tree-id7534 . -5) (undo-tree-id7535 . -5) (undo-tree-id7536 . -5) (undo-tree-id7537 . -5) (undo-tree-id7538 . -4) (undo-tree-id7539 . -4) (undo-tree-id7540 . -4) (undo-tree-id7541 . -4) (undo-tree-id7542 . -4) (undo-tree-id7543 . -4) (undo-tree-id7544 . -4) (undo-tree-id7545 . -4) (undo-tree-id7546 . -4) (undo-tree-id7547 . -4) (undo-tree-id7548 . -4) (undo-tree-id7549 . -4) (undo-tree-id7550 . -4) (undo-tree-id7551 . -4) (undo-tree-id7552 . -4) (undo-tree-id7553 . -4) (undo-tree-id7554 . -4) (undo-tree-id7555 . -4) (undo-tree-id7556 . -4) (undo-tree-id7557 . -4) (undo-tree-id7558 . -4) (undo-tree-id7559 . -13) (undo-tree-id7560 . -13)) nil (26024 12957 628908 0) 0 nil])
([nil nil ((13423 . 13427)) nil (26024 12957 628842 0) 0 nil])
([nil nil ((#("auto" 0 4 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block))) . 13423) (undo-tree-id7141 . -3) (undo-tree-id7142 . -4) (undo-tree-id7143 . -4) (undo-tree-id7144 . -4) (undo-tree-id7145 . -4) (undo-tree-id7146 . -4) (undo-tree-id7147 . -4) (undo-tree-id7148 . -4) (undo-tree-id7149 . -4) (undo-tree-id7150 . -4) (undo-tree-id7151 . -4) (undo-tree-id7152 . -4) (undo-tree-id7153 . -4) (undo-tree-id7154 . -4) (undo-tree-id7155 . -4) (undo-tree-id7156 . -4) (undo-tree-id7157 . -4) (undo-tree-id7158 . -4) (undo-tree-id7159 . -4) (undo-tree-id7160 . -4) (undo-tree-id7161 . -4) (undo-tree-id7162 . -4) (undo-tree-id7163 . -4) (undo-tree-id7164 . -4) (undo-tree-id7165 . -4) (undo-tree-id7166 . -4) (undo-tree-id7167 . -4) (undo-tree-id7168 . -4) (undo-tree-id7169 . -4) (undo-tree-id7170 . -4) (undo-tree-id7171 . -4) (undo-tree-id7172 . -4) (undo-tree-id7173 . -4) (undo-tree-id7174 . -4) (undo-tree-id7175 . -4) (undo-tree-id7176 . -4) (undo-tree-id7177 . -4) (undo-tree-id7178 . -4) (undo-tree-id7179 . -4) (undo-tree-id7180 . -4) (undo-tree-id7181 . -4) (undo-tree-id7182 . -4) (undo-tree-id7183 . -4) (undo-tree-id7184 . -4) (undo-tree-id7185 . -4) (undo-tree-id7186 . -4) (undo-tree-id7187 . -4) (undo-tree-id7188 . -4) (undo-tree-id7189 . -4) (undo-tree-id7190 . -4) (undo-tree-id7191 . -4) (undo-tree-id7192 . -4) (undo-tree-id7193 . -4) (undo-tree-id7194 . -4) (undo-tree-id7195 . -4) (undo-tree-id7196 . -4) (undo-tree-id7197 . -4) (undo-tree-id7198 . -4) (undo-tree-id7199 . -4) (undo-tree-id7200 . -4) (undo-tree-id7201 . -4) (undo-tree-id7202 . -4) (undo-tree-id7203 . -4) (undo-tree-id7204 . -4) (undo-tree-id7205 . -4) (undo-tree-id7206 . -4) (undo-tree-id7207 . -4) (undo-tree-id7208 . -4) (undo-tree-id7209 . -4) (undo-tree-id7210 . -4) (undo-tree-id7211 . -4) (undo-tree-id7212 . -4) (undo-tree-id7213 . -4) (undo-tree-id7214 . -4) (undo-tree-id7215 . -4) (undo-tree-id7216 . -4) (undo-tree-id7217 . -4) (undo-tree-id7218 . -4) (undo-tree-id7219 . -4) (undo-tree-id7220 . -4) (undo-tree-id7221 . -4) (undo-tree-id7222 . -4) (undo-tree-id7223 . -4) (undo-tree-id7224 . -4) (undo-tree-id7225 . -4) (undo-tree-id7226 . -4) (undo-tree-id7227 . -4) (undo-tree-id7228 . -4) (undo-tree-id7229 . -4) (undo-tree-id7230 . -4) (undo-tree-id7231 . -4) (undo-tree-id7232 . -4) (undo-tree-id7233 . -4) (undo-tree-id7234 . -4) (undo-tree-id7235 . -4) (undo-tree-id7236 . -4) (undo-tree-id7237 . -4) (undo-tree-id7238 . -4) (undo-tree-id7239 . -4) (undo-tree-id7240 . -4) (undo-tree-id7241 . -4) (undo-tree-id7242 . -4) (undo-tree-id7243 . -4) (undo-tree-id7244 . -4) (undo-tree-id7245 . -4) (undo-tree-id7246 . -4) (undo-tree-id7247 . -4) (undo-tree-id7248 . -4) (undo-tree-id7249 . -4) (undo-tree-id7250 . -4) (undo-tree-id7251 . -4) (undo-tree-id7252 . -4) (undo-tree-id7253 . -4) (undo-tree-id7254 . -4) (undo-tree-id7255 . -4) (undo-tree-id7256 . -4) (undo-tree-id7257 . -4) (undo-tree-id7258 . -4) (undo-tree-id7259 . -4) (undo-tree-id7260 . -4) (undo-tree-id7261 . -4) (undo-tree-id7262 . -4) (undo-tree-id7263 . -4) (undo-tree-id7264 . -4) (undo-tree-id7265 . -4) (undo-tree-id7266 . -4) (undo-tree-id7267 . -4) (undo-tree-id7268 . -4) (undo-tree-id7269 . -4) (undo-tree-id7270 . -4) (undo-tree-id7271 . -4) (undo-tree-id7272 . -4) (undo-tree-id7273 . -4) (undo-tree-id7274 . -4) (undo-tree-id7275 . -4) (undo-tree-id7276 . -4) (undo-tree-id7277 . -4) (undo-tree-id7278 . -4) (undo-tree-id7279 . -4) (undo-tree-id7280 . -4) (undo-tree-id7281 . -4) (undo-tree-id7282 . -4) (undo-tree-id7283 . -4) (undo-tree-id7284 . -4) (undo-tree-id7285 . -4) (undo-tree-id7286 . -4) (undo-tree-id7287 . -4) (undo-tree-id7288 . -4) (undo-tree-id7289 . -4) (undo-tree-id7290 . -4) (undo-tree-id7291 . -4) (undo-tree-id7292 . -4) (undo-tree-id7293 . -4) (undo-tree-id7294 . -4) (undo-tree-id7295 . -4) (undo-tree-id7296 . -4) (undo-tree-id7297 . -4) (undo-tree-id7298 . -4) (undo-tree-id7299 . -4) (undo-tree-id7300 . -4) (undo-tree-id7301 . -4) (undo-tree-id7302 . -4) (undo-tree-id7303 . -4) (undo-tree-id7304 . -4) (undo-tree-id7305 . -4) (undo-tree-id7306 . -4) (undo-tree-id7307 . -4) (undo-tree-id7308 . -4) (undo-tree-id7309 . -4) (undo-tree-id7310 . -4) (undo-tree-id7311 . -4) (undo-tree-id7312 . -4) (undo-tree-id7313 . -4) (undo-tree-id7314 . -4) (undo-tree-id7315 . -4) (undo-tree-id7316 . -4) (undo-tree-id7317 . -4) (undo-tree-id7318 . -4) (undo-tree-id7319 . -4) (undo-tree-id7320 . -4) (undo-tree-id7321 . -4) (undo-tree-id7322 . -4) (undo-tree-id7323 . -4) (undo-tree-id7324 . -4) (undo-tree-id7325 . -4) (undo-tree-id7326 . -4) (undo-tree-id7327 . -4) (undo-tree-id7328 . -4) (undo-tree-id7329 . -4) (undo-tree-id7330 . -4) (undo-tree-id7331 . -4) (undo-tree-id7332 . -4) (undo-tree-id7333 . -4) (undo-tree-id7334 . -4) (undo-tree-id7335 . -4) (undo-tree-id7336 . -4) (undo-tree-id7337 . -4) (undo-tree-id7338 . -4) (undo-tree-id7339 . -4) (undo-tree-id7340 . -4) (undo-tree-id7341 . -4) (undo-tree-id7342 . -4) (undo-tree-id7343 . -4) (undo-tree-id7344 . -4) (undo-tree-id7345 . -4) (undo-tree-id7346 . -4) (undo-tree-id7347 . -4) (undo-tree-id7348 . -4) (undo-tree-id7349 . -4) (undo-tree-id7350 . -4) (undo-tree-id7351 . -4) (undo-tree-id7352 . -4) (undo-tree-id7353 . -4) (undo-tree-id7354 . -4) (undo-tree-id7355 . -4) (undo-tree-id7356 . -4) (undo-tree-id7357 . -4) (undo-tree-id7358 . -4) (undo-tree-id7359 . -4) (undo-tree-id7360 . -4) (undo-tree-id7361 . -4) (undo-tree-id7362 . -4) (undo-tree-id7363 . -4) (undo-tree-id7364 . -4) (undo-tree-id7365 . -4) (undo-tree-id7366 . -4) (undo-tree-id7367 . -4) (undo-tree-id7368 . -4) (undo-tree-id7369 . -4) (undo-tree-id7370 . -4) (undo-tree-id7371 . -4) (undo-tree-id7372 . -4) (undo-tree-id7373 . -4) (undo-tree-id7374 . -4) (undo-tree-id7375 . -4) (undo-tree-id7376 . -4) (undo-tree-id7377 . -4) (undo-tree-id7378 . -4) (undo-tree-id7379 . -4) (undo-tree-id7380 . -4) (undo-tree-id7381 . -4) (undo-tree-id7382 . -4) (undo-tree-id7383 . -4) (undo-tree-id7384 . -4) (undo-tree-id7385 . -4) (undo-tree-id7386 . -4) (undo-tree-id7387 . -4) (undo-tree-id7388 . -4) (undo-tree-id7389 . -4) (undo-tree-id7390 . -4) (undo-tree-id7391 . -4) (undo-tree-id7392 . -4) (undo-tree-id7393 . -4) (undo-tree-id7394 . -4) (undo-tree-id7395 . -4) (undo-tree-id7396 . -4) (undo-tree-id7397 . -4) (undo-tree-id7398 . -4) (undo-tree-id7399 . -4) (undo-tree-id7400 . -4) (undo-tree-id7401 . -4) (undo-tree-id7402 . -4) (undo-tree-id7403 . -4) (undo-tree-id7404 . -4) (undo-tree-id7405 . -4) (undo-tree-id7406 . -4) (undo-tree-id7407 . -4) (undo-tree-id7408 . -4) (undo-tree-id7409 . -4) (undo-tree-id7410 . -4) (undo-tree-id7411 . -4) (undo-tree-id7412 . -4) (undo-tree-id7413 . -4) (undo-tree-id7414 . -4) (undo-tree-id7415 . -4) (undo-tree-id7416 . -4) (undo-tree-id7417 . -4) (undo-tree-id7418 . -4) (undo-tree-id7419 . -4) (undo-tree-id7420 . -4) (undo-tree-id7421 . -4) (undo-tree-id7422 . -4) (undo-tree-id7423 . -4) (undo-tree-id7424 . -4) (undo-tree-id7425 . -4) (undo-tree-id7426 . -4) (undo-tree-id7427 . -4) (undo-tree-id7428 . -4) (undo-tree-id7429 . -4) (undo-tree-id7430 . -4) (undo-tree-id7431 . -4) (undo-tree-id7432 . -4) (undo-tree-id7433 . -4) (undo-tree-id7434 . -4) (undo-tree-id7435 . -4) (undo-tree-id7436 . -4) (undo-tree-id7437 . -4) (undo-tree-id7438 . -4) (undo-tree-id7439 . -4) (undo-tree-id7440 . -4) (undo-tree-id7441 . -4) (undo-tree-id7442 . -4) (undo-tree-id7443 . -4) (undo-tree-id7444 . -3) (undo-tree-id7445 . -3) (undo-tree-id7446 . -3) (undo-tree-id7447 . -3) (undo-tree-id7448 . -3) (undo-tree-id7449 . -3) (undo-tree-id7450 . -3) (undo-tree-id7451 . -3) (undo-tree-id7452 . -3) (undo-tree-id7453 . -3) (undo-tree-id7454 . -3) (undo-tree-id7455 . -3) (undo-tree-id7456 . -3) (undo-tree-id7457 . -3) (undo-tree-id7458 . -3) (undo-tree-id7459 . -3) (undo-tree-id7460 . -3) (undo-tree-id7461 . -3) (undo-tree-id7462 . -3) (undo-tree-id7463 . -3) (undo-tree-id7464 . -3) (undo-tree-id7465 . -3) (undo-tree-id7466 . -3) (undo-tree-id7467 . -3) (undo-tree-id7468 . -3) (undo-tree-id7469 . -3) (undo-tree-id7470 . -3) (undo-tree-id7471 . -3) (undo-tree-id7472 . -3) (undo-tree-id7473 . -3) (undo-tree-id7474 . -4)) nil (26024 12957 628835 0) 0 nil])
([nil nil ((#(" " 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-face org-block))) . 13422) (undo-tree-id6512 . -1) (undo-tree-id6513 . -1) (undo-tree-id6514 . -1) (undo-tree-id6515 . -1) (undo-tree-id6516 . -1) (undo-tree-id6517 . -1) (undo-tree-id6518 . -1) (undo-tree-id6519 . -1) (undo-tree-id6520 . -1) (undo-tree-id6521 . -1) (undo-tree-id6522 . -1) (undo-tree-id6523 . -1) (undo-tree-id6524 . -1) (undo-tree-id6525 . -1) (undo-tree-id6526 . -1) (undo-tree-id6527 . -1) (undo-tree-id6528 . -1) (undo-tree-id6529 . -1) (undo-tree-id6530 . -1) (undo-tree-id6531 . -1) (undo-tree-id6532 . -1) (undo-tree-id6533 . -1) (undo-tree-id6534 . -1) (undo-tree-id6535 . -1) (undo-tree-id6536 . -1) (undo-tree-id6537 . -1) (undo-tree-id6538 . -1) (undo-tree-id6539 . -1) (undo-tree-id6540 . -1) (undo-tree-id6541 . -1) (undo-tree-id6542 . -1) (undo-tree-id6543 . -1) (undo-tree-id6544 . -1) (undo-tree-id6545 . -1) (undo-tree-id6546 . -1) (undo-tree-id6547 . -1) (undo-tree-id6548 . -1) (undo-tree-id6549 . -1) (undo-tree-id6550 . -1) (undo-tree-id6551 . -1) (undo-tree-id6552 . -1) (undo-tree-id6553 . -1) (undo-tree-id6554 . -1) (undo-tree-id6555 . -1) (undo-tree-id6556 . -1) (undo-tree-id6557 . -1) (undo-tree-id6558 . -1) (undo-tree-id6559 . -1) (undo-tree-id6560 . -1) (undo-tree-id6561 . -1) (undo-tree-id6562 . -1) (undo-tree-id6563 . -1) (undo-tree-id6564 . -1) (undo-tree-id6565 . -1) (undo-tree-id6566 . -1) (undo-tree-id6567 . -1) (undo-tree-id6568 . -1) (undo-tree-id6569 . -1) (undo-tree-id6570 . -1) (undo-tree-id6571 . -1) (undo-tree-id6572 . -1) (undo-tree-id6573 . -1) (undo-tree-id6574 . -1) (undo-tree-id6575 . -1) (undo-tree-id6576 . -1) (undo-tree-id6577 . -1) (undo-tree-id6578 . -1) (undo-tree-id6579 . -1) (undo-tree-id6580 . -1) (undo-tree-id6581 . -1) (undo-tree-id6582 . -1) (undo-tree-id6583 . -1) (undo-tree-id6584 . -1) (undo-tree-id6585 . -1) (undo-tree-id6586 . -1) (undo-tree-id6587 . -1) (undo-tree-id6588 . -1) (undo-tree-id6589 . -1) (undo-tree-id6590 . -1) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . -1) (undo-tree-id6594 . -1) (undo-tree-id6595 . -1) (undo-tree-id6596 . -1) (undo-tree-id6597 . -1) (undo-tree-id6598 . -1) (undo-tree-id6599 . -1) (undo-tree-id6600 . -1) (undo-tree-id6601 . -1) (undo-tree-id6602 . -1) (undo-tree-id6603 . -1) (undo-tree-id6604 . -1) (undo-tree-id6605 . -1) (undo-tree-id6606 . -1) (undo-tree-id6607 . -1) (undo-tree-id6608 . -1) (undo-tree-id6609 . -1) (undo-tree-id6610 . -1) (undo-tree-id6611 . -1) (undo-tree-id6612 . -1) (undo-tree-id6613 . -1) (undo-tree-id6614 . -1) (undo-tree-id6615 . -1) (undo-tree-id6616 . -1) (undo-tree-id6617 . -1) (undo-tree-id6618 . -1) (undo-tree-id6619 . -1) (undo-tree-id6620 . -1) (undo-tree-id6621 . -1) (undo-tree-id6622 . -1) (undo-tree-id6623 . -1) (undo-tree-id6624 . -1) (undo-tree-id6625 . -1) (undo-tree-id6626 . -1) (undo-tree-id6627 . -1) (undo-tree-id6628 . -1) (undo-tree-id6629 . -1) (undo-tree-id6630 . -1) (undo-tree-id6631 . -1) (undo-tree-id6632 . -1) (undo-tree-id6633 . -1) (undo-tree-id6634 . -1) (undo-tree-id6635 . -1) (undo-tree-id6636 . -1) (undo-tree-id6637 . -1) (undo-tree-id6638 . -1) (undo-tree-id6639 . -1) (undo-tree-id6640 . -1) (undo-tree-id6641 . -1) (undo-tree-id6642 . -1) (undo-tree-id6643 . -1) (undo-tree-id6644 . -1) (undo-tree-id6645 . -1) (undo-tree-id6646 . -1) (undo-tree-id6647 . -1) (undo-tree-id6648 . -1) (undo-tree-id6649 . -1) (undo-tree-id6650 . -1) (undo-tree-id6651 . -1) (undo-tree-id6652 . -1) (undo-tree-id6653 . -1) (undo-tree-id6654 . -1) (undo-tree-id6655 . -1) (undo-tree-id6656 . -1) (undo-tree-id6657 . -1) (undo-tree-id6658 . -1) (undo-tree-id6659 . -1) (undo-tree-id6660 . -1) (undo-tree-id6661 . -1) (undo-tree-id6662 . -1) (undo-tree-id6663 . -1) (undo-tree-id6664 . -1) (undo-tree-id6665 . -1) (undo-tree-id6666 . -1) (undo-tree-id6667 . -1) (undo-tree-id6668 . -1) (undo-tree-id6669 . -1) (undo-tree-id6670 . -1) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1) (undo-tree-id6696 . -1) (undo-tree-id6697 . -1) (undo-tree-id6698 . -1) (undo-tree-id6699 . -1) (undo-tree-id6700 . -1) (undo-tree-id6701 . -1) (undo-tree-id6702 . -1) (undo-tree-id6703 . -1) (undo-tree-id6704 . -1) (undo-tree-id6705 . -1) (undo-tree-id6706 . -1) (undo-tree-id6707 . -1) (undo-tree-id6708 . -1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) (undo-tree-id6722 . -1) (undo-tree-id6723 . -1) (undo-tree-id6724 . -1) (undo-tree-id6725 . -1) (undo-tree-id6726 . -1) (undo-tree-id6727 . -1) (undo-tree-id6728 . -1) (undo-tree-id6729 . -1) (undo-tree-id6730 . -1) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) (undo-tree-id6739 . -1) (undo-tree-id6740 . -1) (undo-tree-id6741 . -1) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . -1) (undo-tree-id6753 . -1) (undo-tree-id6754 . -1) (undo-tree-id6755 . -1) (undo-tree-id6756 . -1) (undo-tree-id6757 . -1) (undo-tree-id6758 . -1) (undo-tree-id6759 . -1) (undo-tree-id6760 . -1) (undo-tree-id6761 . -1) (undo-tree-id6762 . -1) (undo-tree-id6763 . -1) (undo-tree-id6764 . -1) (undo-tree-id6765 . -1) (undo-tree-id6766 . -1) (undo-tree-id6767 . -1) (undo-tree-id6768 . -1) (undo-tree-id6769 . -1) (undo-tree-id6770 . -1) (undo-tree-id6771 . -1) (undo-tree-id6772 . -1) (undo-tree-id6773 . -1) (undo-tree-id6774 . -1) (undo-tree-id6775 . -1) (undo-tree-id6776 . -1) (undo-tree-id6777 . -1) (undo-tree-id6778 . -1) (undo-tree-id6779 . -1) (undo-tree-id6780 . -1) (undo-tree-id6781 . -1) (undo-tree-id6782 . -1) (undo-tree-id6783 . -1) (undo-tree-id6784 . -1) (undo-tree-id6785 . -1) (undo-tree-id6786 . -1) (undo-tree-id6787 . -1) (undo-tree-id6788 . -1) (undo-tree-id6789 . -1) (undo-tree-id6790 . -1) (undo-tree-id6791 . -1) (undo-tree-id6792 . -1) (undo-tree-id6793 . -1) (undo-tree-id6794 . -1) (undo-tree-id6795 . -1) (undo-tree-id6796 . -1) (undo-tree-id6797 . -1) (undo-tree-id6798 . -1) (undo-tree-id6799 . -1) (undo-tree-id6800 . -1) (undo-tree-id6801 . -1) (undo-tree-id6802 . -1) (undo-tree-id6803 . -1) (undo-tree-id6804 . -1) (undo-tree-id6805 . -1) (undo-tree-id6806 . -1) (undo-tree-id6807 . -1) (undo-tree-id6808 . -1) (undo-tree-id6809 . -1) (undo-tree-id6810 . -1) (undo-tree-id6811 . -1) (undo-tree-id6812 . -1) (undo-tree-id6813 . -1) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (undo-tree-id6828 . -1) (undo-tree-id6829 . -1) (undo-tree-id6830 . -1) (undo-tree-id6831 . -1) (undo-tree-id6832 . -1) (undo-tree-id6833 . -1) (undo-tree-id6834 . -1) (undo-tree-id6835 . -1) (undo-tree-id6836 . -1) (undo-tree-id6837 . -1) (undo-tree-id6838 . -1) (undo-tree-id6839 . -1) (undo-tree-id6840 . -1) (undo-tree-id6841 . -1) (undo-tree-id6842 . -1) (undo-tree-id6843 . -1) (undo-tree-id6844 . -1) (undo-tree-id6845 . -1) (undo-tree-id6846 . -1) (undo-tree-id6847 . -1) (undo-tree-id6848 . -1) (undo-tree-id6849 . -1) (undo-tree-id6850 . -1) (undo-tree-id6851 . -1) (undo-tree-id6852 . -1) (undo-tree-id6853 . -1) (undo-tree-id6854 . -1) (undo-tree-id6855 . -1) (undo-tree-id6856 . -1) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . -1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) (undo-tree-id6979 . -1) (undo-tree-id6980 . -1) (undo-tree-id6981 . -1) (undo-tree-id6982 . -1) (undo-tree-id6983 . -1) (undo-tree-id6984 . -1) (undo-tree-id6985 . -1) (undo-tree-id6986 . -1) (undo-tree-id6987 . -1) (undo-tree-id6988 . -1) (undo-tree-id6989 . -1) (undo-tree-id6990 . -1) (undo-tree-id6991 . -1) (undo-tree-id6992 . -1) (undo-tree-id6993 . -1) (undo-tree-id6994 . -1) (undo-tree-id6995 . -1) (undo-tree-id6996 . -1) (undo-tree-id6997 . -1) (undo-tree-id6998 . -1) (undo-tree-id6999 . -1) (undo-tree-id7000 . -1) (undo-tree-id7001 . -1) (undo-tree-id7002 . -1) (undo-tree-id7003 . -1) (undo-tree-id7004 . -1) (undo-tree-id7005 . -1) (undo-tree-id7006 . -1) (undo-tree-id7007 . -1) (undo-tree-id7008 . -1) (undo-tree-id7009 . -1) (undo-tree-id7010 . -1) (undo-tree-id7011 . -1) (undo-tree-id7012 . -1) (undo-tree-id7013 . -1) (undo-tree-id7014 . -1) (undo-tree-id7015 . -1) (undo-tree-id7016 . -1) (undo-tree-id7017 . -1) (undo-tree-id7018 . -1) (undo-tree-id7019 . -1) (undo-tree-id7020 . -1) (undo-tree-id7021 . -1) (undo-tree-id7022 . -1) (undo-tree-id7023 . -1) (undo-tree-id7024 . -1) (undo-tree-id7025 . -1) (undo-tree-id7026 . -1) (undo-tree-id7027 . -1) (undo-tree-id7028 . -1) (undo-tree-id7029 . -1) (undo-tree-id7030 . -1) (undo-tree-id7031 . -1) (undo-tree-id7032 . -1) (undo-tree-id7033 . -1) (undo-tree-id7034 . -1) (undo-tree-id7035 . -1) (undo-tree-id7036 . -1) (undo-tree-id7037 . -1) (undo-tree-id7038 . -1) (undo-tree-id7039 . -1) (undo-tree-id7040 . -1) (undo-tree-id7041 . -1) (undo-tree-id7042 . -1) (undo-tree-id7043 . -1) (undo-tree-id7044 . -1) (undo-tree-id7045 . -1) (undo-tree-id7046 . -1) (undo-tree-id7047 . -1) (undo-tree-id7048 . -1) (undo-tree-id7049 . -1) (undo-tree-id7050 . -1) (undo-tree-id7051 . -1) (undo-tree-id7052 . -1) (undo-tree-id7053 . -1) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) (undo-tree-id7064 . -1) (undo-tree-id7065 . -1) (undo-tree-id7066 . -1) (undo-tree-id7067 . -1) (undo-tree-id7068 . -1) (undo-tree-id7069 . -1) (undo-tree-id7070 . -1) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) (undo-tree-id7096 . -1) (undo-tree-id7097 . -1) (undo-tree-id7098 . -1) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1) (undo-tree-id7101 . -1) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1) (undo-tree-id7104 . -1) (undo-tree-id7105 . -1) (undo-tree-id7106 . -1) (undo-tree-id7107 . -1) (undo-tree-id7108 . -1) (undo-tree-id7109 . -1) (undo-tree-id7110 . -1) (undo-tree-id7111 . -1) (undo-tree-id7112 . -1) (undo-tree-id7113 . -1) (undo-tree-id7114 . -1) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (undo-tree-id7121 . -1) (undo-tree-id7122 . -1) (undo-tree-id7123 . -1) (undo-tree-id7124 . -1) (undo-tree-id7125 . -1) (undo-tree-id7126 . -1) (undo-tree-id7127 . -1) (undo-tree-id7128 . -1) (undo-tree-id7129 . -1) (undo-tree-id7130 . -1) (undo-tree-id7131 . -1) (undo-tree-id7132 . -1) (undo-tree-id7133 . -1) (undo-tree-id7134 . -1) (undo-tree-id7135 . -1) (undo-tree-id7136 . -1) (undo-tree-id7137 . -1) (undo-tree-id7138 . -1) (undo-tree-id7139 . -1) (undo-tree-id7140 . -1)) nil (26024 12957 628524 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -2823) (undo-tree-id7989 . -1) (undo-tree-id7990 . -1) (undo-tree-id7991 . -1) (undo-tree-id7992 . -1) (undo-tree-id7993 . -1) (undo-tree-id7994 . -1) (undo-tree-id7995 . -1) (undo-tree-id7996 . -1) (undo-tree-id7997 . -1) (undo-tree-id7998 . -1) (undo-tree-id7999 . -1) (undo-tree-id8000 . -1) (undo-tree-id8001 . -1) (undo-tree-id8002 . -1) (undo-tree-id8003 . -1) (undo-tree-id8004 . -1) (undo-tree-id8005 . -1) (undo-tree-id8006 . -1) (undo-tree-id8007 . -1) (undo-tree-id8008 . -1) (undo-tree-id8009 . -1) (undo-tree-id8010 . -1) (undo-tree-id8011 . -1) (undo-tree-id8012 . -1) (undo-tree-id8013 . -1) (undo-tree-id8014 . -1) (undo-tree-id8015 . -1) (undo-tree-id8016 . -1) (undo-tree-id8017 . -1) (undo-tree-id8018 . -1) (undo-tree-id8019 . -1) (undo-tree-id8020 . -1) (undo-tree-id8021 . -1) (undo-tree-id8022 . -1) (undo-tree-id8023 . -1) (undo-tree-id8024 . -1) (undo-tree-id8025 . -1) (undo-tree-id8026 . -1) (undo-tree-id8027 . -1) (undo-tree-id8028 . -1) (undo-tree-id8029 . -1) (undo-tree-id8030 . -1) (undo-tree-id8031 . -1) (undo-tree-id8032 . -1) (undo-tree-id8033 . -1) (undo-tree-id8034 . -1) (undo-tree-id8035 . -1) (#("j" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -2824) (undo-tree-id8036 . -1) (undo-tree-id8037 . -1) (undo-tree-id8038 . -1) (undo-tree-id8039 . -1) (undo-tree-id8040 . -1) (undo-tree-id8041 . -1) (undo-tree-id8042 . -1) (undo-tree-id8043 . -1) (undo-tree-id8044 . -1) (undo-tree-id8045 . -1) (undo-tree-id8046 . -1) (undo-tree-id8047 . -1) (undo-tree-id8048 . -1) (undo-tree-id8049 . -1) (undo-tree-id8050 . -1) (undo-tree-id8051 . -1) (undo-tree-id8052 . -1) 2825 (2823 . 2825) (2822 . 2823) (t 26024 12957 706337 238000) 2799) nil (26024 13078 552738 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2920 . 2921) (nil fontified nil 2894 . 2921) (nil fontified nil 2867 . 2894) (nil fontified nil 2845 . 2867) (nil fontified nil 2823 . 2845) (2823 . 2921)) nil (26024 13078 552667 0) 0 nil])
([nil nil ((2938 . 2943) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -2938) (undo-tree-id8056 . -1) (undo-tree-id8057 . -1) (undo-tree-id8058 . -1) (undo-tree-id8059 . -1) (undo-tree-id8060 . -1) (undo-tree-id8061 . -1) (undo-tree-id8062 . -1) (undo-tree-id8063 . -1) (undo-tree-id8064 . -1) (undo-tree-id8065 . -1) (undo-tree-id8066 . -1) (undo-tree-id8067 . -1) (undo-tree-id8068 . -1) (undo-tree-id8069 . -1) (undo-tree-id8070 . -1) (undo-tree-id8071 . -1) (undo-tree-id8072 . -1) (undo-tree-id8073 . -1) (undo-tree-id8074 . -1) (undo-tree-id8075 . -1) (undo-tree-id8076 . -1) (undo-tree-id8077 . -1) (undo-tree-id8078 . -1) (undo-tree-id8079 . -1) (undo-tree-id8080 . -1) (undo-tree-id8081 . -1) (undo-tree-id8082 . -1) (undo-tree-id8083 . -1) (undo-tree-id8084 . -1) (undo-tree-id8085 . -1) (undo-tree-id8086 . -1) (undo-tree-id8087 . -1) (undo-tree-id8088 . -1) (undo-tree-id8089 . -1) (undo-tree-id8090 . -1) (undo-tree-id8091 . -1) (undo-tree-id8092 . -1) (undo-tree-id8093 . -1) (undo-tree-id8094 . -1) (undo-tree-id8095 . -1) (undo-tree-id8096 . -1) (undo-tree-id8097 . -1) (undo-tree-id8098 . -1) (undo-tree-id8099 . -1) (undo-tree-id8100 . -1) (undo-tree-id8101 . -1) (undo-tree-id8102 . -1) (undo-tree-id8103 . -1) (undo-tree-id8104 . -1) (undo-tree-id8105 . -1) (undo-tree-id8106 . -1) (undo-tree-id8107 . -1) (undo-tree-id8108 . -1) (undo-tree-id8109 . -1) (undo-tree-id8110 . -1) (undo-tree-id8111 . -1) (undo-tree-id8112 . -1) (undo-tree-id8113 . -1) (undo-tree-id8114 . -1) (undo-tree-id8115 . -1) (undo-tree-id8116 . -1) (undo-tree-id8117 . -1) (undo-tree-id8118 . -1) (undo-tree-id8119 . -1) (undo-tree-id8120 . -1) (undo-tree-id8121 . -1) (undo-tree-id8122 . -1) (undo-tree-id8123 . -1) (undo-tree-id8124 . -1) (undo-tree-id8125 . -1) (undo-tree-id8126 . -1) (undo-tree-id8127 . -1) (undo-tree-id8128 . -1) (undo-tree-id8129 . -1) (undo-tree-id8130 . -1) (undo-tree-id8131 . -1) (undo-tree-id8132 . -1) (undo-tree-id8133 . -1) (undo-tree-id8134 . -1) (undo-tree-id8135 . -1) (undo-tree-id8136 . -1) (undo-tree-id8137 . -1) (undo-tree-id8138 . -1) (undo-tree-id8139 . -1) (undo-tree-id8140 . -1) (undo-tree-id8141 . -1) (undo-tree-id8142 . -1) (undo-tree-id8143 . -1) (undo-tree-id8144 . -1) (undo-tree-id8145 . -1) (undo-tree-id8146 . -1) (undo-tree-id8147 . -1) (undo-tree-id8148 . -1) (undo-tree-id8149 . -1) (undo-tree-id8150 . -1) (undo-tree-id8151 . -1) (undo-tree-id8152 . -1) (undo-tree-id8153 . -1) (undo-tree-id8154 . -1) (undo-tree-id8155 . -1) (undo-tree-id8156 . -1) (undo-tree-id8157 . -1) (undo-tree-id8158 . -1) (undo-tree-id8159 . -1) (undo-tree-id8160 . -1) (undo-tree-id8161 . -1) (undo-tree-id8162 . -1) (undo-tree-id8163 . -1) (undo-tree-id8164 . -1) (undo-tree-id8165 . -1) (undo-tree-id8166 . -1) (undo-tree-id8167 . -1) (undo-tree-id8168 . -1) (undo-tree-id8169 . -1) (#("d" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -2939) (undo-tree-id8170 . -1) (undo-tree-id8171 . -1) (undo-tree-id8172 . -1) (undo-tree-id8173 . -1) (undo-tree-id8174 . -1) (undo-tree-id8175 . -1) (undo-tree-id8176 . -1) (undo-tree-id8177 . -1) (undo-tree-id8178 . -1) (undo-tree-id8179 . -1) (undo-tree-id8180 . -1) (undo-tree-id8181 . -1) (undo-tree-id8182 . -1) (undo-tree-id8183 . -1) (undo-tree-id8184 . -1) (undo-tree-id8185 . -1) (undo-tree-id8186 . -1) (undo-tree-id8187 . -1) (undo-tree-id8188 . -1) (undo-tree-id8189 . -1) (undo-tree-id8190 . -1) (undo-tree-id8191 . -1) (undo-tree-id8192 . -1) (undo-tree-id8193 . -1) (undo-tree-id8194 . -1) (undo-tree-id8195 . -1) (undo-tree-id8196 . -1) (undo-tree-id8197 . -1) (undo-tree-id8198 . -1) (undo-tree-id8199 . -1) (undo-tree-id8200 . -1) (undo-tree-id8201 . -1) (undo-tree-id8202 . -1) (undo-tree-id8203 . -1) (undo-tree-id8204 . -1) (undo-tree-id8205 . -1) (undo-tree-id8206 . -1) (undo-tree-id8207 . -1) (undo-tree-id8208 . -1) (undo-tree-id8209 . -1) (undo-tree-id8210 . -1) (undo-tree-id8211 . -1) (undo-tree-id8212 . -1) (undo-tree-id8213 . -1) (undo-tree-id8214 . -1) (undo-tree-id8215 . -1) (undo-tree-id8216 . -1) (undo-tree-id8217 . -1) (undo-tree-id8218 . -1) (undo-tree-id8219 . -1) (undo-tree-id8220 . -1) (undo-tree-id8221 . -1) (undo-tree-id8222 . -1) (undo-tree-id8223 . -1) (undo-tree-id8224 . -1) (undo-tree-id8225 . -1) (undo-tree-id8226 . -1) (undo-tree-id8227 . -1) (undo-tree-id8228 . -1) (undo-tree-id8229 . -1) (undo-tree-id8230 . -1) (undo-tree-id8231 . -1) (undo-tree-id8232 . -1) (undo-tree-id8233 . -1) (undo-tree-id8234 . -1) (undo-tree-id8235 . -1) (undo-tree-id8236 . -1) (undo-tree-id8237 . -1) (undo-tree-id8238 . -1) (undo-tree-id8239 . -1) (undo-tree-id8240 . -1) (undo-tree-id8241 . -1) (undo-tree-id8242 . -1) (undo-tree-id8243 . -1) (undo-tree-id8244 . -1) (undo-tree-id8245 . -1) (undo-tree-id8246 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -2940) (undo-tree-id8247 . -1) (undo-tree-id8248 . -1) (undo-tree-id8249 . -1) (undo-tree-id8250 . -1) (undo-tree-id8251 . -1) (undo-tree-id8252 . -1) (undo-tree-id8253 . -1) (undo-tree-id8254 . -1) (undo-tree-id8255 . -1) (undo-tree-id8256 . -1) (undo-tree-id8257 . -1) (undo-tree-id8258 . -1) (undo-tree-id8259 . -1) (undo-tree-id8260 . -1) (undo-tree-id8261 . -1) (undo-tree-id8262 . -1) (undo-tree-id8263 . -1) (undo-tree-id8264 . -1) (undo-tree-id8265 . -1) (undo-tree-id8266 . -1) (undo-tree-id8267 . -1) (undo-tree-id8268 . -1) (undo-tree-id8269 . -1) (undo-tree-id8270 . -1) (undo-tree-id8271 . -1) (undo-tree-id8272 . -1) (undo-tree-id8273 . -1) (undo-tree-id8274 . -1) (undo-tree-id8275 . -1) (undo-tree-id8276 . -1) (undo-tree-id8277 . -1) (undo-tree-id8278 . -1) (undo-tree-id8279 . -1) (undo-tree-id8280 . -1) (undo-tree-id8281 . -1) (undo-tree-id8282 . -1) (undo-tree-id8283 . -1) (undo-tree-id8284 . -1) (undo-tree-id8285 . -1) (undo-tree-id8286 . -1) (undo-tree-id8287 . -1) (undo-tree-id8288 . -1) (undo-tree-id8289 . -1) (undo-tree-id8290 . -1) (undo-tree-id8291 . -1) (undo-tree-id8292 . -1) (undo-tree-id8293 . -1) (#("r" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -2941) (undo-tree-id8294 . -1) (undo-tree-id8295 . -1) (undo-tree-id8296 . -1) (undo-tree-id8297 . -1) (undo-tree-id8298 . -1) (undo-tree-id8299 . -1) (undo-tree-id8300 . -1) (undo-tree-id8301 . -1) (undo-tree-id8302 . -1) (undo-tree-id8303 . -1) (undo-tree-id8304 . -1) (undo-tree-id8305 . -1) (undo-tree-id8306 . -1) (undo-tree-id8307 . -1) (undo-tree-id8308 . -1) (undo-tree-id8309 . -1) (undo-tree-id8310 . -1) 2942 (2924 . 2942) (2923 . 2925) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -2923) (undo-tree-id8311 . -1) (undo-tree-id8312 . -1) (2923 . 2924) (2922 . 2923) (2921 . 2922) (t 26024 13078 635428 330000) 2894) nil (26024 13136 779389 0) 0 nil])
([nil nil ((2928 . 2947) (2927 . 2928) (#("t" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -2927) (undo-tree-id8053 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -2928) (undo-tree-id8054 . -1) 2929 (2923 . 2929) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -2923) (undo-tree-id8055 . -1) (#("/" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 2924) (2923 . 2925) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -2923) (2923 . 2924) (2923 . 2924) 2942) nil (26024 13136 779154 0) 0 nil])
([nil nil ((2969 . 2970) (t 26024 13136 862700 41000) 2968) nil (26024 13148 977045 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3009 . 3010) (nil fontified nil 2970 . 3010) (2970 . 3010)) nil (26024 13148 977041 0) 0 nil])
([nil nil ((2921 . 2922) (t 26024 13149 58761 650000) 2920) nil (26024 13199 801138 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2945 . 2946) (nil fontified nil 2922 . 2946) (2922 . 2946)) nil (26024 13199 801134 0) 0 nil])
([nil nil ((#("(require 'nano-modeline)
" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 1 8 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 8 10 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10 23 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil src-block t) 23 24 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 24 25 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 2922) (undo-tree-id8313 . 1) (undo-tree-id8314 . -24) (undo-tree-id8315 . -23) (undo-tree-id8316 . 2) (undo-tree-id8317 . -24) (undo-tree-id8318 . 25) (undo-tree-id8319 . -1) (undo-tree-id8320 . -23) (undo-tree-id8321 . -23) (undo-tree-id8322 . -23) (undo-tree-id8323 . -23) (undo-tree-id8324 . -23) (undo-tree-id8325 . -23) (undo-tree-id8326 . -23) (undo-tree-id8327 . -23) (undo-tree-id8328 . -23) (undo-tree-id8329 . -23) (undo-tree-id8330 . -23) (undo-tree-id8331 . -23) (undo-tree-id8332 . -23) (undo-tree-id8333 . -23) (undo-tree-id8334 . -23) (undo-tree-id8335 . -23) (undo-tree-id8336 . -23) (undo-tree-id8337 . -23) (undo-tree-id8338 . -23) (undo-tree-id8339 . -23) (undo-tree-id8340 . -23) (undo-tree-id8341 . -23) (undo-tree-id8342 . -23) (undo-tree-id8343 . -23) (undo-tree-id8344 . -23) (undo-tree-id8345 . -23) (undo-tree-id8346 . -23) (undo-tree-id8347 . -23) (undo-tree-id8348 . -23) (undo-tree-id8349 . -23) (undo-tree-id8350 . -23) (undo-tree-id8351 . -23) (undo-tree-id8352 . -23) (undo-tree-id8353 . -23) (undo-tree-id8354 . -23) (undo-tree-id8355 . -23) (undo-tree-id8356 . -23) (undo-tree-id8357 . -23) (undo-tree-id8358 . -23) (undo-tree-id8359 . -23) (undo-tree-id8360 . -23) (undo-tree-id8361 . -23) (undo-tree-id8362 . -23) (undo-tree-id8363 . -23) (undo-tree-id8364 . -23) (undo-tree-id8365 . -23) (undo-tree-id8366 . -23) (undo-tree-id8367 . -23) (undo-tree-id8368 . -23) (undo-tree-id8369 . -23) (undo-tree-id8370 . -23) (undo-tree-id8371 . -23) (undo-tree-id8372 . -23) (undo-tree-id8373 . -23) (undo-tree-id8374 . -23) (undo-tree-id8375 . -23) (undo-tree-id8376 . -23) (undo-tree-id8377 . -23) (undo-tree-id8378 . -23) (undo-tree-id8379 . -23) (undo-tree-id8380 . -23) (undo-tree-id8381 . -23) (undo-tree-id8382 . -23) (undo-tree-id8383 . -23) (undo-tree-id8384 . -23) (undo-tree-id8385 . -23) (undo-tree-id8386 . -23) (undo-tree-id8387 . -23) (undo-tree-id8388 . -23) (undo-tree-id8389 . -23) (undo-tree-id8390 . -23) (undo-tree-id8391 . -23) (undo-tree-id8392 . -23) (undo-tree-id8393 . -23) (undo-tree-id8394 . -23) (undo-tree-id8395 . -23) (undo-tree-id8396 . -23) (undo-tree-id8397 . -23) (undo-tree-id8398 . -23) (undo-tree-id8399 . -23) (undo-tree-id8400 . -23) (undo-tree-id8401 . -23) (undo-tree-id8402 . -23) (undo-tree-id8403 . -23) (undo-tree-id8404 . -23) (undo-tree-id8405 . -23) (undo-tree-id8406 . -23) (undo-tree-id8407 . -23) (undo-tree-id8408 . -23) (undo-tree-id8409 . -23) (undo-tree-id8410 . -23) (undo-tree-id8411 . -23) (undo-tree-id8412 . -23) (undo-tree-id8413 . -23) (undo-tree-id8414 . -23) (undo-tree-id8415 . -23) (undo-tree-id8416 . -23) (undo-tree-id8417 . -23) (undo-tree-id8418 . -23) (undo-tree-id8419 . -23) (undo-tree-id8420 . -23) (undo-tree-id8421 . -23) (undo-tree-id8422 . -23) (undo-tree-id8423 . -23) (undo-tree-id8424 . -23) (undo-tree-id8425 . -23) (undo-tree-id8426 . -23) (undo-tree-id8427 . -23) (undo-tree-id8428 . -23) (undo-tree-id8429 . -23) (undo-tree-id8430 . -23) (undo-tree-id8431 . -23) (undo-tree-id8432 . -23) (undo-tree-id8433 . -23) (undo-tree-id8434 . -23) (undo-tree-id8435 . -23) (undo-tree-id8436 . -23) (undo-tree-id8437 . -23) (undo-tree-id8438 . -23) (undo-tree-id8439 . -23) (undo-tree-id8440 . -23) (undo-tree-id8441 . -23) (undo-tree-id8442 . -23) (undo-tree-id8443 . -23) (undo-tree-id8444 . -23) (undo-tree-id8445 . -23) (undo-tree-id8446 . -23) (undo-tree-id8447 . -23) (undo-tree-id8448 . -23) (undo-tree-id8449 . -23) (undo-tree-id8450 . -23) (undo-tree-id8451 . -23) (undo-tree-id8452 . -23) (undo-tree-id8453 . -23) (undo-tree-id8454 . -23) (undo-tree-id8455 . -23) (undo-tree-id8456 . -23) (undo-tree-id8457 . -23) (undo-tree-id8458 . -23) (undo-tree-id8459 . -23) (undo-tree-id8460 . -23) (undo-tree-id8461 . -23) (undo-tree-id8462 . -23) (undo-tree-id8463 . -23) (undo-tree-id8464 . -23) (undo-tree-id8465 . -23) (undo-tree-id8466 . -23) (undo-tree-id8467 . -23) (undo-tree-id8468 . -23) (undo-tree-id8469 . -23) (undo-tree-id8470 . -23) (undo-tree-id8471 . -23) (undo-tree-id8472 . -25) 2945 (t 26024 13199 883305 64000)) nil (26024 13206 25560 0) 0 nil])
([nil nil ((3010 . 3011) 2970) nil (26024 13206 25420 0) 0 nil])
([nil nil ((3011 . 3012) 3011) nil (26024 13206 25419 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3012 . 3013) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -3037) (3012 . 3038)) nil (26024 13206 25415 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) rear-nonsticky t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 3012) (t 26024 13206 108765 509000)) nil (26024 13237 498625 0) 0 nil])
([nil nil ((3053 . 3058) (#("p" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -3053) (undo-tree-id8473 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -3054) (undo-tree-id8474 . -1) (#("s" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -3055) (undo-tree-id8475 . -1) (#("h" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -3056) (undo-tree-id8476 . -1) 3057 (3046 . 3057) (#(";" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . -3046) (undo-tree-id8477 . -1) (#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -3047) (undo-tree-id8478 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -3048) (undo-tree-id8479 . -1) (#("n" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -3049) (undo-tree-id8480 . -1) 3050 (3038 . 3050) (3037 . 3039) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -3037) (3037 . 3038) (3036 . 3037) 3012) nil (26024 13237 498621 0) 0 nil])
([nil nil ((8862 . 8865) (t 26024 13237 582062 382000)) nil (26024 13268 137248 0) 0 nil])
([nil nil ((3059 . 3060) (t 26024 13268 218968 98000) 3043) nil (26024 13318 239274 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3081 . 3082) (nil fontified nil 3060 . 3082) (3060 . 3082)) nil (26024 13318 239273 0) 0 nil])
([nil nil ((#("(require 'nano-slpash)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 1 8 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 8 10 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 10 21 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 21 22 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 22 23 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block) help-echo nil)) . 3037) (undo-tree-id8481 . -22) (undo-tree-id8482 . -23) (undo-tree-id8483 . -15) (undo-tree-id8484 . -6) (undo-tree-id8485 . -6) (undo-tree-id8486 . -6) (undo-tree-id8487 . -6) (undo-tree-id8488 . -6) (undo-tree-id8489 . -6) (undo-tree-id8490 . -6) (undo-tree-id8491 . -6) (undo-tree-id8492 . -6) (undo-tree-id8493 . -6) (undo-tree-id8494 . -6) (undo-tree-id8495 . -6) (undo-tree-id8496 . -6) (undo-tree-id8497 . -6) (undo-tree-id8498 . -6) (undo-tree-id8499 . -6) (undo-tree-id8500 . -6) (undo-tree-id8501 . -6) (undo-tree-id8502 . -6) (undo-tree-id8503 . -6) (undo-tree-id8504 . -6) (undo-tree-id8505 . -23) (undo-tree-id8506 . -23) (undo-tree-id8507 . -23) (undo-tree-id8508 . -23) (undo-tree-id8509 . -23) (undo-tree-id8510 . -23) (undo-tree-id8511 . -23) (undo-tree-id8512 . -23) (undo-tree-id8513 . -23) (undo-tree-id8514 . -23) (undo-tree-id8515 . -23) (undo-tree-id8516 . -23) (undo-tree-id8517 . -23) (undo-tree-id8518 . -23) (undo-tree-id8519 . -23) (undo-tree-id8520 . -23) (undo-tree-id8521 . -23) (undo-tree-id8522 . -23) (undo-tree-id8523 . -23) (undo-tree-id8524 . -23) (undo-tree-id8525 . -23) (undo-tree-id8526 . -23) (undo-tree-id8527 . -23) (undo-tree-id8528 . -23) (undo-tree-id8529 . -23) (undo-tree-id8530 . -23) (undo-tree-id8531 . -23) (undo-tree-id8532 . -23) (undo-tree-id8533 . -23) (undo-tree-id8534 . -23) (undo-tree-id8535 . -23) (undo-tree-id8536 . -23) (undo-tree-id8537 . -23) (undo-tree-id8538 . -23) (undo-tree-id8539 . -23) (undo-tree-id8540 . -23) (undo-tree-id8541 . -23) (undo-tree-id8542 . -23) (undo-tree-id8543 . -23) (undo-tree-id8544 . -23) (undo-tree-id8545 . -23) (undo-tree-id8546 . -23) (undo-tree-id8547 . -23) (undo-tree-id8548 . -23) (undo-tree-id8549 . -23) (undo-tree-id8550 . -23) (undo-tree-id8551 . -23) (undo-tree-id8552 . -21) (undo-tree-id8553 . -21) (undo-tree-id8554 . -21) (undo-tree-id8555 . -21) (undo-tree-id8556 . -21) (undo-tree-id8557 . -21) (undo-tree-id8558 . -21) (undo-tree-id8559 . -21) (undo-tree-id8560 . -21) (undo-tree-id8561 . -21) (undo-tree-id8562 . -21) (undo-tree-id8563 . -21) (undo-tree-id8564 . -21) (undo-tree-id8565 . -21) (undo-tree-id8566 . -21) (undo-tree-id8567 . -21) (undo-tree-id8568 . -21) (undo-tree-id8569 . -21) (undo-tree-id8570 . -21) (undo-tree-id8571 . -21) (undo-tree-id8572 . -21) (undo-tree-id8573 . -15) (undo-tree-id8574 . -15) (undo-tree-id8575 . -15) (undo-tree-id8576 . -15) (undo-tree-id8577 . -15) (undo-tree-id8578 . -15) (undo-tree-id8579 . -15) (undo-tree-id8580 . -15) (undo-tree-id8581 . -15) (undo-tree-id8582 . -15) (undo-tree-id8583 . -15) (undo-tree-id8584 . -15) (undo-tree-id8585 . -15) (undo-tree-id8586 . -15) (undo-tree-id8587 . -15) (undo-tree-id8588 . -15) (undo-tree-id8589 . -15) (undo-tree-id8590 . -15) (undo-tree-id8591 . -15) (undo-tree-id8592 . -15) (undo-tree-id8593 . -15) (undo-tree-id8594 . -15) (undo-tree-id8595 . -15) (undo-tree-id8596 . -15) (undo-tree-id8597 . -15) (undo-tree-id8598 . -15) (undo-tree-id8599 . -15) (undo-tree-id8600 . -15) (undo-tree-id8601 . -15) (undo-tree-id8602 . -15) (undo-tree-id8603 . -15) (undo-tree-id8604 . -23) 3052) nil (26024 13318 239267 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . -2823) (undo-tree-id8611 . -1) 2824 (2823 . 2824) (2823 . 2824) (2823 . 2824) 2838 (t 26024 13318 318445 698000)) nil (26024 13385 628195 0) 0 nil])
([nil nil ((#("(message \"before nano\")
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 1 9 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 9 10 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10 21 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 21 22 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 22 23 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 23 24 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 2799) (undo-tree-id8605 . -23) (undo-tree-id8606 . -24) (undo-tree-id8607 . 24) (undo-tree-id8608 . -1) (undo-tree-id8609 . 2) (undo-tree-id8610 . -23)) nil (26024 13385 628192 0) 0 nil])
([nil nil ((2799 . 2819)) nil (26024 13385 628175 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . -2826) (undo-tree-id8612 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -2827) (undo-tree-id8613 . -1) 2828 (2826 . 2828) (2825 . 2826) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -2825) (undo-tree-id8614 . -1) 2826 (2821 . 2826) (2820 . 2822) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t)) . -2820) (2820 . 2821) (2819 . 2820) (t 26024 13385 708510 939000) 2818) nil (26024 13407 345985 0) 0 nil])
([nil nil ((2826 . 2844) 2799) nil (26024 13407 345972 0) 0 nil])
([nil nil ((35236 . 35239) (35259 . 35262) (35266 . 35269) (35320 . 35323) (35384 . 35387) (35446 . 35449) (35502 . 35505) (35563 . 35566) (35639 . 35642) (35708 . 35710) (35715 . 35716) (35771 . 35774) (35797 . 35800) (35806 . 35808) (35809 . 35810) (35860 . 35862) (35863 . 35864) (35914 . 35917) (35968 . 35971) (36022 . 36025) (36088 . 36091) (36155 . 36157) (36158 . 36159) (36221 . 36224) (36288 . 36291) (36379 . 36382) (36417 . 36420) (36447 . 36450) (36523 . 36526) (36567 . 36570) (36601 . 36604) (36640 . 36643) (36697 . 36700) (36756 . 36759) (36800 . 36803) (36826 . 36829) (36868 . 36871) (36933 . 36936) (36981 . 36984) (37024 . 37027) 35236 (t 26024 13407 415958 477000)) nil (26024 13471 84872 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3083 . 3084) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -3106) (3083 . 3107) 3061 (t 26024 13471 167505 132000)) nil (26024 13528 638275 0) 0 nil])
([nil nil ((3099 . 3105) (#("splash" 0 6 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil)) . 3099) (undo-tree-id8615 . -5) (undo-tree-id8616 . -6) (undo-tree-id8617 . -6)) nil (26024 13528 638271 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3106 . 3107) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -3129) (3106 . 3130) 3104 (t 26024 13528 718319 453000)) nil (26024 13595 926854 0) 0 nil])
([nil nil ((3122 . 3128) (#("layout" 0 6 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil)) . 3122) (undo-tree-id8618 . -5) (undo-tree-id8619 . -6) (undo-tree-id8620 . -6)) nil (26024 13595 926850 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3129 . 3130) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -3152) (3129 . 3153) 3127 (t 26024 13596 9146 477000)) nil (26024 13622 74010 0) 0 nil])
([nil nil ((#("colors" 0 6 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil)) . 3145) (undo-tree-id8621 . -5) (undo-tree-id8622 . -6)) nil (26024 13622 74008 0) 0 nil])
([nil nil ((3145 . 3155)) nil (26024 13622 73996 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3156 . 3157) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -3183) (3156 . 3184) 3154 (t 26024 13622 155007 509000)) nil (26024 13630 840679 0) 0 nil])
([nil nil ((3172 . 3179) (#("minibuffer" 0 10 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil)) . 3172) (undo-tree-id8623 . -9) (undo-tree-id8624 . -10) (undo-tree-id8625 . -10)) nil (26024 13630 840675 0) 0 nil])
([nil nil ((3130 . 3131) 3144 (t 26024 13630 919213 64000)) nil (26024 13716 681670 0) 0 nil])
([nil nil ((3144 . 3154) (3132 . 3144) (3131 . 3133) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -3131) (3131 . 3132) (3130 . 3131) (3130 . 3131)) nil (26024 13716 681667 0) 0 nil])
([nil nil (3170) nil (26024 13792 497372 0) 0 nil])
([nil nil ((3157 . 3160) (t 26024 13716 759704 483000)) nil (26024 13792 497368 0) 0 nil])
([nil nil ((3187 . 3190) (t 26024 13792 585172 358000)) nil (26024 13794 628577 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 3158) (undo-tree-id8716 . -1) (undo-tree-id8717 . -1) (undo-tree-id8718 . -1) (undo-tree-id8719 . -1) (undo-tree-id8720 . -1) (undo-tree-id8721 . -1) (undo-tree-id8722 . -1) (undo-tree-id8723 . -1) (undo-tree-id8724 . -1) (undo-tree-id8725 . -1) (undo-tree-id8726 . -1) (undo-tree-id8727 . -1) (undo-tree-id8728 . -1) (undo-tree-id8729 . -1) (undo-tree-id8730 . -1) (undo-tree-id8731 . -1) (undo-tree-id8732 . -1) (undo-tree-id8733 . -1) (undo-tree-id8734 . -1) (undo-tree-id8735 . -1) (undo-tree-id8736 . -1) (undo-tree-id8737 . -1) (undo-tree-id8738 . -1) (undo-tree-id8739 . -1) (undo-tree-id8740 . -1) (undo-tree-id8741 . -1) (undo-tree-id8742 . -1) (undo-tree-id8743 . -1) (undo-tree-id8744 . -1) (undo-tree-id8745 . -1) (t 26024 13794 710272 536000)) nil (26024 13824 285324 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 3158) (undo-tree-id8714 . -1) (undo-tree-id8715 . -1)) nil (26024 13824 285301 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 3157) (undo-tree-id8626 . -1) (undo-tree-id8627 . -1) (undo-tree-id8628 . -1) (undo-tree-id8629 . -1) (undo-tree-id8630 . -1) (undo-tree-id8631 . -1) (undo-tree-id8632 . -1) (undo-tree-id8633 . -1) (undo-tree-id8634 . -1) (undo-tree-id8635 . -1) (undo-tree-id8636 . -1) (undo-tree-id8637 . -1) (undo-tree-id8638 . -1) (undo-tree-id8639 . -1) (undo-tree-id8640 . -1) (undo-tree-id8641 . -1) (undo-tree-id8642 . -1) (undo-tree-id8643 . -1) (undo-tree-id8644 . -1) (undo-tree-id8645 . -1) (undo-tree-id8646 . -1) (undo-tree-id8647 . -1) (undo-tree-id8648 . -1) (undo-tree-id8649 . -1) (undo-tree-id8650 . -1) (undo-tree-id8651 . -1) (undo-tree-id8652 . -1) (undo-tree-id8653 . -1) (undo-tree-id8654 . -1) (undo-tree-id8655 . -1) (undo-tree-id8656 . -1) (undo-tree-id8657 . -1) (undo-tree-id8658 . -1) (undo-tree-id8659 . -1) (undo-tree-id8660 . -1) (undo-tree-id8661 . -1) (undo-tree-id8662 . -1) (undo-tree-id8663 . -1) (undo-tree-id8664 . -1) (undo-tree-id8665 . -1) (undo-tree-id8666 . -1) (undo-tree-id8667 . -1) (undo-tree-id8668 . -1) (undo-tree-id8669 . -1) (undo-tree-id8670 . -1) (undo-tree-id8671 . -1) (undo-tree-id8672 . -1) (undo-tree-id8673 . -1) (undo-tree-id8674 . -1) (undo-tree-id8675 . -1) (undo-tree-id8676 . -1) (undo-tree-id8677 . -1) (undo-tree-id8678 . -1) (undo-tree-id8679 . -1) (undo-tree-id8680 . -1) (undo-tree-id8681 . -1) (undo-tree-id8682 . -1) (undo-tree-id8683 . -1) (undo-tree-id8684 . -1) (undo-tree-id8685 . -1) (undo-tree-id8686 . -1) (undo-tree-id8687 . -1) (undo-tree-id8688 . -1) (undo-tree-id8689 . -1) (undo-tree-id8690 . -1) (undo-tree-id8691 . -1) (undo-tree-id8692 . -1) (undo-tree-id8693 . -1) (undo-tree-id8694 . -1) (undo-tree-id8695 . -1) (undo-tree-id8696 . -1) (undo-tree-id8697 . -1) (undo-tree-id8698 . -1) (undo-tree-id8699 . -1) (undo-tree-id8700 . -1) (undo-tree-id8701 . -1) (undo-tree-id8702 . -1) (undo-tree-id8703 . -1) (undo-tree-id8704 . -1) (undo-tree-id8705 . -1) (undo-tree-id8706 . -1) (undo-tree-id8707 . -1) (undo-tree-id8708 . -1) (undo-tree-id8709 . -1) (undo-tree-id8710 . -1) (undo-tree-id8711 . -1) (undo-tree-id8712 . -1) (undo-tree-id8713 . -1)) nil (26024 13824 285294 0) 0 nil])
([nil nil ((#("(use-package mini-frame)
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 23 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 23 24 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24 25 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 3131) (undo-tree-id8748 . -24) (undo-tree-id8749 . -4) (undo-tree-id8750 . -25) (undo-tree-id8751 . -25) (undo-tree-id8752 . -25) (undo-tree-id8753 . -25) (undo-tree-id8754 . -25) (undo-tree-id8755 . -25) (undo-tree-id8756 . -25) (undo-tree-id8757 . -25) (undo-tree-id8758 . -25) (undo-tree-id8759 . -25) (undo-tree-id8760 . -25) (undo-tree-id8761 . -25) (undo-tree-id8762 . -25) (undo-tree-id8763 . -25) (undo-tree-id8764 . -25) (undo-tree-id8765 . -25) (undo-tree-id8766 . -25) (undo-tree-id8767 . -25) (undo-tree-id8768 . -25) (undo-tree-id8769 . -25) (undo-tree-id8770 . -25) (undo-tree-id8771 . -25) (undo-tree-id8772 . -25) (undo-tree-id8773 . -25) (undo-tree-id8774 . -25) (undo-tree-id8775 . -25) (undo-tree-id8776 . -25) (undo-tree-id8777 . -25) (undo-tree-id8778 . -25) (undo-tree-id8779 . -25) (undo-tree-id8780 . -25) (undo-tree-id8781 . -25) (undo-tree-id8782 . -25) (undo-tree-id8783 . -25) (undo-tree-id8784 . -25) (undo-tree-id8785 . -25) (undo-tree-id8786 . -25) (undo-tree-id8787 . -25) (undo-tree-id8788 . -25) (undo-tree-id8789 . -25) (undo-tree-id8790 . -25) (undo-tree-id8791 . -25) (undo-tree-id8792 . -25) (undo-tree-id8793 . -25) (undo-tree-id8794 . -25) (undo-tree-id8795 . -25) (undo-tree-id8796 . -25) (undo-tree-id8797 . -25) (undo-tree-id8798 . -25) (undo-tree-id8799 . -14) (undo-tree-id8800 . -14) (undo-tree-id8801 . -14) (undo-tree-id8802 . -14) (undo-tree-id8803 . -14) (undo-tree-id8804 . -14) (undo-tree-id8805 . -14) (undo-tree-id8806 . -14) (undo-tree-id8807 . -14) (undo-tree-id8808 . -14) (undo-tree-id8809 . -14) (undo-tree-id8810 . -14) (undo-tree-id8811 . -14) (undo-tree-id8812 . -14) (undo-tree-id8813 . -14) (undo-tree-id8814 . -14) (undo-tree-id8815 . -14) (undo-tree-id8816 . -14) (undo-tree-id8817 . -14) (undo-tree-id8818 . -14) (undo-tree-id8819 . -14) (undo-tree-id8820 . -13) (undo-tree-id8821 . -13) (undo-tree-id8822 . -13) (undo-tree-id8823 . -13) (undo-tree-id8824 . -13) (undo-tree-id8825 . -13) (undo-tree-id8826 . -13) (undo-tree-id8827 . -13) (undo-tree-id8828 . -13) (undo-tree-id8829 . -13) (undo-tree-id8830 . -13) (undo-tree-id8831 . -13) (undo-tree-id8832 . -13) (undo-tree-id8833 . -13) (undo-tree-id8834 . -13) (undo-tree-id8835 . -13) (undo-tree-id8836 . -13) (undo-tree-id8837 . -13) (undo-tree-id8838 . -13) (undo-tree-id8839 . -13) (undo-tree-id8840 . -13) (undo-tree-id8841 . -5) (undo-tree-id8842 . -5) (undo-tree-id8843 . -5) (undo-tree-id8844 . -5) (undo-tree-id8845 . -5) (undo-tree-id8846 . -5) (undo-tree-id8847 . -5) (undo-tree-id8848 . -5) (undo-tree-id8849 . -5) (undo-tree-id8850 . -5) (undo-tree-id8851 . -5) (undo-tree-id8852 . -5) (undo-tree-id8853 . -5) (undo-tree-id8854 . -5) (undo-tree-id8855 . -5) (undo-tree-id8856 . -5) (undo-tree-id8857 . -5) (undo-tree-id8858 . -5) (undo-tree-id8859 . -5) (undo-tree-id8860 . -5) (undo-tree-id8861 . -5) (undo-tree-id8862 . -5) (undo-tree-id8863 . -5) (undo-tree-id8864 . -5) (undo-tree-id8865 . -5) (undo-tree-id8866 . -5) (undo-tree-id8867 . -5) (undo-tree-id8868 . -5) (undo-tree-id8869 . -5) (undo-tree-id8870 . -5) (undo-tree-id8871 . -5) (undo-tree-id8872 . -5) (undo-tree-id8873 . -5) (undo-tree-id8874 . -5) (undo-tree-id8875 . -5) (undo-tree-id8876 . -5) (undo-tree-id8877 . -5) (undo-tree-id8878 . -5) (undo-tree-id8879 . -5) (undo-tree-id8880 . -5) (undo-tree-id8881 . -5) (undo-tree-id8882 . -5) (undo-tree-id8883 . -5) (undo-tree-id8884 . -5) (undo-tree-id8885 . -5) (undo-tree-id8886 . -5) (undo-tree-id8887 . -5) (undo-tree-id8888 . -5) (undo-tree-id8889 . -5) (undo-tree-id8890 . -5) (undo-tree-id8891 . -5) (undo-tree-id8892 . -5) (undo-tree-id8893 . -5) (undo-tree-id8894 . -5) (undo-tree-id8895 . -5) (undo-tree-id8896 . -5) (undo-tree-id8897 . -5) (undo-tree-id8898 . -5) (undo-tree-id8899 . -5) (undo-tree-id8900 . -5) (undo-tree-id8901 . -5) (undo-tree-id8902 . -5) (undo-tree-id8903 . -5) (undo-tree-id8904 . -13) (undo-tree-id8905 . -13) (undo-tree-id8906 . -13) (undo-tree-id8907 . -13) (undo-tree-id8908 . -13) (undo-tree-id8909 . -13) (undo-tree-id8910 . -13) (undo-tree-id8911 . -13) (undo-tree-id8912 . -13) (undo-tree-id8913 . -13) (undo-tree-id8914 . -13) (undo-tree-id8915 . -13) (undo-tree-id8916 . -13) (undo-tree-id8917 . -13) (undo-tree-id8918 . -13) (undo-tree-id8919 . -13) (undo-tree-id8920 . -13) (undo-tree-id8921 . -13) (undo-tree-id8922 . -13) (undo-tree-id8923 . -13) (undo-tree-id8924 . -13) (undo-tree-id8925 . -13) (undo-tree-id8926 . -13) (undo-tree-id8927 . -13) (undo-tree-id8928 . -13) (undo-tree-id8929 . -13) (undo-tree-id8930 . -13) (undo-tree-id8931 . -13) (undo-tree-id8932 . -13) (undo-tree-id8933 . -13) (undo-tree-id8934 . -13) (undo-tree-id8935 . -13) (undo-tree-id8936 . -13) (undo-tree-id8937 . -13) (undo-tree-id8938 . -13) (undo-tree-id8939 . -13) (undo-tree-id8940 . -13) (undo-tree-id8941 . -13) (undo-tree-id8942 . -13) (undo-tree-id8943 . -13) (undo-tree-id8944 . -13) (undo-tree-id8945 . -13) (undo-tree-id8946 . -13) (undo-tree-id8947 . -13) (undo-tree-id8948 . -13) (undo-tree-id8949 . -13) (undo-tree-id8950 . -13) (undo-tree-id8951 . -13) (undo-tree-id8952 . -13) (undo-tree-id8953 . -13) (undo-tree-id8954 . -13) (undo-tree-id8955 . -13) (undo-tree-id8956 . -13) (undo-tree-id8957 . -13) (undo-tree-id8958 . -13) (undo-tree-id8959 . -13) (undo-tree-id8960 . -5) (undo-tree-id8961 . -5) (undo-tree-id8962 . -5) (undo-tree-id8963 . -5) (undo-tree-id8964 . -5) (undo-tree-id8965 . -5) (undo-tree-id8966 . -5) (undo-tree-id8967 . -5) (undo-tree-id8968 . -5) (undo-tree-id8969 . -5) (undo-tree-id8970 . -5) (undo-tree-id8971 . -5) (undo-tree-id8972 . -5) (undo-tree-id8973 . -5) (undo-tree-id8974 . -5) (undo-tree-id8975 . -5) (undo-tree-id8976 . -5) (undo-tree-id8977 . -5) (undo-tree-id8978 . -5) (undo-tree-id8979 . -5) (undo-tree-id8980 . -5) (undo-tree-id8981 . -5) (undo-tree-id8982 . -5) (undo-tree-id8983 . -5) (undo-tree-id8984 . -5) (undo-tree-id8985 . -5) (undo-tree-id8986 . -5) (undo-tree-id8987 . -5) (undo-tree-id8988 . -5) (undo-tree-id8989 . -5) (undo-tree-id8990 . -5) (undo-tree-id8991 . -5) (undo-tree-id8992 . -5) (undo-tree-id8993 . -5) (undo-tree-id8994 . -5) (undo-tree-id8995 . -5) (undo-tree-id8996 . -5) (undo-tree-id8997 . -5) (undo-tree-id8998 . -5) (undo-tree-id8999 . -5) (undo-tree-id9000 . -5) (undo-tree-id9001 . -5) (undo-tree-id9002 . -4) (undo-tree-id9003 . -4) (undo-tree-id9004 . -4) (undo-tree-id9005 . -4) (undo-tree-id9006 . -4) (undo-tree-id9007 . -4) (undo-tree-id9008 . -4) (undo-tree-id9009 . -4) (undo-tree-id9010 . -4) (undo-tree-id9011 . -4) (undo-tree-id9012 . -4) (undo-tree-id9013 . -4) (undo-tree-id9014 . -4) (undo-tree-id9015 . -4) (undo-tree-id9016 . -4) (undo-tree-id9017 . -4) (undo-tree-id9018 . -4) (undo-tree-id9019 . -4) (undo-tree-id9020 . -4) (undo-tree-id9021 . -4) (undo-tree-id9022 . -4) (undo-tree-id9023 . -4) (undo-tree-id9024 . -4) (undo-tree-id9025 . -4) (undo-tree-id9026 . -4) (undo-tree-id9027 . -4) (undo-tree-id9028 . -4) (undo-tree-id9029 . -4) (undo-tree-id9030 . -4) (undo-tree-id9031 . -4) (undo-tree-id9032 . -4) (undo-tree-id9033 . -4) (undo-tree-id9034 . -4) (undo-tree-id9035 . -4) (undo-tree-id9036 . -4) (undo-tree-id9037 . -4) (undo-tree-id9038 . -4) (undo-tree-id9039 . -4) (undo-tree-id9040 . -4) (undo-tree-id9041 . -4) (undo-tree-id9042 . -4) (undo-tree-id9043 . -4) (undo-tree-id9044 . -4) (undo-tree-id9045 . -4) (undo-tree-id9046 . -4) (undo-tree-id9047 . -4) (undo-tree-id9048 . -4) (undo-tree-id9049 . -4) (undo-tree-id9050 . -4) (undo-tree-id9051 . -4) (undo-tree-id9052 . -4) (undo-tree-id9053 . -4) (undo-tree-id9054 . -4) (undo-tree-id9055 . -4) (undo-tree-id9056 . -4) (undo-tree-id9057 . -4) (undo-tree-id9058 . -4) (undo-tree-id9059 . -4) (undo-tree-id9060 . -4) (undo-tree-id9061 . -25) 3135 (t 26024 13824 366051 903000)) nil (26024 13842 889713 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 3131) (undo-tree-id8746 . -1) (undo-tree-id8747 . -1)) nil (26024 13842 889458 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 3158) (undo-tree-id9066 . -1) (undo-tree-id9067 . -1) (t 26024 13842 970126 45000)) nil (26024 13904 152450 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 3158) (undo-tree-id9064 . -1) (undo-tree-id9065 . -1)) nil (26024 13904 152447 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 3158) (undo-tree-id9062 . -1) (undo-tree-id9063 . -1)) nil (26024 13904 152442 0) 0 nil])
([nil nil ((3173 . 3179) (#("command" 0 7 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block))) . 3173) (undo-tree-id9068 . -6) (undo-tree-id9069 . -2) (undo-tree-id9070 . -7) (undo-tree-id9071 . -7) (t 26024 13904 233683 985000)) nil (26024 13995 343486 0) 0 nil])
([nil nil ((#("(require 'nano-minibuffer)
" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1 8 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 8 10 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 10 25 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 25 26 (src-block t font-lock-fontified t rear-nonsticky t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 26 27 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 3131) (undo-tree-id9072 . -26) (undo-tree-id9073 . -17) (undo-tree-id9074 . -17) (undo-tree-id9075 . -15) (undo-tree-id9076 . -15) (undo-tree-id9077 . -15) (undo-tree-id9078 . -15) (undo-tree-id9079 . -15) (undo-tree-id9080 . -15) (undo-tree-id9081 . -15) (undo-tree-id9082 . -15) (undo-tree-id9083 . -15) (undo-tree-id9084 . -15) (undo-tree-id9085 . -15) (undo-tree-id9086 . -15) (undo-tree-id9087 . -15) (undo-tree-id9088 . -15) (undo-tree-id9089 . -15) (undo-tree-id9090 . -15) (undo-tree-id9091 . -15) (undo-tree-id9092 . -15) (undo-tree-id9093 . -15) (undo-tree-id9094 . -15) (undo-tree-id9095 . -15) (undo-tree-id9096 . -15) (undo-tree-id9097 . -27) 3146 (t 26024 13995 426463 8000)) nil (26024 14638 635873 0) 0 nil])
([nil nil ((#("(require 'nano-agenda)
" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1 8 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 8 10 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 10 21 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 21 22 (rear-nonsticky t font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 22 23 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 3131) (undo-tree-id9098 . 2) (undo-tree-id9099 . -22) (undo-tree-id9100 . -15) (undo-tree-id9101 . -20) (undo-tree-id9102 . -20) (undo-tree-id9103 . -20) (undo-tree-id9104 . -20) (undo-tree-id9105 . -20) (undo-tree-id9106 . -20) (undo-tree-id9107 . -20) (undo-tree-id9108 . 23) (undo-tree-id9109 . -1) (undo-tree-id9110 . 2) (undo-tree-id9111 . -22) (undo-tree-id9112 . -23) (t 26024 14638 717610 407000)) nil (26024 14644 175901 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 3130) (undo-tree-id9113 . -1) (undo-tree-id9114 . -1) (undo-tree-id9115 . -1) (undo-tree-id9116 . -1) (undo-tree-id9117 . -1) (undo-tree-id9118 . -1) (undo-tree-id9119 . -1) (undo-tree-id9120 . -1) (undo-tree-id9121 . -1) (undo-tree-id9122 . -1) (undo-tree-id9123 . -1) (undo-tree-id9124 . -1) (undo-tree-id9125 . -1) (undo-tree-id9126 . -1) (undo-tree-id9127 . -1) (undo-tree-id9128 . -1) (undo-tree-id9129 . -1) (undo-tree-id9130 . -1) (undo-tree-id9131 . -1) (undo-tree-id9132 . -1) (undo-tree-id9133 . -1) (undo-tree-id9134 . -1) (undo-tree-id9135 . -1) (undo-tree-id9136 . -1) (undo-tree-id9137 . -1) (undo-tree-id9138 . -1) (undo-tree-id9139 . -1) (undo-tree-id9140 . -1) (undo-tree-id9141 . -1) (undo-tree-id9142 . -1) (undo-tree-id9143 . -1) (undo-tree-id9144 . -1) (undo-tree-id9145 . -1) (undo-tree-id9146 . -1) (undo-tree-id9147 . -1) (undo-tree-id9148 . -1) (undo-tree-id9149 . -1) (undo-tree-id9150 . -1) (undo-tree-id9151 . -1) (undo-tree-id9152 . -1) (undo-tree-id9153 . -1) (undo-tree-id9154 . -1) (undo-tree-id9155 . -1) (undo-tree-id9156 . -1) (undo-tree-id9157 . -1) (undo-tree-id9158 . -1) (undo-tree-id9159 . -1) (undo-tree-id9160 . -1) (undo-tree-id9161 . -1) (undo-tree-id9162 . -1) (undo-tree-id9163 . -1) (undo-tree-id9164 . -1) (undo-tree-id9165 . -1) (undo-tree-id9166 . -1) (undo-tree-id9167 . -1) (undo-tree-id9168 . -1) (undo-tree-id9169 . -1) (undo-tree-id9170 . -1) (undo-tree-id9171 . -1) (undo-tree-id9172 . -1) (undo-tree-id9173 . -1) (undo-tree-id9174 . -1) (undo-tree-id9175 . -1) (undo-tree-id9176 . -1) (undo-tree-id9177 . -1) (undo-tree-id9178 . -1) (t 26024 14644 261428 753000)) nil (26024 14645 509387 0) 0 nil])
([nil nil ((1539 . 1543) (t 26024 14645 589168 574000)) nil (26024 14768 961454 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-multiline t face (org-block))) . 1559) (undo-tree-id9181 . -1) (undo-tree-id9182 . -1)) nil (26024 14768 961453 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-multiline t face (org-block))) . 1559) (undo-tree-id9179 . -1) (undo-tree-id9180 . -1)) nil (26024 14768 961450 0) 0 nil])
([nil nil ((1559 . 1562)) nil (26024 14768 961432 0) 0 nil])
([nil nil ((45842 . 45852) (45830 . 45853) (#("<s" 0 2 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) jinx--pending t)) . -45830) (undo-tree-id9183 . -2) (undo-tree-id9184 . -1) (undo-tree-id9185 . -1) (undo-tree-id9186 . -1) (undo-tree-id9187 . -1) (undo-tree-id9188 . -1) (undo-tree-id9189 . -1) (undo-tree-id9190 . -1) (undo-tree-id9191 . -1) (undo-tree-id9192 . -2) (undo-tree-id9193 . -2) (undo-tree-id9194 . -2) (undo-tree-id9195 . -2) (undo-tree-id9196 . -2) (undo-tree-id9197 . -2) (undo-tree-id9198 . -2) (undo-tree-id9199 . -2) (undo-tree-id9200 . -2) (undo-tree-id9201 . -2) (undo-tree-id9202 . -2) (undo-tree-id9203 . -2) (undo-tree-id9204 . -2) (undo-tree-id9205 . -2) (undo-tree-id9206 . -2) (undo-tree-id9207 . -2) 45832 (45830 . 45832) (#("{" 0 1 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) jinx--pending t)) . -45830) (undo-tree-id9208 . -1) (undo-tree-id9209 . -1) (undo-tree-id9210 . -1) (undo-tree-id9211 . -1) (undo-tree-id9212 . -1) (undo-tree-id9213 . -1) (undo-tree-id9214 . -1) (undo-tree-id9215 . -1) (undo-tree-id9216 . -1) (undo-tree-id9217 . -1) (undo-tree-id9218 . -1) (undo-tree-id9219 . -1) (undo-tree-id9220 . -1) (undo-tree-id9221 . -1) (undo-tree-id9222 . -1) (undo-tree-id9223 . -1) (undo-tree-id9224 . -1) (undo-tree-id9225 . -1) (undo-tree-id9226 . -1) (undo-tree-id9227 . -1) (undo-tree-id9228 . -1) (undo-tree-id9229 . -1) (undo-tree-id9230 . -1) (undo-tree-id9231 . -1) (undo-tree-id9232 . -1) (undo-tree-id9233 . -1) (undo-tree-id9234 . -1) (undo-tree-id9235 . -1) (undo-tree-id9236 . -1) (undo-tree-id9237 . -1) (undo-tree-id9238 . -1) (undo-tree-id9239 . -1) (undo-tree-id9240 . -1) (undo-tree-id9241 . -1) (undo-tree-id9242 . -1) (undo-tree-id9243 . -1) (undo-tree-id9244 . -1) (undo-tree-id9245 . -1) (undo-tree-id9246 . -1) (undo-tree-id9247 . -1) (undo-tree-id9248 . -1) (undo-tree-id9249 . -1) (undo-tree-id9250 . -1) (undo-tree-id9251 . -1) (undo-tree-id9252 . -1) (undo-tree-id9253 . -1) (undo-tree-id9254 . -1) (undo-tree-id9255 . -1) (undo-tree-id9256 . -1) (undo-tree-id9257 . -1) (undo-tree-id9258 . -1) (undo-tree-id9259 . -1) (undo-tree-id9260 . -1) (undo-tree-id9261 . -1) (undo-tree-id9262 . -1) (undo-tree-id9263 . -1) (undo-tree-id9264 . -1) (undo-tree-id9265 . -1) (undo-tree-id9266 . -1) (undo-tree-id9267 . -1) (undo-tree-id9268 . -1) (undo-tree-id9269 . -1) (undo-tree-id9270 . -1) (undo-tree-id9271 . -1) (undo-tree-id9272 . -1) (undo-tree-id9273 . -1) (#("}" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) jinx--pending t)) . 45831) (undo-tree-id9274 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) jinx--pending t)) . -45831) (undo-tree-id9275 . -1) (undo-tree-id9276 . -1) (undo-tree-id9277 . -1) (undo-tree-id9278 . -1) (undo-tree-id9279 . -1) (undo-tree-id9280 . -1) (undo-tree-id9281 . -1) (undo-tree-id9282 . -1) (undo-tree-id9283 . -1) (undo-tree-id9284 . -1) (undo-tree-id9285 . -1) (undo-tree-id9286 . -1) (undo-tree-id9287 . -1) (undo-tree-id9288 . -1) (undo-tree-id9289 . -1) (undo-tree-id9290 . -1) (undo-tree-id9291 . -1) (undo-tree-id9292 . -1) (undo-tree-id9293 . -1) (undo-tree-id9294 . -1) (undo-tree-id9295 . -1) (undo-tree-id9296 . -1) (undo-tree-id9297 . -1) (undo-tree-id9298 . -1) 45832 (45831 . 45832) (45830 . 45832) (#("{" 0 1 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -45830) (undo-tree-id9299 . -1) (undo-tree-id9300 . -1) (45830 . 45831) (45829 . 45830) (45823 . 45829) (45822 . 45823) (t 26024 14769 39064 942000) 44036) nil (26024 14810 457693 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 45853 . 45854) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -45879) (45853 . 45880)) nil (26024 14810 457548 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) rear-nonsticky t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 45853) (undo-tree-id9301 . -1) (undo-tree-id9302 . -1) (undo-tree-id9303 . -1) (undo-tree-id9304 . -1) (undo-tree-id9305 . -1) (undo-tree-id9306 . -1) (undo-tree-id9307 . -1) (undo-tree-id9308 . -1) (undo-tree-id9309 . -1) (undo-tree-id9310 . -1) (undo-tree-id9311 . -1) (undo-tree-id9312 . -1) (undo-tree-id9313 . -1) (undo-tree-id9314 . -1) (undo-tree-id9315 . -1) (undo-tree-id9316 . -1) (undo-tree-id9317 . -1) (undo-tree-id9318 . -1) (undo-tree-id9319 . -1) (undo-tree-id9320 . -1) (undo-tree-id9321 . -1) (undo-tree-id9322 . -1) (undo-tree-id9323 . -1) (undo-tree-id9324 . -1) (undo-tree-id9325 . -1) (undo-tree-id9326 . -1) (undo-tree-id9327 . -1) (undo-tree-id9328 . -1) (undo-tree-id9329 . -1) (undo-tree-id9330 . -1) (undo-tree-id9331 . -1) (undo-tree-id9332 . -1) (undo-tree-id9333 . -1) (t 26024 14810 539597 889000)) nil (26024 14811 190583 0) 0 nil])
([nil nil ((3134 . 3135) (t 26024 14811 269945 576000) 3114) nil (26024 14832 261238 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3135 . 3136) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -3161) (3135 . 3162)) nil (26024 14832 261233 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) rear-nonsticky t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . 3135) (t 26024 14832 342749 383000)) nil (26024 14835 792102 0) 0 nil])
([nil nil ((2824 . 2825) 2804) nil (26024 14835 792101 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2825 . 2826) (#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -2826) (2825 . 2827)) nil (26024 14835 792096 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2825 . 2826) (#("
" 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t rear-nonsticky t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -2826) (2825 . 2827) (t 26024 14835 872617 18000)) nil (26024 14840 488394 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 2826) (undo-tree-id9510 . -1)) nil (26024 14840 488392 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 2826) (undo-tree-id9508 . 1) (undo-tree-id9509 . -1)) nil (26024 14840 488391 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 2825) (undo-tree-id9429 . -1) (undo-tree-id9430 . -1) (undo-tree-id9431 . -1) (undo-tree-id9432 . -1) (undo-tree-id9433 . -1) (undo-tree-id9434 . -1) (undo-tree-id9435 . -1) (undo-tree-id9436 . -1) (undo-tree-id9437 . -1) (undo-tree-id9438 . -1) (undo-tree-id9439 . -1) (undo-tree-id9440 . -1) (undo-tree-id9441 . -1) (undo-tree-id9442 . -1) (undo-tree-id9443 . -1) (undo-tree-id9444 . -1) (undo-tree-id9445 . -1) (undo-tree-id9446 . -1) (undo-tree-id9447 . -1) (undo-tree-id9448 . -1) (undo-tree-id9449 . -1) (undo-tree-id9450 . -1) (undo-tree-id9451 . -1) (undo-tree-id9452 . -1) (undo-tree-id9453 . -1) (undo-tree-id9454 . -1) (undo-tree-id9455 . -1) (undo-tree-id9456 . -1) (undo-tree-id9457 . -1) (undo-tree-id9458 . -1) (undo-tree-id9459 . -1) (undo-tree-id9460 . -1) (undo-tree-id9461 . -1) (undo-tree-id9462 . -1) (undo-tree-id9463 . -1) (undo-tree-id9464 . -1) (undo-tree-id9465 . -1) (undo-tree-id9466 . -1) (undo-tree-id9467 . -1) (undo-tree-id9468 . -1) (undo-tree-id9469 . -1) (undo-tree-id9470 . -1) (undo-tree-id9471 . -1) (undo-tree-id9472 . -1) (undo-tree-id9473 . -1) (undo-tree-id9474 . -1) (undo-tree-id9475 . -1) (undo-tree-id9476 . -1) (undo-tree-id9477 . -1) (undo-tree-id9478 . -1) (undo-tree-id9479 . -1) (undo-tree-id9480 . -1) (undo-tree-id9481 . -1) (undo-tree-id9482 . -1) (undo-tree-id9483 . -1) (undo-tree-id9484 . -1) (undo-tree-id9485 . -1) (undo-tree-id9486 . -1) (undo-tree-id9487 . -1) (undo-tree-id9488 . -1) (undo-tree-id9489 . -1) (undo-tree-id9490 . -1) (undo-tree-id9491 . -1) (undo-tree-id9492 . -1) (undo-tree-id9493 . -1) (undo-tree-id9494 . -1) (undo-tree-id9495 . -1) (undo-tree-id9496 . -1) (undo-tree-id9497 . -1) (undo-tree-id9498 . -1) (undo-tree-id9499 . -1) (undo-tree-id9500 . -1) (undo-tree-id9501 . -1) (undo-tree-id9502 . -1) (undo-tree-id9503 . -1) (undo-tree-id9504 . -1) (undo-tree-id9505 . -1) (undo-tree-id9506 . -1) (undo-tree-id9507 . -1)) nil (26024 14840 488387 0) 0 nil])
([nil nil (2831) nil (26024 14840 488320 0) 0 nil])
([nil nil ((2830 . 2831) (#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . -2830) (undo-tree-id9334 . -1) (undo-tree-id9335 . -1) (undo-tree-id9336 . -1) (undo-tree-id9337 . -1) (undo-tree-id9338 . -1) (undo-tree-id9339 . -1) (undo-tree-id9340 . -1) (undo-tree-id9341 . -1) (undo-tree-id9342 . -1) (undo-tree-id9343 . -1) (undo-tree-id9344 . -1) (undo-tree-id9345 . -1) (undo-tree-id9346 . -1) (undo-tree-id9347 . -1) (undo-tree-id9348 . -1) (undo-tree-id9349 . -1) (undo-tree-id9350 . -1) (undo-tree-id9351 . -1) (undo-tree-id9352 . -1) (undo-tree-id9353 . -1) (undo-tree-id9354 . -1) (undo-tree-id9355 . -1) (undo-tree-id9356 . -1) (undo-tree-id9357 . -1) (undo-tree-id9358 . -1) (undo-tree-id9359 . -1) (undo-tree-id9360 . -1) (undo-tree-id9361 . -1) (undo-tree-id9362 . -1) (undo-tree-id9363 . -1) (undo-tree-id9364 . -1) (undo-tree-id9365 . -1) (undo-tree-id9366 . -1) (undo-tree-id9367 . -1) (undo-tree-id9368 . -1) (undo-tree-id9369 . -1) (undo-tree-id9370 . -1) (undo-tree-id9371 . -1) (undo-tree-id9372 . -1) (undo-tree-id9373 . -1) (undo-tree-id9374 . -1) (undo-tree-id9375 . -1) (undo-tree-id9376 . -1) (undo-tree-id9377 . -1) (undo-tree-id9378 . -1) (undo-tree-id9379 . -1) (undo-tree-id9380 . -1) (undo-tree-id9381 . -1) (undo-tree-id9382 . -1) (undo-tree-id9383 . -1) (undo-tree-id9384 . -1) (undo-tree-id9385 . -1) (undo-tree-id9386 . -1) (undo-tree-id9387 . -1) (undo-tree-id9388 . -1) (undo-tree-id9389 . -1) (undo-tree-id9390 . -1) (undo-tree-id9391 . -1) (undo-tree-id9392 . -1) (undo-tree-id9393 . -1) (undo-tree-id9394 . -1) (undo-tree-id9395 . -1) (undo-tree-id9396 . -1) (undo-tree-id9397 . -1) (undo-tree-id9398 . -1) (undo-tree-id9399 . -1) (undo-tree-id9400 . -1) (undo-tree-id9401 . -1) (undo-tree-id9402 . -1) (undo-tree-id9403 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -2831) (undo-tree-id9404 . -1) (undo-tree-id9405 . -1) (undo-tree-id9406 . -1) (undo-tree-id9407 . -1) (undo-tree-id9408 . -1) (undo-tree-id9409 . -1) (undo-tree-id9410 . -1) (undo-tree-id9411 . -1) (undo-tree-id9412 . -1) (undo-tree-id9413 . -1) (undo-tree-id9414 . -1) (undo-tree-id9415 . -1) (undo-tree-id9416 . -1) (undo-tree-id9417 . -1) (undo-tree-id9418 . -1) (undo-tree-id9419 . -1) (undo-tree-id9420 . -1) (undo-tree-id9421 . -1) (undo-tree-id9422 . -1) (undo-tree-id9423 . -1) (undo-tree-id9424 . -1) (undo-tree-id9425 . -1) (undo-tree-id9426 . -1) (undo-tree-id9427 . -1) (undo-tree-id9428 . -1) 2832) nil (26024 14840 488316 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 3133 . 3134) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -3156) (3133 . 3157) 3125 (t 26024 14840 567140 967000)) nil (26024 14929 39296 0) 0 nil])
([nil nil ((3149 . 3156) (#("colors" 0 6 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil)) . 3149) (undo-tree-id9511 . -5) (undo-tree-id9512 . -6) (undo-tree-id9513 . -6)) nil (26024 14929 39292 0) 0 nil])
([nil nil ((#("t" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block))) . 3153) (undo-tree-id9514 . -1) (undo-tree-id9515 . -1) (undo-tree-id9516 . -1) (undo-tree-id9517 . -1) (undo-tree-id9518 . -1) (undo-tree-id9519 . -1) (undo-tree-id9520 . -1) (undo-tree-id9521 . -1) (undo-tree-id9522 . -1) (undo-tree-id9523 . -1) (undo-tree-id9524 . -1) (undo-tree-id9525 . -1) (undo-tree-id9526 . -1) (undo-tree-id9527 . -1) (undo-tree-id9528 . -1) (undo-tree-id9529 . -1) (t 26024 14929 108937 63000)) nil (26024 14945 370014 0) 0 nil])
([nil nil ((24978 . 24998) (24977 . 24979) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -24977) (undo-tree-id9530 . -1) (undo-tree-id9531 . -1) (24977 . 24978) (24976 . 24977) (24975 . 24976) (t 26024 14945 450201 343000) 24972) nil (26024 15145 904123 0) 0 nil])
([nil nil ((24986 . 24987) (t 26024 15145 984477 838000)) nil (26024 15166 17089 0) 0 nil])
([nil nil ((25002 . 25021) (25001 . 25003) (#("(" 0 1 (font-lock-fontified t src-block t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -25001) (undo-tree-id9532 . -1) (undo-tree-id9533 . -1) (25001 . 25002) (25001 . 25002) (t 26024 15166 95345 234000)) nil (26024 15274 67856 0) 0 nil])
([nil nil ((#(";" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 24842) (undo-tree-id9552 . -1) (undo-tree-id9553 . -1) (t 26024 15274 146556 649000)) nil (26024 15312 971250 0) 0 nil])
([nil nil ((#(";" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 24842) (undo-tree-id9550 . -1) (undo-tree-id9551 . -1)) nil (26024 15312 971247 0) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("         " 0 6 (face org-indent) 6 9 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 24842) (undo-tree-id9534 . -1) (undo-tree-id9535 . -1) (undo-tree-id9536 . -1) (undo-tree-id9537 . -1) (undo-tree-id9538 . -1) (undo-tree-id9539 . -1) (undo-tree-id9540 . -1) (undo-tree-id9541 . -1) (undo-tree-id9542 . -1) (undo-tree-id9543 . -1) (undo-tree-id9544 . -1) (undo-tree-id9545 . -1) (undo-tree-id9546 . -1) (undo-tree-id9547 . -1) (undo-tree-id9548 . -1) (undo-tree-id9549 . -1)) nil (26024 15312 971243 0) 0 nil])
([nil nil ((24994 . 25000) (24974 . 24994) (24973 . 24975) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -24973) (24973 . 24974) (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -24973) (undo-tree-id9554 . -1) 24974 (24973 . 24974) (24972 . 24973) (t 26024 15313 51107 908000) 24971) nil (26024 15464 759115 0) 0 nil])
([nil nil ((#("(use-package vertico-buffer)
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 13 27 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 27 28 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 28 29 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24973) (undo-tree-id9555 . 2) (undo-tree-id9556 . -28) (undo-tree-id9557 . -27) (undo-tree-id9558 . -27) (undo-tree-id9559 . -27) (undo-tree-id9560 . -28) (undo-tree-id9561 . -27) (undo-tree-id9562 . -27) (undo-tree-id9563 . -27) (undo-tree-id9564 . -27) (undo-tree-id9565 . -27) (undo-tree-id9566 . -27) (undo-tree-id9567 . -27) (undo-tree-id9568 . -27) (undo-tree-id9569 . -27) (undo-tree-id9570 . -27) (undo-tree-id9571 . -27) (undo-tree-id9572 . -27) (undo-tree-id9573 . -27) (undo-tree-id9574 . -27) (undo-tree-id9575 . -27) (undo-tree-id9576 . -27) (undo-tree-id9577 . -27) (undo-tree-id9578 . -27) (undo-tree-id9579 . -27) (undo-tree-id9580 . -27) (undo-tree-id9581 . -27) (undo-tree-id9582 . -27) (undo-tree-id9583 . -27) (undo-tree-id9584 . -27) (undo-tree-id9585 . -27) (undo-tree-id9586 . -27) (undo-tree-id9587 . -27) (undo-tree-id9588 . -27) (undo-tree-id9589 . -27) (undo-tree-id9590 . -27) (undo-tree-id9591 . -27) (undo-tree-id9592 . -27) (undo-tree-id9593 . -27) (undo-tree-id9594 . -27) (undo-tree-id9595 . -27) (undo-tree-id9596 . -27) (undo-tree-id9597 . -27) (undo-tree-id9598 . -27) (undo-tree-id9599 . -27) (undo-tree-id9600 . -27) (undo-tree-id9601 . -27) (undo-tree-id9602 . -27) (undo-tree-id9603 . -27) (undo-tree-id9604 . -27) (undo-tree-id9605 . -27) (undo-tree-id9606 . -27) (undo-tree-id9607 . -27) (undo-tree-id9608 . -27) (undo-tree-id9609 . -27) (undo-tree-id9610 . -27) (undo-tree-id9611 . -27) (undo-tree-id9612 . -27) (undo-tree-id9613 . -27) (undo-tree-id9614 . -27) (undo-tree-id9615 . -27) (undo-tree-id9616 . -27) (undo-tree-id9617 . -27) (undo-tree-id9618 . -27) (undo-tree-id9619 . -27) (undo-tree-id9620 . 2) (undo-tree-id9621 . -28) (undo-tree-id9622 . 29) (undo-tree-id9623 . -1) (undo-tree-id9624 . -27) (undo-tree-id9625 . -27) (undo-tree-id9626 . -27) (undo-tree-id9627 . -27) (undo-tree-id9628 . -27) (undo-tree-id9629 . -27) (undo-tree-id9630 . -27) (undo-tree-id9631 . -27) (undo-tree-id9632 . -27) (undo-tree-id9633 . -27) (undo-tree-id9634 . -27) (undo-tree-id9635 . -27) (undo-tree-id9636 . -27) (undo-tree-id9637 . -27) (undo-tree-id9638 . -27) (undo-tree-id9639 . -27) (undo-tree-id9640 . -27) (undo-tree-id9641 . -27) (undo-tree-id9642 . -27) (undo-tree-id9643 . -27) (undo-tree-id9644 . -27) (undo-tree-id9645 . -27) (undo-tree-id9646 . -27) (undo-tree-id9647 . -27) (undo-tree-id9648 . -27) (undo-tree-id9649 . -27) (undo-tree-id9650 . -27) (undo-tree-id9651 . -27) (undo-tree-id9652 . -27) (undo-tree-id9653 . -27) (undo-tree-id9654 . -27) (undo-tree-id9655 . -27) (undo-tree-id9656 . -27) (undo-tree-id9657 . -27) (undo-tree-id9658 . -27) (undo-tree-id9659 . -27) (undo-tree-id9660 . -27) (undo-tree-id9661 . -27) (undo-tree-id9662 . -27) (undo-tree-id9663 . -27) (undo-tree-id9664 . -27) (undo-tree-id9665 . -27) (undo-tree-id9666 . -27) (undo-tree-id9667 . -27) (undo-tree-id9668 . -27) (undo-tree-id9669 . -27) (undo-tree-id9670 . -27) (undo-tree-id9671 . -27) (undo-tree-id9672 . -27) (undo-tree-id9673 . -27) (undo-tree-id9674 . -27) (undo-tree-id9675 . -27) (undo-tree-id9676 . -27) (undo-tree-id9677 . -27) (undo-tree-id9678 . -27) (undo-tree-id9679 . -27) (undo-tree-id9680 . -27) (undo-tree-id9681 . -27) (undo-tree-id9682 . -27) (undo-tree-id9683 . -27) (undo-tree-id9684 . -27) (undo-tree-id9685 . -27) (undo-tree-id9686 . -27) (undo-tree-id9687 . -27) (undo-tree-id9688 . -27) (undo-tree-id9689 . -27) (undo-tree-id9690 . -27) (undo-tree-id9691 . -27) (undo-tree-id9692 . -27) (undo-tree-id9693 . -27) (undo-tree-id9694 . -27) (undo-tree-id9695 . -27) (undo-tree-id9696 . -27) (undo-tree-id9697 . -27) (undo-tree-id9698 . -27) (undo-tree-id9699 . -27) (undo-tree-id9700 . -27) (undo-tree-id9701 . -27) (undo-tree-id9702 . -27) (undo-tree-id9703 . -27) (undo-tree-id9704 . -27) (undo-tree-id9705 . -27) (undo-tree-id9706 . -27) (undo-tree-id9707 . -27) (undo-tree-id9708 . -27) (undo-tree-id9709 . -27) (undo-tree-id9710 . -27) (undo-tree-id9711 . -27) (undo-tree-id9712 . -27) (undo-tree-id9713 . -27) (undo-tree-id9714 . -27) (undo-tree-id9715 . -27) (undo-tree-id9716 . -27) (undo-tree-id9717 . -27) (undo-tree-id9718 . -27) (undo-tree-id9719 . -27) (undo-tree-id9720 . -27) (undo-tree-id9721 . -27) (undo-tree-id9722 . -27) (undo-tree-id9723 . -27) (undo-tree-id9724 . -27) (undo-tree-id9725 . -27) (undo-tree-id9726 . -27) (undo-tree-id9727 . -27) (undo-tree-id9728 . -27) (undo-tree-id9729 . -27) (undo-tree-id9730 . -27) (undo-tree-id9731 . -27) (undo-tree-id9732 . -27) (undo-tree-id9733 . -27) (undo-tree-id9734 . -27) (undo-tree-id9735 . -27) (undo-tree-id9736 . -27) (undo-tree-id9737 . -27) (undo-tree-id9738 . -27) (undo-tree-id9739 . -29) 25000 (t 26024 15464 836905 487000)) nil (26024 15471 903338 0) 0 nil])
([nil nil ((24979 . 24981) (24978 . 24979) (24972 . 24978) (#(":" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -24972) (undo-tree-id9827 . -1) 24973 (24969 . 24973) (24968 . 24969) (t 26024 15471 982070 591000) 24943) nil (26024 15559 400217 0) 0 nil])
([nil nil ((#("(require 'nano-vertico)
(nano-vertico-mode 1)
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 1 8 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 8 10 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 10 22 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 22 23 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 23 24 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 24 44 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 44 45 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 45 46 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24987) (undo-tree-id9772 . -14) (undo-tree-id9773 . -45) (undo-tree-id9774 . -25) (undo-tree-id9775 . -1) (undo-tree-id9776 . -25) (undo-tree-id9777 . -14) (undo-tree-id9778 . -14) (undo-tree-id9779 . -14) (undo-tree-id9780 . -1) (undo-tree-id9781 . -1) (undo-tree-id9782 . -1) (undo-tree-id9783 . -14) (undo-tree-id9784 . -14) (undo-tree-id9785 . -25) (undo-tree-id9786 . -46) (undo-tree-id9787 . -1) (undo-tree-id9788 . -25) (undo-tree-id9789 . -1) (undo-tree-id9790 . -1) (undo-tree-id9791 . -1) (undo-tree-id9792 . -1) (undo-tree-id9793 . -1) (undo-tree-id9794 . -1) (undo-tree-id9795 . -1) (undo-tree-id9796 . -1) (undo-tree-id9797 . -1) (undo-tree-id9798 . -1) (undo-tree-id9799 . -1) (undo-tree-id9800 . -1) (undo-tree-id9801 . -1) (undo-tree-id9802 . -1) (undo-tree-id9803 . -1) (undo-tree-id9804 . -25) (undo-tree-id9805 . -25) (undo-tree-id9806 . -25) (undo-tree-id9807 . -25) (undo-tree-id9808 . -25) (undo-tree-id9809 . -25) (undo-tree-id9810 . -25) (undo-tree-id9811 . -25) (undo-tree-id9812 . -25) (undo-tree-id9813 . -25) (undo-tree-id9814 . -25) (undo-tree-id9815 . -25) (undo-tree-id9816 . -25) (undo-tree-id9817 . -25) (undo-tree-id9818 . -25) (undo-tree-id9819 . -25) (undo-tree-id9820 . -25) (undo-tree-id9821 . -25) (undo-tree-id9822 . -25) (undo-tree-id9823 . -25) (undo-tree-id9824 . -25) (undo-tree-id9825 . -25) (undo-tree-id9826 . -46) 25012) nil (26024 15559 400213 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 24981 . 24982) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -25027) (24981 . 25028) 24979) nil (26024 15559 400157 0) 0 nil])
([nil nil ((#("  
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) rear-nonsticky t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 24979) (undo-tree-id9740 . -2) (undo-tree-id9741 . -3) (undo-tree-id9742 . -3) (undo-tree-id9743 . -3) (undo-tree-id9744 . -3) (undo-tree-id9745 . -3) (undo-tree-id9746 . -3) (undo-tree-id9747 . -3) (undo-tree-id9748 . -3) (undo-tree-id9749 . -3) (undo-tree-id9750 . -3) (undo-tree-id9751 . -3) (undo-tree-id9752 . -3) (undo-tree-id9753 . -3) (undo-tree-id9754 . -3) (undo-tree-id9755 . -3) (undo-tree-id9756 . -3) (undo-tree-id9757 . -3) (undo-tree-id9758 . -3) (undo-tree-id9759 . -3) (undo-tree-id9760 . -3) (undo-tree-id9761 . -3) (undo-tree-id9762 . -3) (undo-tree-id9763 . -3) (undo-tree-id9764 . -3) (undo-tree-id9765 . -3) (undo-tree-id9766 . -3) (undo-tree-id9767 . -3) (undo-tree-id9768 . -3) (undo-tree-id9769 . -3) (undo-tree-id9770 . -3) (undo-tree-id9771 . -3)) nil (26024 15559 400153 0) 0 nil])
([nil nil ((24979 . 24981) (25003 . 25005) (27454 . 27456) 24627 (t 26024 15559 483375 528000)) nil (26024 15561 51770 0) 0 nil])
([nil nil ((24991 . 25000) (#("c" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-string-face org-block))) . -24991) (undo-tree-id9828 . -1) (undo-tree-id9829 . -1) (undo-tree-id9830 . -1) (undo-tree-id9831 . -1) (undo-tree-id9832 . -1) (undo-tree-id9833 . -1) (undo-tree-id9834 . -1) (undo-tree-id9835 . -1) (undo-tree-id9836 . -1) (undo-tree-id9837 . -1) (undo-tree-id9838 . -1) (undo-tree-id9839 . -1) (undo-tree-id9840 . -1) (undo-tree-id9841 . -1) (undo-tree-id9842 . -1) (undo-tree-id9843 . -1) (undo-tree-id9844 . -1) 24992 (24991 . 24992) (24990 . 24992) (#("\"" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -24990) (undo-tree-id9845 . -1) (undo-tree-id9846 . -1) (24982 . 24991) (24981 . 24983) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -24981) (24981 . 24982) (#("m" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . -24981) (undo-tree-id9847 . -1) (#("e" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . -24982) (undo-tree-id9848 . -1) (#("s" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -24983) (undo-tree-id9849 . -1) (#("s" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . -24984) (undo-tree-id9850 . -1) 24985 (24979 . 24985) (24978 . 24979) (t 26024 15561 133023 894000) 24977) nil (26024 15593 395778 0) 0 nil])
([nil nil ((25067 . 25077) (#("\"" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . -25068) (undo-tree-id9851 . -1) 25069 (25067 . 25069) (#("\"" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -25067) (25067 . 25068) (25058 . 25066) (#("\"" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-string-face org-block) help-echo nil src-block t)) . -25058) (undo-tree-id9852 . -1) 25059 (25058 . 25060) (#("\"" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -25058) (25058 . 25059) (25057 . 25059) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -25057) (25057 . 25058) (t 26024 15593 476899 889000)) nil (26024 15602 347471 0) 0 nil])
([nil nil ((25031 . 25034) 24627 (t 26024 15602 429629 634000)) nil (26024 15636 219471 0) 0 nil])
([nil nil ((#(";; " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil src-block t)) . 25031) 24627 (t 26024 15636 303702 383000)) nil (26024 15654 469375 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -25031) (undo-tree-id9914 . -1) (#(")" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 25032) (25031 . 25033) (#("(" 0 1 (src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -25031) (25031 . 25032) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -25031) (undo-tree-id9915 . -1) (#(")" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 25032) (25031 . 25033) (#("(" 0 1 (src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . -25031) (25029 . 25032) (25029 . 25030) 25031 (t 26024 15654 551455 103000)) nil (26024 15662 613443 0) 0 nil])
([nil nil ((#("  
" 0 2 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 25029) (undo-tree-id9853 . 1) (undo-tree-id9854 . -2) (undo-tree-id9855 . -1) (undo-tree-id9856 . -2) (undo-tree-id9857 . -2) (undo-tree-id9858 . -2) (undo-tree-id9859 . -2) (undo-tree-id9860 . -2) (undo-tree-id9861 . -2) (undo-tree-id9862 . -2) (undo-tree-id9863 . -2) (undo-tree-id9864 . -2) (undo-tree-id9865 . -2) (undo-tree-id9866 . -2) (undo-tree-id9867 . -2) (undo-tree-id9868 . -2) (undo-tree-id9869 . -2) (undo-tree-id9870 . -2) (undo-tree-id9871 . -1) (undo-tree-id9872 . -1) (undo-tree-id9873 . -1) (undo-tree-id9874 . -1) (undo-tree-id9875 . -1) (undo-tree-id9876 . -1) (undo-tree-id9877 . -1) (undo-tree-id9878 . -1) (undo-tree-id9879 . -1) (undo-tree-id9880 . -1) (undo-tree-id9881 . -1) (undo-tree-id9882 . -1) (undo-tree-id9883 . -1) (undo-tree-id9884 . -1) (undo-tree-id9885 . -1) (undo-tree-id9886 . -1) (undo-tree-id9887 . -1) (undo-tree-id9888 . -1) (undo-tree-id9889 . -1) (undo-tree-id9890 . -1) (undo-tree-id9891 . -1) (undo-tree-id9892 . -1) (undo-tree-id9893 . -1) (undo-tree-id9894 . -1) (undo-tree-id9895 . -1) (undo-tree-id9896 . -1) (undo-tree-id9897 . -1) (undo-tree-id9898 . -1) (undo-tree-id9899 . -1) (undo-tree-id9900 . -1) (undo-tree-id9901 . -1) (undo-tree-id9902 . -1) (undo-tree-id9903 . -1) (undo-tree-id9904 . -1) (undo-tree-id9905 . -1) (undo-tree-id9906 . -1) (undo-tree-id9907 . -1) (undo-tree-id9908 . -1) (undo-tree-id9909 . -1) (undo-tree-id9910 . -1) (undo-tree-id9911 . -1) (undo-tree-id9912 . -1) (undo-tree-id9913 . -3) 25030) nil (26024 15662 613436 0) 0 nil])
([nil nil ((#("  (message \"in config\")
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 11 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 11 21 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 21 22 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 22 23 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 23 24 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24979) (undo-tree-id10079 . -23) (undo-tree-id10080 . -2) (undo-tree-id10081 . 22) (undo-tree-id10082 . -3) (undo-tree-id10083 . 2) (undo-tree-id10084 . -23) (undo-tree-id10085 . -2) (undo-tree-id10086 . -2) (undo-tree-id10087 . -2) (undo-tree-id10088 . -24) 24981 (t 26024 15662 694621 71000)) nil (26024 15698 944658 0) 0 nil])
([nil nil ((#("  (require 'nano-vertico)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 3 10 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 10 12 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 12 24 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 24 25 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 25 26 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 24979) (undo-tree-id10023 . -25) (undo-tree-id10024 . 26) (undo-tree-id10025 . -2) (undo-tree-id10026 . 24) (undo-tree-id10027 . -3) (undo-tree-id10028 . 2) (undo-tree-id10029 . -25) (undo-tree-id10030 . -25) (undo-tree-id10031 . -2) (undo-tree-id10032 . -2) (undo-tree-id10033 . -2) (undo-tree-id10034 . -2) (undo-tree-id10035 . -2) (undo-tree-id10036 . -2) (undo-tree-id10037 . -2) (undo-tree-id10038 . -2) (undo-tree-id10039 . -2) (undo-tree-id10040 . -2) (undo-tree-id10041 . -2) (undo-tree-id10042 . -2) (undo-tree-id10043 . -2) (undo-tree-id10044 . -2) (undo-tree-id10045 . -2) (undo-tree-id10046 . -2) (undo-tree-id10047 . -2) (undo-tree-id10048 . -2) (undo-tree-id10049 . -2) (undo-tree-id10050 . -2) (undo-tree-id10051 . -2) (undo-tree-id10052 . -2) (undo-tree-id10053 . -2) (undo-tree-id10054 . -2) (undo-tree-id10055 . -2) (undo-tree-id10056 . -2) (undo-tree-id10057 . -2) (undo-tree-id10058 . -2) (undo-tree-id10059 . -2) (undo-tree-id10060 . -2) (undo-tree-id10061 . -2) (undo-tree-id10062 . -2) (undo-tree-id10063 . -2) (undo-tree-id10064 . -2) (undo-tree-id10065 . -2) (undo-tree-id10066 . -2) (undo-tree-id10067 . -2) (undo-tree-id10068 . -2) (undo-tree-id10069 . -2) (undo-tree-id10070 . -2) (undo-tree-id10071 . -2) (undo-tree-id10072 . -2) (undo-tree-id10073 . -2) (undo-tree-id10074 . -2) (undo-tree-id10075 . -2) (undo-tree-id10076 . -2) (undo-tree-id10077 . -2) (undo-tree-id10078 . -26) 24981) nil (26024 15698 944649 0) 0 nil])
([nil nil ((#("  (nano-vertico-mode 1)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 22 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 22 23 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 23 24 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 24979) (undo-tree-id9959 . 24) (undo-tree-id9960 . -23) (undo-tree-id9961 . 24) (undo-tree-id9962 . -2) (undo-tree-id9963 . 22) (undo-tree-id9964 . -3) (undo-tree-id9965 . 2) (undo-tree-id9966 . -23) (undo-tree-id9967 . -23) (undo-tree-id9968 . -2) (undo-tree-id9969 . -2) (undo-tree-id9970 . -2) (undo-tree-id9971 . -2) (undo-tree-id9972 . -2) (undo-tree-id9973 . -2) (undo-tree-id9974 . -2) (undo-tree-id9975 . -2) (undo-tree-id9976 . -2) (undo-tree-id9977 . -2) (undo-tree-id9978 . -2) (undo-tree-id9979 . -2) (undo-tree-id9980 . -2) (undo-tree-id9981 . -2) (undo-tree-id9982 . -2) (undo-tree-id9983 . -2) (undo-tree-id9984 . -2) (undo-tree-id9985 . -2) (undo-tree-id9986 . -2) (undo-tree-id9987 . -2) (undo-tree-id9988 . -2) (undo-tree-id9989 . -2) (undo-tree-id9990 . -2) (undo-tree-id9991 . -2) (undo-tree-id9992 . -2) (undo-tree-id9993 . -2) (undo-tree-id9994 . -2) (undo-tree-id9995 . -2) (undo-tree-id9996 . -2) (undo-tree-id9997 . -2) (undo-tree-id9998 . -2) (undo-tree-id9999 . -2) (undo-tree-id10000 . -2) (undo-tree-id10001 . -2) (undo-tree-id10002 . -2) (undo-tree-id10003 . -2) (undo-tree-id10004 . -2) (undo-tree-id10005 . -2) (undo-tree-id10006 . -2) (undo-tree-id10007 . -2) (undo-tree-id10008 . -2) (undo-tree-id10009 . -2) (undo-tree-id10010 . -2) (undo-tree-id10011 . -2) (undo-tree-id10012 . -2) (undo-tree-id10013 . -2) (undo-tree-id10014 . -2) (undo-tree-id10015 . -2) (undo-tree-id10016 . -2) (undo-tree-id10017 . -2) (undo-tree-id10018 . -2) (undo-tree-id10019 . -2) (undo-tree-id10020 . -2) (undo-tree-id10021 . -2) (undo-tree-id10022 . -24) 24981) nil (26024 15698 944599 0) 0 nil])
([nil nil ((#("(message \"out config\")
" 0 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 9 20 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 20 21 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 21 22 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 22 23 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24983) (undo-tree-id9916 . -23) (undo-tree-id9917 . -22) (undo-tree-id9918 . -23) (undo-tree-id9919 . -23) (undo-tree-id9920 . -23) (undo-tree-id9921 . -23) (undo-tree-id9922 . -23) (undo-tree-id9923 . -23) (undo-tree-id9924 . -23) (undo-tree-id9925 . -23) (undo-tree-id9926 . -2) (undo-tree-id9927 . -2) (undo-tree-id9928 . -2) (undo-tree-id9929 . -2) (undo-tree-id9930 . -2) (undo-tree-id9931 . -2) (undo-tree-id9932 . -2) (undo-tree-id9933 . -2) (undo-tree-id9934 . -2) (undo-tree-id9935 . -2) (undo-tree-id9936 . -2) (undo-tree-id9937 . -2) (undo-tree-id9938 . -2) (undo-tree-id9939 . -2) (undo-tree-id9940 . -2) (undo-tree-id9941 . -2) (undo-tree-id9942 . -2) (undo-tree-id9943 . -2) (undo-tree-id9944 . -2) (undo-tree-id9945 . -2) (undo-tree-id9946 . -2) (undo-tree-id9947 . -2) (undo-tree-id9948 . -2) (undo-tree-id9949 . -2) (undo-tree-id9950 . -2) (undo-tree-id9951 . -2) (undo-tree-id9952 . -2) (undo-tree-id9953 . -2) (undo-tree-id9954 . -2) (undo-tree-id9955 . -2) (undo-tree-id9956 . -2) (undo-tree-id9957 . -2) (undo-tree-id9958 . -23) 24985) nil (26024 15698 944540 0) 0 nil])
([nil nil ((25010 . 25011) (25009 . 25010) (25002 . 25009) (24985 . 25002) (24984 . 24986) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -24984) (24984 . 24985) (24983 . 24984) (#("*" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t)) . -24983) (undo-tree-id10090 . -1) (#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t)) . -24984) (undo-tree-id10091 . -1) 24985 (24984 . 24985) (24983 . 24984) (24983 . 24984) (t 26024 15699 27294 897000)) nil (26024 15755 777965 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 25013 . 25014) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)))) . -25175) (25013 . 25176)) nil (26024 15755 777961 0) 0 nil])
([nil nil ((25071 . 25086) (25070 . 25072) (#("\"" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -25070) (25070 . 25071) (25069 . 25071) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -25069) (25068 . 25070) (#("w" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block))) . -25068) (undo-tree-id10089 . -1) 25069 (25061 . 25069) (25052 . 25060) (25047 . 25052) (#(" " 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)))) . -25047) (25047 . 25048) (#("/" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -25047) (25040 . 25048) (25039 . 25041) (#("\"" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -25039) (25039 . 25040) (25032 . 25039) (25020 . 25032) (25019 . 25021) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -25019) (25011 . 25020)) nil (26024 15755 777957 0) 0 nil])
([nil nil ((25089 . 25090) (t 26024 15755 857280 232000)) nil (26024 15766 317352 0) 0 nil])
([nil nil ((25089 . 25090) (t 26024 15766 387395 123000) 25011) nil (26024 15798 603350 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -25100) (undo-tree-id10094 . -1) (undo-tree-id10095 . -1) (undo-tree-id10096 . -1) (undo-tree-id10097 . -1) (undo-tree-id10098 . -1) (undo-tree-id10099 . -1) (undo-tree-id10100 . -1) (undo-tree-id10101 . -1) (undo-tree-id10102 . -1) (undo-tree-id10103 . -1) (undo-tree-id10104 . -1) (undo-tree-id10105 . -1) (undo-tree-id10106 . -1) (undo-tree-id10107 . -1) (undo-tree-id10108 . -1) (undo-tree-id10109 . -1) (undo-tree-id10110 . -1) (undo-tree-id10111 . -1) (undo-tree-id10112 . -1) (undo-tree-id10113 . -1) (undo-tree-id10114 . -1) (undo-tree-id10115 . -1) (undo-tree-id10116 . -1) (undo-tree-id10117 . -1) (undo-tree-id10118 . -1) (undo-tree-id10119 . -1) (undo-tree-id10120 . -1) (undo-tree-id10121 . -1) (undo-tree-id10122 . -1) (undo-tree-id10123 . -1) (undo-tree-id10124 . -1) (undo-tree-id10125 . -1) (undo-tree-id10126 . -1) (undo-tree-id10127 . -1) (undo-tree-id10128 . -1) (undo-tree-id10129 . -1) (undo-tree-id10130 . -1) (undo-tree-id10131 . -1) (undo-tree-id10132 . -1) (undo-tree-id10133 . -1) (undo-tree-id10134 . -1) (undo-tree-id10135 . -1) (undo-tree-id10136 . -1) (undo-tree-id10137 . -1) (undo-tree-id10138 . -1) (undo-tree-id10139 . -1) (undo-tree-id10140 . -1) (undo-tree-id10141 . -1) (undo-tree-id10142 . -1) (undo-tree-id10143 . -1) (undo-tree-id10144 . -1) (undo-tree-id10145 . -1) (undo-tree-id10146 . -1) (undo-tree-id10147 . -1) (undo-tree-id10148 . -1) (undo-tree-id10149 . -1) (undo-tree-id10150 . -1) (undo-tree-id10151 . -1) (undo-tree-id10152 . -1) (undo-tree-id10153 . -1) (undo-tree-id10154 . -1) (undo-tree-id10155 . -1) (undo-tree-id10156 . -1) (undo-tree-id10157 . -1) (undo-tree-id10158 . -1) (undo-tree-id10159 . -1) (undo-tree-id10160 . -1) (undo-tree-id10161 . -1) (undo-tree-id10162 . -1) (undo-tree-id10163 . -1) (undo-tree-id10164 . -1) (undo-tree-id10165 . -1) (undo-tree-id10166 . -1) (undo-tree-id10167 . -1) (undo-tree-id10168 . -1) (undo-tree-id10169 . -1) (undo-tree-id10170 . -1) (undo-tree-id10171 . -1) (undo-tree-id10172 . -1) (undo-tree-id10173 . -1) (undo-tree-id10174 . -1) (undo-tree-id10175 . -1) (undo-tree-id10176 . -1) (undo-tree-id10177 . -1) (undo-tree-id10178 . -1) (undo-tree-id10179 . -1) (undo-tree-id10180 . -1) (undo-tree-id10181 . -1) (undo-tree-id10182 . -1) (undo-tree-id10183 . -1) (undo-tree-id10184 . -1) (undo-tree-id10185 . -1) (undo-tree-id10186 . -1) (undo-tree-id10187 . -1) (undo-tree-id10188 . -1) (undo-tree-id10189 . -1) (undo-tree-id10190 . -1) (undo-tree-id10191 . -1) (undo-tree-id10192 . -1) (undo-tree-id10193 . -1) (undo-tree-id10194 . -1) (undo-tree-id10195 . -1) (undo-tree-id10196 . -1) (undo-tree-id10197 . -1) (undo-tree-id10198 . -1) (undo-tree-id10199 . -1) (undo-tree-id10200 . -1) (undo-tree-id10201 . -1) (undo-tree-id10202 . -1) (undo-tree-id10203 . -1) (undo-tree-id10204 . -1) (undo-tree-id10205 . -1) (undo-tree-id10206 . -1) (undo-tree-id10207 . -1) (undo-tree-id10208 . -1) (undo-tree-id10209 . -1) (undo-tree-id10210 . -1) (undo-tree-id10211 . -1) (undo-tree-id10212 . -1) (undo-tree-id10213 . -1) (undo-tree-id10214 . -1) (undo-tree-id10215 . -1) (undo-tree-id10216 . -1) (undo-tree-id10217 . -1) (undo-tree-id10218 . -1) (undo-tree-id10219 . -1) (undo-tree-id10220 . -1) (undo-tree-id10221 . -1) (undo-tree-id10222 . -1) (undo-tree-id10223 . -1) (undo-tree-id10224 . -1) (undo-tree-id10225 . -1) (undo-tree-id10226 . -1) (undo-tree-id10227 . -1) (undo-tree-id10228 . -1) (undo-tree-id10229 . -1) (undo-tree-id10230 . -1) (undo-tree-id10231 . -1) (undo-tree-id10232 . -1) (undo-tree-id10233 . -1) (undo-tree-id10234 . -1) (undo-tree-id10235 . -1) (undo-tree-id10236 . -1) (undo-tree-id10237 . -1) (undo-tree-id10238 . -1) (undo-tree-id10239 . -1) (undo-tree-id10240 . -1) (undo-tree-id10241 . -1) (undo-tree-id10242 . -1) (undo-tree-id10243 . -1) (undo-tree-id10244 . -1) (undo-tree-id10245 . -1) (undo-tree-id10246 . -1) (undo-tree-id10247 . -1) (undo-tree-id10248 . -1) (undo-tree-id10249 . -1) (undo-tree-id10250 . -1) (undo-tree-id10251 . -1) (undo-tree-id10252 . -1) (undo-tree-id10253 . -1) (undo-tree-id10254 . -1) (undo-tree-id10255 . -1) (undo-tree-id10256 . -1) (undo-tree-id10257 . -1) (undo-tree-id10258 . -1) (undo-tree-id10259 . -1) (undo-tree-id10260 . -1) (undo-tree-id10261 . -1) (undo-tree-id10262 . -1) (undo-tree-id10263 . -1) (undo-tree-id10264 . -1) (undo-tree-id10265 . -1) (undo-tree-id10266 . -1) (undo-tree-id10267 . -1) (undo-tree-id10268 . -1) (undo-tree-id10269 . -1) (undo-tree-id10270 . -1) (undo-tree-id10271 . -1) (undo-tree-id10272 . -1) (undo-tree-id10273 . -1) (undo-tree-id10274 . -1) (undo-tree-id10275 . -1) (undo-tree-id10276 . -1) (undo-tree-id10277 . -1) (undo-tree-id10278 . -1) (undo-tree-id10279 . -1) (undo-tree-id10280 . -1) (undo-tree-id10281 . -1) (undo-tree-id10282 . -1) (undo-tree-id10283 . -1) (undo-tree-id10284 . -1) (undo-tree-id10285 . -1) (undo-tree-id10286 . -1) (undo-tree-id10287 . -1) (undo-tree-id10288 . -1) (undo-tree-id10289 . -1) (undo-tree-id10290 . -1) (undo-tree-id10291 . -1) (undo-tree-id10292 . -1) (undo-tree-id10293 . -1) (undo-tree-id10294 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -25101) (undo-tree-id10295 . -1) (undo-tree-id10296 . -1) (undo-tree-id10297 . -1) (undo-tree-id10298 . -1) (undo-tree-id10299 . -1) (undo-tree-id10300 . -1) (undo-tree-id10301 . -1) (undo-tree-id10302 . -1) (undo-tree-id10303 . -1) (undo-tree-id10304 . -1) (undo-tree-id10305 . -1) (undo-tree-id10306 . -1) (undo-tree-id10307 . -1) (undo-tree-id10308 . -1) (undo-tree-id10309 . -1) (undo-tree-id10310 . -1) (undo-tree-id10311 . -1) (undo-tree-id10312 . -1) (undo-tree-id10313 . -1) (undo-tree-id10314 . -1) (undo-tree-id10315 . -1) (undo-tree-id10316 . -1) (undo-tree-id10317 . -1) (undo-tree-id10318 . -1) (undo-tree-id10319 . -1) (undo-tree-id10320 . -1) (undo-tree-id10321 . -1) (undo-tree-id10322 . -1) (undo-tree-id10323 . -1) (undo-tree-id10324 . -1) (undo-tree-id10325 . -1) (undo-tree-id10326 . -1) (undo-tree-id10327 . -1) (undo-tree-id10328 . -1) (undo-tree-id10329 . -1) (undo-tree-id10330 . -1) (undo-tree-id10331 . -1) (undo-tree-id10332 . -1) (undo-tree-id10333 . -1) (undo-tree-id10334 . -1) (undo-tree-id10335 . -1) (undo-tree-id10336 . -1) (undo-tree-id10337 . -1) (undo-tree-id10338 . -1) (undo-tree-id10339 . -1) (undo-tree-id10340 . -1) (undo-tree-id10341 . -1) (undo-tree-id10342 . -1) (undo-tree-id10343 . -1) (undo-tree-id10344 . -1) (undo-tree-id10345 . -1) (undo-tree-id10346 . -1) (undo-tree-id10347 . -1) (undo-tree-id10348 . -1) (undo-tree-id10349 . -1) (undo-tree-id10350 . -1) (undo-tree-id10351 . -1) (undo-tree-id10352 . -1) (undo-tree-id10353 . -1) (undo-tree-id10354 . -1) (undo-tree-id10355 . -1) (undo-tree-id10356 . -1) (undo-tree-id10357 . -1) (undo-tree-id10358 . -1) (undo-tree-id10359 . -1) (undo-tree-id10360 . -1) (undo-tree-id10361 . -1) (undo-tree-id10362 . -1) (undo-tree-id10363 . -1) (undo-tree-id10364 . -1) (undo-tree-id10365 . -1) (undo-tree-id10366 . -1) (undo-tree-id10367 . -1) (undo-tree-id10368 . -1) (undo-tree-id10369 . -1) (undo-tree-id10370 . -1) (undo-tree-id10371 . -1) (undo-tree-id10372 . -1) (undo-tree-id10373 . -1) (undo-tree-id10374 . -1) (undo-tree-id10375 . -1) (undo-tree-id10376 . -1) (undo-tree-id10377 . -1) (undo-tree-id10378 . -1) (undo-tree-id10379 . -1) (undo-tree-id10380 . -1) (undo-tree-id10381 . -1) (undo-tree-id10382 . -1) (undo-tree-id10383 . -1) (undo-tree-id10384 . -1) (undo-tree-id10385 . -1) (undo-tree-id10386 . -1) (undo-tree-id10387 . -1) (undo-tree-id10388 . -1) (undo-tree-id10389 . -1) (undo-tree-id10390 . -1) (undo-tree-id10391 . -1) (undo-tree-id10392 . -1) (undo-tree-id10393 . -1) (undo-tree-id10394 . -1) (undo-tree-id10395 . -1) (undo-tree-id10396 . -1) (undo-tree-id10397 . -1) (undo-tree-id10398 . -1) (undo-tree-id10399 . -1) (undo-tree-id10400 . -1) (undo-tree-id10401 . -1) (undo-tree-id10402 . -1) (undo-tree-id10403 . -1) (undo-tree-id10404 . -1) (undo-tree-id10405 . -1) (undo-tree-id10406 . -1) (undo-tree-id10407 . -1) (undo-tree-id10408 . -1) (undo-tree-id10409 . -1) (undo-tree-id10410 . -1) (undo-tree-id10411 . -1) (undo-tree-id10412 . -1) (undo-tree-id10413 . -1) (undo-tree-id10414 . -1) (undo-tree-id10415 . -1) (undo-tree-id10416 . -1) (undo-tree-id10417 . -1) (undo-tree-id10418 . -1) (undo-tree-id10419 . -1) (undo-tree-id10420 . -1) (undo-tree-id10421 . -1) (undo-tree-id10422 . -1) (undo-tree-id10423 . -1) (undo-tree-id10424 . -1) (undo-tree-id10425 . -1) (undo-tree-id10426 . -1) (undo-tree-id10427 . -1) (undo-tree-id10428 . -1) (undo-tree-id10429 . -1) (undo-tree-id10430 . -1) (undo-tree-id10431 . -1) (undo-tree-id10432 . -1) (undo-tree-id10433 . -1) (undo-tree-id10434 . -1) (undo-tree-id10435 . -1) (undo-tree-id10436 . -1) (undo-tree-id10437 . -1) (undo-tree-id10438 . -1) (undo-tree-id10439 . -1) (undo-tree-id10440 . -1) (undo-tree-id10441 . -1) (undo-tree-id10442 . -1) (undo-tree-id10443 . -1) (undo-tree-id10444 . -1) (undo-tree-id10445 . -1) (undo-tree-id10446 . -1) (undo-tree-id10447 . -1) (undo-tree-id10448 . -1) (undo-tree-id10449 . -1) (undo-tree-id10450 . -1) (undo-tree-id10451 . -1) (undo-tree-id10452 . -1) (undo-tree-id10453 . -1) (undo-tree-id10454 . -1) (undo-tree-id10455 . -1) (undo-tree-id10456 . -1) (undo-tree-id10457 . -1) (undo-tree-id10458 . -1) (undo-tree-id10459 . -1) (undo-tree-id10460 . -1) (undo-tree-id10461 . -1) (undo-tree-id10462 . -1) (undo-tree-id10463 . -1) (undo-tree-id10464 . -1) (undo-tree-id10465 . -1) (undo-tree-id10466 . -1) (#(":" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -25102) (undo-tree-id10467 . -1) (undo-tree-id10468 . -1) (undo-tree-id10469 . -1) (undo-tree-id10470 . -1) (undo-tree-id10471 . -1) (undo-tree-id10472 . -1) (undo-tree-id10473 . -1) (undo-tree-id10474 . -1) (undo-tree-id10475 . -1) (undo-tree-id10476 . -1) (undo-tree-id10477 . -1) (undo-tree-id10478 . -1) (undo-tree-id10479 . -1) (undo-tree-id10480 . -1) (undo-tree-id10481 . -1) (undo-tree-id10482 . -1) (undo-tree-id10483 . -1) (undo-tree-id10484 . -1) (undo-tree-id10485 . -1) (undo-tree-id10486 . -1) (undo-tree-id10487 . -1) (undo-tree-id10488 . -1) (undo-tree-id10489 . -1) (undo-tree-id10490 . -1) (undo-tree-id10491 . -1) (undo-tree-id10492 . -1) (undo-tree-id10493 . -1) (undo-tree-id10494 . -1) (undo-tree-id10495 . -1) (undo-tree-id10496 . -1) (undo-tree-id10497 . -1) (undo-tree-id10498 . -1) (undo-tree-id10499 . -1) (undo-tree-id10500 . -1) (undo-tree-id10501 . -1) (undo-tree-id10502 . -1) (undo-tree-id10503 . -1) (undo-tree-id10504 . -1) (undo-tree-id10505 . -1) (undo-tree-id10506 . -1) (undo-tree-id10507 . -1) (undo-tree-id10508 . -1) (undo-tree-id10509 . -1) (undo-tree-id10510 . -1) (undo-tree-id10511 . -1) (undo-tree-id10512 . -1) (undo-tree-id10513 . -1) (undo-tree-id10514 . -1) (undo-tree-id10515 . -1) (undo-tree-id10516 . -1) (undo-tree-id10517 . -1) (undo-tree-id10518 . -1) (undo-tree-id10519 . -1) (undo-tree-id10520 . -1) (undo-tree-id10521 . -1) (undo-tree-id10522 . -1) (undo-tree-id10523 . -1) (undo-tree-id10524 . -1) (undo-tree-id10525 . -1) (undo-tree-id10526 . -1) (undo-tree-id10527 . -1) (undo-tree-id10528 . -1) (undo-tree-id10529 . -1) (undo-tree-id10530 . -1) (undo-tree-id10531 . -1) (undo-tree-id10532 . -1) (undo-tree-id10533 . -1) (undo-tree-id10534 . -1) (undo-tree-id10535 . -1) (undo-tree-id10536 . -1) (undo-tree-id10537 . -1) (undo-tree-id10538 . -1) (undo-tree-id10539 . -1) (undo-tree-id10540 . -1) (undo-tree-id10541 . -1) (undo-tree-id10542 . -1) (undo-tree-id10543 . -1) (undo-tree-id10544 . -1) (undo-tree-id10545 . -1) (undo-tree-id10546 . -1) (undo-tree-id10547 . -1) (undo-tree-id10548 . -1) (undo-tree-id10549 . -1) (undo-tree-id10550 . -1) (undo-tree-id10551 . -1) (undo-tree-id10552 . -1) (undo-tree-id10553 . -1) (undo-tree-id10554 . -1) (undo-tree-id10555 . -1) (undo-tree-id10556 . -1) (undo-tree-id10557 . -1) (undo-tree-id10558 . -1) (undo-tree-id10559 . -1) (undo-tree-id10560 . -1) (undo-tree-id10561 . -1) (undo-tree-id10562 . -1) (undo-tree-id10563 . -1) (undo-tree-id10564 . -1) (undo-tree-id10565 . -1) (undo-tree-id10566 . -1) (undo-tree-id10567 . -1) (undo-tree-id10568 . -1) (undo-tree-id10569 . -1) (undo-tree-id10570 . -1) (undo-tree-id10571 . -1) (undo-tree-id10572 . -1) (undo-tree-id10573 . -1) (undo-tree-id10574 . -1) (undo-tree-id10575 . -1) (undo-tree-id10576 . -1) (undo-tree-id10577 . -1) (undo-tree-id10578 . -1) (undo-tree-id10579 . -1) (undo-tree-id10580 . -1) (undo-tree-id10581 . -1) (undo-tree-id10582 . -1) (undo-tree-id10583 . -1) (undo-tree-id10584 . -1) (undo-tree-id10585 . -1) (undo-tree-id10586 . -1) (undo-tree-id10587 . -1) (undo-tree-id10588 . -1) (undo-tree-id10589 . -1) (undo-tree-id10590 . -1) (undo-tree-id10591 . -1) (undo-tree-id10592 . -1) (undo-tree-id10593 . -1) (undo-tree-id10594 . -1) (undo-tree-id10595 . -1) (undo-tree-id10596 . -1) (undo-tree-id10597 . -1) (undo-tree-id10598 . -1) (undo-tree-id10599 . -1) (undo-tree-id10600 . -1) (undo-tree-id10601 . -1) (undo-tree-id10602 . -1) (undo-tree-id10603 . -1) (undo-tree-id10604 . -1) (undo-tree-id10605 . -1) (undo-tree-id10606 . -1) (undo-tree-id10607 . -1) (undo-tree-id10608 . -1) (undo-tree-id10609 . -1) (#("c" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -25103) (undo-tree-id10610 . -1) (undo-tree-id10611 . -1) (undo-tree-id10612 . -1) (undo-tree-id10613 . -1) (undo-tree-id10614 . -1) (undo-tree-id10615 . -1) (undo-tree-id10616 . -1) (undo-tree-id10617 . -1) (undo-tree-id10618 . -1) (undo-tree-id10619 . -1) (undo-tree-id10620 . -1) (undo-tree-id10621 . -1) (undo-tree-id10622 . -1) (undo-tree-id10623 . -1) (undo-tree-id10624 . -1) (undo-tree-id10625 . -1) (undo-tree-id10626 . -1) (undo-tree-id10627 . -1) (undo-tree-id10628 . -1) (undo-tree-id10629 . -1) (undo-tree-id10630 . -1) (undo-tree-id10631 . -1) (undo-tree-id10632 . -1) (undo-tree-id10633 . -1) (undo-tree-id10634 . -1) (undo-tree-id10635 . -1) (undo-tree-id10636 . -1) (undo-tree-id10637 . -1) (undo-tree-id10638 . -1) (undo-tree-id10639 . -1) (undo-tree-id10640 . -1) (undo-tree-id10641 . -1) (undo-tree-id10642 . -1) (undo-tree-id10643 . -1) (undo-tree-id10644 . -1) (undo-tree-id10645 . -1) (undo-tree-id10646 . -1) (undo-tree-id10647 . -1) (undo-tree-id10648 . -1) (undo-tree-id10649 . -1) (undo-tree-id10650 . -1) (undo-tree-id10651 . -1) (undo-tree-id10652 . -1) (undo-tree-id10653 . -1) (undo-tree-id10654 . -1) (undo-tree-id10655 . -1) (undo-tree-id10656 . -1) (undo-tree-id10657 . -1) (undo-tree-id10658 . -1) (undo-tree-id10659 . -1) (undo-tree-id10660 . -1) (undo-tree-id10661 . -1) (undo-tree-id10662 . -1) (undo-tree-id10663 . -1) (undo-tree-id10664 . -1) (undo-tree-id10665 . -1) (undo-tree-id10666 . -1) (undo-tree-id10667 . -1) (undo-tree-id10668 . -1) (undo-tree-id10669 . -1) (undo-tree-id10670 . -1) (undo-tree-id10671 . -1) (undo-tree-id10672 . -1) (undo-tree-id10673 . -1) (undo-tree-id10674 . -1) (undo-tree-id10675 . -1) (undo-tree-id10676 . -1) (undo-tree-id10677 . -1) (undo-tree-id10678 . -1) (undo-tree-id10679 . -1) (undo-tree-id10680 . -1) (undo-tree-id10681 . -1) (undo-tree-id10682 . -1) (undo-tree-id10683 . -1) (undo-tree-id10684 . -1) (undo-tree-id10685 . -1) (undo-tree-id10686 . -1) (undo-tree-id10687 . -1) (undo-tree-id10688 . -1) (undo-tree-id10689 . -1) (undo-tree-id10690 . -1) (undo-tree-id10691 . -1) (undo-tree-id10692 . -1) (undo-tree-id10693 . -1) (undo-tree-id10694 . -1) (undo-tree-id10695 . -1) (undo-tree-id10696 . -1) (undo-tree-id10697 . -1) (undo-tree-id10698 . -1) (undo-tree-id10699 . -1) (undo-tree-id10700 . -1) (undo-tree-id10701 . -1) (undo-tree-id10702 . -1) (undo-tree-id10703 . -1) (undo-tree-id10704 . -1) (undo-tree-id10705 . -1) (undo-tree-id10706 . -1) (undo-tree-id10707 . -1) (undo-tree-id10708 . -1) (undo-tree-id10709 . -1) (undo-tree-id10710 . -1) (undo-tree-id10711 . -1) (undo-tree-id10712 . -1) (undo-tree-id10713 . -1) (undo-tree-id10714 . -1) (undo-tree-id10715 . -1) (undo-tree-id10716 . -1) (undo-tree-id10717 . -1) (undo-tree-id10718 . -1) (undo-tree-id10719 . -1) (undo-tree-id10720 . -1) (undo-tree-id10721 . -1) (undo-tree-id10722 . -1) (undo-tree-id10723 . -1) (#("o" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block))) . -25104) (undo-tree-id10724 . -1) (undo-tree-id10725 . -1) (undo-tree-id10726 . -1) (undo-tree-id10727 . -1) (undo-tree-id10728 . -1) (undo-tree-id10729 . -1) (undo-tree-id10730 . -1) (undo-tree-id10731 . -1) (undo-tree-id10732 . -1) (undo-tree-id10733 . -1) (undo-tree-id10734 . -1) (undo-tree-id10735 . -1) (undo-tree-id10736 . -1) (undo-tree-id10737 . -1) (undo-tree-id10738 . -1) (undo-tree-id10739 . -1) (undo-tree-id10740 . -1) (undo-tree-id10741 . -1) (undo-tree-id10742 . -1) (undo-tree-id10743 . -1) (undo-tree-id10744 . -1) (undo-tree-id10745 . -1) (undo-tree-id10746 . -1) (undo-tree-id10747 . -1) (undo-tree-id10748 . -1) (undo-tree-id10749 . -1) (undo-tree-id10750 . -1) (undo-tree-id10751 . -1) (undo-tree-id10752 . -1) (undo-tree-id10753 . -1) (undo-tree-id10754 . -1) (undo-tree-id10755 . -1) (undo-tree-id10756 . -1) (undo-tree-id10757 . -1) (undo-tree-id10758 . -1) (undo-tree-id10759 . -1) (undo-tree-id10760 . -1) (undo-tree-id10761 . -1) (undo-tree-id10762 . -1) (undo-tree-id10763 . -1) (undo-tree-id10764 . -1) (undo-tree-id10765 . -1) (undo-tree-id10766 . -1) (undo-tree-id10767 . -1) (undo-tree-id10768 . -1) (undo-tree-id10769 . -1) (undo-tree-id10770 . -1) (undo-tree-id10771 . -1) (undo-tree-id10772 . -1) (undo-tree-id10773 . -1) (undo-tree-id10774 . -1) (undo-tree-id10775 . -1) (undo-tree-id10776 . -1) (undo-tree-id10777 . -1) (undo-tree-id10778 . -1) (undo-tree-id10779 . -1) (undo-tree-id10780 . -1) (undo-tree-id10781 . -1) (undo-tree-id10782 . -1) (undo-tree-id10783 . -1) (undo-tree-id10784 . -1) (undo-tree-id10785 . -1) (undo-tree-id10786 . -1) (undo-tree-id10787 . -1) (undo-tree-id10788 . -1) (undo-tree-id10789 . -1) (undo-tree-id10790 . -1) (undo-tree-id10791 . -1) (undo-tree-id10792 . -1) (undo-tree-id10793 . -1) (#("n" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block))) . -25105) (undo-tree-id10794 . -1) (undo-tree-id10795 . -1) (undo-tree-id10796 . -1) (undo-tree-id10797 . -1) (undo-tree-id10798 . -1) (undo-tree-id10799 . -1) (undo-tree-id10800 . -1) (undo-tree-id10801 . -1) (undo-tree-id10802 . -1) (undo-tree-id10803 . -1) (undo-tree-id10804 . -1) (undo-tree-id10805 . -1) (undo-tree-id10806 . -1) (undo-tree-id10807 . -1) (undo-tree-id10808 . -1) (undo-tree-id10809 . -1) (undo-tree-id10810 . -1) (undo-tree-id10811 . -1) (undo-tree-id10812 . -1) (undo-tree-id10813 . -1) (undo-tree-id10814 . -1) (undo-tree-id10815 . -1) (undo-tree-id10816 . -1) (undo-tree-id10817 . -1) (undo-tree-id10818 . -1) (undo-tree-id10819 . -1) 25106 (25101 . 25106) (25100 . 25101) (25092 . 25100) (#("c" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block))) . -25092) (undo-tree-id10820 . -1) (#("o" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block))) . -25093) (undo-tree-id10821 . -1) 25094 (#("n" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block))) . -25094) (undo-tree-id10822 . -1) (#("f" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block))) . -25095) (undo-tree-id10823 . -1) (#("i" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block))) . -25096) (undo-tree-id10824 . -1) (#("g" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block))) . -25097) (undo-tree-id10825 . -1) 25098 (25091 . 25098) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -25091) (undo-tree-id10826 . -1) 25092 (25090 . 25092) (t 26024 15789 229469 646000)) nil (26024 15817 618985 0) 0 nil] [nil nil ((28214 . 28215) (t 26024 15789 229469 646000) 28163) ((#("
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t)) . 28214) (undo-tree-id10092 . -1) (undo-tree-id10093 . -1)) (26024 15798 602666 0) 0 nil])
([nil nil ((#("(use-package copilot
" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1 12 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 13 20 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 20 21 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 25104) (undo-tree-id10835 . -20) (undo-tree-id10836 . 21) (undo-tree-id10837 . -1) (undo-tree-id10838 . -21) (t 26024 15817 686877 811000)) nil (26024 15823 354543 0) 0 nil])
nil
([nil nil ((#("  :elpaca (:host github :repo \"zerolfx/copilot.el\" :files (\"dist\" \"*.el\"))
" 0 2 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 2 9 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 11 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 11 16 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 16 24 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 24 29 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 29 30 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 30 50 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-string-face org-block)) 50 51 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 51 57 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 57 59 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 59 65 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-string-face org-block)) 65 66 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 66 72 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-string-face org-block)) 72 75 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . 25104) (undo-tree-id10833 . -74) (undo-tree-id10834 . -75)) nil (26024 15823 354539 0) 0 nil])
([nil nil ((#("  :ensure t
" 0 2 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 2 9 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 12 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . 25104) (undo-tree-id10831 . -11) (undo-tree-id10832 . -12)) nil (26024 15823 354537 0) 0 nil])
([nil nil ((#("  :config
" 0 2 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 2 9 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 10 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . 25104) (undo-tree-id10829 . -9) (undo-tree-id10830 . -10)) nil (26024 15823 354536 0) 0 nil])
([nil nil ((#("  (add-hook 'prog-mode-hook 'copilot-mode))
" 0 43 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 43 44 (font-lock-fontified t src-block t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . 25104) (undo-tree-id10827 . -43) (undo-tree-id10828 . -44)) nil (26024 15823 354532 0) 0 nil])
([nil nil ((25128 . 25131) (25112 . 25128) (25111 . 25113) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -25111) (25110 . 25112) (25109 . 25110) (25101 . 25109) (25100 . 25101) (t 26024 15823 421020 725000) 25091) nil (26024 15917 809983 0) 0 nil])
([nil nil (25131) nil (26024 16134 474400 0) 0 nil])
([nil nil ((25111 . 25113) (t 26024 15917 895175 75000)) nil (26024 16134 474395 0) 0 nil])
([nil nil ((25113 . 25114) (t 26024 16134 562227 153000)) nil (26024 16137 512202 0) 0 nil])
([nil nil ((24984 . 24987) (25010 . 25012) (25011 . 25012) (25090 . 25093) (25101 . 25104) (25110 . 25112) (25111 . 25112) (25136 . 25139) 24627 (t 26024 16137 593331 799000)) nil (26024 16784 441937 0) 0 nil])
([nil nil ((24991 . 25003) (#("a" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -24991) (undo-tree-id10839 . -1) (undo-tree-id10840 . -1) (undo-tree-id10841 . -1) (undo-tree-id10842 . -1) (undo-tree-id10843 . -1) (undo-tree-id10844 . -1) (undo-tree-id10845 . -1) (undo-tree-id10846 . -1) (undo-tree-id10847 . -1) (undo-tree-id10848 . -1) (undo-tree-id10849 . -1) (undo-tree-id10850 . -1) (undo-tree-id10851 . -1) (undo-tree-id10852 . -1) (undo-tree-id10853 . -1) (undo-tree-id10854 . -1) (undo-tree-id10855 . -1) (undo-tree-id10856 . -1) (undo-tree-id10857 . -1) (undo-tree-id10858 . -1) (undo-tree-id10859 . -1) (undo-tree-id10860 . -1) (undo-tree-id10861 . -1) (undo-tree-id10862 . -1) (undo-tree-id10863 . -1) (undo-tree-id10864 . -1) (undo-tree-id10865 . -1) (undo-tree-id10866 . -1) (undo-tree-id10867 . -1) (undo-tree-id10868 . -1) (undo-tree-id10869 . -1) (undo-tree-id10870 . -1) (undo-tree-id10871 . -1) (undo-tree-id10872 . -1) (undo-tree-id10873 . -1) (undo-tree-id10874 . -1) (undo-tree-id10875 . -1) (undo-tree-id10876 . -1) (undo-tree-id10877 . -1) (undo-tree-id10878 . -1) (#("n" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -24992) (undo-tree-id10879 . -1) (undo-tree-id10880 . -1) (undo-tree-id10881 . -1) (undo-tree-id10882 . -1) (undo-tree-id10883 . -1) (undo-tree-id10884 . -1) (undo-tree-id10885 . -1) (undo-tree-id10886 . -1) (undo-tree-id10887 . -1) (undo-tree-id10888 . -1) (undo-tree-id10889 . -1) (undo-tree-id10890 . -1) (undo-tree-id10891 . -1) (undo-tree-id10892 . -1) (undo-tree-id10893 . -1) (undo-tree-id10894 . -1) (undo-tree-id10895 . -1) (undo-tree-id10896 . -1) (undo-tree-id10897 . -1) (undo-tree-id10898 . -1) (undo-tree-id10899 . -1) (undo-tree-id10900 . -1) (undo-tree-id10901 . -1) (undo-tree-id10902 . -1) (undo-tree-id10903 . -1) (#("n" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -24993) (undo-tree-id10904 . -1) (undo-tree-id10905 . -1) (undo-tree-id10906 . -1) (undo-tree-id10907 . -1) (undo-tree-id10908 . -1) (undo-tree-id10909 . -1) (undo-tree-id10910 . -1) (undo-tree-id10911 . -1) (undo-tree-id10912 . -1) (undo-tree-id10913 . -1) (#("o" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -24994) (undo-tree-id10914 . -1) 24995 (24991 . 24995) (#("a" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -24991) (undo-tree-id10915 . -1) (#("n" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -24992) (undo-tree-id10916 . -1) 24993 (#("n" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -24993) (undo-tree-id10917 . -1) 24994 (24991 . 24994) (#("v" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -24991) (undo-tree-id10918 . -1) 24992 (24982 . 24992) (24981 . 24983) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -24981) (24979 . 24982) (24979 . 24980) 24981 (t 26024 16784 522353 620000)) nil (26024 16799 307383 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 25004 . 25005) (#("
" 0 1 (face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -25033) (25004 . 25034) 25002 (t 26024 16799 387791 693000)) nil (26024 16805 12212 0) 0 nil])
([nil nil ((#(";" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-multiline t face (font-lock-comment-delimiter-face org-block) help-echo nil)) . 25005) (undo-tree-id10927 . -1) (undo-tree-id10928 . -1)) nil (26024 16805 12211 0) 0 nil])
([nil nil ((#(";" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 25005) (undo-tree-id10925 . -1) (undo-tree-id10926 . -1)) nil (26024 16805 12209 0) 0 nil])
([nil nil ((#(" " 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block))) . 25005) (undo-tree-id10923 . -1) (undo-tree-id10924 . -1)) nil (26024 16805 12206 0) 0 nil])
([nil nil ((#(";" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 25006) (undo-tree-id10921 . -1) (undo-tree-id10922 . -1)) nil (26024 16805 12204 0) 0 nil])
([nil nil ((#(";" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("       " 0 6 (face org-indent) 6 7 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 25006) (undo-tree-id10919 . -1) (undo-tree-id10920 . -1)) nil (26024 16805 12199 0) 0 nil])
([nil nil ((#("  :config
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 9 10 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 24969) (undo-tree-id10994 . -9) (undo-tree-id10995 . -9) (undo-tree-id10996 . -8) (undo-tree-id10997 . -8) (undo-tree-id10998 . -8) (undo-tree-id10999 . -8) (undo-tree-id11000 . -8) (undo-tree-id11001 . -8) (undo-tree-id11002 . -8) (undo-tree-id11003 . -8) (undo-tree-id11004 . -8) (undo-tree-id11005 . -8) (undo-tree-id11006 . -8) (undo-tree-id11007 . -8) (undo-tree-id11008 . -8) (undo-tree-id11009 . -8) (undo-tree-id11010 . -8) (undo-tree-id11011 . -8) (undo-tree-id11012 . -8) (undo-tree-id11013 . -8) (undo-tree-id11014 . -10) 24977 (t 26024 16805 91798 959000)) nil (26024 16924 725621 0) 0 nil])
([nil nil ((#("  (require 'nano-vertico)
" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 2 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 3 10 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 10 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 12 24 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 24 25 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 25 26 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) rear-nonsticky t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 24969) (undo-tree-id10951 . 2) (undo-tree-id10952 . -25) (undo-tree-id10953 . -8) (undo-tree-id10954 . -8) (undo-tree-id10955 . -8) (undo-tree-id10956 . -8) (undo-tree-id10957 . -8) (undo-tree-id10958 . -8) (undo-tree-id10959 . -8) (undo-tree-id10960 . -8) (undo-tree-id10961 . -25) (undo-tree-id10962 . -8) (undo-tree-id10963 . -8) (undo-tree-id10964 . -8) (undo-tree-id10965 . -8) (undo-tree-id10966 . -8) (undo-tree-id10967 . -8) (undo-tree-id10968 . -8) (undo-tree-id10969 . -8) (undo-tree-id10970 . -8) (undo-tree-id10971 . -8) (undo-tree-id10972 . -8) (undo-tree-id10973 . -8) (undo-tree-id10974 . -8) (undo-tree-id10975 . -8) (undo-tree-id10976 . -8) (undo-tree-id10977 . -8) (undo-tree-id10978 . -8) (undo-tree-id10979 . -8) (undo-tree-id10980 . -8) (undo-tree-id10981 . -8) (undo-tree-id10982 . -8) (undo-tree-id10983 . -8) (undo-tree-id10984 . -8) (undo-tree-id10985 . -8) (undo-tree-id10986 . -8) (undo-tree-id10987 . -8) (undo-tree-id10988 . -8) (undo-tree-id10989 . -8) (undo-tree-id10990 . -8) (undo-tree-id10991 . -8) (undo-tree-id10992 . -8) (undo-tree-id10993 . -26) 24977) nil (26024 16924 725601 0) 0 nil])
([nil nil ((#("  (nano-vertico-mode 1)
" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 1 2 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 2 22 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 22 23 (src-block t font-lock-fontified t fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (org-block)) 23 24 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("        " 0 6 (face org-indent) 6 8 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 24969) (undo-tree-id10929 . 24) (undo-tree-id10930 . -23) (undo-tree-id10931 . -8) (undo-tree-id10932 . -23) (undo-tree-id10933 . -8) (undo-tree-id10934 . -8) (undo-tree-id10935 . -8) (undo-tree-id10936 . -8) (undo-tree-id10937 . -8) (undo-tree-id10938 . -8) (undo-tree-id10939 . -8) (undo-tree-id10940 . -8) (undo-tree-id10941 . -8) (undo-tree-id10942 . -8) (undo-tree-id10943 . -8) (undo-tree-id10944 . -8) (undo-tree-id10945 . -8) (undo-tree-id10946 . -8) (undo-tree-id10947 . -8) (undo-tree-id10948 . -8) (undo-tree-id10949 . -8) (undo-tree-id10950 . -24) 24977) nil (26024 16924 725557 0) 0 nil])
([nil nil ((#(";; " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 24974) (undo-tree-id11015 . -2) (undo-tree-id11016 . -2) (#(";;" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 25003) (undo-tree-id11017 . -2) (undo-tree-id11018 . -2) (undo-tree-id11019 . -2) (undo-tree-id11020 . -2) (undo-tree-id11021 . -2) (undo-tree-id11022 . -2) (undo-tree-id11023 . -2) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 25006) (#(";; " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 25086) (undo-tree-id11024 . -2) (undo-tree-id11025 . -2) (undo-tree-id11026 . -2) (undo-tree-id11027 . -2) (undo-tree-id11028 . -2) (undo-tree-id11029 . -2) (undo-tree-id11030 . -2) (undo-tree-id11031 . -2) (undo-tree-id11032 . -2) (undo-tree-id11033 . -2) (undo-tree-id11034 . -2) (undo-tree-id11035 . -2) (undo-tree-id11036 . -2) (undo-tree-id11037 . -2) (undo-tree-id11038 . -2) (undo-tree-id11039 . -2) (undo-tree-id11040 . -2) (undo-tree-id11041 . -2) (undo-tree-id11042 . -2) (undo-tree-id11043 . -2) (undo-tree-id11044 . -2) (#(";; " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 25100) (undo-tree-id11045 . -2) (undo-tree-id11046 . -2) (undo-tree-id11047 . -2) (undo-tree-id11048 . -2) (undo-tree-id11049 . -2) (undo-tree-id11050 . -2) (undo-tree-id11051 . -2) (undo-tree-id11052 . -2) (undo-tree-id11053 . -2) (undo-tree-id11054 . -2) (undo-tree-id11055 . -2) (undo-tree-id11056 . -2) (undo-tree-id11057 . -2) (undo-tree-id11058 . -2) (undo-tree-id11059 . -2) (undo-tree-id11060 . -2) (undo-tree-id11061 . -2) (undo-tree-id11062 . -2) (undo-tree-id11063 . -2) (undo-tree-id11064 . -2) (undo-tree-id11065 . -2) (#(";;" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 25112) (undo-tree-id11066 . -2) (undo-tree-id11067 . -2) (undo-tree-id11068 . -2) (undo-tree-id11069 . -2) (undo-tree-id11070 . -2) (undo-tree-id11071 . -2) (undo-tree-id11072 . -2) (undo-tree-id11073 . -2) (undo-tree-id11074 . -2) (undo-tree-id11075 . -2) (undo-tree-id11076 . -2) (undo-tree-id11077 . -2) (undo-tree-id11078 . -2) (undo-tree-id11079 . -2) (undo-tree-id11080 . -2) (undo-tree-id11081 . -2) (undo-tree-id11082 . -2) (undo-tree-id11083 . -2) (undo-tree-id11084 . -2) (undo-tree-id11085 . -2) (undo-tree-id11086 . -2) (undo-tree-id11087 . -2) (undo-tree-id11088 . -2) (undo-tree-id11089 . -2) (undo-tree-id11090 . -2) (undo-tree-id11091 . -2) (undo-tree-id11092 . -2) (undo-tree-id11093 . -2) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 25115) (#(";; " 0 3 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 25141) (undo-tree-id11094 . -2) (undo-tree-id11095 . -2) (undo-tree-id11096 . -2) (undo-tree-id11097 . -2) (undo-tree-id11098 . -2) (undo-tree-id11099 . -2) (undo-tree-id11100 . -2) (undo-tree-id11101 . -2) (undo-tree-id11102 . -2) (undo-tree-id11103 . -2) (undo-tree-id11104 . -2) (undo-tree-id11105 . -2) (undo-tree-id11106 . -2) (undo-tree-id11107 . -2) (undo-tree-id11108 . -2) (undo-tree-id11109 . -2) (undo-tree-id11110 . -2) (undo-tree-id11111 . -2) (undo-tree-id11112 . -2) (undo-tree-id11113 . -2) (undo-tree-id11114 . -2) (undo-tree-id11115 . -2) (undo-tree-id11116 . -2) (undo-tree-id11117 . -2) (undo-tree-id11118 . -2) (undo-tree-id11119 . -2) (undo-tree-id11120 . -2) (undo-tree-id11121 . -2) (undo-tree-id11122 . -2) (undo-tree-id11123 . -2) (undo-tree-id11124 . -2) (undo-tree-id11125 . -2) (undo-tree-id11126 . -2) (undo-tree-id11127 . -2) (undo-tree-id11128 . -2) (undo-tree-id11129 . -2) (undo-tree-id11130 . -2) (undo-tree-id11131 . -2) (undo-tree-id11132 . -2) (undo-tree-id11133 . -2) (undo-tree-id11134 . -2) (undo-tree-id11135 . -2) (undo-tree-id11136 . -2) (undo-tree-id11137 . -2) (undo-tree-id11138 . -2) 24627 (t 26024 16924 810055 591000)) nil (26024 16927 994708 0) 0 nil])
([nil nil ((1215 . 1216) (1215 . 1216) 1216 (t 26024 16928 77396 725000)) nil (26024 17756 337631 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1267 . 1268) (nil fontified nil 1215 . 1268) (1215 . 1268)) nil (26024 17756 337627 0) 0 nil])
([nil nil ((553 . 554) (t 26024 17756 413299 234000) 531) nil (26024 54624 674268 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 554 . 555) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -608) (554 . 609)) nil (26024 54624 674267 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) rear-nonsticky t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 554) (undo-tree-id11398 . -1) (undo-tree-id11399 . -1) (undo-tree-id11400 . -1) (undo-tree-id11401 . -1) (undo-tree-id11402 . -1) (undo-tree-id11403 . -1) (undo-tree-id11404 . -1) (undo-tree-id11405 . -1) (undo-tree-id11406 . -1) (undo-tree-id11407 . -1) (undo-tree-id11408 . -1) (undo-tree-id11409 . -1) (undo-tree-id11410 . -1) (undo-tree-id11411 . -1) (undo-tree-id11412 . -1) (undo-tree-id11413 . -1) (undo-tree-id11414 . -1) (undo-tree-id11415 . -1) (undo-tree-id11416 . -1) (undo-tree-id11417 . -1) (undo-tree-id11418 . -1) (undo-tree-id11419 . -1) (undo-tree-id11420 . -1) (undo-tree-id11421 . -1) (undo-tree-id11422 . -1) (undo-tree-id11423 . -1) (undo-tree-id11424 . -1) (undo-tree-id11425 . -1) (undo-tree-id11426 . -1) (undo-tree-id11427 . -1) (undo-tree-id11428 . -1) (undo-tree-id11429 . -1) (undo-tree-id11430 . -1) (undo-tree-id11431 . -1) (undo-tree-id11432 . -1) (undo-tree-id11433 . -1) (undo-tree-id11434 . -1) (undo-tree-id11435 . -1)) nil (26024 54624 674264 0) 0 nil])
([nil nil ((607 . 608) 554) nil (26024 54624 674216 0) 0 nil])
([nil nil ((574 . 577) (558 . 574) (#("E" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -558) (undo-tree-id11139 . -1) (undo-tree-id11140 . -1) (undo-tree-id11141 . -1) (undo-tree-id11142 . -1) (undo-tree-id11143 . -1) (undo-tree-id11144 . -1) (undo-tree-id11145 . -1) (undo-tree-id11146 . -1) (undo-tree-id11147 . -1) (undo-tree-id11148 . -1) (undo-tree-id11149 . -1) (undo-tree-id11150 . -1) (undo-tree-id11151 . -1) (undo-tree-id11152 . -1) (undo-tree-id11153 . -1) (undo-tree-id11154 . -1) (undo-tree-id11155 . -1) (undo-tree-id11156 . -1) (undo-tree-id11157 . -1) (undo-tree-id11158 . -1) (undo-tree-id11159 . -1) (undo-tree-id11160 . -1) (undo-tree-id11161 . -1) (undo-tree-id11162 . -1) (undo-tree-id11163 . -1) (undo-tree-id11164 . -1) (undo-tree-id11165 . -1) (undo-tree-id11166 . -1) (undo-tree-id11167 . -1) (undo-tree-id11168 . -1) (undo-tree-id11169 . -1) (undo-tree-id11170 . -1) (undo-tree-id11171 . -1) (undo-tree-id11172 . -1) (undo-tree-id11173 . -1) (undo-tree-id11174 . -1) (undo-tree-id11175 . -1) (undo-tree-id11176 . -1) (undo-tree-id11177 . -1) (undo-tree-id11178 . -1) (undo-tree-id11179 . -1) (undo-tree-id11180 . -1) (undo-tree-id11181 . -1) (undo-tree-id11182 . -1) (undo-tree-id11183 . -1) (undo-tree-id11184 . -1) (undo-tree-id11185 . -1) (undo-tree-id11186 . -1) (undo-tree-id11187 . -1) (undo-tree-id11188 . -1) (undo-tree-id11189 . -1) (undo-tree-id11190 . -1) (undo-tree-id11191 . -1) (undo-tree-id11192 . -1) (undo-tree-id11193 . -1) (undo-tree-id11194 . -1) (undo-tree-id11195 . -1) (undo-tree-id11196 . -1) (undo-tree-id11197 . -1) (undo-tree-id11198 . -1) (undo-tree-id11199 . -1) (undo-tree-id11200 . -1) (undo-tree-id11201 . -1) (undo-tree-id11202 . -1) (undo-tree-id11203 . -1) (undo-tree-id11204 . -1) (undo-tree-id11205 . -1) (undo-tree-id11206 . -1) (undo-tree-id11207 . -1) (undo-tree-id11208 . -1) (undo-tree-id11209 . -1) (undo-tree-id11210 . -1) (undo-tree-id11211 . -1) (undo-tree-id11212 . -1) (undo-tree-id11213 . -1) (undo-tree-id11214 . -1) (undo-tree-id11215 . -1) (undo-tree-id11216 . -1) (undo-tree-id11217 . -1) (undo-tree-id11218 . -1) (undo-tree-id11219 . -1) (undo-tree-id11220 . -1) (undo-tree-id11221 . -1) (undo-tree-id11222 . -1) (undo-tree-id11223 . -1) (undo-tree-id11224 . -1) (#("m" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -559) (undo-tree-id11225 . -1) (undo-tree-id11226 . -1) (undo-tree-id11227 . -1) (undo-tree-id11228 . -1) (undo-tree-id11229 . -1) (undo-tree-id11230 . -1) (undo-tree-id11231 . -1) (undo-tree-id11232 . -1) (undo-tree-id11233 . -1) (undo-tree-id11234 . -1) (undo-tree-id11235 . -1) (undo-tree-id11236 . -1) (undo-tree-id11237 . -1) (undo-tree-id11238 . -1) (undo-tree-id11239 . -1) (undo-tree-id11240 . -1) (undo-tree-id11241 . -1) (undo-tree-id11242 . -1) (undo-tree-id11243 . -1) (undo-tree-id11244 . -1) (undo-tree-id11245 . -1) (undo-tree-id11246 . -1) (undo-tree-id11247 . -1) (undo-tree-id11248 . -1) (undo-tree-id11249 . -1) (undo-tree-id11250 . -1) (undo-tree-id11251 . -1) (undo-tree-id11252 . -1) (undo-tree-id11253 . -1) (undo-tree-id11254 . -1) (undo-tree-id11255 . -1) (undo-tree-id11256 . -1) (undo-tree-id11257 . -1) (undo-tree-id11258 . -1) (undo-tree-id11259 . -1) (undo-tree-id11260 . -1) (undo-tree-id11261 . -1) (undo-tree-id11262 . -1) (undo-tree-id11263 . -1) (undo-tree-id11264 . -1) (undo-tree-id11265 . -1) (undo-tree-id11266 . -1) (undo-tree-id11267 . -1) (undo-tree-id11268 . -1) (undo-tree-id11269 . -1) (undo-tree-id11270 . -1) (undo-tree-id11271 . -1) (undo-tree-id11272 . -1) (undo-tree-id11273 . -1) (undo-tree-id11274 . -1) (undo-tree-id11275 . -1) (undo-tree-id11276 . -1) (undo-tree-id11277 . -1) (undo-tree-id11278 . -1) (undo-tree-id11279 . -1) (undo-tree-id11280 . -1) (#("o" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -560) (undo-tree-id11281 . -1) (undo-tree-id11282 . -1) (undo-tree-id11283 . -1) (undo-tree-id11284 . -1) (undo-tree-id11285 . -1) (undo-tree-id11286 . -1) (undo-tree-id11287 . -1) (undo-tree-id11288 . -1) (undo-tree-id11289 . -1) (undo-tree-id11290 . -1) (undo-tree-id11291 . -1) (undo-tree-id11292 . -1) (undo-tree-id11293 . -1) (undo-tree-id11294 . -1) (undo-tree-id11295 . -1) (undo-tree-id11296 . -1) (undo-tree-id11297 . -1) (undo-tree-id11298 . -1) (undo-tree-id11299 . -1) (undo-tree-id11300 . -1) (undo-tree-id11301 . -1) (undo-tree-id11302 . -1) (undo-tree-id11303 . -1) (undo-tree-id11304 . -1) (undo-tree-id11305 . -1) (undo-tree-id11306 . -1) 561 (554 . 561) (#("/" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . -554) (undo-tree-id11307 . -1) (undo-tree-id11308 . -1) (undo-tree-id11309 . -1) (undo-tree-id11310 . -1) (undo-tree-id11311 . -1) (undo-tree-id11312 . -1) (undo-tree-id11313 . -1) (undo-tree-id11314 . -1) (undo-tree-id11315 . -1) (undo-tree-id11316 . -1) (undo-tree-id11317 . -1) (undo-tree-id11318 . -1) (undo-tree-id11319 . -1) (undo-tree-id11320 . -1) (undo-tree-id11321 . -1) (undo-tree-id11322 . -1) (undo-tree-id11323 . -1) (undo-tree-id11324 . -1) (undo-tree-id11325 . -1) (undo-tree-id11326 . -1) (undo-tree-id11327 . -1) (undo-tree-id11328 . -1) (undo-tree-id11329 . -1) (undo-tree-id11330 . -1) (undo-tree-id11331 . -1) (undo-tree-id11332 . -1) (undo-tree-id11333 . -1) (undo-tree-id11334 . -1) (undo-tree-id11335 . -1) (undo-tree-id11336 . -1) (undo-tree-id11337 . -1) (undo-tree-id11338 . -1) (undo-tree-id11339 . -1) (undo-tree-id11340 . -1) (undo-tree-id11341 . -1) (undo-tree-id11342 . -1) (undo-tree-id11343 . -1) (undo-tree-id11344 . -1) (undo-tree-id11345 . -1) (undo-tree-id11346 . -1) (undo-tree-id11347 . -1) (undo-tree-id11348 . -1) (undo-tree-id11349 . -1) (undo-tree-id11350 . -1) (undo-tree-id11351 . -1) (undo-tree-id11352 . -1) (undo-tree-id11353 . -1) (undo-tree-id11354 . -1) (undo-tree-id11355 . -1) (undo-tree-id11356 . -1) (undo-tree-id11357 . -1) (undo-tree-id11358 . -1) (undo-tree-id11359 . -1) (undo-tree-id11360 . -1) (undo-tree-id11361 . -1) (undo-tree-id11362 . -1) (undo-tree-id11363 . -1) (undo-tree-id11364 . -1) (undo-tree-id11365 . -1) (undo-tree-id11366 . -1) (#("/" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -555) (undo-tree-id11367 . -1) (undo-tree-id11368 . -1) (undo-tree-id11369 . -1) (undo-tree-id11370 . -1) (undo-tree-id11371 . -1) (undo-tree-id11372 . -1) (undo-tree-id11373 . -1) (undo-tree-id11374 . -1) (undo-tree-id11375 . -1) (undo-tree-id11376 . -1) (undo-tree-id11377 . -1) (undo-tree-id11378 . -1) (undo-tree-id11379 . -1) (undo-tree-id11380 . -1) (undo-tree-id11381 . -1) (undo-tree-id11382 . -1) (undo-tree-id11383 . -1) (undo-tree-id11384 . -1) (undo-tree-id11385 . -1) (undo-tree-id11386 . -1) (undo-tree-id11387 . -1) (undo-tree-id11388 . -1) (undo-tree-id11389 . -1) (undo-tree-id11390 . -1) (undo-tree-id11391 . -1) (undo-tree-id11392 . -1) (undo-tree-id11393 . -1) (undo-tree-id11394 . -1) 556 (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 556) (undo-tree-id11395 . -1) (555 . 556) (554 . 556) (#("/" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line)) . -554) (undo-tree-id11396 . -1) (undo-tree-id11397 . -1) (554 . 555) (554 . 555)) nil (26024 54624 673700 0) 0 nil])
([nil nil ((#("(add-to-list 'default-frame-alist '(undecorated . t))
" 0 52 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 52 53 (src-block t font-lock-fontified t rear-nonsticky t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 53 54 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 578) (undo-tree-id11437 . -53) (undo-tree-id11438 . -54) (undo-tree-id11439 . -54) (undo-tree-id11440 . -54) (undo-tree-id11441 . -54) (undo-tree-id11442 . -54) (undo-tree-id11443 . -54) (undo-tree-id11444 . -54) (undo-tree-id11445 . -54) (undo-tree-id11446 . -54) (undo-tree-id11447 . -54) (undo-tree-id11448 . -54) (undo-tree-id11449 . -54) (undo-tree-id11450 . -54) (undo-tree-id11451 . -54) (undo-tree-id11452 . -54) (undo-tree-id11453 . -54) (undo-tree-id11454 . -54) (undo-tree-id11455 . -54) (undo-tree-id11456 . -54) (undo-tree-id11457 . -54) (undo-tree-id11458 . -54) (undo-tree-id11459 . 54) (undo-tree-id11460 . -1) (undo-tree-id11461 . 2) (undo-tree-id11462 . -53) (undo-tree-id11463 . -54) (t 26024 54624 759194 342000)) nil (26024 58740 403970 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t font-lock-fontified t help-echo nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) src-block t jinx--pending t font-lock-multiline t face (org-block))) . 578) (undo-tree-id11436 . -1)) nil (26024 58740 403940 0) 0 nil])
([nil nil ((#("** Nano
#+begin_src emacs-lisp
;; Settings for nano
(setq nano-font-size 16)

(require 'nano-faces)
(require 'nano-theme)
(require 'nano-theme-dark)
(require 'nano-theme-light)

;; set the theme to dark
(nano-theme-set-dark)
(call-interactively 'nano-refresh-theme)

(require 'nano-modeline)
(require 'nano-splash)
(require 'nano-layout)
(require 'nano-colors)
(require 'nano-writer)
(set-scroll-bar-mode nil)
#+end_src
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 3 7 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 7 8 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 8 30 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line) 30 31 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 31 34 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 34 51 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 51 52 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face org-block)) 52 53 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 57 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 57 58 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 58 75 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 75 76 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 76 77 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 77 78 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 78 79 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 79 86 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 86 88 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 88 98 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 98 100 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 100 101 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 101 108 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 108 110 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 110 120 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 120 122 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 122 123 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 123 130 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 130 132 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 132 147 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 147 149 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 149 150 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 150 157 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 157 159 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 159 175 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 175 176 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 176 177 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 177 178 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 178 181 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block)) 181 202 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 202 203 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block)) 203 223 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 223 224 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 224 225 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 225 264 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 264 265 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 265 266 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 266 267 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 267 268 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 268 275 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 275 277 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 277 290 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 290 291 (src-block t font-lock-fontified t rear-nonsticky t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 291 292 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 292 293 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 293 300 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 300 302 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 302 313 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 313 314 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 314 315 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 315 316 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 316 323 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 323 325 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 325 336 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 336 337 (src-block t font-lock-fontified t rear-nonsticky t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 337 338 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 338 339 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 339 346 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 346 348 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 348 359 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 359 360 (rear-nonsticky t font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 360 361 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 361 362 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 362 369 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 369 371 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 371 382 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 382 383 (src-block t font-lock-fontified t rear-nonsticky t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 383 384 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 384 409 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 409 410 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 410 416 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 416 419 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-end-line) 419 420 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) face org-block-end-line)) . 2852) (undo-tree-id11464 . -419) (undo-tree-id11465 . -420) (undo-tree-id11466 . -79) (undo-tree-id11467 . -410) (undo-tree-id11468 . -410) (undo-tree-id11469 . -410) (undo-tree-id11470 . -410) (undo-tree-id11471 . -282) (undo-tree-id11472 . -282) (undo-tree-id11473 . -338) (undo-tree-id11474 . -338) (undo-tree-id11475 . -338) (undo-tree-id11476 . -338) (undo-tree-id11477 . -338) (undo-tree-id11478 . -84) (undo-tree-id11479 . -84) (undo-tree-id11480 . -2) (undo-tree-id11481 . 417) (undo-tree-id11482 . -7) 2854 (t 26024 58740 498514 323000)) nil (26024 58761 778506 0) 0 nil])
([nil nil ((801 . 802) 792) nil (26024 58761 778481 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 802 . 803) (#("
" 0 1 (face org-block-end-line fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -1222) (802 . 1223)) nil (26024 58761 778476 0) 0 nil])
([nil nil ((#("(require 'nano-splash)
" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 1 8 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil) 8 10 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 10 21 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil) 21 22 (src-block t font-lock-fontified t rear-nonsticky t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil) 22 23 (src-block t font-lock-fontified t rear-nonsticky t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block) help-echo nil)) . 1095) (undo-tree-id11483 . -1) (undo-tree-id11484 . -22) (undo-tree-id11485 . -1) (undo-tree-id11486 . -1) (undo-tree-id11487 . -1) (undo-tree-id11488 . -1) (undo-tree-id11489 . -1) 1096 (t 26024 58761 863610 973000)) nil (26024 59178 820033 0) 0 nil])
([nil nil ((46137 . 46138) 46113) nil (26024 59178 820016 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 46138 . 46139) (#("
" 0 1 (face (org-block) font-lock-multiline t rear-nonsticky t font-lock-fontified t src-block t fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -46161) (46138 . 46162)) nil (26024 59178 820012 0) 0 nil])
([nil nil ((46176 . 46187) (#("a" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -46176) (undo-tree-id11490 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -46177) (undo-tree-id11491 . -1) (#("h" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -46178) (undo-tree-id11492 . -1) 46179 (46158 . 46179) (46150 . 46158) (#("c" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-face org-block))) . -46150) (undo-tree-id11493 . -1) 46151 (46139 . 46151) (46138 . 46139) (t 26024 59178 904754 673000) 46138) nil (26024 59206 716906 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 46197 . 46198) (#("
" 0 1 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)))) . -46253) (46187 . 46254) 46186 (t 26024 59190 352900 840000)) nil (26024 59211 310348 0) 0 nil] [nil nil ((nil rear-nonsticky nil 46197 . 46198) (#("
" 0 1 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)))) . -46253) (46187 . 46254) 46186 (t 26024 59190 352900 840000)) ((#("
          (run-with-idle-timer 0.05 nil (lambda() (message nil)))
" 0 1 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-comment-face org-block) help-echo nil src-block t) 1 10 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 10 11 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) rear-nonsticky nil font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 11 42 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 42 48 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face org-block) help-echo nil src-block t) 48 66 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 66 67 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("            " 0 2 (face org-indent) 2 12 (face org-indent)))) . 46187) (undo-tree-id11494 . -1) (undo-tree-id11495 . -66) (undo-tree-id11496 . -11) (undo-tree-id11497 . 56) (undo-tree-id11498 . -12) (undo-tree-id11499 . 2) (undo-tree-id11500 . -66) (undo-tree-id11501 . -11) (46253 . 46254) (nil rear-nonsticky t 46197 . 46198)) (26024 59206 715473 0) 0 nil])
([nil nil ((#("          " 0 9 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("                    " 0 2 (face org-indent) 2 20 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t) 9 10 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("                    " 0 2 (face org-indent) 2 20 (face org-indent)) rear-nonsticky t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . -46196) (undo-tree-id11762 . -10) (undo-tree-id11763 . -10) (undo-tree-id11764 . -10) (undo-tree-id11765 . -10) (undo-tree-id11766 . -10) (undo-tree-id11767 . -10) (undo-tree-id11768 . -10) (undo-tree-id11769 . -10) (undo-tree-id11770 . -10) (undo-tree-id11771 . -10) (undo-tree-id11772 . -10) (undo-tree-id11773 . -10) (undo-tree-id11774 . -10) (undo-tree-id11775 . -10) (undo-tree-id11776 . -10) (undo-tree-id11777 . -10) (undo-tree-id11778 . -10) (undo-tree-id11779 . -10) (undo-tree-id11780 . -10) (undo-tree-id11781 . -10) (undo-tree-id11782 . -10) (undo-tree-id11783 . -10) (undo-tree-id11784 . -10) (undo-tree-id11785 . -10) (undo-tree-id11786 . -10) (undo-tree-id11787 . -10) (undo-tree-id11788 . -10) (undo-tree-id11789 . -10) (undo-tree-id11790 . -10) (undo-tree-id11791 . -10) (undo-tree-id11792 . -10) (undo-tree-id11793 . -10) (undo-tree-id11794 . -10) (undo-tree-id11795 . -10) (undo-tree-id11796 . -10) (undo-tree-id11797 . -10) (undo-tree-id11798 . -10) (undo-tree-id11799 . -10) (undo-tree-id11800 . -10) (undo-tree-id11801 . -10) (undo-tree-id11802 . -10) (undo-tree-id11803 . -10) (undo-tree-id11804 . -10) (undo-tree-id11805 . -10) (undo-tree-id11806 . -10) (undo-tree-id11807 . -10) (undo-tree-id11808 . -10) (undo-tree-id11809 . -10) (undo-tree-id11810 . -10) (undo-tree-id11811 . -10) (undo-tree-id11812 . -10) (undo-tree-id11813 . -10) (undo-tree-id11814 . -10) (undo-tree-id11815 . -10) (undo-tree-id11816 . -10) (undo-tree-id11817 . -10) (undo-tree-id11818 . -10) (undo-tree-id11819 . -10) (undo-tree-id11820 . -10) (undo-tree-id11821 . -10) (undo-tree-id11822 . -10) (undo-tree-id11823 . -10) (undo-tree-id11824 . -10) (undo-tree-id11825 . -10) (undo-tree-id11826 . -10) (undo-tree-id11827 . -10) (undo-tree-id11828 . -10) (undo-tree-id11829 . -10) (undo-tree-id11830 . -10) (undo-tree-id11831 . -10) (undo-tree-id11832 . -10) (undo-tree-id11833 . -10) (undo-tree-id11834 . -10) (undo-tree-id11835 . -10) (undo-tree-id11836 . -10) (undo-tree-id11837 . -10) (undo-tree-id11838 . -10) (undo-tree-id11839 . -10) (undo-tree-id11840 . -10) (undo-tree-id11841 . -10) (undo-tree-id11842 . -10) (undo-tree-id11843 . -10) (undo-tree-id11844 . -10) (undo-tree-id11845 . -10) (undo-tree-id11846 . -10) (undo-tree-id11847 . -10) (undo-tree-id11848 . -10) (undo-tree-id11849 . -10) (undo-tree-id11850 . -10) (undo-tree-id11851 . -10) (undo-tree-id11852 . -10) (undo-tree-id11853 . -10) (undo-tree-id11854 . -10) (undo-tree-id11855 . -10) (undo-tree-id11856 . -10) (undo-tree-id11857 . -10) (undo-tree-id11858 . -10) (undo-tree-id11859 . -10) (undo-tree-id11860 . -10) (undo-tree-id11861 . -10) (undo-tree-id11862 . -10) (undo-tree-id11863 . -10) (undo-tree-id11864 . -10) (undo-tree-id11865 . -10) (undo-tree-id11866 . -10) (undo-tree-id11867 . -10) (undo-tree-id11868 . -10) (undo-tree-id11869 . -10) (undo-tree-id11870 . -10) (undo-tree-id11871 . -10) (undo-tree-id11872 . -10) (undo-tree-id11873 . -10) (undo-tree-id11874 . -10) (undo-tree-id11875 . -10) (undo-tree-id11876 . -10) (undo-tree-id11877 . -10) (undo-tree-id11878 . -10) (undo-tree-id11879 . -10) (undo-tree-id11880 . -10) (undo-tree-id11881 . -10) (undo-tree-id11882 . -10) (undo-tree-id11883 . -10) (undo-tree-id11884 . -10) (undo-tree-id11885 . -10) (undo-tree-id11886 . -10) (undo-tree-id11887 . -10) (undo-tree-id11888 . -10) (undo-tree-id11889 . -10) (undo-tree-id11890 . -10) (undo-tree-id11891 . -10) (undo-tree-id11892 . -10) (undo-tree-id11893 . -10) (46188 . 46196) 46198) nil (26024 59211 310345 0) 0 nil])
nil
([nil nil ((#("        " 0 8 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("              " 0 2 (face org-indent) 2 14 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -46192) (undo-tree-id11632 . -8) (undo-tree-id11633 . -8) (undo-tree-id11634 . -8) (undo-tree-id11635 . -8) (undo-tree-id11636 . -8) (undo-tree-id11637 . -8) (undo-tree-id11638 . -8) (undo-tree-id11639 . -8) (undo-tree-id11640 . -8) (undo-tree-id11641 . -8) (undo-tree-id11642 . -8) (undo-tree-id11643 . -8) (undo-tree-id11644 . -8) (undo-tree-id11645 . -8) (undo-tree-id11646 . -8) (undo-tree-id11647 . -8) (undo-tree-id11648 . -8) (undo-tree-id11649 . -8) (undo-tree-id11650 . -8) (undo-tree-id11651 . -8) (undo-tree-id11652 . -8) (undo-tree-id11653 . -8) (undo-tree-id11654 . -8) (undo-tree-id11655 . -8) (undo-tree-id11656 . -8) (undo-tree-id11657 . -8) (undo-tree-id11658 . -8) (undo-tree-id11659 . -8) (undo-tree-id11660 . -8) (undo-tree-id11661 . -8) (undo-tree-id11662 . -8) (undo-tree-id11663 . -8) (undo-tree-id11664 . -8) (undo-tree-id11665 . -8) (undo-tree-id11666 . -8) (undo-tree-id11667 . -8) (undo-tree-id11668 . -8) (undo-tree-id11669 . -8) (undo-tree-id11670 . -8) (undo-tree-id11671 . -8) (undo-tree-id11672 . -8) (undo-tree-id11673 . -8) (undo-tree-id11674 . -8) (undo-tree-id11675 . -8) (undo-tree-id11676 . -8) (undo-tree-id11677 . -8) (undo-tree-id11678 . -8) (undo-tree-id11679 . -8) (undo-tree-id11680 . -8) (undo-tree-id11681 . -8) (undo-tree-id11682 . -8) (undo-tree-id11683 . -8) (undo-tree-id11684 . -8) (undo-tree-id11685 . -8) (undo-tree-id11686 . -8) (undo-tree-id11687 . -8) (undo-tree-id11688 . -8) (undo-tree-id11689 . -8) (undo-tree-id11690 . -8) (undo-tree-id11691 . -8) (undo-tree-id11692 . -8) (undo-tree-id11693 . -8) (undo-tree-id11694 . -8) (undo-tree-id11695 . -8) (undo-tree-id11696 . -8) (undo-tree-id11697 . -8) (undo-tree-id11698 . -8) (undo-tree-id11699 . -8) (undo-tree-id11700 . -8) (undo-tree-id11701 . -8) (undo-tree-id11702 . -8) (undo-tree-id11703 . -8) (undo-tree-id11704 . -8) (undo-tree-id11705 . -8) (undo-tree-id11706 . -8) (undo-tree-id11707 . -8) (undo-tree-id11708 . -8) (undo-tree-id11709 . -8) (undo-tree-id11710 . -8) (undo-tree-id11711 . -8) (undo-tree-id11712 . -8) (undo-tree-id11713 . -8) (undo-tree-id11714 . -8) (undo-tree-id11715 . -8) (undo-tree-id11716 . -8) (undo-tree-id11717 . -8) (undo-tree-id11718 . -8) (undo-tree-id11719 . -8) (undo-tree-id11720 . -8) (undo-tree-id11721 . -8) (undo-tree-id11722 . -8) (undo-tree-id11723 . -8) (undo-tree-id11724 . -8) (undo-tree-id11725 . -8) (undo-tree-id11726 . -8) (undo-tree-id11727 . -8) (undo-tree-id11728 . -8) (undo-tree-id11729 . -8) (undo-tree-id11730 . -8) (undo-tree-id11731 . -8) (undo-tree-id11732 . -8) (undo-tree-id11733 . -8) (undo-tree-id11734 . -8) (undo-tree-id11735 . -8) (undo-tree-id11736 . -8) (undo-tree-id11737 . -8) (undo-tree-id11738 . -8) (undo-tree-id11739 . -8) (undo-tree-id11740 . -8) (undo-tree-id11741 . -8) (undo-tree-id11742 . -8) (undo-tree-id11743 . -8) (undo-tree-id11744 . -8) (undo-tree-id11745 . -8) (undo-tree-id11746 . -8) (undo-tree-id11747 . -8) (undo-tree-id11748 . -8) (undo-tree-id11749 . -8) (undo-tree-id11750 . -8) (undo-tree-id11751 . -8) (undo-tree-id11752 . -8) (undo-tree-id11753 . -8) (undo-tree-id11754 . -8) (undo-tree-id11755 . -8) (undo-tree-id11756 . -8) (undo-tree-id11757 . -8) (undo-tree-id11758 . -8) (undo-tree-id11759 . -8) (undo-tree-id11760 . -8) (undo-tree-id11761 . -8) (46188 . 46192) 46198) nil (26024 59211 310231 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -46188) (undo-tree-id11502 . -4) (undo-tree-id11503 . -4) (undo-tree-id11504 . -4) (undo-tree-id11505 . -4) (undo-tree-id11506 . -4) (undo-tree-id11507 . -4) (undo-tree-id11508 . -4) (undo-tree-id11509 . -4) (undo-tree-id11510 . -4) (undo-tree-id11511 . -4) (undo-tree-id11512 . -4) (undo-tree-id11513 . -4) (undo-tree-id11514 . -4) (undo-tree-id11515 . -4) (undo-tree-id11516 . -4) (undo-tree-id11517 . -4) (undo-tree-id11518 . -4) (undo-tree-id11519 . -4) (undo-tree-id11520 . -4) (undo-tree-id11521 . -4) (undo-tree-id11522 . -4) (undo-tree-id11523 . -4) (undo-tree-id11524 . -4) (undo-tree-id11525 . -4) (undo-tree-id11526 . -4) (undo-tree-id11527 . -4) (undo-tree-id11528 . -4) (undo-tree-id11529 . -4) (undo-tree-id11530 . -4) (undo-tree-id11531 . -4) (undo-tree-id11532 . -4) (undo-tree-id11533 . -4) (undo-tree-id11534 . -4) (undo-tree-id11535 . -4) (undo-tree-id11536 . -4) (undo-tree-id11537 . -4) (undo-tree-id11538 . -4) (undo-tree-id11539 . -4) (undo-tree-id11540 . -4) (undo-tree-id11541 . -4) (undo-tree-id11542 . -4) (undo-tree-id11543 . -4) (undo-tree-id11544 . -4) (undo-tree-id11545 . -4) (undo-tree-id11546 . -4) (undo-tree-id11547 . -4) (undo-tree-id11548 . -4) (undo-tree-id11549 . -4) (undo-tree-id11550 . -4) (undo-tree-id11551 . -4) (undo-tree-id11552 . -4) (undo-tree-id11553 . -4) (undo-tree-id11554 . -4) (undo-tree-id11555 . -4) (undo-tree-id11556 . -4) (undo-tree-id11557 . -4) (undo-tree-id11558 . -4) (undo-tree-id11559 . -4) (undo-tree-id11560 . -4) (undo-tree-id11561 . -4) (undo-tree-id11562 . -4) (undo-tree-id11563 . -4) (undo-tree-id11564 . -4) (undo-tree-id11565 . -4) (undo-tree-id11566 . -4) (undo-tree-id11567 . -4) (undo-tree-id11568 . -4) (undo-tree-id11569 . -4) (undo-tree-id11570 . -4) (undo-tree-id11571 . -4) (undo-tree-id11572 . -4) (undo-tree-id11573 . -4) (undo-tree-id11574 . -4) (undo-tree-id11575 . -4) (undo-tree-id11576 . -4) (undo-tree-id11577 . -4) (undo-tree-id11578 . -4) (undo-tree-id11579 . -4) (undo-tree-id11580 . -4) (undo-tree-id11581 . -4) (undo-tree-id11582 . -4) (undo-tree-id11583 . -4) (undo-tree-id11584 . -4) (undo-tree-id11585 . -4) (undo-tree-id11586 . -4) (undo-tree-id11587 . -4) (undo-tree-id11588 . -4) (undo-tree-id11589 . -4) (undo-tree-id11590 . -4) (undo-tree-id11591 . -4) (undo-tree-id11592 . -4) (undo-tree-id11593 . -4) (undo-tree-id11594 . -4) (undo-tree-id11595 . -4) (undo-tree-id11596 . -4) (undo-tree-id11597 . -4) (undo-tree-id11598 . -4) (undo-tree-id11599 . -4) (undo-tree-id11600 . -4) (undo-tree-id11601 . -4) (undo-tree-id11602 . -4) (undo-tree-id11603 . -4) (undo-tree-id11604 . -4) (undo-tree-id11605 . -4) (undo-tree-id11606 . -4) (undo-tree-id11607 . -4) (undo-tree-id11608 . -4) (undo-tree-id11609 . -4) (undo-tree-id11610 . -4) (undo-tree-id11611 . -4) (undo-tree-id11612 . -4) (undo-tree-id11613 . -4) (undo-tree-id11614 . -4) (undo-tree-id11615 . -4) (undo-tree-id11616 . -4) (undo-tree-id11617 . -4) (undo-tree-id11618 . -4) (undo-tree-id11619 . -4) (undo-tree-id11620 . -4) (undo-tree-id11621 . -4) (undo-tree-id11622 . -4) (undo-tree-id11623 . -4) (undo-tree-id11624 . -4) (undo-tree-id11625 . -4) (undo-tree-id11626 . -4) (undo-tree-id11627 . -4) (undo-tree-id11628 . -4) (undo-tree-id11629 . -4) (undo-tree-id11630 . -4) (undo-tree-id11631 . -4) 46198) nil (26024 59211 310117 0) 0 nil])
([nil nil ((#("(require 'nano-splash)" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1 8 (font-lock-fontified t src-block t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 8 10 (font-lock-fontified t src-block t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 10 21 (font-lock-fontified t src-block t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 21 22 (rear-nonsticky t font-lock-fontified t src-block t fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-multiline t face (org-block))) . 46244) (undo-tree-id11902 . -21) (undo-tree-id11903 . 22) (undo-tree-id11904 . -1) (undo-tree-id11905 . 1) (undo-tree-id11906 . -22) (undo-tree-id11907 . -22) (t 26024 59211 394209 130000)) nil (26024 59220 920979 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 46249 . 46250) (nil fontified nil 46228 . 46250) (46228 . 46250) 46227) nil (26024 59220 920973 0) 0 nil])
([nil nil ((#("(message nil" 0 12 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 46250) (undo-tree-id11898 . -11) (undo-tree-id11899 . 12) (undo-tree-id11900 . -1) (undo-tree-id11901 . -12)) nil (26024 59220 920972 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 46252) (undo-tree-id11894 . 1) (undo-tree-id11895 . -1) (undo-tree-id11896 . -1) (undo-tree-id11897 . -1)) nil (26024 59220 920965 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 46253) (undo-tree-id11908 . -1) (t 26024 59221 4227 537000)) nil (26024 59224 848060 0) 0 nil])
([nil nil ((46211 . 46212) (#("0" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 46211) (undo-tree-id11910 . -1) (t 26024 59224 931076 152000)) nil (26024 59233 476136 0) 0 nil])
([nil nil ((46212 . 46213) (#("5" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 46212) (undo-tree-id11909 . -1)) nil (26024 59233 476132 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 46212) (undo-tree-id11911 . -1) (undo-tree-id11912 . -1) (t 26024 59233 558770 523000)) nil (26024 59234 690592 0) 0 nil])
([nil nil ((46264 . 46266) (#("(" 0 1 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . -46264) (46253 . 46265) (46252 . 46254) (#("(" 0 1 (fontified nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -46252) (46252 . 46253) (46251 . 46252) (t 26024 59234 773848 425000) 46188) nil (26024 59274 419932 0) 0 nil])
([nil nil ((46273 . 46285) (#(";" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . -46273) (undo-tree-id11913 . -1) (undo-tree-id11914 . -1) (undo-tree-id11915 . -1) (undo-tree-id11916 . -1) (undo-tree-id11917 . -1) (undo-tree-id11918 . -1) (undo-tree-id11919 . -1) (undo-tree-id11920 . -1) (undo-tree-id11921 . -1) (undo-tree-id11922 . -1) (undo-tree-id11923 . -1) (undo-tree-id11924 . -1) (undo-tree-id11925 . -1) (undo-tree-id11926 . -1) (undo-tree-id11927 . -1) (undo-tree-id11928 . -1) (undo-tree-id11929 . -1) (undo-tree-id11930 . -1) (undo-tree-id11931 . -1) (undo-tree-id11932 . -1) (undo-tree-id11933 . -1) (undo-tree-id11934 . -1) (undo-tree-id11935 . -1) (undo-tree-id11936 . -1) (undo-tree-id11937 . -1) (undo-tree-id11938 . -1) (undo-tree-id11939 . -1) (undo-tree-id11940 . -1) (undo-tree-id11941 . -1) (undo-tree-id11942 . -1) (undo-tree-id11943 . -1) (undo-tree-id11944 . -1) (undo-tree-id11945 . -1) (undo-tree-id11946 . -1) (undo-tree-id11947 . -1) (undo-tree-id11948 . -1) (undo-tree-id11949 . -1) (undo-tree-id11950 . -1) (undo-tree-id11951 . -1) (undo-tree-id11952 . -1) (undo-tree-id11953 . -1) (undo-tree-id11954 . -1) (undo-tree-id11955 . -1) (undo-tree-id11956 . -1) (undo-tree-id11957 . -1) (undo-tree-id11958 . -1) (undo-tree-id11959 . -1) 46274 (46265 . 46274)) nil (26024 59404 926419 0) 0 nil])
([nil nil ((#("(run-with-idle-timer 0.5 nil (lambda() (require 'nano-splash)))" 0 23 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 23 24 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24 30 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30 36 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 36 39 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39 40 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 40 47 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 47 49 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49 60 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 60 61 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 61 63 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 46188) (undo-tree-id12594 . -39) (undo-tree-id12595 . 63) (undo-tree-id12596 . -1) (undo-tree-id12597 . 1) (undo-tree-id12598 . -63)) ((46188 . 46251)) (26024 59405 936384 0) 0 nil] [nil nil ((#("(run-with-idle-timer 0.5 nil (lambda() (require 'nano-splash)))
" 0 23 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 23 24 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 24 30 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 30 36 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 36 39 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39 40 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 40 47 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face org-block)) 47 49 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 49 60 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face org-block)) 60 61 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 61 63 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 63 64 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 46188) (undo-tree-id11960 . -63) (undo-tree-id11961 . -39) (undo-tree-id11962 . -32) 46220 (t 26024 59274 503277 627000)) ((46188 . 46252) (t 26024 59275 956136 631000)) (26024 59275 873210 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 46188) (undo-tree-id12599 . -1)) nil (26024 59406 999622 0) 0 nil] [nil nil ((nil rear-nonsticky nil 46263 . 46264) (nil fontified nil 46201 . 46264) (46201 . 46264) 46200) ((#("(run-with-idle-timer 0.5 nil (lambda() (require 'nano-splash)))" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 1 2 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 2 3 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 3 4 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 4 5 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 5 6 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 6 7 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 7 8 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 8 9 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 9 10 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 10 11 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 11 12 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 12 13 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 13 14 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 14 15 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 15 16 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 16 17 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 17 18 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 18 19 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 19 20 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 20 21 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 21 22 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 22 30 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 30 36 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-keyword-face org-block)) 36 40 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 40 47 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-keyword-face org-block)) 47 49 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 49 60 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block)) 60 62 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block)) 62 63 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified nil rear-nonsticky nil font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46201) (undo-tree-id12284 . -1) (undo-tree-id12285 . -1) (undo-tree-id12286 . -21) (undo-tree-id12287 . -21) (undo-tree-id12288 . -21) (undo-tree-id12289 . -21) (undo-tree-id12290 . -21) (undo-tree-id12291 . -21) (undo-tree-id12292 . -21) (undo-tree-id12293 . -15) (undo-tree-id12294 . -15) (undo-tree-id12295 . -15) (undo-tree-id12296 . -15) (undo-tree-id12297 . -15) (undo-tree-id12298 . -15) (undo-tree-id12299 . -15) (undo-tree-id12300 . -14) (undo-tree-id12301 . -14) (undo-tree-id12302 . -14) (undo-tree-id12303 . -14) (undo-tree-id12304 . -14) (undo-tree-id12305 . -14) (undo-tree-id12306 . -14) (undo-tree-id12307 . -10) (undo-tree-id12308 . -10) (undo-tree-id12309 . -10) (undo-tree-id12310 . -10) (undo-tree-id12311 . -10) (undo-tree-id12312 . -10) (undo-tree-id12313 . -10) (undo-tree-id12314 . -10) (undo-tree-id12315 . -10) (undo-tree-id12316 . -10) (undo-tree-id12317 . -10) (undo-tree-id12318 . -10) (undo-tree-id12319 . -10) (undo-tree-id12320 . -10) (undo-tree-id12321 . -10) (undo-tree-id12322 . -10) (undo-tree-id12323 . -10) (undo-tree-id12324 . -10) (undo-tree-id12325 . -10) (undo-tree-id12326 . -10) (undo-tree-id12327 . -10) (undo-tree-id12328 . -9) (undo-tree-id12329 . -9) (undo-tree-id12330 . -9) (undo-tree-id12331 . -9) (undo-tree-id12332 . -9) (undo-tree-id12333 . -9) (undo-tree-id12334 . -9) (undo-tree-id12335 . -9) (undo-tree-id12336 . -9) (undo-tree-id12337 . -9) (undo-tree-id12338 . -9) (undo-tree-id12339 . -9) (undo-tree-id12340 . -9) (undo-tree-id12341 . -9) (undo-tree-id12342 . -9) (undo-tree-id12343 . -9) (undo-tree-id12344 . -9) (undo-tree-id12345 . -9) (undo-tree-id12346 . -9) (undo-tree-id12347 . -9) (undo-tree-id12348 . -9) (undo-tree-id12349 . -5) (undo-tree-id12350 . -5) (undo-tree-id12351 . -5) (undo-tree-id12352 . -5) (undo-tree-id12353 . -5) (undo-tree-id12354 . -5) (undo-tree-id12355 . -5) (undo-tree-id12356 . -5) (undo-tree-id12357 . -5) (undo-tree-id12358 . -5) (undo-tree-id12359 . -5) (undo-tree-id12360 . -5) (undo-tree-id12361 . -5) (undo-tree-id12362 . -5) (undo-tree-id12363 . -4) (undo-tree-id12364 . -4) (undo-tree-id12365 . -4) (undo-tree-id12366 . -4) (undo-tree-id12367 . -4) (undo-tree-id12368 . -4) (undo-tree-id12369 . -4) (undo-tree-id12370 . -4) (undo-tree-id12371 . -4) (undo-tree-id12372 . -4) (undo-tree-id12373 . -4) (undo-tree-id12374 . -4) (undo-tree-id12375 . -4) (undo-tree-id12376 . -4) (undo-tree-id12377 . -4) (undo-tree-id12378 . -4) (undo-tree-id12379 . -4) (undo-tree-id12380 . -4) (undo-tree-id12381 . -4) (undo-tree-id12382 . -4) (undo-tree-id12383 . -4) (undo-tree-id12384 . -1) (undo-tree-id12385 . -1) (undo-tree-id12386 . -1) (undo-tree-id12387 . -1) (undo-tree-id12388 . -1) (undo-tree-id12389 . -1) (undo-tree-id12390 . -1) (undo-tree-id12391 . -1) (undo-tree-id12392 . -1) (undo-tree-id12393 . -1) (undo-tree-id12394 . -1) (undo-tree-id12395 . -1) (undo-tree-id12396 . -1) (undo-tree-id12397 . -1) (undo-tree-id12398 . -1) (undo-tree-id12399 . -1) (undo-tree-id12400 . -1) (undo-tree-id12401 . -1) (undo-tree-id12402 . -1) (undo-tree-id12403 . -1) (undo-tree-id12404 . -1) (undo-tree-id12405 . -1) (undo-tree-id12406 . -1) (undo-tree-id12407 . -1) (undo-tree-id12408 . -1) (undo-tree-id12409 . -1) (undo-tree-id12410 . -1) (undo-tree-id12411 . -1) (undo-tree-id12412 . -1) (undo-tree-id12413 . -1) (undo-tree-id12414 . -1) (undo-tree-id12415 . -1) (undo-tree-id12416 . -1) (undo-tree-id12417 . -1) (undo-tree-id12418 . -1) (undo-tree-id12419 . -1) (undo-tree-id12420 . -1) (undo-tree-id12421 . -1) (undo-tree-id12422 . -1) (undo-tree-id12423 . -1) (undo-tree-id12424 . -1) (undo-tree-id12425 . -1) (undo-tree-id12426 . -1) (undo-tree-id12427 . -1) (undo-tree-id12428 . -1) (undo-tree-id12429 . -1) (undo-tree-id12430 . -1) (undo-tree-id12431 . -1) (undo-tree-id12432 . -1) (undo-tree-id12433 . -1) (undo-tree-id12434 . -1) (undo-tree-id12435 . -1) (undo-tree-id12436 . -1) (undo-tree-id12437 . -1) (undo-tree-id12438 . -1) (undo-tree-id12439 . -1) (undo-tree-id12440 . -1) (undo-tree-id12441 . -1) (undo-tree-id12442 . -1) (undo-tree-id12443 . -1) (undo-tree-id12444 . -1) (undo-tree-id12445 . -1) (undo-tree-id12446 . -1) (undo-tree-id12447 . -1) (undo-tree-id12448 . -1) (undo-tree-id12449 . -1) (undo-tree-id12450 . -1) (undo-tree-id12451 . -1) (undo-tree-id12452 . -1) (undo-tree-id12453 . -1) (undo-tree-id12454 . -1) (undo-tree-id12455 . -1) (undo-tree-id12456 . -1) (undo-tree-id12457 . -1) (undo-tree-id12458 . -1) (undo-tree-id12459 . -1) (undo-tree-id12460 . -1) (undo-tree-id12461 . -1) (undo-tree-id12462 . -1) (undo-tree-id12463 . -1) (undo-tree-id12464 . -1) (undo-tree-id12465 . -1) (undo-tree-id12466 . -1) (undo-tree-id12467 . -1) (undo-tree-id12468 . -1) (undo-tree-id12469 . -1) (undo-tree-id12470 . -1) (undo-tree-id12471 . -1) (undo-tree-id12472 . -1) (undo-tree-id12473 . -1) (undo-tree-id12474 . -1) (undo-tree-id12475 . -1) (undo-tree-id12476 . -1) (undo-tree-id12477 . -1) (undo-tree-id12478 . -1) (undo-tree-id12479 . -1) (undo-tree-id12480 . -1) (undo-tree-id12481 . -1) (undo-tree-id12482 . -1) (undo-tree-id12483 . -1) (undo-tree-id12484 . -1) (undo-tree-id12485 . -1) (undo-tree-id12486 . -1) (undo-tree-id12487 . -1) (undo-tree-id12488 . -1) (undo-tree-id12489 . -1) (undo-tree-id12490 . -1) (undo-tree-id12491 . -1) (undo-tree-id12492 . -1) (undo-tree-id12493 . -1) (undo-tree-id12494 . -1) (undo-tree-id12495 . -1) (undo-tree-id12496 . -1) (undo-tree-id12497 . -1) (undo-tree-id12498 . -1) (undo-tree-id12499 . -1) (undo-tree-id12500 . -1) (undo-tree-id12501 . -1) (undo-tree-id12502 . -1) (undo-tree-id12503 . -1) (undo-tree-id12504 . -1) (undo-tree-id12505 . -1) (undo-tree-id12506 . -1) (undo-tree-id12507 . -1) (undo-tree-id12508 . -1) (undo-tree-id12509 . -1) (undo-tree-id12510 . -1) (undo-tree-id12511 . -1) (undo-tree-id12512 . -1) (undo-tree-id12513 . -1) (undo-tree-id12514 . -1) (undo-tree-id12515 . -1) (undo-tree-id12516 . -1) (undo-tree-id12517 . -1) (undo-tree-id12518 . -1) (undo-tree-id12519 . -1) (undo-tree-id12520 . -1) (undo-tree-id12521 . -1) (undo-tree-id12522 . -1) (undo-tree-id12523 . -1) (undo-tree-id12524 . -1) (undo-tree-id12525 . -1) (undo-tree-id12526 . -1) (undo-tree-id12527 . -1) (undo-tree-id12528 . -1) (undo-tree-id12529 . -1) (undo-tree-id12530 . -1) (undo-tree-id12531 . -1) (undo-tree-id12532 . -1) (undo-tree-id12533 . -1) (undo-tree-id12534 . -1) (undo-tree-id12535 . -1) (undo-tree-id12536 . -1) (undo-tree-id12537 . -1) (undo-tree-id12538 . -1) (undo-tree-id12539 . -1) (undo-tree-id12540 . -1) (undo-tree-id12541 . -1) (undo-tree-id12542 . -1) (undo-tree-id12543 . -1) (undo-tree-id12544 . -1) (undo-tree-id12545 . -1) (undo-tree-id12546 . -1) (undo-tree-id12547 . -1) (undo-tree-id12548 . -1) (undo-tree-id12549 . -1) (undo-tree-id12550 . -1) (undo-tree-id12551 . -1) (undo-tree-id12552 . -1) (undo-tree-id12553 . -1) (undo-tree-id12554 . -1) (undo-tree-id12555 . -1) (undo-tree-id12556 . -1) (undo-tree-id12557 . -1) (undo-tree-id12558 . -1) (undo-tree-id12559 . -1) (undo-tree-id12560 . -1) (undo-tree-id12561 . -1) (undo-tree-id12562 . -1) (undo-tree-id12563 . -1) (undo-tree-id12564 . -1) (undo-tree-id12565 . -1) (undo-tree-id12566 . -1) (undo-tree-id12567 . -1) (undo-tree-id12568 . -1) (undo-tree-id12569 . -1) (undo-tree-id12570 . -1) (undo-tree-id12571 . -1) (undo-tree-id12572 . -1) (undo-tree-id12573 . -1) (undo-tree-id12574 . -1) (undo-tree-id12575 . -1) (undo-tree-id12576 . -1) (undo-tree-id12577 . -1) (undo-tree-id12578 . -1) (undo-tree-id12579 . -1) (undo-tree-id12580 . -1) (undo-tree-id12581 . -1) (undo-tree-id12582 . -1) (undo-tree-id12583 . -1) (undo-tree-id12584 . -1) (undo-tree-id12585 . -1) (undo-tree-id12586 . -1) (undo-tree-id12587 . -1) (undo-tree-id12588 . -1) (undo-tree-id12589 . -1) (undo-tree-id12590 . -1) (undo-tree-id12591 . -1) (undo-tree-id12592 . -1) (undo-tree-id12593 . -1) (nil rear-nonsticky t 46263 . 46264)) (26024 59404 518841 0) 0 nil])
nil
([nil nil ((46084 . 46085) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . 46084) (undo-tree-id12600 . -1) (t 26024 59407 84248 558000)) nil (26024 59411 855235 0) 0 nil])
([nil nil ((#("(require 'nano-splash)" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 1 8 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 8 10 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 10 21 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 21 22 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 46264) (undo-tree-id11963 . 1) (undo-tree-id11964 . -21) (undo-tree-id11965 . -1) (undo-tree-id11967 . -1) (undo-tree-id11969 . -1) (undo-tree-id11971 . -1) (undo-tree-id11973 . -1) (undo-tree-id11975 . -1) (undo-tree-id11977 . -1) (undo-tree-id11979 . -1) (undo-tree-id11981 . -1) (undo-tree-id11983 . -1) (undo-tree-id11985 . -1) (undo-tree-id11987 . -1) (undo-tree-id11989 . -1) (undo-tree-id11991 . -1) (undo-tree-id11993 . -1) (undo-tree-id11995 . -1) (undo-tree-id11997 . -1) (undo-tree-id11999 . -1) (undo-tree-id12001 . -1) (undo-tree-id12003 . -1) (undo-tree-id12005 . -1) (undo-tree-id12007 . -1) (undo-tree-id12009 . -1) (undo-tree-id12011 . -1) (undo-tree-id12013 . -1) (undo-tree-id12015 . -1) (undo-tree-id12017 . -1) (undo-tree-id12019 . -1) (undo-tree-id12021 . -1) (undo-tree-id12023 . -1) (undo-tree-id12025 . -1) (undo-tree-id12027 . -1) (undo-tree-id12029 . -1) (undo-tree-id12031 . -1) (undo-tree-id12033 . -1) (undo-tree-id12035 . -1) (undo-tree-id12037 . -1) (undo-tree-id12039 . -1) (undo-tree-id12041 . -1) (undo-tree-id12043 . -1) (undo-tree-id12045 . -1) 46265) ((46264 . 46286) (t 26024 59321 124871 49000)) (26024 59404 484647 0) 0 nil])
([nil nil ((#("(add-to-list 'default-frame-alist '(undecorated . t))
" 0 52 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 52 53 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t rear-nonsticky t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 53 54 (fontified t font-lock-fontified t help-echo nil line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) src-block t font-lock-multiline t face (org-block))) . 1637) (undo-tree-id12601 . -53) (undo-tree-id12602 . -41) (undo-tree-id12603 . -41) (undo-tree-id12604 . -41) (undo-tree-id12605 . -41) (undo-tree-id12606 . -41) (undo-tree-id12607 . -41) (undo-tree-id12608 . -41) (undo-tree-id12609 . -42) (undo-tree-id12610 . -42) (undo-tree-id12611 . -42) (undo-tree-id12612 . -42) (undo-tree-id12613 . -42) (undo-tree-id12614 . -42) (undo-tree-id12615 . -42) (undo-tree-id12616 . -42) (undo-tree-id12617 . -42) (undo-tree-id12618 . -42) (undo-tree-id12619 . -42) (undo-tree-id12620 . -42) (undo-tree-id12621 . -42) (undo-tree-id12622 . -42) (undo-tree-id12623 . -42) (undo-tree-id12624 . -42) (undo-tree-id12625 . -42) (undo-tree-id12626 . -42) (undo-tree-id12627 . -42) (undo-tree-id12628 . -42) (undo-tree-id12629 . -42) (undo-tree-id12630 . -43) (undo-tree-id12631 . -43) (undo-tree-id12632 . -43) (undo-tree-id12633 . -43) (undo-tree-id12634 . -43) (undo-tree-id12635 . -43) (undo-tree-id12636 . -43) (undo-tree-id12637 . -44) (undo-tree-id12638 . -44) (undo-tree-id12639 . -44) (undo-tree-id12640 . -44) (undo-tree-id12641 . -44) (undo-tree-id12642 . -44) (undo-tree-id12643 . -44) (undo-tree-id12644 . -44) (undo-tree-id12645 . -44) (undo-tree-id12646 . -44) (undo-tree-id12647 . -44) (undo-tree-id12648 . -44) (undo-tree-id12649 . -44) (undo-tree-id12650 . -44) (undo-tree-id12651 . -44) (undo-tree-id12652 . -44) (undo-tree-id12653 . -44) (undo-tree-id12654 . -44) (undo-tree-id12655 . -44) (undo-tree-id12656 . -44) (undo-tree-id12657 . -44) (undo-tree-id12658 . -44) (undo-tree-id12659 . -44) (undo-tree-id12660 . -44) (undo-tree-id12661 . -44) (undo-tree-id12662 . -44) (undo-tree-id12663 . -44) (undo-tree-id12664 . -44) (undo-tree-id12665 . -44) (undo-tree-id12666 . -44) (undo-tree-id12667 . -44) (undo-tree-id12668 . -44) (undo-tree-id12669 . -44) (undo-tree-id12670 . -44) (undo-tree-id12671 . -44) (undo-tree-id12672 . -44) (undo-tree-id12673 . -44) (undo-tree-id12674 . -44) (undo-tree-id12675 . -44) (undo-tree-id12676 . -44) (undo-tree-id12677 . -44) (undo-tree-id12678 . -44) (undo-tree-id12679 . -44) (undo-tree-id12680 . -44) (undo-tree-id12681 . -44) (undo-tree-id12682 . -44) (undo-tree-id12683 . -44) (undo-tree-id12684 . -44) (undo-tree-id12685 . -44) (undo-tree-id12686 . -44) (undo-tree-id12687 . -44) (undo-tree-id12688 . -44) (undo-tree-id12689 . -44) (undo-tree-id12690 . -44) (undo-tree-id12691 . -44) (undo-tree-id12692 . -44) (undo-tree-id12693 . -44) (undo-tree-id12694 . -44) (undo-tree-id12695 . -44) (undo-tree-id12696 . -44) (undo-tree-id12697 . -44) (undo-tree-id12698 . -44) (undo-tree-id12699 . -44) (undo-tree-id12700 . -54) 1681 (t 26024 59411 939563 620000)) nil (26024 61809 645221 0) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12282 . -1) (undo-tree-id12283 . -1) (t 26024 59321 124871 49000)) ((46202 . 46203)) (26024 59404 450914 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 1637) (undo-tree-id12701 . -1) (t 26024 61809 724576 226000)) nil (26024 61810 430730 0) 0 nil])
([nil nil ((#("u" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12280 . -1) (undo-tree-id12281 . -1)) ((46202 . 46203)) (26024 59404 416783 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t)) . -9725) (undo-tree-id12703 . -1) (undo-tree-id12704 . -1) (undo-tree-id12705 . -1) (undo-tree-id12706 . -1) (undo-tree-id12707 . -1) (undo-tree-id12708 . -1) (undo-tree-id12709 . -1) (undo-tree-id12710 . -1) (undo-tree-id12711 . -1) (undo-tree-id12712 . -1) (undo-tree-id12713 . -1) (undo-tree-id12714 . -1) (undo-tree-id12715 . -1) (undo-tree-id12716 . -1) (undo-tree-id12717 . -1) (undo-tree-id12718 . -1) (undo-tree-id12719 . -1) (undo-tree-id12720 . -1) (undo-tree-id12721 . -1) (undo-tree-id12722 . -1) (undo-tree-id12723 . -1) (undo-tree-id12724 . -1) (undo-tree-id12725 . -1) (undo-tree-id12726 . -1) (undo-tree-id12727 . -1) (undo-tree-id12728 . -1) (undo-tree-id12729 . -1) (undo-tree-id12730 . -1) (undo-tree-id12731 . -1) (undo-tree-id12732 . -1) (undo-tree-id12733 . -1) (undo-tree-id12734 . -1) (undo-tree-id12735 . -1) (undo-tree-id12736 . -1) (undo-tree-id12737 . -1) (undo-tree-id12738 . -1) (undo-tree-id12739 . -1) (undo-tree-id12740 . -1) (undo-tree-id12741 . -1) (undo-tree-id12742 . -1) (undo-tree-id12743 . -1) (undo-tree-id12744 . -1) (undo-tree-id12745 . -1) (undo-tree-id12746 . -1) (undo-tree-id12747 . -1) (undo-tree-id12748 . -1) (undo-tree-id12749 . -1) (undo-tree-id12750 . -1) (undo-tree-id12751 . -1) (undo-tree-id12752 . -1) (undo-tree-id12753 . -1) (undo-tree-id12754 . -1) (undo-tree-id12755 . -1) (undo-tree-id12756 . -1) (undo-tree-id12757 . -1) (undo-tree-id12758 . -1) (undo-tree-id12759 . -1) (undo-tree-id12760 . -1) (undo-tree-id12761 . -1) (undo-tree-id12762 . -1) (undo-tree-id12763 . -1) (undo-tree-id12764 . -1) (undo-tree-id12765 . -1) (undo-tree-id12766 . -1) (undo-tree-id12767 . -1) (undo-tree-id12768 . -1) (undo-tree-id12769 . -1) (undo-tree-id12770 . -1) (undo-tree-id12771 . -1) (undo-tree-id12772 . -1) (undo-tree-id12773 . -1) (undo-tree-id12774 . -1) (undo-tree-id12775 . -1) (undo-tree-id12776 . -1) (undo-tree-id12777 . -1) (undo-tree-id12778 . -1) (undo-tree-id12779 . -1) (undo-tree-id12780 . -1) (undo-tree-id12781 . -1) (undo-tree-id12782 . -1) (undo-tree-id12783 . -1) (undo-tree-id12784 . -1) (undo-tree-id12785 . -1) (undo-tree-id12786 . -1) (undo-tree-id12787 . -1) (undo-tree-id12788 . -1) (undo-tree-id12789 . -1) (undo-tree-id12790 . -1) (undo-tree-id12791 . -1) (undo-tree-id12792 . -1) (undo-tree-id12793 . -1) (undo-tree-id12794 . -1) (undo-tree-id12795 . -1) (undo-tree-id12796 . -1) (undo-tree-id12797 . -1) (undo-tree-id12798 . -1) (undo-tree-id12799 . -1) (undo-tree-id12800 . -1) (undo-tree-id12801 . -1) (undo-tree-id12802 . -1) (undo-tree-id12803 . -1) (undo-tree-id12804 . -1) (undo-tree-id12805 . -1) (undo-tree-id12806 . -1) (undo-tree-id12807 . -1) (undo-tree-id12808 . -1) (undo-tree-id12809 . -1) (undo-tree-id12810 . -1) (undo-tree-id12811 . -1) (undo-tree-id12812 . -1) (undo-tree-id12813 . -1) (undo-tree-id12814 . -1) (undo-tree-id12815 . -1) (undo-tree-id12816 . -1) (undo-tree-id12817 . -1) (undo-tree-id12818 . -1) (undo-tree-id12819 . -1) (undo-tree-id12820 . -1) (undo-tree-id12821 . -1) (undo-tree-id12822 . -1) (undo-tree-id12823 . -1) (undo-tree-id12824 . -1) (undo-tree-id12825 . -1) (undo-tree-id12826 . -1) (undo-tree-id12827 . -1) (undo-tree-id12828 . -1) (undo-tree-id12829 . -1) (undo-tree-id12830 . -1) (#(")" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t)) . 9726) (undo-tree-id12831 . -1) (#("u" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t)) . -9726) (undo-tree-id12832 . -1) (undo-tree-id12833 . -1) (undo-tree-id12834 . -1) (undo-tree-id12835 . -1) (undo-tree-id12836 . -1) (undo-tree-id12837 . -1) (undo-tree-id12838 . -1) (undo-tree-id12839 . -1) (undo-tree-id12840 . -1) (undo-tree-id12841 . -1) (undo-tree-id12842 . -1) (undo-tree-id12843 . -1) (undo-tree-id12844 . -1) (undo-tree-id12845 . -1) (undo-tree-id12846 . -1) (undo-tree-id12847 . -1) (undo-tree-id12848 . -1) (undo-tree-id12849 . -1) (undo-tree-id12850 . -1) (undo-tree-id12851 . -1) (undo-tree-id12852 . -1) (undo-tree-id12853 . -1) (undo-tree-id12854 . -1) (undo-tree-id12855 . -1) (undo-tree-id12856 . -1) (undo-tree-id12857 . -1) (undo-tree-id12858 . -1) (undo-tree-id12859 . -1) (undo-tree-id12860 . -1) (undo-tree-id12861 . -1) (undo-tree-id12862 . -1) (undo-tree-id12863 . -1) (undo-tree-id12864 . -1) (undo-tree-id12865 . -1) (undo-tree-id12866 . -1) (undo-tree-id12867 . -1) (undo-tree-id12868 . -1) (undo-tree-id12869 . -1) (undo-tree-id12870 . -1) (undo-tree-id12871 . -1) (undo-tree-id12872 . -1) (undo-tree-id12873 . -1) (undo-tree-id12874 . -1) (undo-tree-id12875 . -1) (undo-tree-id12876 . -1) (undo-tree-id12877 . -1) (undo-tree-id12878 . -1) (undo-tree-id12879 . -1) (undo-tree-id12880 . -1) (undo-tree-id12881 . -1) (undo-tree-id12882 . -1) (undo-tree-id12883 . -1) (undo-tree-id12884 . -1) (undo-tree-id12885 . -1) (undo-tree-id12886 . -1) (undo-tree-id12887 . -1) (undo-tree-id12888 . -1) (undo-tree-id12889 . -1) (undo-tree-id12890 . -1) (undo-tree-id12891 . -1) (undo-tree-id12892 . -1) (undo-tree-id12893 . -1) (undo-tree-id12894 . -1) (undo-tree-id12895 . -1) (undo-tree-id12896 . -1) (undo-tree-id12897 . -1) (undo-tree-id12898 . -1) (undo-tree-id12899 . -1) (undo-tree-id12900 . -1) (undo-tree-id12901 . -1) (undo-tree-id12902 . -1) (undo-tree-id12903 . -1) (undo-tree-id12904 . -1) (undo-tree-id12905 . -1) (undo-tree-id12906 . -1) (undo-tree-id12907 . -1) (undo-tree-id12908 . -1) (undo-tree-id12909 . -1) (undo-tree-id12910 . -1) (undo-tree-id12911 . -1) (undo-tree-id12912 . -1) (undo-tree-id12913 . -1) (undo-tree-id12914 . -1) (undo-tree-id12915 . -1) (undo-tree-id12916 . -1) (undo-tree-id12917 . -1) (#("s" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t)) . -9727) (undo-tree-id12918 . -1) (undo-tree-id12919 . -1) (undo-tree-id12920 . -1) (undo-tree-id12921 . -1) (undo-tree-id12922 . -1) (undo-tree-id12923 . -1) (undo-tree-id12924 . -1) (undo-tree-id12925 . -1) (undo-tree-id12926 . -1) (undo-tree-id12927 . -1) (undo-tree-id12928 . -1) (undo-tree-id12929 . -1) (undo-tree-id12930 . -1) (undo-tree-id12931 . -1) (undo-tree-id12932 . -1) (undo-tree-id12933 . -1) (undo-tree-id12934 . -1) (undo-tree-id12935 . -1) (undo-tree-id12936 . -1) (undo-tree-id12937 . -1) (undo-tree-id12938 . -1) (undo-tree-id12939 . -1) (undo-tree-id12940 . -1) (undo-tree-id12941 . -1) (undo-tree-id12942 . -1) (undo-tree-id12943 . -1) (undo-tree-id12944 . -1) (undo-tree-id12945 . -1) (undo-tree-id12946 . -1) (undo-tree-id12947 . -1) (undo-tree-id12948 . -1) (undo-tree-id12949 . -1) (undo-tree-id12950 . -1) (undo-tree-id12951 . -1) (undo-tree-id12952 . -1) (undo-tree-id12953 . -1) (undo-tree-id12954 . -1) (undo-tree-id12955 . -1) (undo-tree-id12956 . -1) (undo-tree-id12957 . -1) (undo-tree-id12958 . -1) (undo-tree-id12959 . -1) (undo-tree-id12960 . -1) (undo-tree-id12961 . -1) (undo-tree-id12962 . -1) (undo-tree-id12963 . -1) (undo-tree-id12964 . -1) (undo-tree-id12965 . -1) (undo-tree-id12966 . -1) (undo-tree-id12967 . -1) (undo-tree-id12968 . -1) (undo-tree-id12969 . -1) (undo-tree-id12970 . -1) (undo-tree-id12971 . -1) (undo-tree-id12972 . -1) (undo-tree-id12973 . -1) (#("e" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t)) . -9728) (undo-tree-id12974 . -1) (undo-tree-id12975 . -1) (undo-tree-id12976 . -1) (undo-tree-id12977 . -1) (undo-tree-id12978 . -1) (undo-tree-id12979 . -1) (undo-tree-id12980 . -1) (undo-tree-id12981 . -1) (undo-tree-id12982 . -1) (undo-tree-id12983 . -1) (undo-tree-id12984 . -1) (undo-tree-id12985 . -1) (undo-tree-id12986 . -1) (undo-tree-id12987 . -1) (undo-tree-id12988 . -1) (undo-tree-id12989 . -1) (undo-tree-id12990 . -1) (undo-tree-id12991 . -1) (undo-tree-id12992 . -1) (undo-tree-id12993 . -1) (undo-tree-id12994 . -1) (undo-tree-id12995 . -1) (undo-tree-id12996 . -1) (undo-tree-id12997 . -1) (undo-tree-id12998 . -1) (undo-tree-id12999 . -1) 9729 (9726 . 9729) (9725 . 9727) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -9725) (undo-tree-id13000 . -1) (undo-tree-id13001 . -1) (9725 . 9726) (9723 . 9724) (#("t" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -9723) (undo-tree-id13002 . -1) (#("p" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t jinx--pending t font-lock-multiline t face org-block-begin-line)) . -9724) (undo-tree-id13003 . -1) 9725 (9714 . 9725) (9702 . 9725) (#("<s" 0 2 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) jinx--pending t)) . -9702) (undo-tree-id13004 . -2) 9704 (9702 . 9704) (#("{" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9702) (undo-tree-id13005 . -1) (#("}" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 9703) (9702 . 9704) (#("{" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . -9702) (9702 . 9703) (9701 . 9702) (#("s" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) jinx--pending t face org-level-3)) . -9701) (undo-tree-id13006 . -1) 9702 (9689 . 9702) (9684 . 9689) (t 26024 61810 505764 136000)) nil (26024 61917 432524 0) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12257 . -1) (undo-tree-id12258 . -1) (undo-tree-id12259 . -1) (undo-tree-id12260 . -1) (undo-tree-id12261 . -1) (undo-tree-id12262 . -1) (undo-tree-id12263 . -1) (undo-tree-id12264 . -1) (undo-tree-id12265 . -1) (undo-tree-id12266 . -1) (undo-tree-id12267 . -1) (undo-tree-id12268 . -1) (undo-tree-id12269 . -1) (undo-tree-id12270 . -1) (undo-tree-id12271 . -1) (undo-tree-id12272 . -1) (undo-tree-id12273 . -1) (undo-tree-id12274 . -1) (undo-tree-id12275 . -1) (undo-tree-id12276 . -1) (undo-tree-id12277 . -1) (undo-tree-id12278 . -1) (undo-tree-id12279 . -1)) ((46202 . 46203)) (26024 59404 383545 0) 0 nil])
([nil nil ((9719 . 9720) (#(" " 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 9719) (undo-tree-id12702 . -1)) nil (26024 61917 432273 0) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12241 . -1) (undo-tree-id12242 . -1) (undo-tree-id12243 . -1) (undo-tree-id12244 . -1) (undo-tree-id12245 . -1) (undo-tree-id12246 . -1) (undo-tree-id12247 . -1) (undo-tree-id12248 . -1) (undo-tree-id12249 . -1) (undo-tree-id12250 . -1) (undo-tree-id12251 . -1) (undo-tree-id12252 . -1) (undo-tree-id12253 . -1) (undo-tree-id12254 . -1) (undo-tree-id12255 . -1) (undo-tree-id12256 . -1)) ((46202 . 46203)) (26024 59404 137377 0) 0 nil])
([nil nil ((9738 . 9750) (9726 . 9738) (9725 . 9727) (#("(" 0 1 (fontified nil line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -9725) (9725 . 9726) (t 26024 61917 510666 867000)) nil (26024 61923 535296 0) 0 nil])
([nil nil ((#("w" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12239 . -1) (undo-tree-id12240 . -1)) ((46202 . 46203)) (26024 59403 989434 0) 0 nil])
([nil nil ((#("(use-package nano-command)
" 0 1 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 1 12 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 12 13 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block)) 13 25 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 25 26 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block)) 26 27 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 9725) (undo-tree-id13201 . 2) (undo-tree-id13202 . -26) (undo-tree-id13203 . -25) (undo-tree-id13204 . -25) (undo-tree-id13205 . -25) (undo-tree-id13206 . -21) (undo-tree-id13207 . -21) (undo-tree-id13208 . -21) (undo-tree-id13209 . -21) (undo-tree-id13210 . -21) (undo-tree-id13211 . -21) (undo-tree-id13212 . -21) (undo-tree-id13213 . -21) (undo-tree-id13214 . -21) (undo-tree-id13215 . -21) (undo-tree-id13216 . -21) (undo-tree-id13217 . -21) (undo-tree-id13218 . -21) (undo-tree-id13219 . -21) (undo-tree-id13220 . -21) (undo-tree-id13221 . -21) (undo-tree-id13222 . -21) (undo-tree-id13223 . -21) (undo-tree-id13224 . -21) (undo-tree-id13225 . -21) (undo-tree-id13226 . -21) (undo-tree-id13227 . -21) (undo-tree-id13228 . -21) (undo-tree-id13229 . -21) (undo-tree-id13230 . -21) (undo-tree-id13231 . -21) (undo-tree-id13232 . -21) (undo-tree-id13233 . -21) (undo-tree-id13234 . -21) (undo-tree-id13235 . -21) (undo-tree-id13236 . -21) (undo-tree-id13237 . -21) (undo-tree-id13238 . -21) (undo-tree-id13239 . -21) (undo-tree-id13240 . -21) (undo-tree-id13241 . -21) (undo-tree-id13242 . -21) (undo-tree-id13243 . -21) (undo-tree-id13244 . -21) (undo-tree-id13245 . -21) (undo-tree-id13246 . -21) (undo-tree-id13247 . -21) (undo-tree-id13248 . -21) (undo-tree-id13249 . -21) (undo-tree-id13250 . -21) (undo-tree-id13251 . -21) (undo-tree-id13252 . -21) (undo-tree-id13253 . -21) (undo-tree-id13254 . -21) (undo-tree-id13255 . -21) (undo-tree-id13256 . -21) (undo-tree-id13257 . -21) (undo-tree-id13258 . -21) (undo-tree-id13259 . -21) (undo-tree-id13260 . -21) (undo-tree-id13261 . -21) (undo-tree-id13262 . -21) (undo-tree-id13263 . -21) (undo-tree-id13264 . -21) (undo-tree-id13265 . -21) (undo-tree-id13266 . -21) (undo-tree-id13267 . -21) (undo-tree-id13268 . -21) (undo-tree-id13269 . -21) (undo-tree-id13270 . -21) (undo-tree-id13271 . -21) (undo-tree-id13272 . -21) (undo-tree-id13273 . -21) (undo-tree-id13274 . -21) (undo-tree-id13275 . -21) (undo-tree-id13276 . -21) (undo-tree-id13277 . -21) (undo-tree-id13278 . -21) (undo-tree-id13279 . -21) (undo-tree-id13280 . -21) (undo-tree-id13281 . -21) (undo-tree-id13282 . -21) (undo-tree-id13283 . -21) (undo-tree-id13284 . -21) (undo-tree-id13285 . -21) (undo-tree-id13286 . -21) (undo-tree-id13287 . -21) (undo-tree-id13288 . -21) (undo-tree-id13289 . -21) (undo-tree-id13290 . -21) (undo-tree-id13291 . -21) (undo-tree-id13292 . -21) (undo-tree-id13293 . -21) (undo-tree-id13294 . -21) (undo-tree-id13295 . -21) (undo-tree-id13296 . -21) (undo-tree-id13297 . -21) (undo-tree-id13298 . -21) (undo-tree-id13299 . -21) (undo-tree-id13300 . -21) (undo-tree-id13301 . -21) (undo-tree-id13302 . -21) (undo-tree-id13303 . -21) (undo-tree-id13304 . -21) (undo-tree-id13305 . -21) (undo-tree-id13306 . -21) (undo-tree-id13307 . -21) (undo-tree-id13308 . -21) (undo-tree-id13309 . -21) (undo-tree-id13310 . -27) 9746 (t 26024 61923 612035 890000)) nil (26024 61953 135443 0) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12237 . -1) (undo-tree-id12238 . -1)) ((46202 . 46203)) (26024 59403 954987 0) 0 nil])
([nil nil ((#("*** Nano command
" 0 2 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide keymap (keymap)) 2 3 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) composition (2 1 [9632]) keymap (keymap) face org-level-3) 3 4 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) keymap (keymap) face org-level-3) 4 16 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 16 17 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 9685) (undo-tree-id13153 . -16) (undo-tree-id13154 . 13) (undo-tree-id13155 . -8) (undo-tree-id13156 . -17) (undo-tree-id13157 . -10) (undo-tree-id13158 . -17) (undo-tree-id13159 . -17) (undo-tree-id13160 . -10) (undo-tree-id13161 . -10) (undo-tree-id13162 . -10) (undo-tree-id13163 . -10) (undo-tree-id13164 . -10) (undo-tree-id13165 . -10) (undo-tree-id13166 . -10) (undo-tree-id13167 . -10) (undo-tree-id13168 . -10) (undo-tree-id13169 . -10) (undo-tree-id13170 . -10) (undo-tree-id13171 . -10) (undo-tree-id13172 . -10) (undo-tree-id13173 . -10) (undo-tree-id13174 . -10) (undo-tree-id13175 . -10) (undo-tree-id13176 . -10) (undo-tree-id13177 . -10) (undo-tree-id13178 . -10) (undo-tree-id13179 . -10) (undo-tree-id13180 . -10) (undo-tree-id13181 . -10) (undo-tree-id13182 . -10) (undo-tree-id13183 . -10) (undo-tree-id13184 . -10) (undo-tree-id13185 . -10) (undo-tree-id13186 . -10) (undo-tree-id13187 . -10) (undo-tree-id13188 . -10) (undo-tree-id13189 . -10) (undo-tree-id13190 . -10) (undo-tree-id13191 . -10) (undo-tree-id13192 . -10) (undo-tree-id13193 . -10) (undo-tree-id13194 . -10) (undo-tree-id13195 . -10) (undo-tree-id13196 . -10) (undo-tree-id13197 . -10) (undo-tree-id13198 . -10) (undo-tree-id13199 . -10) (undo-tree-id13200 . -17) 9695) nil (26024 61953 135358 0) 0 nil])
([nil nil ((#("t" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12235 . -1) (undo-tree-id12236 . -1)) ((46202 . 46203)) (26024 59403 921825 0) 0 nil])
([nil nil ((#("#+begin_src emacs-lisp
" 0 17 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t jinx--pending t font-lock-multiline t face org-block-begin-line) 17 18 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t jinx--pending t font-lock-multiline t face org-block-begin-line) 18 22 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t jinx--pending t font-lock-multiline t face org-block-begin-line) 22 23 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t help-echo nil jinx--pending t font-lock-multiline t face org-block-begin-line)) . 9685) (undo-tree-id13011 . -22) (undo-tree-id13012 . -23) (undo-tree-id13013 . -12) (undo-tree-id13014 . -23) (undo-tree-id13015 . -23) (undo-tree-id13016 . -23) (undo-tree-id13017 . -23) (undo-tree-id13018 . -23) (undo-tree-id13019 . -23) (undo-tree-id13020 . -23) (undo-tree-id13021 . -23) (undo-tree-id13022 . -23) (undo-tree-id13023 . -23) (undo-tree-id13024 . -23) (undo-tree-id13025 . -23) (undo-tree-id13026 . -23) (undo-tree-id13027 . -23) (undo-tree-id13028 . -10) (undo-tree-id13029 . -23) (undo-tree-id13030 . -23) (undo-tree-id13031 . -23) (undo-tree-id13032 . -23) (undo-tree-id13033 . -23) (undo-tree-id13034 . -23) (undo-tree-id13035 . -23) (undo-tree-id13036 . -23) (undo-tree-id13037 . -23) (undo-tree-id13038 . -23) (undo-tree-id13039 . -23) (undo-tree-id13040 . -23) (undo-tree-id13041 . -23) (undo-tree-id13042 . -23) (undo-tree-id13043 . -23) (undo-tree-id13044 . -23) (undo-tree-id13045 . -23) (undo-tree-id13046 . -23) (undo-tree-id13047 . -23) (undo-tree-id13048 . -23) (undo-tree-id13049 . -23) (undo-tree-id13050 . -23) (undo-tree-id13051 . -23) (undo-tree-id13052 . -23) (undo-tree-id13053 . -23) (undo-tree-id13054 . -23) (undo-tree-id13055 . -23) (undo-tree-id13056 . -23) (undo-tree-id13057 . -23) (undo-tree-id13058 . -23) (undo-tree-id13059 . -23) (undo-tree-id13060 . -23) (undo-tree-id13061 . -23) (undo-tree-id13062 . -23) (undo-tree-id13063 . -23) (undo-tree-id13064 . -23) (undo-tree-id13065 . -23) (undo-tree-id13066 . -23) (undo-tree-id13067 . -23) (undo-tree-id13068 . -23) (undo-tree-id13069 . -23) (undo-tree-id13070 . -23) (undo-tree-id13071 . -23) (undo-tree-id13072 . -23) (undo-tree-id13073 . -23) (undo-tree-id13074 . -23) (undo-tree-id13075 . -23) (undo-tree-id13076 . -23) (undo-tree-id13077 . -23) (undo-tree-id13078 . -23) (undo-tree-id13079 . -23) (undo-tree-id13080 . -23) (undo-tree-id13081 . -23) (undo-tree-id13082 . -23) (undo-tree-id13083 . -23) (undo-tree-id13084 . -23) (undo-tree-id13085 . -23) (undo-tree-id13086 . -23) (undo-tree-id13087 . -23) (undo-tree-id13088 . -23) (undo-tree-id13089 . -23) (undo-tree-id13090 . -23) (undo-tree-id13091 . -23) (undo-tree-id13092 . -23) (undo-tree-id13093 . -23) (undo-tree-id13094 . -23) (undo-tree-id13095 . -23) (undo-tree-id13096 . -23) (undo-tree-id13097 . -23) (undo-tree-id13098 . -23) (undo-tree-id13099 . -23) (undo-tree-id13100 . -23) (undo-tree-id13101 . -23) (undo-tree-id13102 . -23) (undo-tree-id13103 . -23) (undo-tree-id13104 . -23) (undo-tree-id13105 . -23) (undo-tree-id13106 . -23) (undo-tree-id13107 . -23) (undo-tree-id13108 . -23) (undo-tree-id13109 . -23) (undo-tree-id13110 . -23) (undo-tree-id13111 . -23) (undo-tree-id13112 . -23) (undo-tree-id13113 . -23) (undo-tree-id13114 . -23) (undo-tree-id13115 . -23) (undo-tree-id13116 . -23) (undo-tree-id13117 . -23) (undo-tree-id13118 . -23) (undo-tree-id13119 . -23) (undo-tree-id13120 . -8) (undo-tree-id13121 . -8) (undo-tree-id13122 . -8) (undo-tree-id13123 . -8) (undo-tree-id13124 . -8) (undo-tree-id13125 . -8) (undo-tree-id13126 . -8) (undo-tree-id13127 . -8) (undo-tree-id13128 . -8) (undo-tree-id13129 . -8) (undo-tree-id13130 . -8) (undo-tree-id13131 . -8) (undo-tree-id13132 . -8) (undo-tree-id13133 . -8) (undo-tree-id13134 . -22) (undo-tree-id13135 . -10) (undo-tree-id13136 . -10) (undo-tree-id13137 . -10) (undo-tree-id13138 . -10) (undo-tree-id13139 . -10) (undo-tree-id13140 . -10) (undo-tree-id13141 . -10) (undo-tree-id13142 . -10) (undo-tree-id13143 . -10) (undo-tree-id13144 . -10) (undo-tree-id13145 . -10) (undo-tree-id13146 . -10) (undo-tree-id13147 . -10) (undo-tree-id13148 . -10) (undo-tree-id13149 . -10) (undo-tree-id13150 . -10) (undo-tree-id13151 . -10) (undo-tree-id13152 . -23) 9695) nil (26024 61953 135318 0) 0 nil])
([nil nil ((#("h" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12212 . -1) (undo-tree-id12213 . -1) (undo-tree-id12214 . -1) (undo-tree-id12215 . -1) (undo-tree-id12216 . -1) (undo-tree-id12217 . -1) (undo-tree-id12218 . -1) (undo-tree-id12219 . -1) (undo-tree-id12220 . -1) (undo-tree-id12221 . -1) (undo-tree-id12222 . -1) (undo-tree-id12223 . -1) (undo-tree-id12224 . -1) (undo-tree-id12225 . -1) (undo-tree-id12226 . -1) (undo-tree-id12227 . -1) (undo-tree-id12228 . -1) (undo-tree-id12229 . -1) (undo-tree-id12230 . -1) (undo-tree-id12231 . -1) (undo-tree-id12232 . -1) (undo-tree-id12233 . -1) (undo-tree-id12234 . -1)) ((46202 . 46203)) (26024 59403 888681 0) 0 nil])
([nil nil ((#("#+end_src
" 0 9 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)) font-lock-fontified t face org-meta-line) 9 10 (fontified t line-prefix #("      " 0 6 (face org-indent)) wrap-prefix #("      " 0 6 (face org-indent)))) . 9685) (undo-tree-id13007 . 10) (undo-tree-id13008 . -9) (undo-tree-id13009 . -9) (undo-tree-id13010 . -8) 9693) nil (26024 61953 135197 0) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12189 . -1) (undo-tree-id12190 . -1) (undo-tree-id12191 . -1) (undo-tree-id12192 . -1) (undo-tree-id12193 . -1) (undo-tree-id12194 . -1) (undo-tree-id12195 . -1) (undo-tree-id12196 . -1) (undo-tree-id12197 . -1) (undo-tree-id12198 . -1) (undo-tree-id12199 . -1) (undo-tree-id12200 . -1) (undo-tree-id12201 . -1) (undo-tree-id12202 . -1) (undo-tree-id12203 . -1) (undo-tree-id12204 . -1) (undo-tree-id12205 . -1) (undo-tree-id12206 . -1) (undo-tree-id12207 . -1) (undo-tree-id12208 . -1) (undo-tree-id12209 . -1) (undo-tree-id12210 . -1) (undo-tree-id12211 . -1)) ((46202 . 46203)) (26024 59403 854911 0) 0 nil])
([nil nil ((#("(require 'nano-writer)
" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 1 8 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-keyword-face org-block)) 8 10 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block)) 10 21 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (font-lock-constant-face org-block)) 21 22 (rear-nonsticky t font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block)) 22 23 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block))) . 1141) (undo-tree-id13311 . -22) (undo-tree-id13312 . 23) (undo-tree-id13313 . -1) (undo-tree-id13314 . 2) (undo-tree-id13315 . -22) (undo-tree-id13316 . -23) (t 26024 61953 211195 356000)) nil (26024 61960 561571 0) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12187 . -1) (undo-tree-id12188 . -1)) ((46202 . 46203)) (26024 59403 604665 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1140 . 1141) (#("
" 0 1 (face (org-block) font-lock-multiline t rear-nonsticky t font-lock-fontified t src-block t fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)))) . -1163) (1140 . 1164) 1127 (t 26024 61960 623979 209000)) nil (26024 61966 207032 0) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12185 . -1) (undo-tree-id12186 . -1)) ((46202 . 46203)) (26024 59403 575931 0) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -1163) (undo-tree-id13317 . -1) (undo-tree-id13318 . -1) (undo-tree-id13319 . -1) (undo-tree-id13320 . -1) (undo-tree-id13321 . -1) (undo-tree-id13322 . -1) (undo-tree-id13323 . -1) (undo-tree-id13324 . -1) (undo-tree-id13325 . -1) (undo-tree-id13326 . -1) (undo-tree-id13327 . -1) (undo-tree-id13328 . -1) (undo-tree-id13329 . -1) (undo-tree-id13330 . -1) (undo-tree-id13331 . -1) (undo-tree-id13332 . -1) (undo-tree-id13333 . -1) (undo-tree-id13334 . -1) (undo-tree-id13335 . -1) (undo-tree-id13336 . -1) (undo-tree-id13337 . -1) (undo-tree-id13338 . -1) (undo-tree-id13339 . -1) (undo-tree-id13340 . -1) 1164 (1156 . 1164) (#("colors" 0 6 (font-lock-fontified t src-block t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (font-lock-constant-face org-block) help-echo nil)) . 1156) (undo-tree-id13341 . -5) (undo-tree-id13342 . -6) (undo-tree-id13343 . -6)) nil (26024 61966 207028 0) 0 nil])
([nil nil ((#("l" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12183 . -1) (undo-tree-id12184 . -1)) ((46202 . 46203)) (26024 59403 542360 0) 0 nil])
([nil nil ((1022 . 1027) (#("dark" 0 4 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 1022) (undo-tree-id13344 . -3) (undo-tree-id13345 . -4) (undo-tree-id13346 . -4) (undo-tree-id13347 . -4) (undo-tree-id13348 . -4) (undo-tree-id13349 . -4) (undo-tree-id13350 . -4) (undo-tree-id13351 . -4) (undo-tree-id13352 . -4) (undo-tree-id13353 . -4) (undo-tree-id13354 . -4) (undo-tree-id13355 . -4) (undo-tree-id13356 . -4) (undo-tree-id13357 . -4) (undo-tree-id13358 . -4) (undo-tree-id13359 . -4) (undo-tree-id13360 . -4) (undo-tree-id13361 . -4) (undo-tree-id13362 . -4) (undo-tree-id13363 . -4) (undo-tree-id13364 . -4) (undo-tree-id13365 . -4) (undo-tree-id13366 . -4) (undo-tree-id13367 . -4) (t 26024 61966 283528 481000)) nil (26024 62177 278385 0) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12174 . -1) (undo-tree-id12175 . -1) (undo-tree-id12176 . -1) (undo-tree-id12177 . -1) (undo-tree-id12178 . -1) (undo-tree-id12179 . -1) (undo-tree-id12180 . -1) (undo-tree-id12181 . -1) (undo-tree-id12182 . -1)) ((46202 . 46203)) (26024 59403 509125 0) 0 nil])
([nil nil ((1142 . 1145) (t 26024 62177 365225 924000)) nil (26024 62440 491573 0) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12165 . -1) (undo-tree-id12166 . -1) (undo-tree-id12167 . -1) (undo-tree-id12168 . -1) (undo-tree-id12169 . -1) (undo-tree-id12170 . -1) (undo-tree-id12171 . -1) (undo-tree-id12172 . -1) (undo-tree-id12173 . -1)) ((46202 . 46203)) (26024 59403 475631 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 1142) (undo-tree-id13377 . -1) (undo-tree-id13378 . -1) (t 26024 62335 702359 952000)) nil (26024 62441 952379 0) 0 nil] [nil nil ((#("(" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-multiline t face (org-block))) . 1169) (undo-tree-id13370 . -1) (undo-tree-id13371 . -1) (t 26024 62335 702359 952000)) ((1169 . 1170)) (26024 62440 452971 0) 0 nil])
([nil nil ((#("t" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12163 . -1) (undo-tree-id12164 . -1)) ((46202 . 46203)) (26024 59403 442331 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) . 1142) (undo-tree-id13374 . -1) (undo-tree-id13375 . -1) (undo-tree-id13376 . -1)) nil (26024 62441 952376 0) 0 nil])
([nil nil ((#("s" 0 1 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) jinx--pending t font-lock-multiline t face (org-block))) . 1169) (undo-tree-id13368 . -1) (undo-tree-id13369 . -1)) ((1169 . 1170)) (26024 62440 452630 0) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12161 . -1) (undo-tree-id12162 . -1)) ((46202 . 46203)) (26024 59403 409077 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 1142) (undo-tree-id13372 . -1) (undo-tree-id13373 . -1)) nil (26024 62441 952371 0) 0 nil])
nil
([nil nil ((#("m" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12159 . -1) (undo-tree-id12160 . -1)) ((46202 . 46203)) (26024 59403 374884 0) 0 nil])
([nil nil ((1022 . 1026) (#("light" 0 5 (src-block t font-lock-fontified t fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) help-echo nil font-lock-multiline t face (org-block))) . 1022) (undo-tree-id13379 . -4) (t 26024 62442 37669 296000)) nil (26024 62640 616518 0) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12157 . -1) (undo-tree-id12158 . -1)) ((46202 . 46203)) (26024 59403 340606 0) 0 nil])
([nil nil ((1184 . 1190) (#("u" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil jinx--pending t font-lock-multiline t face (font-lock-constant-face org-block))) . -1184) (undo-tree-id13380 . -1) 1185 (1171 . 1185) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -1171) (undo-tree-id13381 . -1) 1172 (1171 . 1172) (#("t" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -1171) (undo-tree-id13382 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t jinx--pending t font-lock-multiline t face (org-block))) . -1172) (undo-tree-id13383 . -1) 1173 (1168 . 1173) (1166 . 1168) (1165 . 1167) (#("(" 0 1 (fontified nil line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -1165) (1165 . 1166) (1164 . 1165) (t 26024 62640 706782 906000) 1160) nil (26025 877 444835 0) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12155 . -1) (undo-tree-id12156 . -1)) ((46202 . 46203)) (26024 59403 308064 0) 0 nil])
([nil nil (1179) nil (26025 926 968306 0) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12146 . -1) (undo-tree-id12147 . -1) (undo-tree-id12148 . -1) (undo-tree-id12149 . -1) (undo-tree-id12150 . -1) (undo-tree-id12151 . -1) (undo-tree-id12152 . -1) (undo-tree-id12153 . -1) (undo-tree-id12154 . -1)) ((46202 . 46203)) (26024 59403 228996 0) 0 nil])
([nil nil ((1165 . 1168) (t 26025 877 522091 458000)) nil (26025 926 968306 0) 0 nil])
([nil nil ((#("0" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t font-lock-fontified t help-echo nil src-block t jinx--pending t font-lock-multiline t face (org-block))) . 46202) (undo-tree-id12144 . -1) (undo-tree-id12145 . -1)) ((46202 . 46203)) (26024 59403 228523 0) 0 nil])
([nil nil ((1165 . 1166) (#("'" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t)) . 1165) (undo-tree-id13417 . -1) (1165 . 1166) (#("'" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 1165) (undo-tree-id13418 . -1) (undo-tree-id13419 . -1) (undo-tree-id13420 . -1) (undo-tree-id13421 . -1) (undo-tree-id13422 . -1) (undo-tree-id13423 . -1) (undo-tree-id13424 . -1) (undo-tree-id13425 . -1) (undo-tree-id13426 . -1) (undo-tree-id13427 . -1) (undo-tree-id13428 . -1) (undo-tree-id13429 . -1) (undo-tree-id13430 . -1) (undo-tree-id13431 . -1) (undo-tree-id13432 . -1) (undo-tree-id13433 . -1) (undo-tree-id13434 . -1) (undo-tree-id13435 . -1) (undo-tree-id13436 . -1) (undo-tree-id13437 . -1) (undo-tree-id13438 . -1) (undo-tree-id13439 . -1) (undo-tree-id13440 . -1) (undo-tree-id13441 . -1) (undo-tree-id13442 . -1) (undo-tree-id13443 . -1) (undo-tree-id13444 . -1) (undo-tree-id13445 . -1) (undo-tree-id13446 . -1) (undo-tree-id13447 . -1) (undo-tree-id13448 . -1) (undo-tree-id13449 . -1)) nil (26025 926 968304 0) 0 nil])
nil
([nil nil ((1166 . 1167) (#("'" 0 1 (fontified t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-comment-face org-block))) . 1166) (undo-tree-id13384 . -1) (undo-tree-id13385 . -1) (undo-tree-id13386 . -1) (undo-tree-id13387 . -1) (undo-tree-id13388 . -1) (undo-tree-id13389 . -1) (undo-tree-id13390 . -1) (undo-tree-id13391 . -1) (undo-tree-id13392 . -1) (undo-tree-id13393 . -1) (undo-tree-id13394 . -1) (undo-tree-id13395 . -1) (undo-tree-id13396 . -1) (undo-tree-id13397 . -1) (undo-tree-id13398 . -1) (undo-tree-id13399 . -1) (undo-tree-id13400 . -1) (undo-tree-id13401 . -1) (undo-tree-id13402 . -1) (undo-tree-id13403 . -1) (undo-tree-id13404 . -1) (undo-tree-id13405 . -1) (undo-tree-id13406 . -1) (undo-tree-id13407 . -1) (undo-tree-id13408 . -1) (undo-tree-id13409 . -1) (undo-tree-id13410 . -1) (undo-tree-id13411 . -1) (undo-tree-id13412 . -1) (undo-tree-id13413 . -1) (undo-tree-id13414 . -1) (undo-tree-id13415 . -1) (undo-tree-id13416 . -1)) nil (26025 926 968270 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 1307) (undo-tree-id13450 . -1) (undo-tree-id13451 . -1) (undo-tree-id13452 . -1) (t 26025 927 47000 193000)) nil (26027 36218 298450 0) 0 nil])
([nil nil ((35521 . 35523) (35547 . 35549) (35557 . 35559) (35614 . 35616) (35681 . 35683) (35746 . 35748) (35805 . 35807) (35869 . 35871) (35948 . 35950) (36020 . 36022) (36086 . 36088) (36115 . 36117) (36127 . 36129) (36184 . 36186) (36241 . 36243) (36298 . 36300) (36355 . 36357) (36424 . 36426) (36494 . 36496) (36563 . 36565) (36633 . 36635) (36727 . 36729) (36765 . 36767) (36801 . 36803) (36880 . 36882) (36927 . 36929) (36964 . 36966) (37006 . 37008) (37066 . 37068) (37128 . 37130) (37175 . 37177) (37204 . 37206) (37249 . 37251) (37317 . 37319) (37368 . 37370) (37414 . 37416) 35521 (t 26027 36218 409787 541000)) nil (26028 3374 632588 0) 0 nil])
([nil nil ((#("(let* ((variable-tuple
  ;; 	(cond
  ;; 	 ((x-list-fonts \"Monaco\")         '(:font \"Monaco\"))
  ;; 	 ((x-list-fonts \"Source Sans Pro\") '(:font \"Source Sans Pro\"))
  ;; 	 ((x-list-fonts \"Lucida Grande\")   '(:font \"Lucida Grande\"))
  ;; 	 ((x-list-fonts \"Verdana\")         '(:font \"Verdana\"))
  ;; 	 ((x-family-fonts \"Sans Serif\")    '(:family \"Sans Serif\"))
  ;; 	 (nil (warn \"Cannot find a Sans Serif Font.  Install Source Sans Pro.\"))))
  ;;        (base-font-color     (face-foreground 'default nil 'default))
  ;;        (headline           `(:inherit default :weight bold)))

  ;;   (custom-theme-set-faces
  ;;    'user
  ;;    `(org-level-8 ((t (,@headline ,@variable-tuple))))
  ;;    `(org-level-7 ((t (,@headline ,@variable-tuple))))
  ;;    `(org-level-6 ((t (,@headline ,@variable-tuple))))
  ;;    `(org-level-5 ((t (,@headline ,@variable-tuple))))
  ;;    `(org-level-4 ((t (,@headline ,@variable-tuple :height 1.1))))
  ;;    `(org-level-3 ((t (,@headline ,@variable-tuple :height 1.25))))
  ;;    `(org-level-2 ((t (,@headline ,@variable-tuple :height 1.5))))
  ;;    `(org-level-1 ((t (,@headline ,@variable-tuple :height 1.75))))
  ;;    `(org-document-title ((t (,@headline ,@variable-tuple :height 2.0 :underline nil))))))

  ;; (setq org-hide-emphasis-markers t)
  ;; ;; " 0 23 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 23 25 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 25 28 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 28 35 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 35 37 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 37 40 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 40 94 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 94 96 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 96 99 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 99 163 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 163 165 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 165 168 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 168 230 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 230 232 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 232 235 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 235 291 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 291 293 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 293 296 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 296 357 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 357 359 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 359 362 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 362 438 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 438 440 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 440 450 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 450 512 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 512 514 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 514 524 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 524 579 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 579 580 (face (org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 580 582 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 582 587 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 587 611 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 611 613 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 613 619 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 619 625 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 625 627 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 627 633 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 633 684 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 684 686 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 686 692 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 692 743 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 743 745 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 745 751 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 751 802 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 802 804 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 804 810 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 810 861 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 861 863 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 863 869 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 869 874 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 874 932 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 932 934 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 934 940 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 940 1004 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1004 1006 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 1006 1012 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1012 1075 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1075 1077 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 1077 1083 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1083 1147 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1147 1149 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 1149 1155 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1155 1242 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1242 1243 (face (org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1243 1245 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 1245 1248 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1248 1283 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1283 1285 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 1285 1288 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 1288 1291 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 35526) (undo-tree-id0 . 1266) (undo-tree-id1 . -579) (undo-tree-id2 . -1247) (undo-tree-id3 . -1247) (undo-tree-id4 . -1247) (undo-tree-id5 . -1247) (undo-tree-id6 . -579) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 36849) (#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 36930) (#(";;" 0 2 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 36979) (36982 . 36997) (#("		" 0 2 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 36982) 35521) nil (26028 3590 209641 0) 0 nil])
([nil nil ((#(";; " 0 3 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified nil)) . 35735) (#(" ;;" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 1 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 35775)) ((35775 . 35778) (35735 . 35738)) (26028 3591 7480 0) 0 nil])
([nil nil ((#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified nil)) . 35832) (#(")
  ;; (add-hook 'org-mode-hook 'turn-on-flyspell)
  ;; (electric-indent-mode -1" 0 2 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 2 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 4 7 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 7 51 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 51 53 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 53 56 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 56 80 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 35892)) ((35892 . 35972) (35832 . 35835)) (26028 3591 255769 0) 0 nil])
([nil nil ((#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 35893)) ((35893 . 35894)) (26028 3591 293315 0) 0 nil] [nil nil ((#(";; (setq org-edit-src-content-indentation 0)
  ;; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 3 45 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 45 47 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 47 50 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 35893) 35521 (t 26028 3407 230441 195000)) ((35893 . 35943)) (26028 3580 370704 0) 0 nil])
([nil nil ((#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 35893)) ((35893 . 35894)) (26028 3591 323590 0) 0 nil])
([nil nil ((#(";; " 0 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 35960) (#("elpac" 0 5 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 35964) (#(" nil (setq org-return-follows-link  t))

  ;; (a" 0 40 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 40 41 (face (org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 41 43 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 43 46 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 46 48 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 35970) (#(" ;;" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 1 3 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 36060) 35521 (t 26028 3417 54366 908000)) ((36060 . 36063) (35970 . 36018) (35964 . 35969) (35960 . 35963)) (26028 3579 105370 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 35893)) ((35893 . 35894)) (26028 3591 357689 0) 0 nil])
([nil nil ((36048 . 36050) (36048 . 36058) (36037 . 36049) (#("
" 0 1 (fontified nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 36037) (36036 . 36038) 36005 (t 26028 3434 506074 205000)) ((#("

" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 2 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 36036) (36037 . 36038) (#("#+RESULTS:

" 0 2 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline-1035805047878762682 org-fold-outline invisible org-modern face org-meta-line font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 2 9 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline-1035805047878762682 org-fold-outline face org-meta-line font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 9 10 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline-1035805047878762682 org-fold-outline face org-meta-line font-lock-fontified t fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 10 11 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline-1035805047878762682 org-fold-outline fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 11 12 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline-1035805047878762682 org-fold-outline fontified nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 36037) (#("org-tempo
" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline-1035805047878762682 org-fold-outline face org-code fontified nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 1 10 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline-1035805047878762682 org-fold-outline face org-code fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 36048) (#(": " 0 2 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show org-fold--spec-org-fold-outline-1035805047878762682 org-fold-outline face org-code fontified t wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 36048) (t 26028 3450 289186 495000)) (26028 3450 140617 0) 0 nil])
([nil nil ((#("  ;; (add-hook 'org-mode-hook 'org-indent-mode)
" 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 2 5 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 5 7 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 7 48 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 36058) (undo-tree-id23 . -2) (undo-tree-id24 . -47) 36060) nil (26028 3603 655797 0) 0 nil])
nil
([nil nil ((#("  ;; (elpaca nil (setq org-return-follows-link  t))
" 0 2 (face (org-block) font-lock-multiline t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line)))) 2 5 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 5 6 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 6 11 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 11 12 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t) 12 52 (face (font-lock-comment-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 36005) (undo-tree-id21 . -2) (undo-tree-id22 . -51) 36007) nil (26028 3603 655794 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . 35935) (undo-tree-id19 . -1) (undo-tree-id20 . -1)) nil (26028 3603 655791 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . 35935) (undo-tree-id17 . -1) (undo-tree-id18 . -1)) nil (26028 3603 655788 0) 0 nil])
([nil nil ((#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 35935) (undo-tree-id15 . -1) (undo-tree-id16 . -1)) nil (26028 3603 655785 0) 0 nil])
([nil nil ((#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 35935) (undo-tree-id13 . -1) (undo-tree-id14 . -1)) nil (26028 3603 655781 0) 0 nil])
([nil nil ((35935 . 35936)) nil (26028 3603 655768 0) 0 nil])
([nil nil ((#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 36005) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (t 26028 3603 813267 112000)) nil (26028 3606 318819 0) 0 nil])
([nil nil ((#(";" 0 1 (face (font-lock-comment-delimiter-face org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 36005) (undo-tree-id27 . -1) (undo-tree-id28 . -1)) nil (26028 3606 318816 0) 0 nil])
([nil nil ((#(" " 0 1 (face (org-block) font-lock-multiline t line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 36005) (undo-tree-id25 . -1) (undo-tree-id26 . -1)) nil (26028 3606 318809 0) 0 nil])
([nil nil ((36048 . 36050) (36048 . 36058) (36037 . 36049) (#("
" 0 1 (fontified nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)))) . 36037) (36036 . 36038) 36005 (t 26028 3606 476144 288000)) nil (26028 3611 532195 0) 0 nil])
([nil nil ((12890 . 12902) (#("
" 0 1 (fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 12890) (12889 . 12891) 12125 (t 26028 3611 686744 240000)) nil (26028 3742 443933 0) 0 nil])
([nil nil ((12165 . 12166) (t 26028 3742 513209 726000) 12156) nil (26028 3758 646541 0) 0 nil])
([nil nil ((12166 . 12170)) nil (26028 3758 646540 0) 0 nil])
([nil nil ((12166 . 12170) 12169) nil (26028 3758 646539 0) 0 nil])
([nil nil ((#("    " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("                  " 0 6 (face org-indent) 6 18 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -12174) (undo-tree-id37 . -3) (12166 . 12174) 12169) nil (26028 3758 646538 0) 0 nil])
([nil nil ((#("        " 0 8 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("                          " 0 6 (face org-indent) 6 26 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -12178) (undo-tree-id36 . -3) (12166 . 12178) 12169) nil (26028 3758 646535 0) 0 nil])
([nil nil ((12166 . 12167) (#("          " 0 10 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . 12166) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (12178 . 12182) (12179 . 12188) (#("s" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . 12179) (12181 . 12182) (#("f" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . 12181) (undo-tree-id35 . -1) 11996) nil (26028 3758 646529 0) 0 nil])
([nil nil ((11973 . 11974) (11973 . 11974) 11994 (t 26028 3758 713860 120000)) nil (26028 3793 601849 0) 0 nil])
([nil nil ((12006 . 12011) (12005 . 12007) (#("\"" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -12005) (12005 . 12006) (11997 . 12005) (11996 . 11998) (#("(" 0 1 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . -11996) (11996 . 11997) (11995 . 11996) (11985 . 11995) (11973 . 11996) (#("<s" 0 2 (jinx--pending t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -11973) (undo-tree-id38 . -2) 11975 (11973 . 11975) (#("," 0 1 (wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . -11973) (undo-tree-id39 . -1) 11974 (11973 . 11974)) nil (26028 3793 601846 0) 0 nil])
([nil nil ((12037 . 12039) (12026 . 12043) (#("
" 0 1 (fontified nil wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 12026) (12025 . 12027) 12010) nil (26028 3793 601831 0) 0 nil])
([nil nil ((#("#+begin_src emacs-lisp
" 0 8 (invisible org-modern face org-block-begin-line font-lock-multiline t jinx--pending t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line)))) 8 11 (face (org-block-begin-line org-modern-block-name) font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line)))) 11 22 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-begin org-block-begin-line)))) 22 23 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 11973) (undo-tree-id137 . -22) (undo-tree-id138 . -21) (undo-tree-id139 . -12) (undo-tree-id140 . -21) (undo-tree-id141 . -21) (undo-tree-id142 . -21) (undo-tree-id143 . -21) (undo-tree-id144 . -21) (undo-tree-id145 . -21) (undo-tree-id146 . -21) (undo-tree-id147 . -21) (undo-tree-id148 . -21) (undo-tree-id149 . -21) (undo-tree-id150 . -23) 11994 (t 26028 3793 670645 641000)) nil (26028 3797 596111 0) 0 nil])
([nil nil ((#("(message \"works\")
" 0 9 (jinx--pending t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 9 15 (jinx--pending t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 15 16 (jinx--pending t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 16 17 (jinx--pending t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 17 18 (jinx--pending t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 11973) (undo-tree-id96 . -17) (undo-tree-id97 . 3) (undo-tree-id98 . -14) (undo-tree-id99 . -13) (undo-tree-id100 . -14) (undo-tree-id101 . -14) (undo-tree-id102 . -14) (undo-tree-id103 . -14) (undo-tree-id104 . -14) (undo-tree-id105 . -14) (undo-tree-id106 . -14) (undo-tree-id107 . -18) (undo-tree-id108 . -18) (undo-tree-id109 . -18) (undo-tree-id110 . -18) (undo-tree-id111 . -18) (undo-tree-id112 . -18) (undo-tree-id113 . -18) (undo-tree-id114 . -18) (undo-tree-id115 . -18) (undo-tree-id116 . -18) (undo-tree-id117 . -18) (undo-tree-id118 . -18) (undo-tree-id119 . -18) (undo-tree-id120 . -18) (undo-tree-id121 . -14) (undo-tree-id122 . -14) (undo-tree-id123 . -14) (undo-tree-id124 . -14) (undo-tree-id125 . -14) (undo-tree-id126 . -14) (undo-tree-id127 . -14) (undo-tree-id128 . -17) (undo-tree-id129 . -13) (undo-tree-id130 . -13) (undo-tree-id131 . -13) (undo-tree-id132 . -13) (undo-tree-id133 . -13) (undo-tree-id134 . -13) (undo-tree-id135 . -13) (undo-tree-id136 . -18) 11986) nil (26028 3797 596096 0) 0 nil])
([nil nil ((#("
" 0 1 (jinx--pending t src-block t font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 11973) (undo-tree-id93 . 1) (undo-tree-id94 . -1) (undo-tree-id95 . -1)) nil (26028 3797 596054 0) 0 nil])
([nil nil ((#("#+end_src
" 0 5 (invisible org-modern face org-meta-line jinx--pending t font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 5 6 (invisible org-modern face org-meta-line jinx--pending t font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 6 9 (face (org-meta-line org-modern-block-name) jinx--pending t font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 9 10 (jinx--pending t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)) isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 11973) (undo-tree-id61 . -9) (undo-tree-id62 . 10) (undo-tree-id63 . -6) (undo-tree-id64 . -9) (undo-tree-id65 . -8) (undo-tree-id66 . -8) (undo-tree-id67 . -8) (undo-tree-id68 . -8) (undo-tree-id69 . -8) (undo-tree-id70 . -8) (undo-tree-id71 . -8) (undo-tree-id72 . -10) (undo-tree-id73 . -10) (undo-tree-id74 . -10) (undo-tree-id75 . -8) (undo-tree-id76 . -8) (undo-tree-id77 . -8) (undo-tree-id78 . -8) (undo-tree-id79 . -8) (undo-tree-id80 . -6) (undo-tree-id81 . -9) (undo-tree-id82 . -6) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) (undo-tree-id86 . -6) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -6) (undo-tree-id92 . -10) 11979) nil (26028 3797 596049 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 11973) (undo-tree-id59 . 1) (undo-tree-id60 . -1)) nil (26028 3797 596013 0) 0 nil])
([nil nil ((#("#+RESULTS:
" 0 2 (invisible org-modern face org-meta-line jinx--pending t font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 2 9 (face org-meta-line font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 9 10 (face org-meta-line font-lock-fontified t fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 10 11 (fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 11973) (undo-tree-id44 . -10) (undo-tree-id45 . 11) (undo-tree-id46 . -2) (undo-tree-id47 . -10) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -11) 11975) nil (26028 3797 596010 0) 0 nil])
([nil nil ((#(": works
" 0 1 (face org-code fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 1 2 (face org-code fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent))) 2 8 (face org-code fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 11973) (undo-tree-id41 . -7) (undo-tree-id42 . 8) (undo-tree-id43 . -8)) nil (26028 3797 595994 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t wrap-prefix #("      " 0 6 (face org-indent)) line-prefix #("      " 0 6 (face org-indent)))) . 11973) (undo-tree-id40 . 1)) nil (26028 3797 595986 0) 0 nil])
([nil nil ((1095 . 1098) 834 (t 26028 3797 663140 112000)) nil (26028 4689 246179 0) 0 nil])
([nil nil ((#(";" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 1095) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (t 26028 4689 413793 966000)) nil (26028 4744 459871 0) 0 nil])
([nil nil ((#(";" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-comment-delimiter-face org-block) font-lock-multiline t jinx--pending t src-block t font-lock-fontified t fontified t)) . 1095) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (26028 4744 459868 0) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t jinx--pending t src-block t font-lock-fontified t fontified t)) . 1095) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) nil (26028 4744 459861 0) 0 nil])
([nil nil ((1307 . 1330) (#("#+begin_src emacs-lisp" 0 22 (face org-level-2 fontified t)) . 1307) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (t 26028 4744 616542 735000)) nil (26028 4917 262407 0) 0 nil])
([nil nil ((#("(require 'nano-layout)
" 0 1 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 1 8 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 8 10 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 10 21 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 21 23 (isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 1095) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -23) (undo-tree-id15 . -22) 1097 (t 26028 4917 418464 277000)) nil (26028 5438 812127 0) 0 nil])
([nil nil ((44822 . 44823) (t 26028 5438 976787 448000) 44795) nil (26028 5444 590195 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 44823 . 44824) (#("
" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face (org-block) src-block t wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) . -44846) (44823 . 44847)) nil (26028 5444 590190 0) 0 nil])
([nil nil ((44834 . 44837) (44824 . 44834) (#("e" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -44824) (undo-tree-id16 . -1) (#("l" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -44825) (undo-tree-id17 . -1) 44826 (44824 . 44826) (t 26028 5444 735331 426000)) nil (26028 5450 687455 0) 0 nil])
([nil nil ((44859 . 44860)) nil (26028 5450 687440 0) 0 nil])
([nil nil ((#("(elpaca nil ((require 'nano-layout))
" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1 7 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 7 13 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 13 14 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t fontified t font-lock-fontified t src-block t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 14 21 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-keyword-face org-block) font-lock-multiline t fontified t font-lock-fontified t src-block t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 21 23 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t fontified t font-lock-fontified t src-block t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 23 34 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-constant-face org-block) font-lock-multiline t fontified t font-lock-fontified t src-block t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 34 36 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t fontified t font-lock-fontified t src-block t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 36 37 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t isearch-open-invisible-temporary org-fold-core--isearch-show-temporary isearch-open-invisible org-fold-core--isearch-show fontified t)) . 44824) (undo-tree-id213 . -35) (undo-tree-id214 . -36) (undo-tree-id215 . 1) (undo-tree-id216 . -35) (undo-tree-id217 . -35) (undo-tree-id218 . -35) (undo-tree-id219 . -35) (undo-tree-id220 . -35) (undo-tree-id221 . -35) (undo-tree-id222 . -35) (undo-tree-id223 . -35) (undo-tree-id224 . -35) (undo-tree-id225 . -35) (undo-tree-id226 . -35) (undo-tree-id227 . -35) (undo-tree-id228 . -35) (undo-tree-id229 . -35) (undo-tree-id230 . -35) (undo-tree-id231 . -35) (undo-tree-id232 . -35) (undo-tree-id233 . -37) 44859 (t 26028 5450 848288 790000)) nil (26028 5466 707393 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 44737 . 44738) (#("
" 0 1 (fontified nil isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary font-lock-fontified t src-block t font-lock-multiline t face (org-block) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))))) . -44774) (44737 . 44775)) nil (26028 5466 707367 0) 0 nil])
([nil nil ((44774 . 44775) 44738) nil (26028 5466 707365 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t rear-nonsticky t fontified t)) . 44861) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1)) nil (26028 5466 707364 0) 0 nil])
([nil nil ((44767 . 44769) (44746 . 44767) (44745 . 44746) (#("t" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -44745) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 44746 (44738 . 44746) (#("/" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -44738) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("/" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -44739) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#(" " 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -44740) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) 44741 (44740 . 44741) (#("/" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . 44740) (44739 . 44740) (44738 . 44740) (#("/" 0 1 (fontified nil)) . -44738) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (44738 . 44739) (44738 . 44739)) nil (26028 5466 707341 0) 0 nil])
([nil nil ((44780 . 44785) (#("d" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -44780) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#("s" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -44781) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 44782 (44775 . 44782) (#("i" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -44775) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("d" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -44776) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 44777 (44769 . 44777)) nil (26028 5671 998863 0) 0 nil])
([nil nil ((#("(" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44798) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (t 26028 5672 894970 458000)) nil (26028 5676 242622 0) 0 nil] [nil nil ((#("(" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 44786) (undo-tree-id33 . -1) (t 26028 5466 863505 851000)) ((44786 . 44787)) (26028 5671 619398 0) 0 nil])
([nil nil ((#("(elpaca nil (require 'nano-layout))
" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 1 7 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 7 13 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 13 20 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 20 22 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 22 33 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 33 36 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 44786) (undo-tree-id1 . -35) (t 26028 5676 403781 188000)) nil (26028 5703 874762 0) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44786) (undo-tree-id31 . -1)) ((44786 . 44787)) (26028 5671 334091 0) 0 nil])
([nil nil ((#(";; Set up the layout at the end to avoid issues
" 0 3 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-comment-delimiter-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 3 48 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-comment-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44738) (undo-tree-id0 . -47)) nil (26028 5703 874758 0) 0 nil])
([nil nil ((#("l" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44786) (undo-tree-id29 . -1)) ((44786 . 44787)) (26028 5671 75994 0) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44738)) nil (26028 5703 874732 0) 0 nil])
([nil nil ((#("p" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44786) (undo-tree-id27 . -1)) ((44786 . 44787)) (26028 5670 694769 0) 0 nil])
([nil nil ((1128 . 1139) (1119 . 1128) (1118 . 1120) (#("(" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified nil)) . -1118) (1118 . 1119) (1117 . 1118) (t 26028 5704 35992 822000) 1095) nil (26028 5715 32978 0) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44786) (undo-tree-id25 . -1)) ((44786 . 44787)) (26028 5670 464596 0) 0 nil])
([nil nil ((#("(elpaca nil (global-set-key \"\\C-s\" 'swiper)) ;; Use swiper
" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 1 7 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 7 28 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 28 34 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-string-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 34 45 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 45 48 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 48 59 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 13278) (undo-tree-id42 . -42) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -36) (undo-tree-id50 . -36) (undo-tree-id51 . -52) (undo-tree-id52 . -52) (undo-tree-id53 . -36) (undo-tree-id54 . -36) (undo-tree-id55 . -52) (undo-tree-id56 . -52) (undo-tree-id57 . -36) (undo-tree-id58 . -36) (undo-tree-id59 . -52) (undo-tree-id60 . -52) (undo-tree-id61 . -58) 13320 (t 26028 5715 190667 860000)) nil (26028 5859 329660 0) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44786) (undo-tree-id23 . -1)) ((44786 . 44787)) (26028 5670 451118 0) 0 nil])
([nil nil ((#("(elpaca nil (define-key evil-insert-state-map (kbd \" \") 'org-roam-node-insert))
" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 1 7 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-keyword-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 7 51 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 51 54 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (font-lock-string-face org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 54 79 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t) 79 80 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 13278) (undo-tree-id0 . -54) (undo-tree-id1 . -79) (undo-tree-id2 . -79) (undo-tree-id3 . -42) (undo-tree-id4 . -42) (undo-tree-id5 . -42) (undo-tree-id6 . -42) (undo-tree-id7 . -42) (undo-tree-id8 . -42) (undo-tree-id9 . -42) (undo-tree-id10 . -42) (undo-tree-id11 . -42) (undo-tree-id12 . -42) (undo-tree-id13 . -42) (undo-tree-id14 . -42) (undo-tree-id15 . -42) (undo-tree-id16 . -42) (undo-tree-id17 . -42) (undo-tree-id18 . -42) (undo-tree-id19 . -78) (undo-tree-id20 . -78) (undo-tree-id21 . -78) (undo-tree-id22 . -78) (undo-tree-id23 . -78) (undo-tree-id24 . -54) (undo-tree-id25 . -54) (undo-tree-id26 . -54) (undo-tree-id27 . -54) (undo-tree-id28 . -54) (undo-tree-id29 . -54) (undo-tree-id30 . -54) (undo-tree-id31 . -54) (undo-tree-id32 . -54) (undo-tree-id33 . -54) (undo-tree-id34 . -54) (undo-tree-id35 . -54) (undo-tree-id36 . -54) (undo-tree-id37 . -54) (undo-tree-id38 . -54) (undo-tree-id39 . -54) (undo-tree-id40 . -54) (undo-tree-id41 . -80) 13332) nil (26028 5859 329633 0) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44786) (undo-tree-id21 . -1)) ((44786 . 44787)) (26028 5670 336049 0) 0 nil])
([nil nil ((13829 . 13834) (13822 . 13829) (#("swiper" 0 6 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 13822) (undo-tree-id62 . -5) (undo-tree-id63 . -6) (undo-tree-id64 . -6) (t 26028 5859 492806 635000)) nil (26028 5901 327734 0) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44786) (undo-tree-id19 . -1)) ((44786 . 44787)) (26028 5670 302624 0) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 1968) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (t 26028 5901 906159 275000)) nil (26028 6331 240161 0) 0 nil] [nil nil ((#("P" 0 1 (face org-level-1 fontified t)) . 3217) (undo-tree-id66 . -1) (t 26028 5865 967428 286000)) ((3217 . 3218) (t 26028 5899 739718 370000)) (26028 5899 594771 0) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44786) (undo-tree-id17 . -1)) ((44786 . 44787)) (26028 5670 56805 0) 0 nil])
([nil nil ((#("1" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 1968) (undo-tree-id15 . -1) (undo-tree-id16 . -1)) nil (26028 6331 240150 0) 0 nil])
nil
([nil nil ((#("i" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44786) (undo-tree-id15 . -1)) ((44786 . 44787)) (26028 5669 831465 0) 0 nil])
([nil current ((1968 . 1969) (#("5" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -1968) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 1969 (1968 . 1969)) nil (26028 6331 240144 0) 0 nil])
([nil nil ((#("l" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44786) (undo-tree-id13 . -1)) ((44786 . 44787)) (26028 5669 440603 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44786) (undo-tree-id11 . -1)) ((44786 . 44787)) (26028 5669 250769 0) 0 nil])
([nil nil ((#("(" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . 44786) (undo-tree-id9 . -1)) ((44786 . 44787)) (26028 5668 612853 0) 0 nil])
([nil nil ((#(")" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) face (org-block) font-lock-multiline t src-block t font-lock-fontified t fontified t)) . -44808) (undo-tree-id1 . -1) (undo-tree-id3 . -1) (undo-tree-id5 . -1) (undo-tree-id7 . -1) 44809) ((44808 . 44809) (t 26028 5559 455222 241000)) (26028 5668 495026 0) 0 nil])
([nil nil ((#("
;; Set up the layout at the end to avoid issues
(require 'nano-layout)
" 0 1 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 1 4 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-comment-delimiter-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 4 49 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-comment-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 49 50 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 50 57 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-keyword-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 57 59 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t) 59 70 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (font-lock-constant-face org-block) font-lock-multiline t font-lock-fontified t fontified t) 70 72 (line-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) wrap-prefix #(" " 0 1 (display (left-fringe org-modern--block-inner org-block-begin-line))) src-block t face (org-block) font-lock-multiline t font-lock-fontified t fontified t)) . 44737) (undo-tree-id0 . -49) (undo-tree-id1 . -49) (undo-tree-id2 . -49) (undo-tree-id3 . -49) (undo-tree-id4 . -49) (undo-tree-id5 . -49) (undo-tree-id6 . -49) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -72) (undo-tree-id16 . -71) (t 26028 5559 455222 241000)) ((44737 . 44809)) (26028 5668 494256 0) 0 nil])
nil
