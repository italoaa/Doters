(undo-tree-save-format-version . 1)
"841a02e6bd2478cd79dde601f4995d78d31fbf98"
[nil nil nil nil (25837 6044 263640 0) 0 nil]
([nil nil ((#("** TODO Handle the case where the vault folder is moved but the hash.txt is still there
" 0 1 (fontified t face org-hide keymap (keymap) line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 1 2 (fontified t composition (1 1 [9675]) keymap (keymap) face org-level-2 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 2 3 (fontified t keymap (keymap) face org-level-2 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 3 7 (fontified t face (org-todo org-todo org-level-2) line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 7 87 (fontified t face org-level-2 line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent))) 87 88 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 2149) (undo-tree-id0 . -88) (undo-tree-id1 . -87) (t 25836 1398 352857 801000)) nil (25837 6044 263638 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2007 . 2008) (#("
" 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . -2095) (2007 . 2096) 1872) nil (25837 6044 263616 0) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1568) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("f" 0 1 (face (org-headline-done org-headline-done org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1569) (undo-tree-id10 . -1) (#("s" 0 1 (face (org-headline-done org-headline-done org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1570) (undo-tree-id11 . -1) (#("j" 0 1 (face (org-headline-done org-headline-done org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1571) (undo-tree-id12 . -1) 1572 (1568 . 1572) (1564 . 1568) (#("TODO" 0 4 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face (org-todo org-todo org-level-2) fontified t)) . 1564) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -3) (t 25837 6044 268960 709000)) nil (25842 18745 224896 0) 0 nil])
([nil nil ((2123 . 2142) (2102 . 2123) (2099 . 2102) (2095 . 2099) (t 25842 18745 228539 729000)) nil (25844 1449 367468 0) 0 nil])
([nil nil ((2149 . 2158) (2143 . 2149) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -2143) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 2144 (2143 . 2144) (2142 . 2143) (t 25844 1449 401872 896000) 2141) nil (25844 1454 118255 0) 0 nil])
([nil nil ((#("** DONE Only have one button for creating closing or opening at the same time.
" 0 1 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) keymap (keymap) face org-hide fontified t) 1 2 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 keymap (keymap) composition (1 1 [9675]) fontified t) 2 3 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 keymap (keymap) fontified t) 3 7 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face (org-done org-done org-level-2) fontified t) 7 8 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t) 8 78 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face (org-headline-done org-headline-done org-level-2) fontified t) 78 79 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 2159) (undo-tree-id73 . -14) (undo-tree-id74 . -14) (undo-tree-id75 . -14) (undo-tree-id76 . -14) (undo-tree-id77 . -14) (undo-tree-id78 . -14) (undo-tree-id79 . -14) (undo-tree-id80 . -14) (undo-tree-id81 . -14) (undo-tree-id82 . -14) (undo-tree-id83 . -14) (undo-tree-id84 . -14) (undo-tree-id85 . -14) (undo-tree-id86 . -14) (undo-tree-id87 . -14) (undo-tree-id88 . -14) (undo-tree-id89 . -14) (undo-tree-id90 . -14) (undo-tree-id91 . -14) (undo-tree-id92 . -14) (undo-tree-id93 . -14) (undo-tree-id94 . -14) (undo-tree-id95 . -14) (undo-tree-id96 . -14) (undo-tree-id97 . -14) (undo-tree-id98 . -14) (undo-tree-id99 . -14) (undo-tree-id100 . -14) (undo-tree-id101 . -14) (undo-tree-id102 . -14) (undo-tree-id103 . -14) (undo-tree-id104 . -14) (undo-tree-id105 . -14) (undo-tree-id106 . -14) (undo-tree-id107 . -14) (undo-tree-id108 . -14) (undo-tree-id109 . -14) (undo-tree-id110 . -14) (undo-tree-id111 . -14) (undo-tree-id112 . -14) (undo-tree-id113 . -14) (undo-tree-id114 . -14) (undo-tree-id115 . -14) (undo-tree-id116 . -14) (undo-tree-id117 . -14) (undo-tree-id118 . -14) (undo-tree-id119 . -79) (undo-tree-id120 . -78) 2173 (t 25844 1454 150620 620000)) nil (25844 1457 572031 0) 0 nil])
([nil nil ((#("** DONE Save password hash on creation  
" 0 1 (keymap (keymap) face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 keymap (keymap) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 3 7 (face (org-done org-done org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 7 8 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 8 38 (face (org-headline-done org-headline-done org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 38 40 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 40 41 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 2159) (undo-tree-id38 . -14) (undo-tree-id39 . -40) (undo-tree-id40 . -40) (undo-tree-id41 . -14) (undo-tree-id42 . -14) (undo-tree-id43 . -14) (undo-tree-id44 . -14) (undo-tree-id45 . -14) (undo-tree-id46 . -14) (undo-tree-id47 . -14) (undo-tree-id48 . -14) (undo-tree-id49 . -14) (undo-tree-id50 . -14) (undo-tree-id51 . -14) (undo-tree-id52 . -14) (undo-tree-id53 . -14) (undo-tree-id54 . -14) (undo-tree-id55 . -14) (undo-tree-id56 . -14) (undo-tree-id57 . -14) (undo-tree-id58 . -14) (undo-tree-id59 . -14) (undo-tree-id60 . -14) (undo-tree-id61 . -14) (undo-tree-id62 . -14) (undo-tree-id63 . -14) (undo-tree-id64 . -14) (undo-tree-id65 . -14) (undo-tree-id66 . -14) (undo-tree-id67 . -14) (undo-tree-id68 . -14) (undo-tree-id69 . -14) (undo-tree-id70 . -14) (undo-tree-id71 . -14) (undo-tree-id72 . -41) 2173) nil (25844 1457 571990 0) 0 nil])
([nil nil ((#("** DONE Check hashes
" 0 1 (keymap (keymap) face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 keymap (keymap) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 3 7 (face (org-done org-done org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 7 8 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 8 20 (face (org-headline-done org-headline-done org-level-2) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 20 21 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 2159) (undo-tree-id17 . -14) (undo-tree-id18 . -20) (undo-tree-id19 . -20) (undo-tree-id20 . -14) (undo-tree-id21 . -14) (undo-tree-id22 . -14) (undo-tree-id23 . -14) (undo-tree-id24 . -14) (undo-tree-id25 . -14) (undo-tree-id26 . -14) (undo-tree-id27 . -14) (undo-tree-id28 . -14) (undo-tree-id29 . -14) (undo-tree-id30 . -14) (undo-tree-id31 . -14) (undo-tree-id32 . -14) (undo-tree-id33 . -14) (undo-tree-id34 . -14) (undo-tree-id35 . -14) (undo-tree-id36 . -14) (undo-tree-id37 . -21) 2173) nil (25844 1457 571961 0) 0 nil])
([nil nil ((#("** DONE Loading animations for creating, closing and opening the vault
It is necesrry for the user to know clearly when the vault is opening and closing. Due to the fact that the vault looks like another folder the user may not notice it and thus we need to make it clear when we are processing any operations.
" 0 1 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) keymap (keymap) face org-hide fontified t) 1 2 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 keymap (keymap) composition (1 1 [9675]) fontified t) 2 3 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 keymap (keymap) fontified t) 3 7 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face (org-done org-done org-level-2) fontified t) 7 8 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face org-level-2 fontified t) 8 70 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face (org-headline-done org-headline-done org-level-2) fontified t) 70 71 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 71 311 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1561) (undo-tree-id121 . -310) (undo-tree-id122 . 241) (undo-tree-id123 . -310) (undo-tree-id124 . -311) (t 25844 1457 596949 14000)) nil (25844 1458 578141 0) 0 nil])
([nil nil ((#(" " 0 1 (face org-level-2 keymap (keymap) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 1563) (undo-tree-id345 . -1) (t 25844 1458 598549 554000)) nil (25844 1465 342992 0) 0 nil])
([nil nil ((#("**TODO Icon for the vault folder
*** TODO pull the mac os binary as a helper
*** TODO exec the command to change the icon of the vault
" 0 1 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (org-emphasis t font-lock-multiline t face (bold) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 6 (org-emphasis t font-lock-multiline t face (bold) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 6 32 (org-emphasis t font-lock-multiline t face (bold) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 32 33 (org-emphasis t font-lock-multiline t face (bold) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 33 35 (org-emphasis t font-lock-multiline t wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) keymap (keymap) face (bold org-hide) fontified t) 35 36 (invisible t org-emphasis t font-lock-multiline t wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-level-3 keymap (keymap) composition (2 1 [9632]) fontified t) 36 37 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-level-3 keymap (keymap) fontified t) 37 41 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face (org-todo org-todo org-level-3) fontified t) 41 76 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-level-3 fontified t) 76 77 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t) 77 79 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) keymap (keymap) face org-hide fontified t) 79 80 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-level-3 keymap (keymap) composition (2 1 [9632]) fontified t) 80 81 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-level-3 keymap (keymap) fontified t) 81 85 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face (org-todo org-todo org-level-3) fontified t) 85 134 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) face org-level-3 fontified t) 134 135 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified t)) . 1561) (undo-tree-id125 . -2) (undo-tree-id126 . 103) (undo-tree-id127 . -134) (undo-tree-id128 . -134) (undo-tree-id129 . -32) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (undo-tree-id244 . -2) (undo-tree-id245 . -2) (undo-tree-id246 . -2) (undo-tree-id247 . -2) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -2) (undo-tree-id298 . -2) (undo-tree-id299 . -2) (undo-tree-id300 . -2) (undo-tree-id301 . -2) (undo-tree-id302 . -2) (undo-tree-id303 . -2) (undo-tree-id304 . -2) (undo-tree-id305 . -2) (undo-tree-id306 . -2) (undo-tree-id307 . -2) (undo-tree-id308 . -2) (undo-tree-id309 . -2) (undo-tree-id310 . -2) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -2) (undo-tree-id314 . -2) (undo-tree-id315 . -2) (undo-tree-id316 . -2) (undo-tree-id317 . -2) (undo-tree-id318 . -2) (undo-tree-id319 . -2) (undo-tree-id320 . -2) (undo-tree-id321 . -2) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (undo-tree-id324 . -2) (undo-tree-id325 . -2) (undo-tree-id326 . -2) (undo-tree-id327 . -2) (undo-tree-id328 . -2) (undo-tree-id329 . -2) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (undo-tree-id335 . -2) (undo-tree-id336 . -2) (undo-tree-id337 . -2) (undo-tree-id338 . -2) (undo-tree-id339 . -2) (undo-tree-id340 . -2) (undo-tree-id341 . -2) (undo-tree-id342 . -2) (undo-tree-id343 . -2) (undo-tree-id344 . -135) 1563) nil (25844 1465 342984 0) 0 nil])
([nil nil ((1695 . 1699) (t 25844 1465 361349 913000)) nil (25844 1493 412003 0) 0 nil])
([nil nil ((#("** 
" 0 1 (keymap (keymap) face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (face org-level-2 keymap (keymap) composition (1 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 keymap (keymap) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 3 4 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 1696) (undo-tree-id635 . -2) (undo-tree-id636 . 1) (undo-tree-id637 . -3) (undo-tree-id638 . -3) (undo-tree-id639 . -3) (undo-tree-id640 . -3) (undo-tree-id641 . -3) (undo-tree-id642 . -3) (undo-tree-id643 . -3) (undo-tree-id644 . -3) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (undo-tree-id651 . -3) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) (undo-tree-id655 . -3) (undo-tree-id656 . -3) (undo-tree-id657 . -3) (undo-tree-id658 . -3) (undo-tree-id659 . -3) (undo-tree-id660 . -3) (undo-tree-id661 . -3) (undo-tree-id662 . -3) (undo-tree-id663 . -3) (undo-tree-id664 . -3) (undo-tree-id665 . -3) (undo-tree-id666 . -3) (undo-tree-id667 . -3) (undo-tree-id668 . -3) (undo-tree-id669 . -3) (undo-tree-id670 . -3) (undo-tree-id671 . -3) (undo-tree-id672 . -3) (undo-tree-id673 . -3) (undo-tree-id674 . -3) (undo-tree-id675 . -3) (undo-tree-id676 . -3) (undo-tree-id677 . -3) (undo-tree-id678 . -3) (undo-tree-id679 . -3) (undo-tree-id680 . -3) (undo-tree-id681 . -3) (undo-tree-id682 . -2) (undo-tree-id683 . -2) (undo-tree-id684 . -2) (undo-tree-id685 . -2) (undo-tree-id686 . -2) (undo-tree-id687 . -2) (undo-tree-id688 . -2) (undo-tree-id689 . -2) (undo-tree-id690 . -2) (undo-tree-id691 . -2) (undo-tree-id692 . -2) (undo-tree-id693 . -2) (undo-tree-id694 . -2) (undo-tree-id695 . -2) (undo-tree-id696 . -2) (undo-tree-id697 . -2) (undo-tree-id698 . -2) (undo-tree-id699 . -2) (undo-tree-id700 . -2) (undo-tree-id701 . -2) (undo-tree-id702 . -2) (undo-tree-id703 . -2) (undo-tree-id704 . -2) (undo-tree-id705 . -2) (undo-tree-id706 . -2) (undo-tree-id707 . -2) (undo-tree-id708 . -2) (undo-tree-id709 . -2) (undo-tree-id710 . -2) (undo-tree-id711 . -2) (undo-tree-id712 . -2) (undo-tree-id713 . -2) (undo-tree-id714 . -2) (undo-tree-id715 . -2) (undo-tree-id716 . -2) (undo-tree-id717 . -2) (undo-tree-id718 . -2) (undo-tree-id719 . -2) (undo-tree-id720 . -2) (undo-tree-id721 . -2) (undo-tree-id722 . -4) 1698) nil (25844 1493 412000 0) 0 nil])
([nil nil ((1720 . 1739) (#("d" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1720) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (#("m" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1721) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) 1722 (1721 . 1722) (#("o" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1721) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (#(" " 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1722) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (#("t" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1723) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (#("h" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1724) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (#("e" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1725) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (#(" " 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1726) (undo-tree-id625 . -1) (#("l" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1727) (undo-tree-id626 . -1) (#("o" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1728) (undo-tree-id627 . -1) (#("c" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1729) (undo-tree-id628 . -1) (#("k" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1730) (undo-tree-id629 . -1) 1731 (1728 . 1731) (#("c" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1728) (undo-tree-id630 . -1) (#("o" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1729) (undo-tree-id631 . -1) (#("k" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1730) (undo-tree-id632 . -1) 1731 (1727 . 1731) (#("p" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1727) (undo-tree-id633 . -1) (#("a" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1728) (undo-tree-id634 . -1) 1729 (1727 . 1729) (1715 . 1727) (1711 . 1715) 1712) nil (25844 1493 411927 0) 0 nil])
([nil nil ((1790 . 1794) (1769 . 1790) (#("h" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1769) (undo-tree-id723 . -1) 1770 (1769 . 1770) (1748 . 1769) (#("r" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1748) (undo-tree-id724 . -1) (#("e" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1749) (undo-tree-id725 . -1) 1750 (1748 . 1750) (#("h" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1748) (undo-tree-id726 . -1) (#("o" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1749) (undo-tree-id727 . -1) (#("o" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1750) (undo-tree-id728 . -1) (#("c" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1751) (undo-tree-id729 . -1) (#("k" 0 1 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . -1752) (undo-tree-id730 . -1) 1753 (1743 . 1753) (1739 . 1743) (t 25844 1493 434921 364000)) nil (25844 1515 746098 0) 0 nil])
([nil nil ((1832 . 1848) (1816 . 1832) (#("t" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -1816) (undo-tree-id0 . -1) (#("h" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -1817) (undo-tree-id1 . -1) 1818 (1798 . 1818) (1794 . 1798) (t 25844 1515 770136 929000)) nil (25844 61196 444423 0) 0 nil])
([nil nil ((#("** TODO Tie the hash and the encrypted file together.
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide keymap (keymap)) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) composition (1 1 [9675]) keymap (keymap) face org-level-2) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) keymap (keymap) face org-level-2) 3 7 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-todo org-todo org-level-2)) 7 53 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 53 54 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 1795) (undo-tree-id2 . -12) (undo-tree-id3 . 1) (undo-tree-id4 . -52) (undo-tree-id5 . -52) (undo-tree-id6 . -52) (undo-tree-id7 . -52) (undo-tree-id8 . -52) (undo-tree-id9 . -52) (undo-tree-id10 . -52) (undo-tree-id11 . -52) (undo-tree-id12 . -52) (undo-tree-id13 . -52) (undo-tree-id14 . -52) (undo-tree-id15 . -52) (undo-tree-id16 . -52) (undo-tree-id17 . -52) (undo-tree-id18 . -52) (undo-tree-id19 . -52) (undo-tree-id20 . -52) (undo-tree-id21 . -52) (undo-tree-id22 . -52) (undo-tree-id23 . -52) (undo-tree-id24 . -52) (undo-tree-id25 . -52) (undo-tree-id26 . -52) (undo-tree-id27 . -52) (undo-tree-id28 . -52) (undo-tree-id29 . -52) (undo-tree-id30 . -52) (undo-tree-id31 . -52) (undo-tree-id32 . -52) (undo-tree-id33 . -52) (undo-tree-id34 . -52) (undo-tree-id35 . -52) (undo-tree-id36 . -52) (undo-tree-id37 . -52) (undo-tree-id38 . -52) (undo-tree-id39 . -52) (undo-tree-id40 . -52) (undo-tree-id41 . -52) (undo-tree-id42 . -52) (undo-tree-id43 . -52) (undo-tree-id44 . -52) (undo-tree-id45 . -52) (undo-tree-id46 . -52) (undo-tree-id47 . -52) (undo-tree-id48 . -52) (undo-tree-id49 . -52) (undo-tree-id50 . -52) (undo-tree-id51 . -52) (undo-tree-id52 . -52) (undo-tree-id53 . -52) (undo-tree-id54 . -52) (undo-tree-id55 . -52) (undo-tree-id56 . -52) (undo-tree-id57 . -52) (undo-tree-id58 . -52) (undo-tree-id59 . -52) (undo-tree-id60 . -52) (undo-tree-id61 . -52) (undo-tree-id62 . -52) (undo-tree-id63 . -52) (undo-tree-id64 . -52) (undo-tree-id65 . -52) (undo-tree-id66 . -52) (undo-tree-id67 . -52) (undo-tree-id68 . -52) (undo-tree-id69 . -52) (undo-tree-id70 . -52) (undo-tree-id71 . -52) (undo-tree-id72 . -52) (undo-tree-id73 . -52) (undo-tree-id74 . -52) (undo-tree-id75 . -52) (undo-tree-id76 . -52) (undo-tree-id77 . -52) (undo-tree-id78 . -52) (undo-tree-id79 . -52) (undo-tree-id80 . -52) (undo-tree-id81 . -52) (undo-tree-id82 . -52) (undo-tree-id83 . -52) (undo-tree-id84 . -52) (undo-tree-id85 . -52) (undo-tree-id86 . -52) (undo-tree-id87 . -52) (undo-tree-id88 . -52) (undo-tree-id89 . -52) (undo-tree-id90 . -52) (undo-tree-id91 . -52) (undo-tree-id92 . -52) (undo-tree-id93 . -52) (undo-tree-id94 . -52) (undo-tree-id95 . -52) (undo-tree-id96 . -52) (undo-tree-id97 . -52) (undo-tree-id98 . -52) (undo-tree-id99 . -52) (undo-tree-id100 . -52) (undo-tree-id101 . -52) (undo-tree-id102 . -52) (undo-tree-id103 . -52) (undo-tree-id104 . -52) (undo-tree-id105 . -52) (undo-tree-id106 . -44) (undo-tree-id107 . -44) (undo-tree-id108 . -44) (undo-tree-id109 . -44) (undo-tree-id110 . -44) (undo-tree-id111 . -44) (undo-tree-id112 . -44) (undo-tree-id113 . -44) (undo-tree-id114 . -44) (undo-tree-id115 . -44) (undo-tree-id116 . -44) (undo-tree-id117 . -44) (undo-tree-id118 . -44) (undo-tree-id119 . -44) (undo-tree-id120 . -39) (undo-tree-id121 . -39) (undo-tree-id122 . -39) (undo-tree-id123 . -39) (undo-tree-id124 . -39) (undo-tree-id125 . -39) (undo-tree-id126 . -39) (undo-tree-id127 . -29) (undo-tree-id128 . -29) (undo-tree-id129 . -29) (undo-tree-id130 . -29) (undo-tree-id131 . -29) (undo-tree-id132 . -29) (undo-tree-id133 . -29) (undo-tree-id134 . -25) (undo-tree-id135 . -25) (undo-tree-id136 . -25) (undo-tree-id137 . -25) (undo-tree-id138 . -25) (undo-tree-id139 . -25) (undo-tree-id140 . -25) (undo-tree-id141 . -21) (undo-tree-id142 . -21) (undo-tree-id143 . -21) (undo-tree-id144 . -21) (undo-tree-id145 . -21) (undo-tree-id146 . -21) (undo-tree-id147 . -21) (undo-tree-id148 . -21) (undo-tree-id149 . -21) (undo-tree-id150 . -21) (undo-tree-id151 . -21) (undo-tree-id152 . -21) (undo-tree-id153 . -21) (undo-tree-id154 . -21) (undo-tree-id155 . -16) (undo-tree-id156 . -16) (undo-tree-id157 . -16) (undo-tree-id158 . -16) (undo-tree-id159 . -16) (undo-tree-id160 . -16) (undo-tree-id161 . -16) (undo-tree-id162 . -12) (undo-tree-id163 . -12) (undo-tree-id164 . -12) (undo-tree-id165 . -12) (undo-tree-id166 . -12) (undo-tree-id167 . -12) (undo-tree-id168 . -12) (undo-tree-id169 . -12) (undo-tree-id170 . -12) (undo-tree-id171 . -12) (undo-tree-id172 . -12) (undo-tree-id173 . -12) (undo-tree-id174 . -12) (undo-tree-id175 . -12) (undo-tree-id176 . -12) (undo-tree-id177 . -12) (undo-tree-id178 . -12) (undo-tree-id179 . -12) (undo-tree-id180 . -12) (undo-tree-id181 . -12) (undo-tree-id182 . -12) (undo-tree-id183 . -16) (undo-tree-id184 . -16) (undo-tree-id185 . -16) (undo-tree-id186 . -16) (undo-tree-id187 . -16) (undo-tree-id188 . -16) (undo-tree-id189 . -16) (undo-tree-id190 . -16) (undo-tree-id191 . -16) (undo-tree-id192 . -16) (undo-tree-id193 . -16) (undo-tree-id194 . -16) (undo-tree-id195 . -16) (undo-tree-id196 . -16) (undo-tree-id197 . -21) (undo-tree-id198 . -21) (undo-tree-id199 . -21) (undo-tree-id200 . -21) (undo-tree-id201 . -21) (undo-tree-id202 . -21) (undo-tree-id203 . -21) (undo-tree-id204 . -21) (undo-tree-id205 . -21) (undo-tree-id206 . -21) (undo-tree-id207 . -21) (undo-tree-id208 . -21) (undo-tree-id209 . -21) (undo-tree-id210 . -21) (undo-tree-id211 . -25) (undo-tree-id212 . -25) (undo-tree-id213 . -25) (undo-tree-id214 . -25) (undo-tree-id215 . -25) (undo-tree-id216 . -25) (undo-tree-id217 . -25) (undo-tree-id218 . -25) (undo-tree-id219 . -25) (undo-tree-id220 . -25) (undo-tree-id221 . -25) (undo-tree-id222 . -25) (undo-tree-id223 . -25) (undo-tree-id224 . -25) (undo-tree-id225 . -25) (undo-tree-id226 . -25) (undo-tree-id227 . -25) (undo-tree-id228 . -25) (undo-tree-id229 . -25) (undo-tree-id230 . -25) (undo-tree-id231 . -25) (undo-tree-id232 . -29) (undo-tree-id233 . -29) (undo-tree-id234 . -29) (undo-tree-id235 . -29) (undo-tree-id236 . -29) (undo-tree-id237 . -29) (undo-tree-id238 . -29) (undo-tree-id239 . -29) (undo-tree-id240 . -29) (undo-tree-id241 . -29) (undo-tree-id242 . -29) (undo-tree-id243 . -29) (undo-tree-id244 . -29) (undo-tree-id245 . -29) (undo-tree-id246 . -39) (undo-tree-id247 . -39) (undo-tree-id248 . -39) (undo-tree-id249 . -39) (undo-tree-id250 . -39) (undo-tree-id251 . -39) (undo-tree-id252 . -39) (undo-tree-id253 . -39) (undo-tree-id254 . -39) (undo-tree-id255 . -39) (undo-tree-id256 . -39) (undo-tree-id257 . -39) (undo-tree-id258 . -39) (undo-tree-id259 . -39) (undo-tree-id260 . -44) (undo-tree-id261 . -44) (undo-tree-id262 . -44) (undo-tree-id263 . -44) (undo-tree-id264 . -44) (undo-tree-id265 . -44) (undo-tree-id266 . -44) (undo-tree-id267 . -44) (undo-tree-id268 . -44) (undo-tree-id269 . -44) (undo-tree-id270 . -44) (undo-tree-id271 . -44) (undo-tree-id272 . -44) (undo-tree-id273 . -44) (undo-tree-id274 . -39) (undo-tree-id275 . -39) (undo-tree-id276 . -39) (undo-tree-id277 . -39) (undo-tree-id278 . -39) (undo-tree-id279 . -39) (undo-tree-id280 . -39) (undo-tree-id281 . -39) (undo-tree-id282 . -39) (undo-tree-id283 . -39) (undo-tree-id284 . -39) (undo-tree-id285 . -39) (undo-tree-id286 . -39) (undo-tree-id287 . -39) (undo-tree-id288 . -29) (undo-tree-id289 . -29) (undo-tree-id290 . -29) (undo-tree-id291 . -29) (undo-tree-id292 . -29) (undo-tree-id293 . -29) (undo-tree-id294 . -29) (undo-tree-id295 . -29) (undo-tree-id296 . -29) (undo-tree-id297 . -29) (undo-tree-id298 . -29) (undo-tree-id299 . -29) (undo-tree-id300 . -29) (undo-tree-id301 . -29) (undo-tree-id302 . -25) (undo-tree-id303 . -25) (undo-tree-id304 . -25) (undo-tree-id305 . -25) (undo-tree-id306 . -25) (undo-tree-id307 . -25) (undo-tree-id308 . -25) (undo-tree-id309 . -25) (undo-tree-id310 . -25) (undo-tree-id311 . -25) (undo-tree-id312 . -25) (undo-tree-id313 . -25) (undo-tree-id314 . -25) (undo-tree-id315 . -25) (undo-tree-id316 . -21) (undo-tree-id317 . -21) (undo-tree-id318 . -21) (undo-tree-id319 . -21) (undo-tree-id320 . -21) (undo-tree-id321 . -21) (undo-tree-id322 . -21) (undo-tree-id323 . -21) (undo-tree-id324 . -21) (undo-tree-id325 . -21) (undo-tree-id326 . -21) (undo-tree-id327 . -21) (undo-tree-id328 . -21) (undo-tree-id329 . -21) (undo-tree-id330 . -16) (undo-tree-id331 . -16) (undo-tree-id332 . -16) (undo-tree-id333 . -16) (undo-tree-id334 . -16) (undo-tree-id335 . -16) (undo-tree-id336 . -16) (undo-tree-id337 . -16) (undo-tree-id338 . -16) (undo-tree-id339 . -16) (undo-tree-id340 . -16) (undo-tree-id341 . -16) (undo-tree-id342 . -16) (undo-tree-id343 . -16) (undo-tree-id344 . -12) (undo-tree-id345 . -12) (undo-tree-id346 . -12) (undo-tree-id347 . -12) (undo-tree-id348 . -12) (undo-tree-id349 . -12) (undo-tree-id350 . -12) (undo-tree-id351 . -12) (undo-tree-id352 . -12) (undo-tree-id353 . -12) (undo-tree-id354 . -12) (undo-tree-id355 . -12) (undo-tree-id356 . -12) (undo-tree-id357 . -12) (undo-tree-id358 . -12) (undo-tree-id359 . -12) (undo-tree-id360 . -12) (undo-tree-id361 . -12) (undo-tree-id362 . -12) (undo-tree-id363 . -12) (undo-tree-id364 . -12) (undo-tree-id365 . -12) (undo-tree-id366 . -12) (undo-tree-id367 . -12) (undo-tree-id368 . -12) (undo-tree-id369 . -12) (undo-tree-id370 . -12) (undo-tree-id371 . -12) (undo-tree-id372 . -12) (undo-tree-id373 . -12) (undo-tree-id374 . -12) (undo-tree-id375 . -12) (undo-tree-id376 . -12) (undo-tree-id377 . -12) (undo-tree-id378 . -12) (undo-tree-id379 . -12) (undo-tree-id380 . -12) (undo-tree-id381 . -12) (undo-tree-id382 . -12) (undo-tree-id383 . -12) (undo-tree-id384 . -12) (undo-tree-id385 . -12) (undo-tree-id386 . -12) (undo-tree-id387 . -12) (undo-tree-id388 . -12) (undo-tree-id389 . -12) (undo-tree-id390 . -12) (undo-tree-id391 . -12) (undo-tree-id392 . -12) (undo-tree-id393 . -12) (undo-tree-id394 . -12) (undo-tree-id395 . -12) (undo-tree-id396 . -12) (undo-tree-id397 . -12) (undo-tree-id398 . -12) (undo-tree-id399 . -12) (undo-tree-id400 . -12) (undo-tree-id401 . -12) (undo-tree-id402 . -12) (undo-tree-id403 . -54) (undo-tree-id404 . -53) 1807 (t 25844 61196 478839 176000)) nil (25844 61203 401560 0) 0 nil])
([nil nil ((1652 . 1656) (#("TODO" 0 4 (wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) face (org-todo org-todo org-level-2) fontified t)) . 1652) (undo-tree-id0 . -4) (undo-tree-id1 . -4) (undo-tree-id2 . -3) (t 25844 61203 428172 315000)) nil (25845 64911 425557 0) 0 nil])
([nil nil ((1715 . 1719) (#("TODO" 0 4 (fontified t face (org-todo org-todo org-level-2) line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 1715) (undo-tree-id0 . -4) (undo-tree-id1 . -4) (undo-tree-id2 . -3) (t 25845 64911 452453 878000)) nil (25846 4738 753858 0) 0 nil])
([nil nil ((1746 . 1747) (1743 . 1746) (#("TODO" 0 4 (fontified t face (org-todo org-todo org-level-2) line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 1743) (undo-tree-id3 . -3) (undo-tree-id4 . -4) (undo-tree-id5 . -4) (t 25846 4738 782443 956000)) nil (25846 4741 10597 0) 0 nil])
([nil nil ((1819 . 1826) (1798 . 1819) (1794 . 1798) (t 25846 4741 38978 78000)) nil (25846 4752 966313 0) 0 nil])
([nil nil ((#("password" 0 8 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 1811) (undo-tree-id100 . -7) (undo-tree-id101 . -7) (undo-tree-id102 . -7) (undo-tree-id103 . -7) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -7) (undo-tree-id108 . -7) (undo-tree-id109 . -8) (undo-tree-id110 . -8) (undo-tree-id111 . -8) (undo-tree-id112 . -8) (undo-tree-id113 . -8) (undo-tree-id114 . -8) (undo-tree-id115 . -8) (undo-tree-id116 . -8) (undo-tree-id117 . -8) (undo-tree-id118 . -8) (undo-tree-id119 . -8) (undo-tree-id120 . -8) (undo-tree-id121 . -8) (undo-tree-id122 . -8) (undo-tree-id123 . -8) (undo-tree-id124 . -8) (undo-tree-id125 . -8)) nil (25846 4752 966311 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 1810) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1)) nil (25846 4752 966286 0) 0 nil])
([nil current ((1826 . 1842) (1822 . 1826) (#("D" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -1822) (undo-tree-id126 . -1) 1823 (1821 . 1823) (1817 . 1821) (t 25846 4752 994492 522000)) nil (25846 4769 730791 0) 0 nil])
nil
