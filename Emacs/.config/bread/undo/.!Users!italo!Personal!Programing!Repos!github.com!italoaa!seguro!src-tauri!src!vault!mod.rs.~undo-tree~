(undo-tree-save-format-version . 1)
"6d8f80065c25d252c31eb1d5da3878cae2bac49d"
[nil nil nil nil (25844 65048 309875 0) 0 nil]
([nil nil ((11161 . 11171) (11140 . 11161) (#("c" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -11140) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("l" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -11141) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 11142 (11136 . 11142) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -11136) (undo-tree-id4 . -1) 11137 (11127 . 11137) (11126 . 11127) (t 25844 64996 580383 302000) 11126) nil (25844 65048 309872 0) 0 nil])
([nil nil ((10960 . 10968) (#("v" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -10960) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 10961 (10950 . 10961) (#("s" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -10950) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -10951) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 10952 (10935 . 10952) (10934 . 10935) (#(" " 0 1 (face tree-sitter-hl-face:comment fontified t)) . -10934) (undo-tree-id19 . -1) 10935 (10922 . 10935) (#("G" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -10922) (undo-tree-id20 . -1) 10923 (10919 . 10923) (10918 . 10919) (t 25844 65048 317720 603000) 10918) nil (25844 65068 952340 0) 0 nil])
([nil nil ((11151 . 11153) (#("t" 0 1 (face tree-sitter-hl-face:comment fontified t)) . -11151) (undo-tree-id21 . -1) 11152 (11140 . 11152) (t 25844 65068 960415 154000)) nil (25844 65078 9400 0) 0 nil])
([nil nil ((11180 . 11190)) nil (25844 65078 9392 0) 0 nil])
([nil nil ((11181 . 11182) 11189) nil (25844 65078 9388 0) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -11173) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . 1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) 11174 (11173 . 11174) (11172 . 11173) (11180 . 11181) (11171 . 11171) (11171 . 11172) (t 25844 65078 18557 793000)) nil (25846 10670 141610 0) 0 nil])
([nil nil ((#("{
" 0 2 (fontified t)) . -11171) (undo-tree-id0 . -2) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (undo-tree-id244 . -2) (undo-tree-id245 . -2) (undo-tree-id246 . -2) (undo-tree-id247 . -2) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -2) (undo-tree-id298 . -2) (undo-tree-id299 . -2) (undo-tree-id300 . -2) (undo-tree-id301 . -2) (undo-tree-id302 . -2) (undo-tree-id303 . -2) (undo-tree-id304 . -2) (undo-tree-id305 . -2) (undo-tree-id306 . -2) (undo-tree-id307 . -2) (undo-tree-id308 . -2) (undo-tree-id309 . -2) (undo-tree-id310 . -2) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -2) (undo-tree-id314 . -2) (undo-tree-id315 . -2) (undo-tree-id316 . -2) (undo-tree-id317 . -2) (undo-tree-id318 . -2) (undo-tree-id319 . -2) (undo-tree-id320 . -2) (undo-tree-id321 . -2) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (undo-tree-id324 . -2) (undo-tree-id325 . -2) (undo-tree-id326 . -2) (undo-tree-id327 . -2) (undo-tree-id328 . -2) (undo-tree-id329 . -2) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (undo-tree-id335 . -2) (undo-tree-id336 . -2) (undo-tree-id337 . -2) (undo-tree-id338 . -2) (undo-tree-id339 . -2) (undo-tree-id340 . -2) (undo-tree-id341 . -2) (undo-tree-id342 . -2) (undo-tree-id343 . -2) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2) (undo-tree-id348 . -2) (undo-tree-id349 . -2) (undo-tree-id350 . -2) (undo-tree-id351 . -2) (undo-tree-id352 . -2) (undo-tree-id353 . -2) (undo-tree-id354 . -2) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) (undo-tree-id359 . -2) (undo-tree-id360 . -2) (undo-tree-id361 . -2) (undo-tree-id362 . -2) (undo-tree-id363 . -2) (undo-tree-id364 . -2) (undo-tree-id365 . -2) (undo-tree-id366 . -2) (undo-tree-id367 . -2) (undo-tree-id368 . -2) (undo-tree-id369 . -2) (undo-tree-id370 . -2) (undo-tree-id371 . -2) (undo-tree-id372 . -2) (undo-tree-id373 . -2) (undo-tree-id374 . -2) (undo-tree-id375 . -2) (undo-tree-id376 . -2) (undo-tree-id377 . -2) (undo-tree-id378 . -2) (undo-tree-id379 . -2) (undo-tree-id380 . -2) (undo-tree-id381 . -2) (#("}" 0 1 (fontified t)) . 11181) 11173) nil (25846 10670 141517 0) 0 nil])
([nil nil ((#("return 0,  // exists" 0 6 (fontified t face tree-sitter-hl-face:keyword) 6 7 (fontified t) 7 8 (fontified t face tree-sitter-hl-face:constant\.builtin) 8 11 (fontified t) 11 20 (fontified t face tree-sitter-hl-face:comment)) . 11171) (undo-tree-id474 . 20) (undo-tree-id475 . -19) (t 25846 10670 144253 483000)) nil (25846 10701 772494 0) 0 nil])
([nil nil ((11173 . 11185) (11172 . 11182) (11171 . 11173) (#("{" 0 1 (fontified nil)) . -11171) (11171 . 11172)) nil (25846 10701 772492 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -11185) (undo-tree-id466 . -1) (#("e" 0 1 (fontified t)) . -11186) (undo-tree-id467 . -1) (#("t" 0 1 (fontified t)) . -11187) (undo-tree-id468 . -1) (#("u" 0 1 (fontified t)) . -11188) (undo-tree-id469 . -1) (#("r" 0 1 (fontified t)) . -11189) (undo-tree-id470 . -1) (#("n" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . -11190) (undo-tree-id471 . -1) (#(" " 0 1 (fontified t)) . -11191) (undo-tree-id472 . -1) (#("0" 0 1 (fontified t face tree-sitter-hl-face:constant\.builtin)) . -11192) (undo-tree-id473 . -1) 11193 (11185 . 11193)) nil (25846 10701 772490 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -11173) (undo-tree-id465 . -12) 11185) nil (25846 10701 772483 0) 0 nil])
([nil nil ((#("

        " 0 1 (fontified t) 1 2 (fontified t) 2 10 (fontified t)) . 11172) (undo-tree-id464 . 9) 7322) nil (25846 10701 772479 0) 0 nil])
([nil nil ((11165 . 11176) (#("_)" 0 1 (fontified t) 1 2 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . 11165) (undo-tree-id476 . -1) (undo-tree-id477 . -2) (undo-tree-id478 . -2) (t 25846 10701 775190 608000)) nil (25846 10734 119493 0) 0 nil])
([nil nil ((11181 . 11183) (t 25846 10734 122165 863000)) nil (25846 10779 245376 0) 0 nil])
([nil nil ((11183 . 11191)) nil (25846 10779 245375 0) 0 nil])
([nil nil ((11256 . 11266) (11255 . 11257) (#("\"" 0 1 (fontified nil face tree-sitter-hl-face:punctuation\.bracket)) . -11255) (11255 . 11256) (apply yas--snippet-revive 11248 11256 #s(yas--snippet nil nil #s(yas--exit 11255 nil) 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11255 nil) 1 nil nil nil nil)) (11248 . 11256) (#("panic!($0)" 0 10 (fontified nil)) . 11248) (11248 . 11258) (#("panic" 0 5 (fontified nil)) . 11248) (11248 . 11253) (#("panic!(…)" 0 9 (fontified nil)) . -11248) (11248 . 11257) (#("panic" 0 5 (fontified t)) . -11248) (undo-tree-id495 . -5) (undo-tree-id496 . -5) 11253 (11251 . 11253) (11244 . 11251) (11242 . 11243) (11241 . 11243) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:constructor)) . -11241) (11238 . 11242) (11222 . 11238) (11221 . 11235) (11220 . 11222) (#("{" 0 1 (fontified nil)) . -11220) (11219 . 11221) (apply yas--snippet-revive 11206 11219 #s(yas--snippet nil nil #s(yas--exit 11219 nil) 0 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11219 nil) 0 nil nil nil nil)) (11206 . 11219) (#("desktop_dir()$0" 0 15 (fontified nil)) . 11206) (11206 . 11221) (#("des" 0 3 (fontified nil)) . 11206) (11206 . 11209) (#("desktop_dir()" 0 13 (fontified nil)) . -11206) (11206 . 11219) (#("des" 0 3 (fontified t)) . -11206) (undo-tree-id497 . -3) (undo-tree-id498 . -3) 11209 (11204 . 11209) (11200 . 11204) (#("path" 0 4 (fontified nil)) . 11200) (11200 . 11204) (#("path" 0 4 (fontified t)) . -11200) (undo-tree-id499 . -4) (undo-tree-id500 . -4) 11204 (11194 . 11204) (11182 . 11194)) nil (25846 10779 245373 0) 0 nil])
([nil nil ((11346 . 11356) (#("vaul" 0 4 (fontified nil)) . 11346) (11346 . 11350) (#("vault_name" 0 10 (fontified nil)) . -11346) (11346 . 11356) (#("vaul" 0 4 (fontified t)) . -11346) (undo-tree-id487 . -4) (undo-tree-id488 . -4) 11350 (11346 . 11350) (11345 . 11347) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -11345) (11345 . 11346) (11340 . 11345) (11328 . 11340) (#("desk" 0 4 (fontified nil)) . 11328) (11328 . 11332) (#("desktop_path" 0 12 (fontified nil)) . -11328) (11328 . 11340) (#("desk" 0 4 (fontified t)) . -11328) (undo-tree-id489 . -4) (undo-tree-id490 . -4) 11332 (11328 . 11332) (11308 . 11328) (11307 . 11325) (11306 . 11308) (#("{" 0 1 (fontified nil)) . -11306) (11304 . 11307) (#(" " 0 1 (fontified t)) . -11304) (undo-tree-id491 . -1) (#(">" 0 1 (fontified t syntax-table (1))) . -11305) (undo-tree-id492 . -1) 11306 (11302 . 11306) (11303 . 11304) (11289 . 11301) (#("_" 0 1 (fontified t)) . -11289) (undo-tree-id493 . -1) (undo-tree-id494 . -1) 11290 (11289 . 11290) (11288 . 11290) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:constructor)) . -11288) (11286 . 11289) (11270 . 11286) (11269 . 11270) (11268 . 11269)) nil (25846 10782 841561 0) 0 nil])
([nil nil ((11357 . 11358)) nil (25846 10812 474983 0) 0 nil] [nil nil ((#("{
            " 0 2 (fontified t) 2 14 (fontified t)) . 11180) (undo-tree-id479 . -1) (#(" " 0 1 (fontified t)) . 11222) (#("   " 0 3 (fontified t)) . 11235) (#("  " 0 2 (fontified t)) . 11270) (#("  " 0 2 (fontified t)) . 11284) (#(" {
               " 0 1 (fontified t) 1 3 (fontified t) 3 18 (fontified t)) . 11305) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -3) (undo-tree-id483 . -3) (#("    " 0 4 (fontified t)) . 11324) (11357 . 11358) (#("
                }
             }" 0 1 (fontified t) 1 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 32 (fontified t) 32 33 (fontified t)) . 11357) (undo-tree-id484 . 33) (undo-tree-id485 . -33) (undo-tree-id486 . -18) (11400 . 11401) 11356) ((#("," 0 1 (fontified nil)) . 11400) (11357 . 11390) (#("," 0 1 (fontified nil)) . 11357) (11324 . 11328) (11305 . 11323) (11284 . 11286) (11270 . 11272) (11235 . 11238) (11222 . 11223) (11180 . 11194) (t 25846 10779 249510 93000)) (25846 10779 245350 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -11386) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (#("y" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -11387) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (#("p" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -11388) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -11389) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -11390) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -11391) (undo-tree-id522 . -1) 11392 (11379 . 11392) (#("d" 0 1 (fontified t)) . -11379) (undo-tree-id523 . -1) 11380 (11379 . 11380) (11358 . 11379) 11357) nil (25846 10812 474981 0) 0 nil])
nil
([nil nil ((#("desktop_path.push(vault_name);" 0 12 (fontified t) 12 13 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 13 17 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property)) 17 18 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 18 28 (fontified t) 28 29 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 29 30 (fontified t face tree-sitter-hl-face:punctuation\.delimiter)) . 11328) (undo-tree-id508 . 30) (undo-tree-id509 . -29) (undo-tree-id510 . -30) (undo-tree-id511 . -30)) nil (25846 10812 474970 0) 0 nil])
([nil nil ((11381 . 11382) (11370 . 11380) (#("vaul" 0 4 (fontified nil)) . 11370) (11370 . 11374) (#("vault_name" 0 10 (fontified nil)) . -11370) (11370 . 11380) (#("vaul" 0 4 (fontified t)) . -11370) (undo-tree-id501 . -4) (undo-tree-id502 . -4) 11374 (11370 . 11374) (11369 . 11371) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -11369) (11364 . 11370) (11362 . 11364) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -11362) (11360 . 11363) (11356 . 11360) (11344 . 11356) (#("desk" 0 4 (fontified nil)) . 11344) (11344 . 11348) (#("desktop_path" 0 12 (fontified nil)) . -11344) (11344 . 11356) (#("desk" 0 4 (fontified t)) . -11344) (undo-tree-id503 . -4) (undo-tree-id504 . -4) 11348 (11334 . 11348) (#("_" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -11334) (undo-tree-id505 . -1) (undo-tree-id506 . -1) 11335 (11332 . 11335) (#("u" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -11332) (undo-tree-id507 . -1) 11333 (11328 . 11333)) nil (25846 10812 474964 0) 0 nil])
([nil nil ((11465 . 11475) (11464 . 11466) (#("\"" 0 1 (fontified nil)) . -11464) (11464 . 11465) (11455 . 11464) (11445 . 11455) (#("vaul" 0 4 (fontified nil)) . 11445) (11445 . 11449) (#("vault_name" 0 10 (fontified nil)) . -11445) (11445 . 11455) (#("vaul" 0 4 (fontified t)) . -11445) (undo-tree-id524 . -4) (undo-tree-id525 . -4) 11449 (11445 . 11449) (11444 . 11446) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -11444) (11439 . 11445) (11437 . 11439) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -11437) (11431 . 11438) (11419 . 11431) (#("desk" 0 4 (fontified nil)) . 11419) (11419 . 11423) (#("desktop_path" 0 12 (fontified nil)) . -11419) (11419 . 11431) (#("desk" 0 4 (fontified t)) . -11419) (undo-tree-id526 . -4) (undo-tree-id527 . -4) 11423 (11411 . 11423) (#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -11411) (undo-tree-id528 . -1) (undo-tree-id529 . -1) 11412 (11410 . 11412) (#(" " 0 1 (fontified t)) . -11410) (undo-tree-id530 . -1) 11411 (11410 . 11411) (t 25846 10812 478985 7000)) nil (25846 10827 893292 0) 0 nil])
([nil nil ((11477 . 11478) (t 25846 10827 897699 203000)) nil (25846 10829 137607 0) 0 nil])
([nil nil ((#("{
            " 0 2 (fontified t) 2 14 (fontified t)) . 11180) (#("  " 0 1 (fontified t) 1 2 (fontified t)) . 11222) (#("  " 0 2 (fontified t)) . 11236) (#(" " 0 1 (fontified t)) . 11270) (#("   " 0 1 (fontified t) 1 3 (fontified t)) . 11283) (#("   " 0 3 (fontified t)) . 11308) (#(" " 0 1 (fontified t)) . 11327) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (#("   " 0 3 (fontified t)) . 11383) (#(" " 0 1 (fontified t)) . 11402) (#("  " 0 2 (fontified t)) . 11479) (#("  " 0 2 (fontified t)) . 11493) (undo-tree-id533 . -2) (undo-tree-id534 . -2) (#("    " 0 1 (fontified t) 1 4 (fontified t)) . 11497) (#(" }
        " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 11 (fontified t)) . 11509) (undo-tree-id535 . -2) (11521 . 11522) 11477) nil (25846 10829 137604 0) 0 nil])
([nil nil ((#("                " 0 13 (fontified t) 13 16 (fontified t)) . -11449) (undo-tree-id577 . -16) 11465 (11448 . 11465) (t 25846 10829 141741 43000) 11447) nil (25846 11018 237609 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -11477) (undo-tree-id555 . -1) 11478 (11477 . 11478) (#("p" 0 1 (fontified t)) . -11477) (undo-tree-id556 . -1) 11478 (11477 . 11478) (#("p" 0 1 (fontified t)) . -11477) (undo-tree-id557 . -1) (#("p" 0 1 (fontified t)) . -11478) (undo-tree-id558 . -1) 11479 (11471 . 11479) (#("f" 0 1 (fontified t)) . -11471) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (#("i" 0 1 (fontified t)) . -11472) (undo-tree-id561 . -1) (undo-tree-id562 . -1) 11473 (11471 . 11473) (#("d" 0 1 (fontified t)) . -11471) (undo-tree-id563 . -1) (#("e" 0 1 (fontified t)) . -11472) (undo-tree-id564 . -1) (#("c" 0 1 (fontified t)) . -11473) (undo-tree-id565 . -1) (#("_" 0 1 (fontified t)) . -11474) (undo-tree-id566 . -1) (#("v" 0 1 (fontified t)) . -11475) (undo-tree-id567 . -1) (#("a" 0 1 (fontified t)) . -11476) (undo-tree-id568 . -1) (#("u" 0 1 (fontified t)) . -11477) (undo-tree-id569 . -1) (#("l" 0 1 (fontified t)) . -11478) (undo-tree-id570 . -1) (#("t" 0 1 (fontified t)) . -11479) (undo-tree-id571 . -1) 11480 (11471 . 11480) (#("dec" 0 3 (fontified nil)) . 11471) (11471 . 11474) (#("dec_vault" 0 9 (fontified nil)) . -11471) (11471 . 11480) (#("dec" 0 3 (fontified t)) . -11471) (undo-tree-id572 . -3) (undo-tree-id573 . -3) 11474 (11471 . 11474) (#("e" 0 1 (fontified t)) . -11471) (undo-tree-id574 . -1) 11472 (11471 . 11472) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11471 11481 nil nil nil t #s(yas--exit 11504 nil))) #s(yas--exit 11504 nil) 2 nil #s(yas--field 1 11471 11481 nil nil nil t #s(yas--exit 11504 nil)) nil nil)) (11465 . 11512) (#("match $1 {
                    $0
                }" 0 51 (fontified nil)) . 11465) (11499 . 11515) (11476 . 11496) (#("    " 0 4 (fontified nil)) . 11476) (11465 . 11484) (#("match" 0 5 (fontified nil)) . 11465) (11465 . 11470) (#("match" 0 5 (fontified t face tree-sitter-hl-face:keyword)) . -11465) (undo-tree-id575 . -5) (undo-tree-id576 . -5) 11470 (11465 . 11470) (11449 . 11465)) nil (25846 11018 237605 0) 0 nil])
([nil nil ((11546 . 11550) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11546 11550 nil nil nil t #s(yas--exit 11581 nil))) #s(yas--exit 11581 nil) 4 nil #s(yas--field 1 11546 11550 nil nil nil t #s(yas--exit 11581 nil)) nil nil)) (11540 . 11603) (#("match $1 {
                            $0
                        }" 0 67 (fontified nil)) . 11540) (11582 . 11606) (11551 . 11579) (#("    " 0 4 (fontified nil)) . 11551) (11540 . 11559) (#("ma" 0 2 (fontified nil)) . 11540) (11540 . 11542) (#("match" 0 5 (fontified nil)) . -11540) (11540 . 11545) (#("ma" 0 2 (fontified t)) . -11540) (undo-tree-id547 . -2) (undo-tree-id548 . -2) 11542 (11540 . 11542) (11516 . 11540) (11515 . 11537) (11514 . 11516) (#("{" 0 1 (fontified nil)) . -11514) (11512 . 11515) (11510 . 11512) (apply yas--snippet-revive 11504 11510 #s(yas--snippet nil (#s(yas--field 1 11508 11509 nil nil nil t #s(yas--exit 11510 nil))) #s(yas--exit 11510 nil) 3 nil #s(yas--field 1 11508 11509 nil nil nil t #s(yas--exit 11510 nil)) nil nil)) (11508 . 11509) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11508 11509 nil nil nil t #s(yas--exit 11510 nil))) #s(yas--exit 11510 nil) 3 nil #s(yas--field 1 11508 11509 nil nil nil t #s(yas--exit 11510 nil)) nil nil)) (11504 . 11509) (#("Err($1)$0" 0 9 (fontified nil)) . 11504) (11504 . 11513) (#("Err" 0 3 (fontified nil)) . 11504) (11504 . 11507) (#("Err(…)" 0 6 (fontified nil)) . -11504) (11504 . 11510) (#("Err" 0 3 (fontified t face tree-sitter-hl-face:constructor)) . -11504) (undo-tree-id549 . -3) (undo-tree-id550 . -3) 11507 (#("o" 0 1 (fontified t face tree-sitter-hl-face:constructor)) . -11507) (undo-tree-id551 . -1) (undo-tree-id552 . -1) 11508 (11504 . 11508) (apply yas--snippet-revive 11465 11522 #s(yas--snippet nil (#s(yas--field 1 11471 11481 nil nil nil t #s(yas--exit 11504 nil))) #s(yas--exit 11504 nil) 2 nil #s(yas--field 1 11471 11481 nil nil nil t #s(yas--exit 11504 nil)) nil nil)) (11477 . 11481) (#("open" 0 4 (fontified nil)) . 11477) (11477 . 11481) (#("open" 0 4 (fontified t)) . -11477) (undo-tree-id553 . -4) (undo-tree-id554 . -4) 11481 (11477 . 11481)) nil (25846 11018 237584 0) 0 nil])
([nil nil ((apply yas--snippet-revive 11540 11607 #s(yas--snippet nil (#s(yas--field 1 11546 11550 nil nil nil t #s(yas--exit 11581 nil))) #s(yas--exit 11581 nil) 4 nil #s(yas--field 1 11546 11550 nil nil nil t #s(yas--exit 11581 nil)) nil nil))) nil (25846 11018 237576 0) 0 nil])
([nil nil ((11482 . 11491) (#("dev" 0 3 (fontified nil)) . 11482) (11482 . 11485) (#("dec_vault" 0 9 (fontified nil)) . -11482) (11482 . 11491) (#("dev" 0 3 (fontified t)) . -11482) (undo-tree-id545 . -3) (undo-tree-id546 . -3) 11485 (11482 . 11485) (11481 . 11483) (#("(" 0 1 (fontified nil)) . -11481) (11481 . 11482)) nil (25846 11018 237575 0) 0 nil])
([nil nil ((11568 . 11577) (#("enc" 0 3 (fontified nil)) . 11568) (11568 . 11571) (#("enc_vault" 0 9 (fontified nil)) . -11568) (11568 . 11577) (#("enc" 0 3 (fontified t)) . -11568) (undo-tree-id543 . -3) (undo-tree-id544 . -3) 11571 (11568 . 11571) (11567 . 11569) (#("(" 0 1 (fontified nil)) . -11567) (11561 . 11568)) nil (25846 11018 237572 0) 0 nil])
([nil nil ((11664 . 11674) (#(" " 0 1 (fontified t)) . -11664) (undo-tree-id541 . -1) 11665 (11662 . 11665) (11660 . 11661) (11659 . 11661) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:constructor)) . -11659) (11659 . 11660) (11657 . 11659) (11629 . 11657) (11628 . 11629) (11619 . 11628) (#("{" 0 1 (fontified nil)) . -11619) (undo-tree-id542 . -1) (#("}" 0 1 (fontified t)) . 11620) (11619 . 11621) (#("{" 0 1 (fontified nil)) . -11619) (11615 . 11620) (11613 . 11614) (11612 . 11614) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:constructor)) . -11612) (11609 . 11613)) nil (25846 11018 237568 0) 0 nil])
([nil nil ((#("                        " 0 24 (fontified t)) . -11701) (undo-tree-id540 . -24) 11725 (11700 . 11725) 11699) nil (25846 11018 237564 0) 0 nil])
([nil nil ((11700 . 11701)) nil (25846 11018 237562 0) 0 nil])
([nil nil ((11737 . 11743) (#("t" 0 1 (fontified t)) . -11737) (undo-tree-id536 . -1) (undo-tree-id537 . -1) 11738 (11731 . 11738) (#("=" 0 1 (fontified t face tree-sitter-hl-face:operator)) . -11731) (undo-tree-id538 . -1) (#(" " 0 1 (fontified t)) . -11732) (undo-tree-id539 . -1) 11733 (11731 . 11733) (11729 . 11730) (11728 . 11730) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:constructor)) . -11728) (11726 . 11729) (11701 . 11726) 11700) nil (25846 11018 237559 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 11700) (t 25846 11018 242313 973000)) nil (25846 11028 159145 0) 0 nil])
([nil nil ((#("                        Ok(_) => return 0
" 0 24 (fontified t) 24 26 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call)) 26 27 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 27 28 (fontified t face tree-sitter-hl-face:constant) 28 29 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t syntax-table (1)) 32 33 (fontified t) 33 39 (fontified t face tree-sitter-hl-face:keyword) 39 40 (fontified t) 40 41 (fontified t face tree-sitter-hl-face:constant\.builtin) 41 42 (fontified t)) . 11701) (undo-tree-id587 . 1) (undo-tree-id588 . -41) (undo-tree-id589 . -24) (undo-tree-id590 . 1) 11725) nil (25846 11028 159144 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11747 . 11748) (#("
" 0 1 (fontified nil)) . -11765) (11723 . 11766) 11702) nil (25846 11028 159140 0) 0 nil])
([nil nil ((#("{
                        " 0 2 (fontified t) 2 26 (fontified t)) . 11525) (#("    " 0 4 (fontified t)) . 11605) (undo-tree-id578 . -3) (#("    " 0 4 (fontified t)) . 11629) (11674 . 11675) (#("
                        }
" 0 1 (fontified t) 1 26 (fontified t) 26 27 (fontified t)) . 11674) (undo-tree-id579 . -26) (undo-tree-id580 . -26) (undo-tree-id581 . -27) (undo-tree-id582 . -26) (undo-tree-id583 . -27) (11723 . 11724) (#(" " 0 1 (fontified t)) . 11724) (#("   " 0 2 (fontified t) 2 3 (fontified t rear-nonsticky t)) . 11745) (undo-tree-id584 . -3) (undo-tree-id585 . -3) (undo-tree-id586 . -3) (11765 . 11766) 11748) nil (25846 11028 159137 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -11280) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (#("n" 0 1 (fontified t)) . -11281) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (#("w" 0 1 (fontified t)) . -11282) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) 11283 (11279 . 11283) (t 25846 11028 163838 815000)) nil (25846 11047 236322 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t face tree-sitter-hl-face:punctuation\.delimiter)) . 11279) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (t 25846 11047 241126 738000)) nil (25846 11048 457652 0) 0 nil])
([nil nil ((11220 . 11224) (#("Err" 0 3 (fontified t face tree-sitter-hl-face:constructor)) . 11220) (undo-tree-id918 . -2) (undo-tree-id919 . -3) (undo-tree-id920 . -3) (undo-tree-id921 . -3) (t 25846 11048 462608 352000)) nil (25846 11067 447764 0) 0 nil])
([nil nil ((11265 . 11269) (#("Ok" 0 2 (fontified t face tree-sitter-hl-face:constructor)) . 11265) (undo-tree-id922 . -1) (undo-tree-id923 . -2) (undo-tree-id924 . -2) (undo-tree-id925 . -2) (undo-tree-id926 . -2) (undo-tree-id927 . -2) (undo-tree-id928 . -2) (undo-tree-id929 . -2) (undo-tree-id930 . -2) (undo-tree-id931 . -2) (undo-tree-id932 . -2) (undo-tree-id933 . -2) (undo-tree-id934 . -2) (undo-tree-id935 . -2) (undo-tree-id936 . -2) (undo-tree-id937 . -2) (undo-tree-id938 . -2) (undo-tree-id939 . -2) (undo-tree-id940 . -2) (undo-tree-id941 . -2) (undo-tree-id942 . -2) (undo-tree-id943 . -2) (undo-tree-id944 . -2) (undo-tree-id945 . -2) (undo-tree-id946 . -2) (undo-tree-id947 . -2) (undo-tree-id948 . -2) (undo-tree-id949 . -2) (undo-tree-id950 . -2) (undo-tree-id951 . -2) (undo-tree-id952 . -2) (undo-tree-id953 . -2) (undo-tree-id954 . -2) (undo-tree-id955 . -2) (undo-tree-id956 . -2) (undo-tree-id957 . -2) (undo-tree-id958 . -2) (undo-tree-id959 . -2) (undo-tree-id960 . -2) (undo-tree-id961 . -2) (undo-tree-id962 . -2) (undo-tree-id963 . -2) (undo-tree-id964 . -2) (undo-tree-id965 . -2) (undo-tree-id966 . -2) (undo-tree-id967 . -2) (undo-tree-id968 . -2) (undo-tree-id969 . -2) (undo-tree-id970 . -2) (undo-tree-id971 . -2) (undo-tree-id972 . -2) (undo-tree-id973 . -2) (undo-tree-id974 . -2) (undo-tree-id975 . -2) (undo-tree-id976 . -2) (undo-tree-id977 . -2) (undo-tree-id978 . -2) (undo-tree-id979 . -2) (undo-tree-id980 . -2) (undo-tree-id981 . -2) (undo-tree-id982 . -2) (undo-tree-id983 . -2) (undo-tree-id984 . -2) (undo-tree-id985 . -2) (undo-tree-id986 . -2) (undo-tree-id987 . -2) (undo-tree-id988 . -2) (undo-tree-id989 . -2) (undo-tree-id990 . -2) (undo-tree-id991 . -2) (undo-tree-id992 . -2) (undo-tree-id993 . -2) (undo-tree-id994 . -2) (undo-tree-id995 . -2) (undo-tree-id996 . -2) (undo-tree-id997 . -2) (undo-tree-id998 . -2) (t 25846 11067 452441 701000)) nil (25846 11070 73460 0) 0 nil])
([nil nil ((#("        Ok(vault_name) => match path::desktop_dir() {
" 0 8 (fontified t) 8 10 (fontified t face tree-sitter-hl-face:constructor) 10 11 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 11 21 (fontified t) 21 22 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 22 24 (fontified t) 24 25 (syntax-table (1) fontified t) 25 26 (fontified t) 26 31 (fontified t face tree-sitter-hl-face:keyword) 31 32 (fontified t) 32 36 (fontified t face tree-sitter-hl-face:constant) 36 38 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 38 49 (fontified t face tree-sitter-hl-face:function\.call) 49 50 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 50 51 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 51 52 (fontified t) 52 54 (fontified t)) . 11154) (undo-tree-id1028 . -53) (undo-tree-id1029 . -26) (undo-tree-id1030 . -45) (undo-tree-id1031 . -45) (undo-tree-id1032 . -38) (undo-tree-id1033 . -38) 11180 (t 25846 11070 78040 354000)) nil (25846 11118 122593 0) 0 nil])
([nil nil ((#("            None(_) => panic!(\"no desktop\"),
" 0 11 (fontified t) 11 12 (fontified t) 12 16 (fontified t face tree-sitter-hl-face:constructor) 16 17 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 17 18 (fontified t) 18 19 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t syntax-table (1)) 22 23 (fontified t) 23 28 (fontified t face tree-sitter-hl-face:function\.macro) 28 29 (fontified t face tree-sitter-hl-face:function\.macro) 29 30 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 30 41 (fontified t face tree-sitter-hl-face:string) 41 42 (fontified t face tree-sitter-hl-face:string) 42 43 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 43 44 (fontified t) 44 45 (fontified t)) . 11154) (undo-tree-id1024 . -44) (undo-tree-id1025 . -26) (undo-tree-id1026 . -34) (undo-tree-id1027 . -34) 11180) nil (25846 11118 122589 0) 0 nil])
([nil nil ((#("            Some(desktop_path) => {
" 0 1 (fontified t) 1 12 (fontified t) 12 16 (fontified t face tree-sitter-hl-face:constructor) 16 17 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 17 29 (fontified t) 29 30 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t syntax-table (1)) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t)) . 11154) (undo-tree-id1016 . 20) (undo-tree-id1017 . -35) (undo-tree-id1018 . -17) (undo-tree-id1019 . -16) (undo-tree-id1020 . -26) (undo-tree-id1021 . 20) (undo-tree-id1022 . -17) (undo-tree-id1023 . -17) 11180) nil (25846 11118 122585 0) 0 nil])
([nil nil ((#("        },
" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 11604) (undo-tree-id1012 . -10) (undo-tree-id1013 . -8) (undo-tree-id1014 . 3) (undo-tree-id1015 . -9) 11612) nil (25846 11118 122578 0) 0 nil])
([nil nil ((11620 . 11625) (11613 . 11620) (apply yas--snippet-revive 11608 11613 #s(yas--snippet nil (#s(yas--field 1 11611 11613 nil nil nil t #s(yas--exit 11613 nil))) #s(yas--exit 11613 nil) 5 nil #s(yas--field 1 11611 11613 nil nil nil t #s(yas--exit 11613 nil)) nil nil)) (11611 . 11613) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:punctuation\.bracket)) . -11611) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (#(")" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . 11612) (undo-tree-id1002 . -1) (undo-tree-id1003 . 1) (undo-tree-id1004 . -1) (undo-tree-id1005 . 1) (#(")" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . -11612) (undo-tree-id1006 . -1) (undo-tree-id1007 . 1) (undo-tree-id1008 . -1) 11613 (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 11611 11613 nil nil nil t #s(yas--exit 11613 nil))) #s(yas--exit 11613 nil) 5 nil #s(yas--field 1 11611 11613 nil nil nil t #s(yas--exit 11613 nil)) nil nil)) (11608 . 11614) (#("Ok(${1:()})$0" 0 13 (fontified nil)) . 11608) (11608 . 11621) (#("Ok" 0 2 (fontified nil)) . 11608) (11608 . 11610) (#("Ok(…)" 0 5 (fontified nil)) . -11608) (11608 . 11613) (#("Ok" 0 2 (fontified t face tree-sitter-hl-face:constructor)) . -11608) (undo-tree-id1009 . -2) (undo-tree-id1010 . -2) 11610 (11608 . 11610) (#("o" 0 1 (fontified t)) . -11608) (undo-tree-id1011 . -1) 11609 (11608 . 11609) (11603 . 11608) 11602) nil (25846 11118 122572 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -11603) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) 11604 (11603 . 11604) (t 25846 11118 127852 253000)) nil (25846 11125 140859 0) 0 nil])
([nil nil ((#("    Ok(_) => return 0
" 0 4 (fontified t) 4 6 (fontified t face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function\.call)) 6 7 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 7 8 (fontified t face tree-sitter-hl-face:constant) 8 9 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t syntax-table (1)) 12 13 (fontified t) 13 19 (fontified t face tree-sitter-hl-face:keyword) 19 20 (fontified t) 20 21 (fontified t face tree-sitter-hl-face:constant\.builtin) 21 22 (fontified t)) . 11604) (undo-tree-id1034 . -21) (undo-tree-id1035 . -12) (undo-tree-id1036 . 1) (undo-tree-id1037 . -9) (undo-tree-id1038 . -10) (undo-tree-id1039 . -10) (undo-tree-id1040 . -11) (undo-tree-id1041 . -11) (undo-tree-id1042 . -12) (undo-tree-id1043 . -12) (undo-tree-id1044 . -12) (undo-tree-id1045 . -12) (undo-tree-id1046 . -12) (undo-tree-id1047 . -12) (undo-tree-id1048 . -12) (undo-tree-id1049 . -12) (undo-tree-id1050 . -12) (undo-tree-id1051 . -12) (undo-tree-id1052 . -12) (undo-tree-id1053 . -12) (undo-tree-id1054 . -12) (undo-tree-id1055 . -12) (undo-tree-id1056 . -12) (undo-tree-id1057 . -12) (undo-tree-id1058 . -12) (undo-tree-id1059 . -12) (undo-tree-id1060 . -12) (undo-tree-id1061 . -12) (undo-tree-id1062 . -12) (undo-tree-id1063 . -12) (undo-tree-id1064 . -12) (undo-tree-id1065 . -12) (undo-tree-id1066 . -12) (undo-tree-id1067 . -12) (undo-tree-id1068 . -12) (undo-tree-id1069 . -12) (undo-tree-id1070 . -12) (undo-tree-id1071 . -12) (undo-tree-id1072 . -12) (undo-tree-id1073 . -12) (undo-tree-id1074 . -12) (undo-tree-id1075 . -12) (undo-tree-id1076 . -12) (undo-tree-id1077 . -12) (undo-tree-id1078 . -12) (undo-tree-id1079 . -12) (undo-tree-id1080 . -12) (undo-tree-id1081 . -12) (undo-tree-id1082 . -22) 11616) nil (25846 11125 140854 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11593 . 11594) (#("
" 0 1 (fontified nil)) . -11611) (11589 . 11612) 11576) nil (25846 11125 140805 0) 0 nil])
([nil nil ((11589 . 11590) (t 25846 11125 145786 787000)) nil (25846 11127 104708 0) 0 nil])
([nil nil ((11173 . 11185) (11172 . 11182) (11171 . 11173) (#("{" 0 1 (fontified nil)) . -11171) (11167 . 11172) (11165 . 11166) (11164 . 11166) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:constructor)) . -11164) (11164 . 11165) (#("j" 0 1 (fontified t face tree-sitter-hl-face:constructor)) . -11164) (undo-tree-id1406 . -1) 11165 (11162 . 11165) (#("o" 0 1 (fontified t)) . -11162) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) 11163 (11162 . 11163) (11153 . 11162) (t 25846 11127 110120 746000) 11131) nil (25846 11143 810276 0) 0 nil])
([nil nil ((#("        }
" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t)) . 11186) (undo-tree-id1393 . -9) (undo-tree-id1394 . -10) (undo-tree-id1395 . -8) (undo-tree-id1396 . -10) (undo-tree-id1397 . -10) (undo-tree-id1398 . -10) (undo-tree-id1399 . -10) (undo-tree-id1400 . -10) (undo-tree-id1401 . -10) (undo-tree-id1402 . -10) (undo-tree-id1403 . -10) (undo-tree-id1404 . 2) (undo-tree-id1405 . -9) 11194) nil (25846 11143 810272 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11666 . 11667) (#("
" 0 1 (fontified nil)) . -11668) (11658 . 11669) 11653) nil (25846 11143 810261 0) 0 nil])
([nil nil ((#("            }
" 0 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 11645) (undo-tree-id1277 . -13) (undo-tree-id1278 . -12) (undo-tree-id1279 . -1) (undo-tree-id1280 . -8) (undo-tree-id1281 . -8) (undo-tree-id1282 . -8) (undo-tree-id1283 . -8) (undo-tree-id1284 . -8) (undo-tree-id1285 . -8) (undo-tree-id1286 . -8) (undo-tree-id1287 . -8) (undo-tree-id1288 . -8) (undo-tree-id1289 . -8) (undo-tree-id1290 . -8) (undo-tree-id1291 . -8) (undo-tree-id1292 . -8) (undo-tree-id1293 . -8) (undo-tree-id1294 . -8) (undo-tree-id1295 . -8) (undo-tree-id1296 . -8) (undo-tree-id1297 . -8) (undo-tree-id1298 . -8) (undo-tree-id1299 . -8) (undo-tree-id1300 . -8) (undo-tree-id1301 . -8) (undo-tree-id1302 . 2) (undo-tree-id1303 . -13) (undo-tree-id1304 . -8) (undo-tree-id1305 . -8) (undo-tree-id1306 . -8) (undo-tree-id1307 . -8) (undo-tree-id1308 . -8) (undo-tree-id1309 . -8) (undo-tree-id1310 . -8) (undo-tree-id1311 . -8) (undo-tree-id1312 . -8) (undo-tree-id1313 . -12) (undo-tree-id1314 . -12) (undo-tree-id1315 . -12) (undo-tree-id1316 . -12) (undo-tree-id1317 . -12) (undo-tree-id1318 . -12) (undo-tree-id1319 . -12) (undo-tree-id1320 . -12) (undo-tree-id1321 . -12) (undo-tree-id1322 . -12) (undo-tree-id1323 . -12) (undo-tree-id1324 . -12) (undo-tree-id1325 . -12) (undo-tree-id1326 . -12) (undo-tree-id1327 . -12) (undo-tree-id1328 . -12) (undo-tree-id1329 . -12) (undo-tree-id1330 . -12) (undo-tree-id1331 . -12) (undo-tree-id1332 . -12) (undo-tree-id1333 . -12) (undo-tree-id1334 . -12) (undo-tree-id1335 . -12) (undo-tree-id1336 . -12) (undo-tree-id1337 . -12) (undo-tree-id1338 . -12) (undo-tree-id1339 . -12) (undo-tree-id1340 . -12) (undo-tree-id1341 . -12) (undo-tree-id1342 . -12) (undo-tree-id1343 . -12) (undo-tree-id1344 . -12) (undo-tree-id1345 . -12) (undo-tree-id1346 . -12) (undo-tree-id1347 . -12) (undo-tree-id1348 . -12) (undo-tree-id1349 . -12) (undo-tree-id1350 . -12) (undo-tree-id1351 . -12) (undo-tree-id1352 . -12) (undo-tree-id1353 . -12) (undo-tree-id1354 . -12) (undo-tree-id1355 . -12) (undo-tree-id1356 . -12) (undo-tree-id1357 . -12) (undo-tree-id1358 . -12) (undo-tree-id1359 . -12) (undo-tree-id1360 . -12) (undo-tree-id1361 . -12) (undo-tree-id1362 . -12) (undo-tree-id1363 . -12) (undo-tree-id1364 . -12) (undo-tree-id1365 . -12) (undo-tree-id1366 . -12) (undo-tree-id1367 . -12) (undo-tree-id1368 . -12) (undo-tree-id1369 . -12) (undo-tree-id1370 . -12) (undo-tree-id1371 . -12) (undo-tree-id1372 . -12) (undo-tree-id1373 . -12) (undo-tree-id1374 . -12) (undo-tree-id1375 . -12) (undo-tree-id1376 . -12) (undo-tree-id1377 . -12) (undo-tree-id1378 . -12) (undo-tree-id1379 . -12) (undo-tree-id1380 . -12) (undo-tree-id1381 . -12) (undo-tree-id1382 . -12) (undo-tree-id1383 . -12) (undo-tree-id1384 . -12) (undo-tree-id1385 . -12) (undo-tree-id1386 . -12) (undo-tree-id1387 . -12) (undo-tree-id1388 . -12) (undo-tree-id1389 . -12) (undo-tree-id1390 . -12) (undo-tree-id1391 . -12) (undo-tree-id1392 . -14) 11657) nil (25846 11143 810258 0) 0 nil])
([nil nil ((#("    Ok(_) => return 0
" 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t) 4 6 (fontified t face tree-sitter-hl-face:constructor) 6 7 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 7 8 (fontified t) 8 9 (fontified t face tree-sitter-hl-face:punctuation\.bracket) 9 10 (fontified t) 10 11 (fontified t) 11 12 (syntax-table (1) fontified t) 12 13 (fontified t) 13 19 (fontified t face tree-sitter-hl-face:keyword) 19 20 (fontified t) 20 21 (fontified t face tree-sitter-hl-face:constant\.builtin) 21 22 (fontified t)) . 11623) (undo-tree-id1085 . -21) (undo-tree-id1086 . -8) (undo-tree-id1087 . -22) (undo-tree-id1088 . -22) (undo-tree-id1089 . -22) (undo-tree-id1090 . -22) (undo-tree-id1091 . -22) (undo-tree-id1092 . -22) (undo-tree-id1093 . -22) (undo-tree-id1094 . -22) (undo-tree-id1095 . -22) (undo-tree-id1096 . -22) (undo-tree-id1097 . -22) (undo-tree-id1098 . -22) (undo-tree-id1099 . -22) (undo-tree-id1100 . -22) (undo-tree-id1101 . -22) (undo-tree-id1102 . -22) (undo-tree-id1103 . -22) (undo-tree-id1104 . -22) (undo-tree-id1105 . -22) (undo-tree-id1106 . -22) (undo-tree-id1107 . -22) (undo-tree-id1108 . -22) (undo-tree-id1109 . -8) (undo-tree-id1110 . -8) (undo-tree-id1111 . -8) (undo-tree-id1112 . -8) (undo-tree-id1113 . -8) (undo-tree-id1114 . -8) (undo-tree-id1115 . -8) (undo-tree-id1116 . -8) (undo-tree-id1117 . -8) (undo-tree-id1118 . 14) (undo-tree-id1119 . -9) (undo-tree-id1120 . 16) (undo-tree-id1121 . -7) (undo-tree-id1122 . -8) (undo-tree-id1123 . -8) (undo-tree-id1124 . -8) (undo-tree-id1125 . -8) (undo-tree-id1126 . -8) (undo-tree-id1127 . -8) (undo-tree-id1128 . -8) (undo-tree-id1129 . -8) (undo-tree-id1130 . -8) (undo-tree-id1131 . -22) (undo-tree-id1132 . -22) (undo-tree-id1133 . -22) (undo-tree-id1134 . -22) (undo-tree-id1135 . -22) (undo-tree-id1136 . -22) (undo-tree-id1137 . -22) (undo-tree-id1138 . -22) (undo-tree-id1139 . -22) (undo-tree-id1140 . -22) (undo-tree-id1141 . -22) (undo-tree-id1142 . -22) (undo-tree-id1143 . -22) (undo-tree-id1144 . -22) (undo-tree-id1145 . -22) (undo-tree-id1146 . -22) (undo-tree-id1147 . -22) (undo-tree-id1148 . -22) (undo-tree-id1149 . -22) (undo-tree-id1150 . -22) (undo-tree-id1151 . -22) (undo-tree-id1152 . -22) (undo-tree-id1153 . -22) (undo-tree-id1154 . -22) (undo-tree-id1155 . -22) (undo-tree-id1156 . -22) (undo-tree-id1157 . -22) (undo-tree-id1158 . -22) (undo-tree-id1159 . -22) (undo-tree-id1160 . -22) (undo-tree-id1161 . -22) (undo-tree-id1162 . -22) (undo-tree-id1163 . -22) (undo-tree-id1164 . -22) (undo-tree-id1165 . -22) (undo-tree-id1166 . -22) (undo-tree-id1167 . -22) (undo-tree-id1168 . -22) (undo-tree-id1169 . -22) (undo-tree-id1170 . -22) (undo-tree-id1171 . -22) (undo-tree-id1172 . -22) (undo-tree-id1173 . -22) (undo-tree-id1174 . -22) (undo-tree-id1175 . -22) (undo-tree-id1176 . -22) (undo-tree-id1177 . -22) (undo-tree-id1178 . -22) (undo-tree-id1179 . -22) (undo-tree-id1180 . -22) (undo-tree-id1181 . -22) (undo-tree-id1182 . -22) (undo-tree-id1183 . -22) (undo-tree-id1184 . -22) (undo-tree-id1185 . -22) (undo-tree-id1186 . -22) (undo-tree-id1187 . -22) (undo-tree-id1188 . -22) (undo-tree-id1189 . -22) (undo-tree-id1190 . -22) (undo-tree-id1191 . -22) (undo-tree-id1192 . -22) (undo-tree-id1193 . -22) (undo-tree-id1194 . -22) (undo-tree-id1195 . -22) (undo-tree-id1196 . -22) (undo-tree-id1197 . -22) (undo-tree-id1198 . -22) (undo-tree-id1199 . -22) (undo-tree-id1200 . -22) (undo-tree-id1201 . -22) (undo-tree-id1202 . -22) (undo-tree-id1203 . -22) (undo-tree-id1204 . -22) (undo-tree-id1205 . -22) (undo-tree-id1206 . -22) (undo-tree-id1207 . -22) (undo-tree-id1208 . -22) (undo-tree-id1209 . -22) (undo-tree-id1210 . -22) (undo-tree-id1211 . -22) (undo-tree-id1212 . -22) (undo-tree-id1213 . -22) (undo-tree-id1214 . -22) (undo-tree-id1215 . -22) (undo-tree-id1216 . -22) (undo-tree-id1217 . -22) (undo-tree-id1218 . -22) (undo-tree-id1219 . -8) (undo-tree-id1220 . -8) (undo-tree-id1221 . -8) (undo-tree-id1222 . -8) (undo-tree-id1223 . -8) (undo-tree-id1224 . -8) (undo-tree-id1225 . -8) (undo-tree-id1226 . -8) (undo-tree-id1227 . -8) (undo-tree-id1228 . -8) (undo-tree-id1229 . -8) (undo-tree-id1230 . -8) (undo-tree-id1231 . -8) (undo-tree-id1232 . -8) (undo-tree-id1233 . -8) (undo-tree-id1234 . -8) (undo-tree-id1235 . -8) (undo-tree-id1236 . -8) (undo-tree-id1237 . -8) (undo-tree-id1238 . -8) (undo-tree-id1239 . -8) (undo-tree-id1240 . -8) (undo-tree-id1241 . -8) (undo-tree-id1242 . -8) (undo-tree-id1243 . -8) (undo-tree-id1244 . -8) (undo-tree-id1245 . -8) (undo-tree-id1246 . -8) (undo-tree-id1247 . -8) (undo-tree-id1248 . -8) (undo-tree-id1249 . -9) (undo-tree-id1250 . -10) (undo-tree-id1251 . -10) (undo-tree-id1252 . -11) (undo-tree-id1253 . -11) (undo-tree-id1254 . -12) (undo-tree-id1255 . -22) (undo-tree-id1256 . -8) (undo-tree-id1257 . -8) (undo-tree-id1258 . -8) (undo-tree-id1259 . -8) (undo-tree-id1260 . -8) (undo-tree-id1261 . -8) (undo-tree-id1262 . -8) (undo-tree-id1263 . -8) (undo-tree-id1264 . -8) (undo-tree-id1265 . -8) (undo-tree-id1266 . -8) (undo-tree-id1267 . -8) (undo-tree-id1268 . -8) (undo-tree-id1269 . -8) (undo-tree-id1270 . -8) (undo-tree-id1271 . -8) (undo-tree-id1272 . -8) (undo-tree-id1273 . -8) (undo-tree-id1274 . -8) (undo-tree-id1275 . -8) (undo-tree-id1276 . -22) 11631) nil (25846 11143 810170 0) 0 nil])
([nil nil ((#("            
" 0 12 (fontified t) 12 13 (fontified t)) . 11173) (undo-tree-id1409 . 1) (undo-tree-id1410 . -12) (undo-tree-id1411 . -13) (undo-tree-id1412 . -11) (undo-tree-id1413 . -13) (undo-tree-id1414 . -13) (undo-tree-id1415 . -13) (undo-tree-id1416 . -13) (undo-tree-id1417 . -13) (undo-tree-id1418 . -13) (undo-tree-id1419 . -13) (undo-tree-id1420 . -13) (undo-tree-id1421 . -11) (undo-tree-id1422 . -11) (undo-tree-id1423 . -11) (undo-tree-id1424 . -11) (undo-tree-id1425 . -11) (undo-tree-id1426 . -11) (undo-tree-id1427 . -11) (undo-tree-id1428 . -11) (undo-tree-id1429 . -11) (undo-tree-id1430 . -11) (undo-tree-id1431 . -11) (undo-tree-id1432 . -11) (undo-tree-id1433 . -11) (undo-tree-id1434 . -11) (undo-tree-id1435 . -11) (undo-tree-id1436 . -11) (undo-tree-id1437 . -11) (undo-tree-id1438 . -11) (undo-tree-id1439 . -11) (undo-tree-id1440 . -11) (undo-tree-id1441 . -11) (undo-tree-id1442 . -11) (undo-tree-id1443 . -11) (undo-tree-id1444 . -11) (undo-tree-id1445 . -11) (undo-tree-id1446 . -11) (undo-tree-id1447 . -11) (undo-tree-id1448 . -11) (undo-tree-id1449 . -11) (undo-tree-id1450 . -11) (undo-tree-id1451 . -11) (undo-tree-id1452 . -11) (undo-tree-id1453 . -11) (undo-tree-id1454 . -11) (undo-tree-id1455 . -11) (undo-tree-id1456 . -11) (undo-tree-id1457 . -11) (undo-tree-id1458 . -11) (undo-tree-id1459 . -11) (undo-tree-id1460 . -11) (undo-tree-id1461 . -11) (undo-tree-id1462 . -11) (undo-tree-id1463 . -11) (undo-tree-id1464 . -11) (undo-tree-id1465 . -11) (undo-tree-id1466 . -11) (undo-tree-id1467 . -11) (undo-tree-id1468 . -11) (undo-tree-id1469 . -11) (undo-tree-id1470 . -11) (undo-tree-id1471 . -11) (undo-tree-id1472 . -11) (undo-tree-id1473 . -11) (undo-tree-id1474 . -11) (undo-tree-id1475 . -11) (undo-tree-id1476 . -11) (undo-tree-id1477 . -11) (undo-tree-id1478 . -11) (undo-tree-id1479 . -11) (undo-tree-id1480 . -11) (undo-tree-id1481 . -11) (undo-tree-id1482 . -11) (undo-tree-id1483 . -11) (undo-tree-id1484 . -11) (undo-tree-id1485 . -11) (undo-tree-id1486 . -11) (undo-tree-id1487 . -11) (undo-tree-id1488 . -11) (undo-tree-id1489 . -11) (undo-tree-id1490 . -11) (undo-tree-id1491 . -11) (undo-tree-id1492 . -11) (undo-tree-id1493 . -11) (undo-tree-id1494 . -11) (undo-tree-id1495 . -11) (undo-tree-id1496 . -11) (undo-tree-id1497 . -11) (undo-tree-id1498 . -11) (undo-tree-id1499 . -11) (undo-tree-id1500 . -13) 11184 (t 25846 11143 815629 243000)) nil (25846 11157 1181 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -11571) (#("    " 0 4 (fontified t)) . -11540) (#("    " 0 4 (fontified t)) . -11521) (#("    " 0 4 (fontified t)) . -11486) (#("    " 0 4 (fontified t)) . -11446) (undo-tree-id1504 . -4) (#("    " 0 4 (fontified t)) . -11386) (#("    " 0 1 (fontified t) 1 4 (fontified t)) . -11340) (#("    " 0 4 (fontified t)) . -11252) (#("    " 0 1 (fontified t) 1 4 (fontified t)) . -11185) 11162 (t 25846 11157 6844 900000)) nil (25846 11165 473099 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 11572) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1)) nil (25846 11165 473095 0) 0 nil])
([nil nil ((11232 . 11233) (#("l" 0 1 (fontified t)) . -11232) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) 11233 (11232 . 11233) (apply yas--snippet-revive 11224 11232 #s(yas--snippet nil nil #s(yas--exit 11232 nil) 7 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11232 nil) 7 nil nil nil nil)) (11224 . 11232) (#("unwrap()$0" 0 10 (fontified nil)) . 11224) (11224 . 11234) (#("unw" 0 3 (fontified nil)) . 11224) (11224 . 11227) (#("unwrap()" 0 8 (fontified nil)) . -11224) (11224 . 11232) (#("unw" 0 3 (fontified t face tree-sitter-hl-face:property)) . -11224) (undo-tree-id1570 . -3) (undo-tree-id1571 . -3) (undo-tree-id1572 . -3) (undo-tree-id1573 . -3) 11227 (11224 . 11227) (11223 . 11224) (apply yas--snippet-revive 11210 11223 #s(yas--snippet nil nil #s(yas--exit 11223 nil) 6 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11223 nil) 6 nil nil nil nil)) (11210 . 11223) (#("desktop_dir()$0" 0 15 (fontified nil)) . 11210) (11210 . 11225) (#("desk" 0 4 (fontified nil)) . 11210) (11210 . 11214) (#("desktop_dir()" 0 13 (fontified nil)) . -11210) (11210 . 11223) (#("desk" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -11210) (undo-tree-id1574 . -4) (undo-tree-id1575 . -4) 11214 (11210 . 11214) (11189 . 11210) (#("m" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -11189) (undo-tree-id1576 . -1) 11190 (11189 . 11190) (#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . -11189) (undo-tree-id1577 . -1) 11190 (11185 . 11190) (11173 . 11185) (11173 . 11174) 11208 (t 25846 11165 478699 299000)) nil (25846 11181 729687 0) 0 nil])
([nil nil ((11171 . 11176) (#("a" 0 1 (fontified t)) . -11171) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) 11172 (11165 . 11172) (#("_)" 0 1 (fontified t) 1 2 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . 11165) (undo-tree-id1581 . -1) (undo-tree-id1582 . 1) (undo-tree-id1583 . -2) (undo-tree-id1584 . -2) (undo-tree-id1585 . -2) (t 25846 11181 735366 683000)) nil (25846 11190 321125 0) 0 nil])
([nil nil ((11380 . 11382) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -11380) (11380 . 11381) (t 25846 11190 326799 8000)) nil (25846 11196 871917 0) 0 nil])
([nil nil ((11429 . 11430) (t 25846 11196 877397 677000)) nil (25846 11208 748274 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -11487) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (#("f" 0 1 (fontified t)) . -11488) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (#("s" 0 1 (fontified t)) . -11489) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) 11490 (11486 . 11490)) nil (25846 11208 748267 0) 0 nil])
([nil nil ((7508 . 7512) (#("desk" 0 4 (fontified t)) . 7508) (#("op" 0 2 (fontified t)) . 7513) 7508 (7630 . 7634) (#("desk" 0 4 (fontified t)) . 7630) (#("op" 0 2 (fontified t)) . 7635) 7630 (7702 . 7706) (#("desk" 0 4 (fontified t)) . 7702) (#("op" 0 2 (fontified t)) . 7707) 7702 (t 25846 11208 754269 352000)) nil (25846 11297 382101 0) 0 nil])
([nil nil ((#("&" 0 1 (fontified t face tree-sitter-hl-face:operator)) . 11423) (t 25846 11259 361003 660000)) nil (25846 11300 436332 0) 0 nil] [nil nil ((#("d" 0 1 (fontified t)) . 11424) (t 25846 11259 361003 660000)) ((11424 . 11425)) (25846 11297 381239 0) 0 nil] [nil nil ((11192 . 11196) (t 25846 11259 361003 660000)) ((#("mut " 0 3 (fontified t face tree-sitter-hl-face:keyword) 3 4 (fontified t)) . 11192) (undo-tree-id1889 . -4) (undo-tree-id1890 . -4) (undo-tree-id1891 . -4) (undo-tree-id1892 . -4) (undo-tree-id1893 . -4) (undo-tree-id1894 . -4) (undo-tree-id1895 . -4) (undo-tree-id1896 . -4) (undo-tree-id1897 . -4) (undo-tree-id1898 . -4) (undo-tree-id1899 . -4) (undo-tree-id1900 . -4) (undo-tree-id1901 . -4) (undo-tree-id1902 . -4) (undo-tree-id1903 . -4) (undo-tree-id1904 . -4) (undo-tree-id1905 . -4) (undo-tree-id1906 . -4) (undo-tree-id1907 . -4) (undo-tree-id1908 . -4) (undo-tree-id1909 . -4) (undo-tree-id1910 . -4) (undo-tree-id1911 . -4) (undo-tree-id1912 . -4) (undo-tree-id1913 . -4) (undo-tree-id1914 . -4) (undo-tree-id1915 . -4) (undo-tree-id1916 . -4) (undo-tree-id1917 . -4) (undo-tree-id1918 . -4) (undo-tree-id1919 . -4) (undo-tree-id1920 . -4) (undo-tree-id1921 . -4) (undo-tree-id1922 . -4) (undo-tree-id1923 . -4) (undo-tree-id1924 . -4) (undo-tree-id1925 . -4) (undo-tree-id1926 . -4) (undo-tree-id1927 . -4) (undo-tree-id1928 . -4) (undo-tree-id1929 . -4) (undo-tree-id1930 . -4) (undo-tree-id1931 . -4) (undo-tree-id1932 . -4) (undo-tree-id1933 . -4) (undo-tree-id1934 . -4) (undo-tree-id1935 . -4) (undo-tree-id1936 . -4) (undo-tree-id1937 . -4)) (25846 11282 965491 0) 0 nil])
([nil nil ((#("&" 0 1 (fontified t face tree-sitter-hl-face:operator)) . 11479) (undo-tree-id1938 . -1)) nil (25846 11300 436329 0) 0 nil])
nil
([nil nil ((11196 . 11199) (#("desktop" 0 7 (fontified t face tree-sitter-hl-face:variable)) . 11196) (undo-tree-id1884 . 7) (undo-tree-id1885 . -6) (undo-tree-id1886 . -7) (undo-tree-id1887 . -7)) ((11196 . 11203) (#("dec" 0 3 (fontified t face tree-sitter-hl-face:variable)) . 11196) (undo-tree-id1888 . -3)) (25846 11282 964789 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t face tree-sitter-hl-face:punctuation\.delimiter)) . 11277) (t 25846 11300 442098 463000)) nil (25846 11317 940268 0) 0 nil])
nil
([nil nil ((#("c" 0 1 (fontified t face tree-sitter-hl-face:function\.call)) . 11277)) nil (25846 11317 940267 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face tree-sitter-hl-face:function\.call)) . 11277) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1)) nil (25846 11317 940266 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face tree-sitter-hl-face:function\.call)) . 11277) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1)) nil (25846 11317 940262 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:function\.call)) . 11277) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1)) nil (25846 11317 940259 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:function\.call)) . 11277) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1)) nil (25846 11317 940254 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . 11277) (undo-tree-id1943 . 1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1)) nil (25846 11317 940250 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . 11277) (undo-tree-id1939 . 1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1)) nil (25846 11317 940242 0) 0 nil])
([nil nil ((11192 . 11196) (t 25846 11317 950086 103000)) nil (25846 11320 760149 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face tree-sitter-hl-face:keyword)) . 11253) (t 25846 11320 765740 191000)) nil (25846 11325 592314 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 11253)) nil (25846 11325 592313 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 11253)) nil (25846 11325 592312 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11253)) nil (25846 11325 592311 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 11253)) nil (25846 11325 592311 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 11253)) nil (25846 11325 592310 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 11253)) nil (25846 11325 592309 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 11253)) nil (25846 11325 592308 0) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 11253)) nil (25846 11325 592308 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 11253)) nil (25846 11325 592307 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 11253)) nil (25846 11325 592307 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 11253)) nil (25846 11325 592306 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 11253)) nil (25846 11325 592305 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11253)) nil (25846 11325 592305 0) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face tree-sitter-hl-face:operator)) . 11253) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1)) nil (25846 11325 592304 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 11253) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1)) nil (25846 11325 592300 0) 0 nil])
([nil nil ((11196 . 11199) (#("desktop" 0 7 (fontified t face tree-sitter-hl-face:variable)) . 11196) (undo-tree-id1959 . 7) (undo-tree-id1960 . -6) (undo-tree-id1961 . -7) (undo-tree-id1962 . -7) (t 25846 11325 598285 9000)) nil (25846 11328 810642 0) 0 nil])
([nil nil ((11339 . 11340) (apply yas--snippet-revive 11331 11339 #s(yas--snippet nil nil #s(yas--exit 11339 nil) 9 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11339 nil) 9 nil nil nil nil)) (11331 . 11339) (#("unwrap()$0" 0 10 (fontified nil)) . 11331) (11331 . 11341) (#("unw" 0 3 (fontified nil)) . 11331) (11331 . 11334) (#("unwrap()" 0 8 (fontified nil)) . -11331) (11331 . 11339) (#("unw" 0 3 (fontified t face tree-sitter-hl-face:property)) . -11331) (undo-tree-id1963 . -3) (undo-tree-id1964 . -3) (undo-tree-id1965 . -3) (undo-tree-id1966 . -3) (undo-tree-id1967 . -3) (undo-tree-id1968 . -3) (undo-tree-id1969 . -3) (undo-tree-id1970 . -3) (undo-tree-id1971 . -3) (undo-tree-id1972 . -3) (undo-tree-id1973 . -3) (undo-tree-id1974 . -3) (undo-tree-id1975 . -3) (undo-tree-id1976 . -3) (undo-tree-id1977 . -3) (undo-tree-id1978 . -3) (undo-tree-id1979 . -3) (undo-tree-id1980 . -3) (undo-tree-id1981 . -3) (undo-tree-id1982 . -3) (undo-tree-id1983 . -3) (undo-tree-id1984 . -3) (undo-tree-id1985 . -3) (undo-tree-id1986 . -3) (undo-tree-id1987 . -3) (undo-tree-id1988 . -3) (undo-tree-id1989 . -3) (undo-tree-id1990 . -3) (undo-tree-id1991 . -3) (undo-tree-id1992 . -3) (undo-tree-id1993 . -3) (undo-tree-id1994 . -3) (undo-tree-id1995 . -3) (undo-tree-id1996 . -3) (undo-tree-id1997 . -3) (undo-tree-id1998 . -3) (undo-tree-id1999 . -3) (undo-tree-id2000 . -3) (undo-tree-id2001 . -3) (undo-tree-id2002 . -3) (undo-tree-id2003 . -3) (undo-tree-id2004 . -3) (undo-tree-id2005 . -3) (undo-tree-id2006 . -3) (undo-tree-id2007 . -3) (undo-tree-id2008 . -3) (undo-tree-id2009 . -3) (undo-tree-id2010 . -3) (undo-tree-id2011 . -3) (undo-tree-id2012 . -3) (undo-tree-id2013 . -3) (undo-tree-id2014 . -3) (undo-tree-id2015 . -3) 11334 (11330 . 11334) (apply yas--snippet-revive 11317 11330 #s(yas--snippet nil nil #s(yas--exit 11330 nil) 8 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 11330 nil) 8 nil nil nil nil)) (11317 . 11330) (#("desktop_dir()$0" 0 15 (fontified nil)) . 11317) (11317 . 11332) (#("desk" 0 4 (fontified nil)) . 11317) (11317 . 11321) (#("desktop_dir()" 0 13 (fontified nil)) . -11317) (11317 . 11330) (#("desk" 0 4 (fontified t face tree-sitter-hl-face:variable)) . -11317) (undo-tree-id2016 . -4) (undo-tree-id2017 . -4) 11321 (11318 . 11321) (11313 . 11318) (11292 . 11313) (11279 . 11292) (t 25846 11328 816724 292000) 11257) nil (25846 11340 396700 0) 0 nil])
([nil nil ((#("let " 0 3 (fontified t face tree-sitter-hl-face:keyword) 3 4 (fontified t)) . 11353) (undo-tree-id2063 . -3) (undo-tree-id2064 . -4) (undo-tree-id2065 . -4) (undo-tree-id2066 . -4) (undo-tree-id2067 . -4) (undo-tree-id2068 . -4) (undo-tree-id2069 . -4) (undo-tree-id2070 . -4) (undo-tree-id2071 . -4) (undo-tree-id2072 . -4) (undo-tree-id2073 . -4) (undo-tree-id2074 . -4) (undo-tree-id2075 . -4) (undo-tree-id2076 . -4) (undo-tree-id2077 . -4) (undo-tree-id2078 . -4) (undo-tree-id2079 . -4) (undo-tree-id2080 . -4) (undo-tree-id2081 . -4) (undo-tree-id2082 . -4) (t 25846 11340 402915 970000)) nil (25846 11346 266710 0) 0 nil])
([nil nil ((#("enc" 0 3 (fontified t face tree-sitter-hl-face:variable)) . 11353) (undo-tree-id2043 . -2) (undo-tree-id2044 . -3) (undo-tree-id2045 . -3) (undo-tree-id2046 . -3) (undo-tree-id2047 . -3) (undo-tree-id2048 . -3) (undo-tree-id2049 . -3) (undo-tree-id2050 . -3) (undo-tree-id2051 . -3) (undo-tree-id2052 . -3) (undo-tree-id2053 . -3) (undo-tree-id2054 . -3) (undo-tree-id2055 . -3) (undo-tree-id2056 . -3) (undo-tree-id2057 . -3) (undo-tree-id2058 . -3) (undo-tree-id2059 . -3) (undo-tree-id2060 . -3) (undo-tree-id2061 . -3) (undo-tree-id2062 . -3)) nil (25846 11346 266693 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face tree-sitter-hl-face:variable)) . 11353) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1)) nil (25846 11346 266678 0) 0 nil])
([nil nil ((#("vault " 0 5 (fontified t face tree-sitter-hl-face:variable) 5 6 (fontified t)) . 11353) (undo-tree-id2023 . -5)) nil (25846 11346 266662 0) 0 nil])
([nil nil ((#("= " 0 1 (fontified t face tree-sitter-hl-face:operator) 1 2 (fontified t)) . 11353) (undo-tree-id2021 . -1) (undo-tree-id2022 . -2)) nil (25846 11346 266661 0) 0 nil])
([nil nil ((11353 . 11356) (#("desktop" 0 7 (fontified t)) . 11353) (undo-tree-id2018 . -6) (undo-tree-id2019 . -7) (undo-tree-id2020 . -7)) nil (25846 11346 266657 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property))) . 11362) (t 25846 11346 272892 442000)) nil (25846 11349 942531 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property))) . 11362)) nil (25846 11349 942530 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property))) . 11362)) nil (25846 11349 942530 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property))) . 11362) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1)) nil (25846 11349 942529 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face (tree-sitter-hl-face:method\.call tree-sitter-hl-face:property))) . 11362) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1)) nil (25846 11349 942527 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . 11362) (undo-tree-id2087 . 1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1)) nil (25846 11349 942525 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . 11362) (undo-tree-id2083 . 1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1)) nil (25846 11349 942519 0) 0 nil])
([nil nil ((11249 . 11252) (#("e" 0 1 (fontified t)) . -11249) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (#("d" 0 1 (fontified t)) . -11250) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (#("e" 0 1 (fontified t)) . -11251) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) 11252 (11250 . 11252) (#("d" 0 1 (fontified t)) . -11250) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (#("e" 0 1 (fontified t)) . -11251) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) 11252 (11249 . 11252) (#("desktop" 0 7 (fontified t)) . 11249) (undo-tree-id2105 . -6) (undo-tree-id2106 . -7) (undo-tree-id2107 . -7) (undo-tree-id2108 . -7) (undo-tree-id2109 . -7) (undo-tree-id2110 . -7) (undo-tree-id2111 . -7) (undo-tree-id2112 . -7) (undo-tree-id2113 . -7) (undo-tree-id2114 . -7) (undo-tree-id2115 . -7) (undo-tree-id2116 . -7) (undo-tree-id2117 . -7) (undo-tree-id2118 . -7) (undo-tree-id2119 . -7) (undo-tree-id2120 . -7) (undo-tree-id2121 . -7) (undo-tree-id2122 . -7) (undo-tree-id2123 . -7) (undo-tree-id2124 . -7) (undo-tree-id2125 . -7) (undo-tree-id2126 . -7) (undo-tree-id2127 . -7) (undo-tree-id2128 . -7) (undo-tree-id2129 . -7) (undo-tree-id2130 . -7) (undo-tree-id2131 . -7) (undo-tree-id2132 . -7) (undo-tree-id2133 . -7) (undo-tree-id2134 . -7) (undo-tree-id2135 . -7) (undo-tree-id2136 . -7) (undo-tree-id2137 . -7) (undo-tree-id2138 . -7) (undo-tree-id2139 . -7) (undo-tree-id2140 . -7) (undo-tree-id2141 . -7) (undo-tree-id2142 . -7) (undo-tree-id2143 . -7) (undo-tree-id2144 . -7) (undo-tree-id2145 . -7) (undo-tree-id2146 . -7) (undo-tree-id2147 . -7) (undo-tree-id2148 . -7) (undo-tree-id2149 . -7) (undo-tree-id2150 . -7) (undo-tree-id2151 . -7) (undo-tree-id2152 . -7) (undo-tree-id2153 . -7) (undo-tree-id2154 . -7) (undo-tree-id2155 . -7) (undo-tree-id2156 . -7) (undo-tree-id2157 . -7) (undo-tree-id2158 . -7) (undo-tree-id2159 . -7) (undo-tree-id2160 . -7) (undo-tree-id2161 . -7) (undo-tree-id2162 . -7) (undo-tree-id2163 . -7) (undo-tree-id2164 . -7) (undo-tree-id2165 . -7) (undo-tree-id2166 . -7) (undo-tree-id2167 . -7) (undo-tree-id2168 . -7) (undo-tree-id2169 . -7) (undo-tree-id2170 . -7) (undo-tree-id2171 . -7) (undo-tree-id2172 . -7) (undo-tree-id2173 . -7) (undo-tree-id2174 . -7) (undo-tree-id2175 . -7) (undo-tree-id2176 . -7) (undo-tree-id2177 . -7) (undo-tree-id2178 . -7) (undo-tree-id2179 . -7) (undo-tree-id2180 . -7) (undo-tree-id2181 . -7) (undo-tree-id2182 . -7) (undo-tree-id2183 . -7) (undo-tree-id2184 . -7) (undo-tree-id2185 . -7) (undo-tree-id2186 . -7) (undo-tree-id2187 . -7) (undo-tree-id2188 . -7) (undo-tree-id2189 . -7) (undo-tree-id2190 . -7) (undo-tree-id2191 . -7) (undo-tree-id2192 . -7) (undo-tree-id2193 . -7) (undo-tree-id2194 . -7) (undo-tree-id2195 . -7) (undo-tree-id2196 . -7) (undo-tree-id2197 . -7) (undo-tree-id2198 . -7) (undo-tree-id2199 . -7) (undo-tree-id2200 . -7) (undo-tree-id2201 . -7) (undo-tree-id2202 . -7) (undo-tree-id2203 . -7) (undo-tree-id2204 . -7) (undo-tree-id2205 . -7) (undo-tree-id2206 . -7) (undo-tree-id2207 . -7) (undo-tree-id2208 . -7) (undo-tree-id2209 . -7) (undo-tree-id2210 . -7) (undo-tree-id2211 . -7) (undo-tree-id2212 . -7) (undo-tree-id2213 . -7) (undo-tree-id2214 . -7) (t 25846 11349 953752 739000)) nil (25846 11356 303225 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 11357) (undo-tree-id2215 . -1) (t 25846 11356 309468 543000)) nil (25846 11360 233104 0) 0 nil])
([nil nil ((11594 . 11595) (11467 . 11467) (11467 . 11468) (t 25846 11360 239355 264000)) nil (25846 11386 589813 0) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 11467) (#("}" 0 1 (fontified t)) . 11593) 11524) nil (25846 11393 636413 0) 0 nil])
([nil nil ((11468 . 11469) (11594 . 11595) (11467 . 11467) (11467 . 11468) (t 25846 11386 596136 409000)) nil (25846 11404 204490 0) 0 nil] [nil nil ((#("                    " 0 20 (fontified t)) . -11497) (undo-tree-id2216 . -20) (undo-tree-id2217 . -20) (undo-tree-id2218 . -20) (undo-tree-id2219 . -20) (undo-tree-id2220 . -20) (undo-tree-id2221 . -20) (undo-tree-id2222 . -20) (undo-tree-id2223 . -20) (undo-tree-id2224 . -20) (undo-tree-id2225 . -20) (undo-tree-id2226 . -20) (undo-tree-id2227 . -20) (undo-tree-id2228 . -20) (undo-tree-id2229 . -20) (undo-tree-id2230 . -20) (undo-tree-id2231 . -20) (undo-tree-id2232 . -20) (undo-tree-id2233 . -20) (undo-tree-id2234 . -20) (undo-tree-id2235 . -20) (undo-tree-id2236 . -20) (undo-tree-id2237 . -20) (undo-tree-id2238 . -20) (undo-tree-id2239 . -20) (undo-tree-id2240 . -20) (undo-tree-id2241 . -20) (undo-tree-id2242 . -20) (undo-tree-id2243 . -20) (undo-tree-id2244 . -20) (undo-tree-id2245 . -20) (undo-tree-id2246 . -20) (undo-tree-id2247 . -20) (undo-tree-id2248 . -20) (undo-tree-id2249 . -20) (undo-tree-id2250 . -20) (undo-tree-id2251 . -20) (undo-tree-id2252 . -20) (undo-tree-id2253 . -20) (undo-tree-id2254 . -20) (undo-tree-id2255 . -20) (undo-tree-id2256 . -20) (undo-tree-id2257 . -20) (undo-tree-id2258 . -20) (undo-tree-id2259 . -20) (undo-tree-id2260 . -20) (undo-tree-id2261 . -20) (undo-tree-id2262 . -20) (undo-tree-id2263 . -20) (undo-tree-id2264 . -20) (undo-tree-id2265 . -20) (undo-tree-id2266 . -20) (undo-tree-id2267 . -20) (undo-tree-id2268 . -20) (undo-tree-id2269 . -20) (undo-tree-id2270 . -20) (undo-tree-id2271 . -20) (undo-tree-id2272 . -20) (undo-tree-id2273 . -20) (undo-tree-id2274 . -20) (undo-tree-id2275 . -20) (undo-tree-id2276 . -20) (undo-tree-id2277 . -20) (undo-tree-id2278 . -20) (undo-tree-id2279 . -20) (undo-tree-id2280 . -20) (undo-tree-id2281 . -20) (undo-tree-id2282 . -20) (undo-tree-id2283 . -20) (undo-tree-id2284 . -20) (undo-tree-id2285 . -20) (undo-tree-id2286 . -20) (undo-tree-id2287 . -20) (undo-tree-id2288 . -20) (undo-tree-id2289 . -20) (undo-tree-id2290 . -20) 11517 (11496 . 11517) (t 25846 11386 596136 409000) 11467) ((#("
                    " 0 1 (fontified t) 1 21 (fontified nil)) . 11496) (undo-tree-id2291 . -21) (undo-tree-id2292 . -21) (undo-tree-id2293 . -21) (undo-tree-id2294 . -21) (undo-tree-id2295 . -21) (undo-tree-id2296 . -21) (undo-tree-id2297 . -21) (undo-tree-id2298 . -21) (undo-tree-id2299 . -21) (undo-tree-id2300 . -21) (undo-tree-id2301 . -21) (undo-tree-id2302 . -21) (undo-tree-id2303 . -21) (undo-tree-id2304 . -21) (undo-tree-id2305 . -21) (undo-tree-id2306 . -21) (undo-tree-id2307 . -21) (undo-tree-id2308 . -21) (undo-tree-id2309 . -21) (undo-tree-id2310 . -21) (undo-tree-id2311 . -21) (undo-tree-id2312 . -21) (undo-tree-id2313 . -21) (undo-tree-id2314 . -21) (undo-tree-id2315 . -21) (undo-tree-id2316 . -21) (undo-tree-id2317 . -21) (undo-tree-id2318 . -21) (undo-tree-id2319 . -21) (undo-tree-id2320 . -21) (undo-tree-id2321 . -21) (undo-tree-id2322 . -21) (undo-tree-id2323 . -21) (undo-tree-id2324 . -21) (undo-tree-id2325 . -21) (undo-tree-id2326 . -21) (undo-tree-id2327 . -21) (undo-tree-id2328 . -21) (undo-tree-id2329 . -21) (undo-tree-id2330 . -21) (undo-tree-id2331 . -21) (undo-tree-id2332 . -21) (undo-tree-id2333 . -21) (undo-tree-id2334 . -21) (undo-tree-id2335 . -21) (undo-tree-id2336 . -21) (undo-tree-id2337 . -21) (undo-tree-id2338 . -21) (undo-tree-id2339 . -21) (undo-tree-id2340 . -21) (undo-tree-id2341 . -21) (undo-tree-id2342 . -21) (undo-tree-id2343 . -21) (undo-tree-id2344 . -21) (undo-tree-id2345 . -21) (undo-tree-id2346 . -21) (undo-tree-id2347 . -21) (undo-tree-id2348 . -21) (undo-tree-id2349 . -21) (undo-tree-id2350 . -21) (undo-tree-id2351 . -21) (undo-tree-id2352 . -21) (undo-tree-id2353 . -21) (undo-tree-id2354 . -21) (undo-tree-id2355 . -21) (undo-tree-id2356 . -21) (undo-tree-id2357 . -21) (undo-tree-id2358 . -21) (undo-tree-id2359 . -21) (undo-tree-id2360 . -21) (undo-tree-id2361 . -21) (undo-tree-id2362 . -21) (undo-tree-id2363 . -21) (undo-tree-id2364 . -21) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (11497 . 11517)) (25846 11393 635308 0) 0 nil])
([nil nil ((11469 . 11489)) nil (25846 11404 204489 0) 0 nil])
nil
([nil nil ((11519 . 11543) (#("                    " 0 20 (fontified t)) . 11519) (undo-tree-id2373 . -20)) nil (25846 11404 204488 0) 0 nil])
([nil nil ((11563 . 11587) (#("                    " 0 20 (fontified t)) . 11563)) nil (25846 11404 204487 0) 0 nil])
([nil nil ((11622 . 11626) 11606) nil (25846 11404 204487 0) 0 nil])
([nil nil ((11627 . 11628)) nil (25846 11404 204486 0) 0 nil])
([nil nil ((11628 . 11644)) nil (25846 11404 204485 0) 0 nil])
([nil nil ((#("{
                    " 0 2 (fontified t) 2 22 (fontified t)) . 11467) (undo-tree-id2368 . -1) (undo-tree-id2369 . -2) (undo-tree-id2370 . -1) (undo-tree-id2371 . -2) (#("    " 0 4 (fontified t)) . 11519) (#("    " 0 4 (fontified t)) . 11583) (#("
                    }" 0 1 (fontified t) 1 21 (fontified t) 21 22 (fontified t)) . 11605) (undo-tree-id2372 . -1) 11628) nil (25846 11404 204482 0) 0 nil])
([nil nil ((11432 . 11436) (#("vault" 0 5 (fontified t)) . 11432) (undo-tree-id2379 . -4) (undo-tree-id2380 . -5) (undo-tree-id2381 . -5) (undo-tree-id2382 . -3) (undo-tree-id2383 . -3) (undo-tree-id2384 . -3) (undo-tree-id2385 . -3) (undo-tree-id2386 . -3) (undo-tree-id2387 . -3) (undo-tree-id2388 . -3) (undo-tree-id2389 . -3) (undo-tree-id2390 . -3) (undo-tree-id2391 . -3) (undo-tree-id2392 . -3) (undo-tree-id2393 . -3) (undo-tree-id2394 . -3) (undo-tree-id2395 . -3) (undo-tree-id2396 . -3) (undo-tree-id2397 . -3) (undo-tree-id2398 . -3) (undo-tree-id2399 . -3) (undo-tree-id2400 . -3) (undo-tree-id2401 . -3) (undo-tree-id2402 . -3) (undo-tree-id2403 . -3) (undo-tree-id2404 . -3) (undo-tree-id2405 . -3) (undo-tree-id2406 . -3) (undo-tree-id2407 . -3) (undo-tree-id2408 . -3) (undo-tree-id2409 . -3) (undo-tree-id2410 . -3) (undo-tree-id2411 . -3) (undo-tree-id2412 . -3) (undo-tree-id2413 . -3) (undo-tree-id2414 . -3) (undo-tree-id2415 . -3) (undo-tree-id2416 . -3) (undo-tree-id2417 . -3) (undo-tree-id2418 . -3) (undo-tree-id2419 . -3) (undo-tree-id2420 . -3) (undo-tree-id2421 . -3) (undo-tree-id2422 . -3) (undo-tree-id2423 . -3) (undo-tree-id2424 . -3) (undo-tree-id2425 . -3) (undo-tree-id2426 . -3) (undo-tree-id2427 . -3) (undo-tree-id2428 . -3) (undo-tree-id2429 . -3) (undo-tree-id2430 . -3) (undo-tree-id2431 . -3) (undo-tree-id2432 . -3) (undo-tree-id2433 . -3) (undo-tree-id2434 . -3) (undo-tree-id2435 . -3) (undo-tree-id2436 . -3) (undo-tree-id2437 . -3) (undo-tree-id2438 . -3) (undo-tree-id2439 . -3) (undo-tree-id2440 . -3) (undo-tree-id2441 . -3) (undo-tree-id2442 . -3) (undo-tree-id2443 . -3) (undo-tree-id2444 . -3) (undo-tree-id2445 . -3) (undo-tree-id2446 . -3) (undo-tree-id2447 . -3) (undo-tree-id2448 . -3) (undo-tree-id2449 . -3) (undo-tree-id2450 . -3) (undo-tree-id2451 . -3) (undo-tree-id2452 . -3) (undo-tree-id2453 . -3) (undo-tree-id2454 . -3) (undo-tree-id2455 . -3) (undo-tree-id2456 . -3) (undo-tree-id2457 . -3) (undo-tree-id2458 . -3) (undo-tree-id2459 . -3) (undo-tree-id2460 . -3) (undo-tree-id2461 . -3) (undo-tree-id2462 . -3) (undo-tree-id2463 . -3) (undo-tree-id2464 . -3) (undo-tree-id2465 . -3) (undo-tree-id2466 . -3) (undo-tree-id2467 . -3) (undo-tree-id2468 . -3) (undo-tree-id2469 . -3) (undo-tree-id2470 . -3) (undo-tree-id2471 . -3) (undo-tree-id2472 . -3) (undo-tree-id2473 . -3) (undo-tree-id2474 . -3) (undo-tree-id2475 . -3) (undo-tree-id2476 . -3) (undo-tree-id2477 . -3) (undo-tree-id2478 . -3) (undo-tree-id2479 . -3) (undo-tree-id2480 . -3) (undo-tree-id2481 . -3) (undo-tree-id2482 . -3) (undo-tree-id2483 . -3) (undo-tree-id2484 . -3) (undo-tree-id2485 . -3) (undo-tree-id2486 . -3) (undo-tree-id2487 . -3) (undo-tree-id2488 . -3) (undo-tree-id2489 . -3) (undo-tree-id2490 . -3) (undo-tree-id2491 . -3) (undo-tree-id2492 . -3) (undo-tree-id2493 . -3) (undo-tree-id2494 . -3) (undo-tree-id2495 . -3) (undo-tree-id2496 . -3) (undo-tree-id2497 . -3) (undo-tree-id2498 . -3) (undo-tree-id2499 . -3) (undo-tree-id2500 . -3) (undo-tree-id2501 . -3) (undo-tree-id2502 . -3) (undo-tree-id2503 . -3) (undo-tree-id2504 . -3) (undo-tree-id2505 . -3) (undo-tree-id2506 . -3) (undo-tree-id2507 . -3) (undo-tree-id2508 . -3) (undo-tree-id2509 . -3) (undo-tree-id2510 . -3) (undo-tree-id2511 . -3) (undo-tree-id2512 . -3) (undo-tree-id2513 . -3) (undo-tree-id2514 . -3) (undo-tree-id2515 . -3) (undo-tree-id2516 . -3) (undo-tree-id2517 . -3) (undo-tree-id2518 . -3) (undo-tree-id2519 . -3) (undo-tree-id2520 . -3) (undo-tree-id2521 . -3) (undo-tree-id2522 . -3) (undo-tree-id2523 . -3) (undo-tree-id2524 . -3) (undo-tree-id2525 . -3) (undo-tree-id2526 . -3) (undo-tree-id2527 . -3) (undo-tree-id2528 . -3) (undo-tree-id2529 . -3) (undo-tree-id2530 . -3) (undo-tree-id2531 . -3) (undo-tree-id2532 . -3) (undo-tree-id2533 . -3) (undo-tree-id2534 . -3) (undo-tree-id2535 . -3) (undo-tree-id2536 . -3) (undo-tree-id2537 . -3) (undo-tree-id2538 . -3) (undo-tree-id2539 . -3) (undo-tree-id2540 . -3) (undo-tree-id2541 . -3) (undo-tree-id2542 . -3) (undo-tree-id2543 . -5) (undo-tree-id2544 . -5) (t 25846 11404 211139 873000)) nil (25846 11421 748379 0) 0 nil])
([nil nil ((11487 . 11491) (#("vault" 0 5 (fontified t)) . 11487) (undo-tree-id2374 . -4) (undo-tree-id2375 . -5) (undo-tree-id2376 . -5) (undo-tree-id2377 . -5) (undo-tree-id2378 . -5)) nil (25846 11421 748255 0) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -11280) (undo-tree-id2557 . -1) (#("b" 0 1 (fontified t)) . -11281) (undo-tree-id2558 . -1) 11282 (11280 . 11282) (#("J" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor))) . -11280) (undo-tree-id2559 . -1) (#("J" 0 1 (fontified t face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor))) . -11281) (undo-tree-id2560 . -1) 11282 (11280 . 11282) (11279 . 11281) (#("(" 0 1 (fontified nil face tree-sitter-hl-face:property)) . -11279) (11273 . 11280) (t 25846 11421 755318 921000)) nil (25846 11435 378606 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t face tree-sitter-hl-face:punctuation\.delimiter)) . 11381)) nil (25846 11435 378602 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face tree-sitter-hl-face:function\.call)) . 11381)) nil (25846 11435 378602 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face tree-sitter-hl-face:function\.call)) . 11381)) nil (25846 11435 378601 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face tree-sitter-hl-face:function\.call)) . 11381)) nil (25846 11435 378601 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face tree-sitter-hl-face:function\.call)) . 11381) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1)) nil (25846 11435 378600 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face tree-sitter-hl-face:function\.call)) . 11381) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1)) nil (25846 11435 378598 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . 11381) (undo-tree-id2549 . 1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1)) nil (25846 11435 378595 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face tree-sitter-hl-face:punctuation\.bracket)) . 11381) (undo-tree-id2545 . 1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1)) nil (25846 11435 378589 0) 0 nil])
([nil current ((#("use tauri::utils::config;
" 0 3 (fontified t face tree-sitter-hl-face:keyword) 3 4 (fontified t) 4 9 (fontified t face tree-sitter-hl-face:constant) 9 11 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 11 16 (fontified t face tree-sitter-hl-face:constant) 16 18 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 18 24 (fontified t) 24 25 (fontified t face tree-sitter-hl-face:punctuation\.delimiter) 25 26 (fontified t)) . 128) (undo-tree-id2561 . -25) (undo-tree-id2562 . -4) (undo-tree-id2563 . -24) (undo-tree-id2564 . -25) (undo-tree-id2565 . -2) (undo-tree-id2566 . -2) (undo-tree-id2567 . -2) (undo-tree-id2568 . -2) (undo-tree-id2569 . -2) (undo-tree-id2570 . -2) (undo-tree-id2571 . -2) (undo-tree-id2572 . -2) (undo-tree-id2573 . -2) (undo-tree-id2574 . -2) (undo-tree-id2575 . -2) (undo-tree-id2576 . -2) (undo-tree-id2577 . -2) (undo-tree-id2578 . -2) (undo-tree-id2579 . -2) (undo-tree-id2580 . -2) (undo-tree-id2581 . -2) (undo-tree-id2582 . -2) (undo-tree-id2583 . -2) (undo-tree-id2584 . -2) (undo-tree-id2585 . -2) (undo-tree-id2586 . -2) (undo-tree-id2587 . -2) (undo-tree-id2588 . -2) (undo-tree-id2589 . -2) (undo-tree-id2590 . -2) (undo-tree-id2591 . -2) (undo-tree-id2592 . -2) (undo-tree-id2593 . -2) (undo-tree-id2594 . -2) (undo-tree-id2595 . -2) (undo-tree-id2596 . -2) (undo-tree-id2597 . -2) (undo-tree-id2598 . -2) (undo-tree-id2599 . -2) (undo-tree-id2600 . -2) (undo-tree-id2601 . -2) (undo-tree-id2602 . -2) (undo-tree-id2603 . -2) (undo-tree-id2604 . -2) (undo-tree-id2605 . -26) 130 (t 25846 11435 386130 314000)) nil (25846 12892 656973 0) 0 nil])
nil
